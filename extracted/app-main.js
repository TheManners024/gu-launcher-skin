(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([[179], {
    63764: (te, U, o) => {
        "use strict";
        o.d(U, {S: () => f});
        var p = o(5e3), r = o(69808);
        let f = (() => {
            class e {
                constructor() {
                    this.canCloseFromInside = !1, this.closeModal$ = new p.vpe
                }

                ngOnInit() {
                }

                closeModal(g) {
                    g && !this.canCloseFromInside || this.closeModal$.emit()
                }
            }

            return e.\u0275fac = function (g) {
                return new (g || e)
            }, e.\u0275cmp = p.Xpm({
                type: e,
                selectors: [["app-info-modal"]],
                inputs: {title: "title", text: "text", styles: "styles", canCloseFromInside: "canCloseFromInside"},
                outputs: {closeModal$: "closeModal$"},
                decls: 7,
                vars: 3,
                consts: [[1, "modal-holder", 3, "ngStyle", "click"], [1, "container-fluid"], [1, "row"], [1, "col-12", "text-center", "gold-text", "bourbon", "title-container"], [1, "col-12", "text-center", "info-container", 3, "innerHTML"]],
                template: function (g, h) {
                    1 & g && (p.TgZ(0, "div", 0), p.NdJ("click", function () {
                        return h.closeModal(!0)
                    }), p.TgZ(1, "div", 1), p.TgZ(2, "div", 2), p.TgZ(3, "div", 3), p._uU(4), p.qZA(), p.qZA(), p.TgZ(5, "div", 2), p._UZ(6, "div", 4), p.qZA(), p.qZA(), p.qZA()), 2 & g && (p.Q6J("ngStyle", h.styles), p.xp6(4), p.hij(" ", h.title, " "), p.xp6(2), p.Q6J("innerHTML", h.text, p.oJD))
                },
                directives: [r.PC],
                styles: [".modal-holder[_ngcontent-%COMP%]{min-width:calc(var(--vw) * 15.62);border:1px solid white;z-index:21;overflow:auto;background-color:#060b11b3;border-radius:calc(var(--vh) * .4)}.title-container[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);border-bottom:1px solid white;font-size:x-large}.info-container[_ngcontent-%COMP%]{padding:calc(var(--vh) * 3.7)}"]
            }), e
        })()
    }, 531: (te, U, o) => {
        "use strict";
        o.d(U, {$$: () => p, ZW: () => h, u4: () => i, VY: () => t});

        class p {
            constructor(C, k, $, w, D = []) {
                this.id = C, this.name = k, this.god = $, this.items = D, this.deck_type = w
            }
        }

        class h {
            constructor(C, k, $ = null) {
                this.deck = C, this.type = k, this.cards = $
            }
        }

        var i = (() => {
            return (n = i || (i = {}))[n.Add = 0] = "Add", n[n.Remove = 1] = "Remove", n[n.Change = 2] = "Change", n[n.CardLimit = 3] = "CardLimit", n[n.DeckLimit = 4] = "DeckLimit", n[n.NoActiveDeck = 5] = "NoActiveDeck", n[n.StatChange = 6] = "StatChange", i;
            var n
        })();

        class t {
            constructor(C, k = null, $ = !1) {
                this.deckSelect = C, this.gameModeID = k, this.forAI = $
            }
        }
    }, 57674: (te, U, o) => {
        "use strict";
        o.d(U, {PE: () => r});
        var r = (() => {
            return (h = r || (r = {}))[h.AscID = 0] = "AscID", h[h.DescID = 1] = "DescID", h[h.AscQuality = 2] = "AscQuality", h[h.DescQuality = 3] = "DescQuality", h[h.AscMana = 4] = "AscMana", h[h.DescMana = 5] = "DescMana", h[h.AscScarcity = 6] = "AscScarcity", h[h.AscHealth = 7] = "AscHealth", h[h.DescHealth = 8] = "DescHealth", h[h.AscAttack = 9] = "AscAttack", h[h.DescAttack = 10] = "DescAttack", h[h.AscTribe = 11] = "AscTribe", h[h.DescTribe = 12] = "DescTribe", h[h.AscRarity = 13] = "AscRarity", h[h.DescRarity = 14] = "DescRarity", h[h.AscType = 15] = "AscType", h[h.DescType = 16] = "DescType", h[h.AscGod = 17] = "AscGod", h[h.DescGod = 18] = "DescGod", h[h.AscSet = 19] = "AscSet", h[h.DescSet = 20] = "DescSet", r;
            var h
        })()
    }, 33403: (te, U, o) => {
        "use strict";
        o.d(U, {tO: () => p, zy: () => r, B_: () => f, Gn: () => _});
        var p = (() => {
            return (i = p || (p = {}))[i.SOLO = 0] = "SOLO", i[i.CONSTRUCTED = 1] = "CONSTRUCTED", i[i.DIRECT_CHALLENGE = 5] = "DIRECT_CHALLENGE", i[i.SEALED_DECK = 8] = "SEALED_DECK", i[i.TUTORIAL = 6] = "TUTORIAL", p;
            var i
        })(), r = (() => {
            return (i = r || (r = {}))[i.WEEKEND_EVENT = 2] = "WEEKEND_EVENT", r;
            var i
        })(), f = (() => {
            return (i = f || (f = {}))[i.SOLO = 0] = "SOLO", i[i.QUICK_CONSTRUCTED = 2] = "QUICK_CONSTRUCTED", i[i.DIRECT_CHALLENGE = 6] = "DIRECT_CHALLENGE", i[i.QUICK_SEALED = 10] = "QUICK_SEALED", i[i.RANKED_CONSTRUCTED = 13] = "RANKED_CONSTRUCTED", i[i.PAID_GENESIS_SEALED = 14] = "PAID_GENESIS_SEALED", i[i.FREE_4_ALL_SEALED = 15] = "FREE_4_ALL_SEALED", i[i.SERVER_SOLO = 20] = "SERVER_SOLO", i[i.SEALED_DECK = 7] = "SEALED_DECK", i[i.TUTORIAL = 101] = "TUTORIAL", f;
            var i
        })(), _ = (() => {
            return (i = _ || (_ = {}))[i.CARDS = 0] = "CARDS", i[i.LEVEL = 1] = "LEVEL", i[i.UPDATE = 2] = "UPDATE", i[i.LOCKED = 3] = "LOCKED", i[i.ASSETS_UPDATE = 4] = "ASSETS_UPDATE", _;
            var i
        })()
    }, 98009: (te, U, o) => {
        "use strict";
        o.d(U, {D: () => S});
        var p = o(73307), r = o(591), f = o(36053), e = o(5254), _ = o(21086), g = o(92198), h = o(72986), i = o(21406),
            t = o(24850), n = o(40963), C = o(2994), k = o(27221), $ = o(55778), D = (o(63411), o(44416)), m = o(531),
            A = o(5e3);
        let S = (() => {
            class y {
                constructor(s, b, E, R) {
                    this.utils = s, this.gameApiService = b, this.authService = E, this.cardsService = R, this._userDecks = new r.X([]), this._starterDecks = new r.X([]), this._activeDeck = new r.X(null), this._activeDeckChange = new r.X(new m.ZW(null, m.u4.NoActiveDeck)), this._deckSelectMode = new r.X(new m.VY(!1)), this.deckSizeLimit = 30, this.dataStore = {
                        userDecks: [],
                        starterDecks: [],
                        activeDeck: null,
                        selectMode: null
                    }
                }

                get activeDeck$() {
                    return this._activeDeck.asObservable()
                }

                get userDecks$() {
                    return this._userDecks.asObservable()
                }

                get starterDecks$() {
                    return this._starterDecks.asObservable()
                }

                get activeDeckChange$() {
                    return this._activeDeckChange.asObservable()
                }

                get deckSelectMode$() {
                    return this._deckSelectMode.asObservable()
                }

                _emitDecks() {
                    this._userDecks.next(Object.assign({}, this.dataStore).userDecks)
                }

                _emitStarterDecks() {
                    this._starterDecks.next(Object.assign({}, this.dataStore).starterDecks)
                }

                _emitActiveDeck(s) {
                    this._activeDeckChange.next(s)
                }

                loadUserDecks() {
                    return this.loadDecksApi()
                }

                fetchStarterDecks() {
                    (0, f.aj)([this.loadStarterDecksApi(), this.cardsService.inventory$, this.cardsService.protoCards$]).pipe((0, g.h)(([s, b, E]) => Object.keys(b).length > 0 && E.size > 0), (0, h.q)(1), (0, i.b)(([s, b, E]) => (0, e.D)(s).pipe((0, t.U)(R => ({
                        deck: R,
                        protoCards: E,
                        inventory: b
                    })))), (0, t.U)(s => this.convertToDeckStarter(s.deck, s.inventory, s.protoCards)), (0, n.q)(), (0, C.b)(s => {
                        this.dataStore.starterDecks = s, this._emitStarterDecks()
                    }), (0, k.K)(s => (0, _.of)(s))).subscribe()
                }

                loadStarterDecksApi() {
                    return this.gameApiService.get("/deck?caller=client").pipe((0, t.U)(s => s.filter(b => b.assets.length > 0)))
                }

                fetchDecks() {
                    (0, f.aj)([this.loadDecksApi(), this.cardsService.inventory$, this.cardsService.protoCards$]).pipe((0, g.h)(([s, b, E]) => Object.keys(b).length > 0 && E.size > 0), (0, h.q)(1), (0, i.b)(([s, b, E]) => (0, e.D)(s).pipe((0, t.U)(R => ({
                        deck: R,
                        protoCards: E,
                        inventory: b
                    })))), (0, t.U)(s => this.convertToDeck(s.deck, s.inventory, s.protoCards)), (0, n.q)(), (0, C.b)(s => {
                        this.dataStore.userDecks = s, s.length && (this.dataStore.activeDeck = s[0], this.selectActiveDeck(this.dataStore.activeDeck)), this._emitDecks()
                    }), (0, k.K)(s => (0, _.of)(s))).subscribe()
                }

                convertToDeck(s, b, E) {
                    let R;
                    return R = "sealed_deck" === s.deck_type ? s.protos.map((pe, re) => ({
                        id: s.ids[re],
                        proto: pe,
                        quality: 5,
                        protoCard: E.get(pe)
                    })) : this.utils.convertIdsToCards(s.ids, b, E), new m.$$(s.id, s.name, s.god, s.deck_type, R)
                }

                convertToDeckStarter(s, b, E) {
                    const R = this.utils.convertIdsToCards(s.assets, b, E),
                        X = new m.$$(s.id, s.name, s.god, "starter", R);
                    return X.locked = !0, X
                }

                createDeck(s) {
                    return this.createDeckApi(s).pipe((0, h.q)(1), (0, C.b)(b => {
                        this.dataStore.userDecks.push(b), this._emitDecks(), this.selectActiveDeck(this.deepCopyDeck(b))
                    }))
                }

                createDeckApi(s) {
                    const b = {
                        id: s.id,
                        name: s.name,
                        god: s.god,
                        timestamp: (new Date).getTime(),
                        ids: s.items.reduce((X, pe) => X.concat(pe.id), [])
                    }, E = this.authService.getUserId(), R = this.authService.getGameSessionTicket();
                    return this.gameApiService.post(`/account/${E}/deck?session=${R}`, b).pipe((0, t.U)(X => (s.id = X, this._emitDecks(), s)))
                }

                buildSaveDeckApi() {
                    const s = {
                        id: this.dataStore.activeDeck.id,
                        name: this.dataStore.activeDeck.name,
                        god: this.dataStore.activeDeck.god,
                        timestamp: (new Date).getTime(),
                        deck_type: this.dataStore.activeDeck.deck_type
                    };
                    return Object.assign(Object.assign({}, s), "sealed_deck" === this.dataStore.activeDeck.deck_type ? {
                        ids: this.dataStore.activeDeck.items.reduce((b, E) => b.concat(E.id), []),
                        protos: this.dataStore.activeDeck.items.reduce((b, E) => b.concat(E.proto), [])
                    } : {ids: this.dataStore.activeDeck.items.reduce((b, E) => b.concat(E.id), [])})
                }

                saveActiveDeck(s) {
                    const b = this.buildSaveDeckApi(), E = this.authService.getUserId(),
                        R = this.authService.getGameSessionTicket();
                    if ("starter" !== this.dataStore.activeDeck.deck_type) return this.gameApiService.put(`/account/${E}/deck/${this.dataStore.activeDeck.id}?session=${R}`, b).pipe((0, h.q)(1), (0, C.b)(() => {
                        const X = this.dataStore.userDecks.find(re => re.id === this.dataStore.activeDeck.id),
                            pe = this.dataStore.userDecks.indexOf(X);
                        this.dataStore.userDecks[pe] = this.deepCopyDeck(this.dataStore.activeDeck), this._emitDecks()
                    }));
                    if ("starter" === this.dataStore.activeDeck.deck_type) {
                        const X = this.dataStore.starterDecks.find(pe => pe.id === this.dataStore.activeDeck.id);
                        return s && !this.decksChanged(X, this.dataStore.activeDeck) ? (this.selectActiveDeck(X), (0, _.of)(X.id)) : (b.name = `${b.name} Copy`, this.gameApiService.post(`/account/${E}/deck?session=${R}`, b).pipe((0, h.q)(1), (0, C.b)(pe => {
                            const re = new m.$$(pe, b.name, b.god, "common", [...this.dataStore.activeDeck.items]);
                            this.dataStore.userDecks.push(re), this._emitDecks(), this.selectActiveDeck(re)
                        })))
                    }
                }

                decksChanged(s, b) {
                    if (s.items.length !== b.items.length) return !0;
                    let E = !1;
                    return s.items.forEach((R, X) => {
                        R.id !== b.items[X].id && (E = !0)
                    }), !!E
                }

                deleteDeck(s) {
                    this.deleteDeckApi(s).pipe((0, h.q)(1), (0, C.b)(b => {
                        this.dataStore.userDecks = this.dataStore.userDecks.filter(E => E.id !== s), this._emitDecks(), this.selectActiveDeck(null)
                    }), (0, k.K)(b => (0, _.of)(b))).subscribe()
                }

                deleteDeckApi(s) {
                    const b = this.authService.getUserId(), E = this.authService.getGameSessionTicket();
                    return this.gameApiService.delete(`/account/${b}/deck/${s}?session=${E}`)
                }

                loadDecksApi() {
                    const s = this.authService.getUserId();
                    return this.gameApiService.get(`/account/${s}/deck`)
                }

                loadGlobalDecksApi() {
                    return this.gameApiService.get("/deck?caller=client")
                }

                getDeckApi(s) {
                    const b = this.authService.getUserId();
                    return this.gameApiService.get(`/account/${b}/deck/${s}`)
                }

                isDeckComplete(s) {
                    return s.global ? (0, _.of)(!0) : this.getDeckApi(s.id).pipe((0, t.U)(b => b && b.ids && b.ids.length === this.deckSizeLimit), (0, k.K)(b => (0, _.of)(!1)))
                }

                updateDeckSelectMode(s, b, E) {
                    this.dataStore.selectMode = new m.VY(s, b, E), this._deckSelectMode.next(Object.assign({}, this.dataStore).selectMode)
                }

                selectActiveDeck(s) {
                    this.dataStore.activeDeck = this.deepCopyDeck(s), this._emitActiveDeck(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.Change))
                }

                selectActiveDeckById(s) {
                    const b = this.dataStore.userDecks.find(E => E.id === s);
                    !b || (this.dataStore.activeDeck = this.deepCopyDeck(b), this._emitActiveDeck(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.Change)))
                }

                deepCopyDeck(s) {
                    return new m.$$(s.id, s.name, s.god, s.deck_type, [...s.items])
                }

                removeDeck(s) {
                    this.deleteDeck(s.id), s === this.dataStore.activeDeck && (this.dataStore.activeDeck = null, this._emitActiveDeck(new m.ZW(null, m.u4.NoActiveDeck))), this.dataStore.userDecks = this.dataStore.userDecks.filter(b => b !== s), this._emitDecks()
                }

                selectDeck(s, b) {
                }

                updateActiveDeckName(s) {
                    !this.dataStore.activeDeck || (this.dataStore.activeDeck.name = s, this.saveActiveDeck().pipe((0, h.q)(1)).subscribe())
                }

                getDeck(s) {
                    return this.userDecks$.pipe((0, t.U)(b => b.find(E => E.id === s)))
                }

                pushToActiveDeck(s) {
                    this.dataStore.activeDeck.items.length >= this.deckSizeLimit ? this._emitActiveDeck(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.DeckLimit)) : this.canAddCardToDeck(this.dataStore.activeDeck, s).pipe((0, C.b)(b => {
                        b ? (this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.concat([s]), this._emitActiveDeck(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.Add, [s]))) : this._activeDeckChange.next(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.CardLimit, [s]))
                    })).subscribe()
                }

                removeCardFromActiveDeck(s) {
                    this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.filter(b => b !== s), this._emitActiveDeck(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.Remove, [s]))
                }

                removeCardsFromActiveDeck(s) {
                    this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.filter(b => !s.includes(b)), this._emitActiveDeck(new m.ZW(Object.assign({}, this.dataStore).activeDeck, m.u4.Remove, [...s]))
                }

                canAddCardToDeck(s, b) {
                    return "sealed_deck" === s.deck_type ? (0, _.of)(!0) : this.cardsService.getProtoCard(b.proto).pipe((0, t.U)(E => (E.god === s.god || "neutral" === E.god) && ("legendary" === E.rarity ? s.items.filter(R => R.proto === b.proto).length < 1 : s.items.filter(R => R.proto === b.proto).length < 2)))
                }

                forgeUpdate(s, b, E) {
                    this.forgeRemoveIds(s, b), this._emitDecks()
                }

                forgeRemoveIds(s, b) {
                    this.dataStore.userDecks.forEach(E => {
                        E.items = E.items.filter(R => -1 === s.indexOf(R.id))
                    })
                }

                generateUniqueCardId(s, b, E) {
                    return -Number(`${s}${b}${E}`)
                }
            }

            return y.\u0275fac = function (s) {
                return new (s || y)(A.LFG(D.F), A.LFG($.Ft), A.LFG(p.mI), A.LFG($.dK))
            }, y.\u0275prov = A.Yz7({token: y, factory: y.\u0275fac}), y
        })()
    }, 23569: (te, U, o) => {
        "use strict";
        o.d(U, {d: () => i});
        var p = o(8929), r = o(591), f = o(92198), e = o(24850), _ = o(73307), h = (o(63411), o(5e3));
        let i = (() => {
            class t {
                constructor(C, k) {
                    this.storage = C, this.authService = k, this.unsubscribe = new p.xQ, this.dataStore = {selectedWallet: null}, this._selectedWallet$ = new r.X(null)
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get selectedWallet$() {
                    return this._selectedWallet$.asObservable()
                }

                get playerWallets$() {
                    return this.authService.account$.pipe((0, f.h)(C => !!C), (0, e.U)(C => C.addresses.map(k => k.address)))
                }

                get storageKey() {
                    return `gu-selected-wallet-${this.authService.getUserId()}`
                }

                fetchPlayerWallets() {
                    this.authService.fetchAccount()
                }

                obfuscateAddresses(C) {
                    if (C && 0 !== C.length) return C.map(k => `${k && k.slice(0, 6)}...`)
                }

                saveSelectedWallet(C) {
                    this.storage.set([this.storageKey], C), this.dataStore.selectedWallet = C, this._selectedWallet$.next(Object.assign({}, this.dataStore).selectedWallet)
                }

                loadSelectedWallet() {
                    const C = this.storage.get([this.storageKey]);
                    this.dataStore.selectedWallet = C, this._selectedWallet$.next(Object.assign({}, this.dataStore).selectedWallet)
                }
            }

            return t.\u0275fac = function (C) {
                return new (C || t)(h.LFG(_.qy), h.LFG(_.mI))
            }, t.\u0275prov = h.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
        })()
    }, 11130: (te, U, o) => {
        "use strict";
        o.d(U, {xV: () => ie});
        var p = o(51395), r = o(55778), f = o(8929), e = o(591), _ = o(21086), g = o(36053), h = o(98723), i = o(41746),
            t = o(72986), n = o(92198), C = o(2994), k = o(24850), $ = o(7625), w = o(61709), D = o(87545),
            m = o(75778), A = o(40537), S = o(73307), I = (o(63411), o(69340)), s = o(79763), b = o(33403),
            E = o(14618), R = o(69931), X = o(64523), pe = o(72224), re = o(5e3), Ce = o(96727);

        class V {
            constructor(be, G, ae) {
                this.name = be, this.value = G, this.image = ae
            }
        }

        let ie = (() => {
            class Q {
                constructor(G, ae, ve, Te, Re, z, he, K) {
                    this.gameService = G, this.gameDownloadService = ae, this.storage = ve, this.gameApi = Te, this.authService = Re, this.packService = z, this.sealedService = he, this.ngrxStore = K, this.BUFFER_TIME = 5e3, this.unsubscribe = new f.xQ, this.dataStore = {gameModes: []}, this._gameModes$ = new e.X({
                        gameModes: [],
                        refresh: !1
                    }), this.watchForUpdate(), this.watchForAssetUpdate(), this.watchForPacks()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get gameModes$() {
                    return this._gameModes$.asObservable()
                }

                updateGameModeDeck(G, ae, ve = !1) {
                    this.getGameMode$(G).pipe((0, t.q)(1), (0, n.h)(Te => void 0 !== Te), (0, C.b)(Te => {
                        this.saveGameModeDeck(Te.id, ve, ae), ve ? Te.aiSelectedDeckId = ae : Te.lastSelectedDeckId = ae, this._emitGameModes()
                    })).subscribe()
                }

                updateGameModeLoadout(G, ae) {
                    this.getGameMode$(G).pipe((0, t.q)(1), (0, n.h)(ve => void 0 !== ve), (0, C.b)(ve => {
                        this.saveGameModeLoadout(ve.id, ae), ve.selectedLoadoutId = ae, this._emitGameModes()
                    })).subscribe()
                }

                getGameStats(G) {
                    return (0, _.of)({
                        game_mode_id: 1,
                        p1_id: 49,
                        p2_id: 2,
                        did_win: !0,
                        p1_stats: [new V("Wins", 103, "https://images.godsunchained.com/art/250/88.png"), new V("Losses", 8, "https://images.godsunchained.com/art/250/89.png"), new V("Damage Dealt", 7300, "https://images.godsunchained.com/art/250/90.png"), new V("Damage Taken", 1600, "https://images.godsunchained.com/art/250/91.png")],
                        p2_stats: [new V("Wins", 9001, "https://images.godsunchained.com/art/250/88.png"), new V("Losses", 0, "https://images.godsunchained.com/art/250/89.png"), new V("Damage Dealt", 999999, "https://images.godsunchained.com/art/250/90.png"), new V("Damage Taken", 0, "https://images.godsunchained.com/art/250/91.png")]
                    })
                }

                getGameModeDeck(G, ae) {
                    const ve = this.getGameModeDeckKey(G, ae);
                    return this.storage.get([ve]) || null
                }

                clearGameModeDeck(G, ae) {
                    const ve = this.getGameModeDeckKey(G, ae);
                    this.storage.delete([ve])
                }

                saveGameModeDeck(G, ae, ve) {
                    const Te = this.getGameModeDeckKey(G, ae);
                    this.storage.set([Te], ve)
                }

                getGameModeDeckKey(G, ae) {
                    return `gu-deck-${G}${ae ? "-ai" : ""}`
                }

                getGameModeLoadout(G) {
                    const ae = this.getGameModeLoadoutKey(G);
                    return this.storage.get([ae]) || null
                }

                saveGameModeLoadout(G, ae) {
                    const ve = this.getGameModeLoadoutKey(G);
                    this.storage.set([ve], ae)
                }

                getGameModeLoadoutKey(G) {
                    return `gu-loadout-${G}`
                }

                _emitGameModes(G = !1) {
                    this._gameModes$.next({gameModes: Object.assign({}, this.dataStore).gameModes, refresh: G})
                }

                getGameMode$(G) {
                    return this.gameModes$.pipe((0, k.U)(({gameModes: ae}) => ae.find(ve => ve.id === G)))
                }

                fetchGameModes(G = !1) {
                    (0, g.aj)([this.fetchPlayerGameModes$(), this.getLock$(), this.fetchPlayerRanks$()]).pipe((0, t.q)(1), (0, k.U)(([ae, ve, Te]) => ae.map(Re => this.transformGameModes(Re, ve, Te))), (0, C.b)(ae => {
                        this.scheduleRefresh(ae), this.handleSealedMode(ae), this.dataStore.gameModes = ae, this._emitGameModes(G)
                    })).subscribe()
                }

                handleSealedMode(G) {
                    let ae = G.find(ve => ve.id === b.B_.SEALED_DECK);
                    !ae || this.scheduleSealedModeRefresh(ae)
                }

                scheduleSealedModeRefresh(G) {
                    const ae = Date.now(), ve = new Date(G.end_time_server).getTime(), Re = ve + 36e5 - ae, z = ve - ae;
                    z > 0 && z < pe.v && (0, h.H)(z).pipe((0, $.R)(this.unsubscribe), (0, t.q)(1)).subscribe(he => this.sealedService.fetchSealed()), Re > 0 && Re < pe.v && (0, h.H)(Re).pipe((0, $.R)(this.unsubscribe), (0, t.q)(1)).subscribe(he => this.sealedService.fetchSealed())
                }

                mockSealedMode() {
                    return {
                        id: 7,
                        name: "Sealed Deck",
                        description: "Love Seals? Try Sealed Mode.",
                        required_level: 0,
                        properties: {
                            type: 8,
                            start_time: "2020-11-10 12:00:00.556238+00",
                            entry_cutoff: "2020-11-10 08:00:00.556238+00",
                            max_losses: 3,
                            max_wins: 9,
                            entry_cost: 100
                        },
                        ranked: !1,
                        order: 6,
                        end_time: "2020-11-18T12:00:00.556238Z",
                        end_timestamp: 1605700805556,
                        image_url: "/assets/images/misc-art/misc-art--C8-026.webp",
                        paid: !1,
                        rotation: 0,
                        rank: null,
                        lock: null,
                        type: 8,
                        lastSelectedDeckId: 133713371337,
                        aiSelectedDeckId: null,
                        selectedLoadoutId: null
                    }
                }

                fetchPlayerGameModes$() {
                    const G = this.authService.getUserId();
                    return this.gameApi.get(`/user/${G}/mode`)
                }

                fetchPlayerRanks$() {
                    const G = this.authService.getUserId();
                    return this.gameApi.get(`/user/${G}/rank`)
                }

                getLock$() {
                    let G = null;
                    return (0, g.aj)([this.gameService.currentGameContext$, this.packService.unopenedPacks$, (0, h.H)(0, 6e5)]).pipe((0, n.h)(([ae, ve]) => null != ae), (0, w.VS)(([ae, ve]) => {
                        if (G = null, ve) {
                            const Te = ve.filter(Re => "starter" === Re.pack_source);
                            Te && Te.length > 0 && (G = {type: b.Gn.CARDS})
                        }
                        return (0, _.of)(ae)
                    }), (0, w.VS)(ae => (0, i.$R)((0, _.of)(ae), this.gameService.getBranch$(ae.id))), (0, w.VS)(([ae, ve]) => "" === ve.name ? (G = {type: b.Gn.LOCKED}, (0, _.of)([!1, !1])) : (0, i.$R)(this.gameDownloadService.requiresUpdate(ae, ve.name), this.gameDownloadService.requiresAssetsUpdate(ae, ve.name))), (0, w.VS)(([ae, ve]) => (ae ? G = {type: b.Gn.UPDATE} : ve.length > 0 && (G = {type: b.Gn.ASSETS_UPDATE}), (0, _.of)(G))))
                }

                checkIfRequiresUpdate() {
                    return this.gameService.currentGameContext$.pipe((0, D.w)(G => (0, i.$R)((0, _.of)(G), this.gameService.getBranch(G.id))), (0, D.w)(([G, ae]) => this.gameDownloadService.requiresUpdate(G, ae)))
                }

                watchForUpdate() {
                    this.ngrxStore.select((0, R.DM)()).pipe((0, $.R)(this.unsubscribe), (0, n.h)(G => !!G), (0, n.h)(G => "completed" === G.status), (0, m.x)(), (0, C.b)(G => {
                        this.updateLocks(!0), this.ngrxStore.dispatch(new E.Tg({status: "idle", percentage: 0}))
                    })).subscribe()
                }

                watchForAssetUpdate() {
                    this.ngrxStore.select((0, R.gP)()).pipe((0, $.R)(this.unsubscribe), (0, n.h)(G => !!G), (0, n.h)(G => "completed" === G.status), (0, m.x)(), (0, C.b)(G => {
                        this.updateLocks(!0)
                    })).subscribe()
                }

                watchForPacks() {
                    this.packService.unopenedPacks$.pipe((0, $.R)(this.unsubscribe), (0, m.x)(), (0, C.b)(G => this.updateLocks())).subscribe()
                }

                updateLocks(G = !1) {
                    this.getLock$().pipe((0, t.q)(1), (0, C.b)(ae => {
                        this.dataStore.gameModes.forEach(ve => {
                            ve.lock = ae
                        })
                    }), (0, A.x)(() => this._emitGameModes(G))).subscribe()
                }

                transformGameModes(G, ae, ve) {
                    const Te = ve.find(z => z.game_mode === G.id) || null;
                    let Re = Object.assign(Object.assign({}, G), {
                        rank: Te,
                        lock: ae,
                        type: G.properties.type,
                        lastSelectedDeckId: this.getGameModeDeck(G.id, !1),
                        aiSelectedDeckId: this.getGameModeDeck(G.id, !0),
                        end_timestamp: Date.parse(G.end_time) + 5e3,
                        selectedLoadoutId: this.getGameModeLoadout(G.id)
                    });
                    return Re.id === b.B_.SEALED_DECK && (Re = this.sealedService.transformSealedModeGameModeData(Re)), Re
                }

                scheduleRefresh(G = []) {
                    const ae = Date.now(), ve = G.filter(z => 1 === z.rotation && z.end_timestamp > ae);
                    if (0 === ve.length) return;
                    const Re = ve.reduce((z, he) => z.end_timestamp < he.end_timestamp ? z : he).end_timestamp - ae;
                    Re > 0 && Re < pe.v && (0, h.H)(Re).pipe((0, $.R)(this.unsubscribe), (0, t.q)(1), (0, C.b)(z => this.fetchGameModes(!0))).subscribe()
                }

                storeUserGameModeOrderMap(G) {
                    const ae = this.authService.getUserId();
                    sessionStorage.setItem(`userGameModesOrder::${ae}`, JSON.stringify(G))
                }

                getUserGameModeOrderMap() {
                    const G = this.authService.getUserId();
                    return JSON.parse(sessionStorage.getItem(`userGameModesOrder::${G}`))
                }

                incrementGameModeCount(G, ae = 1) {
                    const ve = this.authService.getUserId(), Te = this.authService.getGameSessionTicket();
                    return this.gameApi.post(`/user/${ve}/mode?session=${Te}`, {game_mode: G, add: ae})
                }
            }

            return Q.\u0275fac = function (G) {
                return new (G || Q)(re.LFG(s.hM), re.LFG(I.b5), re.LFG(S.qy), re.LFG(r.Ft), re.LFG(S.mI), re.LFG(p.F), re.LFG(X.H), re.LFG(Ce.yh))
            }, Q.\u0275prov = re.Yz7({token: Q, factory: Q.\u0275fac, providedIn: "root"}), Q
        })()
    }, 88632: (te, U, o) => {
        "use strict";
        o.d(U, {MZ: () => n});
        var p = o(79763), f = (o(63411), o(55778)), e = o(591), _ = o(2994), g = o(73307), h = o(5e3);
        let n = (() => {
            class C {
                constructor($, w, D) {
                    this.gameApi = $, this.authService = w, this.gameService = D, this.dataStore = {extendedAccountProperties: null}, this._extendedAccountProperties$ = new e.X(null)
                }

                get extendedAccountProperties$() {
                    return this._extendedAccountProperties$.asObservable()
                }

                getAccountProperties($, w) {
                    return (!$ || !w) && ($ = this.authService.getUserId(), w = this.authService.getGameSessionTicket()), this.gameApi.get(`/account/${$}/properties?session=${w}`)
                }

                _emit($) {
                    this.dataStore.extendedAccountProperties = $, this._extendedAccountProperties$.next(Object.assign({}, this.dataStore).extendedAccountProperties)
                }

                getExtendedAccountPropertiesById($, w) {
                    return this.gameApi.get(`/account/${$}/properties?format=extended&session=${w}`).pipe((0, _.b)(D => this._emit(D)))
                }

                getExtendedAccountProperties() {
                    const $ = this.authService.getUserId(), w = this.authService.getGameSessionTicket();
                    return this.getExtendedAccountPropertiesById($, w)
                }

                fetchExtendedAccount() {
                    this.getExtendedAccountProperties().subscribe()
                }
            }

            return C.\u0275fac = function ($) {
                return new ($ || C)(h.LFG(f.Ft), h.LFG(g.mI), h.LFG(p.hM))
            }, C.\u0275prov = h.Yz7({token: C, factory: C.\u0275fac, providedIn: "root"}), C
        })()
    }, 8561: (te, U, o) => {
        "use strict";
        o.d(U, {GT: () => Ht, OC: () => T, Qc: () => tt});
        var p = o(59633), r = o(8929), f = o(591), e = o(21086), _ = o(61737), g = o(98723), h = o(67876), i = o(7625),
            t = o(24850), n = o(87224), C = o(92198), k = o(87168), $ = o(27221), w = o(2994), D = o(72986),
            m = o(61709), A = o(87545), S = o(77604), y = o(44290), I = o(40537), s = o(55778), b = o(73307),
            E = o(63764), X = (o(63411), o(79763)), pe = o(52492), re = o(66088), Ce = o(83035), V = (o(26093), o(5e3));
        let ie = (() => {
            class ye {
                constructor(ee) {
                    this.auth = ee, this.createServer()
                }

                respond(ee, ne) {
                    return -1 !== ee.url.indexOf("config") ? this.getConfig(ee, ne) : ee.url.startsWith("/session") ? this.auth.getGameSessionTicket() : null
                }

                setConfig(ee) {
                    this.config = ee
                }

                getConfig(ee, ne) {
                    return this.config
                }

                serverActive() {
                    return !(!window.bridge || !window.bridge.serverActive) && window.bridge.serverActive()
                }

                createServer() {
                    !window.bridge || !window.bridge.createServer || window.bridge.createServer(49011, this.respond.bind(this))
                }

                closeServer() {
                    !window.bridge || !window.bridge.closeServer || window.bridge.closeServer()
                }
            }

            return ye.\u0275fac = function (ee) {
                return new (ee || ye)(V.LFG(b.mI))
            }, ye.\u0275prov = V.Yz7({token: ye, factory: ye.\u0275fac, providedIn: "root"}), ye
        })();
        var Q = o(33403), be = o(5231), G = o(80537), ae = o(8611), ve = o(98009), Te = o(11130), Re = o(88632),
            z = o(47313), he = o(40520);

        class tt {
            constructor(Pt, ee, ne, xe) {
                this.player = {id: Pt, deck: ee, collection: {id: ne}}, this.opponent = xe ? {deck: xe} : void 0
            }
        }

        var T = (() => {
            return (ye = T || (T = {}))[ye.OUT = 0] = "OUT", ye[ye.IN = 1] = "IN", ye[ye.PROGRESSION_GAME_MODE = 2] = "PROGRESSION_GAME_MODE", ye[ye.PROGRESSION_ACCOUNT = 3] = "PROGRESSION_ACCOUNT", T;
            var ye
        })(), st = (() => {
            return (ye = st || (st = {})).DECK = "deck", ye.DECK_GLOBAL = "deck_global", ye.COLLECTION = "collection", st;
            var ye
        })();
        let Ht = (() => {
            class ye {
                constructor(ee, ne, xe, N, j, d, v, L, se, _e, ot, Ye, vt) {
                    this.http = ee, this.server = ne, this.gameService = xe, this.queueService = N, this.authService = j, this.guUserService = d, this.modalService = v, this.progressionService = L, this.guGameService = se, this.configService = _e, this.audioService = ot, this.analyticsService = Ye, this.deckService = vt, this.numActiveQueues = 0, this.unsubscribe = new r.xQ, this.dataStore = {currentMatchId: null}, this._currentMatchId$ = new f.X(null), this.queueAcknowledge$ = new r.xQ, this.clientServerPongReceived$ = new r.xQ, this._playing$ = new f.X({status: T.OUT}), this.watchQueues(), window.bridge.onQuit(() => {
                        this.queueService.getGameQueues(1).subscribe(nt => {
                            this.trySendingCancelReq(nt.mode.id, nt.params.player.id)
                        })
                    }), this.configService.loadConfigurations().pipe((0, i.R)(this.unsubscribe)).subscribe(nt => {
                        this.master = {
                            host: nt.matchmakingHost,
                            port: nt.matchmakingPort,
                            password: ""
                        }, this.connectClient()
                    }), this.gameService.getBranch$(1).pipe((0, i.R)(this.unsubscribe)).subscribe(nt => {
                        this.branch = nt
                    }), this.queueService.getGameQueues(1).subscribe(nt => {
                        switch (nt.status) {
                            case"completed":
                                this.completeQueue(nt);
                                break;
                            case"cancelled":
                                this.trySendingCancelReq(nt.mode.id, nt.params.player.id)
                        }
                    })
                }

                ngOnDestroy() {
                    this.client && this.client.destroy && this.client.destroy(), this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get currentMatchId$() {
                    return this._currentMatchId$.asObservable()
                }

                watchQueues() {
                    this.queueService.activeQueues$.pipe((0, i.R)(this.unsubscribe), (0, t.U)(ee => ee ? ee.length : 0)).subscribe(ee => this.numActiveQueues = ee)
                }

                buildOpponent(ee) {
                    let ne = {};
                    const xe = ee.opponent_attributes.find(d => d.type === st.COLLECTION),
                        N = ee.opponent_attributes.find(d => d.type === st.DECK),
                        j = ee.opponent_attributes.find(d => d.type === st.DECK_GLOBAL);
                    return xe && (ne = Object.assign(Object.assign({}, ne), {collection: {id: xe.value}})), N && (ne = Object.assign(Object.assign({}, ne), {
                        deck: {
                            id: N.value,
                            global: !1
                        }
                    })), j && (ne = Object.assign(Object.assign({}, ne), {deck: Object.assign(Object.assign({}, ne.deck), {global: 1 === j.value})})), ne
                }

                handleQueueResponse() {
                    this.client.on(21, ee => {
                        const ne = this.tryParseJson(ee), xe = this.buildOpponent(ne);
                        ne.game_mode === Q.B_.SERVER_SOLO && (xe.id = 0), this.queueService.getQueue(1, ne.game_mode).pipe((0, n.P)(), (0, C.h)(N => "active" === N.status), (0, k.M)(this.gameService.getBranch$(1)), (0, $.K)(N => (console.error("playService->handleQueueResponse() error getting queue", N), (0, e.of)([null, null])))).subscribe(([N, j]) => {
                            N && (this.queueService.complete(N), ne.success && (this.dataStore.currentMatchId = ne.match_id, this._currentMatchId$.next(this.dataStore.currentMatchId), this.play({
                                realm: j.id,
                                mode: N.mode.id,
                                player: N.params.player,
                                match_id: ne.match_id,
                                opponent: xe,
                                server: {host: ne.location.host, port: ne.location.port, password: ne.match_pwd}
                            })))
                        })
                    })
                }

                handleQueueAck() {
                    this.client.on(30, ee => {
                        const ne = this.tryParseJson(ee);
                        this.queueAcknowledge$.next(!0), ne.success || (this.guGameService.fetchGameModes(!0), this.queueService.getQueue(1, ne.game_mode).pipe((0, n.P)()).subscribe(xe => this.queueService.cancel(xe)), "bot" === ne.reason ? this.modalService.createModal(ae.n, {}, {
                            blurredBackground: !0,
                            canCloseFromInside: !1,
                            position: pe.e1.Center,
                            size: pe.Cg.StretchableWorkarea
                        }) : this.showInfoModal("Unable to Queue", "captcha" === ne.reason ? G.k.CODE_10 : G.k.CODE_4))
                    })
                }

                handleQueuePing() {
                    this.client.on(35, ee => {
                        const ne = this.tryParseJson(ee);
                        !ne || !ne.game_mode || this.queueService.getQueue(1, ne.game_mode).pipe((0, n.P)(xe => "active" === xe.status), (0, w.b)(() => {
                            const xe = Object.assign(Object.assign({}, ne), {realm: this.branch.name});
                            this.trySendingSocketMsg(36, xe)
                        })).subscribe()
                    })
                }

                handleServerClientPing() {
                    this.client.on(8, () => {
                        this.trySendingSocketMsg(9, {})
                    })
                }

                handleClientServerPong() {
                    this.client.on(7, () => {
                        this.clientServerPongReceived$.next(!0)
                    })
                }

                handleCancelResponse() {
                    this.client.on(23, ee => {
                        this.tryParseJson(ee)
                    })
                }

                handleRestartRequest() {
                    this.client.on(40, ee => {
                        this.modalService.createModal(be.s, {
                            title: "Client Updated",
                            message: "Your client has been updated, please reload to continue.",
                            okButtonText: "RELOAD",
                            onOk: () => location.reload()
                        }, {
                            canCloseFromOutside: !1,
                            position: pe.e1.Center,
                            size: pe.Cg.StretchableFullscreen,
                            blurredBackground: !0
                        })
                    })
                }

                connectClient() {
                    if (this.client && this.client.destroy) try {
                        this.client.destroy()
                    } catch (ee) {
                        console.error("playService->connectClient() unable to destroy client.", ee)
                    }
                    this.client = window.bridge.createClient(this.master.host, this.master.port), this.handleQueueResponse(), this.handleQueueAck(), this.handleQueuePing(), this.handleCancelResponse(), this.handleRestartRequest(), this.handleServerClientPing(), this.handleClientServerPong()
                }

                tryParseJson(ee) {
                    let ne;
                    try {
                        ne = JSON.parse(ee)
                    } catch (xe) {
                        console.error("PlayServer->handleQueuePing error parsing message", xe, ee)
                    }
                    return ne
                }

                buildAttributes(ee) {
                    let ne = [];
                    return ee.player && ee.player.collection && (ne = [...ne, {
                        type: st.COLLECTION,
                        value: ee.player.collection.id
                    }]), ee.opponent && ee.opponent.deck && (ne = [...ne, {
                        type: st.DECK,
                        value: ee.opponent.deck.id
                    }], ne = [...ne, {type: st.DECK_GLOBAL, value: ee.opponent.deck.global ? 1 : 0}]), ne
                }

                buildQueueMessage(ee, ne, xe, N, j, d) {
                    return {
                        id: ne,
                        realm: j,
                        deck_id: xe,
                        token: "",
                        game_mode: ee.id,
                        attributes: N,
                        private_match_password: d
                    }
                }

                start(ee, ne, xe, N) {
                    const j = this.buildQueueMessage(ee, ne, xe.player.deck.id, this.buildAttributes(xe), this.branch.name, N);
                    return this.numActiveQueues > 0 ? (0, _._)(G.k.CODE_0) : this.client.socketConnected ? this.deckService.isDeckComplete(xe.player.deck).pipe((0, D.q)(1), (0, m.VS)(d => d ? this.clientServerPong(ee, j, ne, xe) : (this.deckService.fetchDecks(), (0, _._)(G.k.CODE_11)))) : (this.connectClient(), (0, _._)(G.k.CODE_1))
                }

                clientServerPong(ee, ne, xe, N) {
                    return this.clientServerPongReceived$.next(!1), this.trySendingSocketMsg(6, ne) ? ((0, g.H)(3e3).subscribe(() => {
                        this.clientServerPongReceived$.next(!1)
                    }), this.clientServerPongReceived$.pipe((0, D.q)(1), (0, m.VS)(d => d ? this.startQueueReq$(ee, ne, xe, N) : (console.log("playService->start() cannot queue, did not receive CLIENT_SERVER_PONG within 3000ms"), this.connectClient(), (0, _._)(G.k.CODE_9))))) : (this.connectClient(), (0, _._)(G.k.CODE_8))
                }

                startQueueReq$(ee, ne, xe, N) {
                    return this.queueAcknowledge$.next(!1), this.trySendingQueueReq(ne) ? ((0, g.H)(3e3).subscribe(() => {
                        this.queueAcknowledge$.next(!1)
                    }), this.queueAcknowledge$.pipe((0, D.q)(1), (0, m.VS)(d => d ? this.queueService.start(1, ee, N) : (console.log("playService->startQueueReq$() cannot queue, did not receive ACK message from server within 3000ms"), this.connectClient(), (0, _._)(G.k.CODE_3))))) : (console.log("playService->startQueueReq$() cannot queue, unable to send queue request message"), this.connectClient(), (0, _._)(G.k.CODE_2))
                }

                trySendingSocketMsg(ee, ne) {
                    console.log("playService->trySendingSocketMsg()", this.socketMsgName(ee), ne);
                    try {
                        return this.client.send(ee, ne), !0
                    } catch (xe) {
                        return console.error("playService->trySendingSocketMsg() failed", xe), !1
                    }
                }

                trySendingQueueReq(ee) {
                    return this.trySendingSocketMsg(20, ee)
                }

                trySendingCancelReq(ee, ne) {
                    return this.trySendingSocketMsg(22, {game_mode: ee, id: ne, realm: this.branch.name})
                }

                completeQueue(ee) {
                }

                get playing$() {
                    return this._playing$.asObservable()
                }

                setPlaying(ee, ne) {
                    this._playing$.next({status: ee, gameModeId: ne})
                }

                buildArgs(ee) {
                    let ne = ["-realm", `${ee.realm}`, "-user-id", `${ee.player.id}`, "-sessionTicket", this.authService.getGameSessionTicket(), "-sessionConfig", JSON.stringify(ee)];
                    return ee.match_id && (ne = [...ne, "-game-id", `${ee.match_id}`]), ne
                }

                play(ee) {
                    this.server.serverActive() || (this.server.closeServer(), this.server.createServer()), console.log(JSON.stringify(ee)), this.server.setConfig(ee), this.modalService.destroyModalsStack(), this.setPlaying(T.IN, ee.mode);
                    const ne = this.buildArgs(ee);
                    this.gameService.currentGameContext$.pipe((0, D.q)(1), (0, A.w)(xe => this.gameService.play(xe, ne)), (0, A.w)(xe => (0, g.H)(2e3, 2e3).pipe((0, S.h)(xe), (0, y.o)(() => window.bridge.isRunning(xe.process.pid)))), (0, I.x)(() => {
                        window.bridge.focus(), this.audioService.returnToLauncher.play(), ee.mode === Q.B_.SOLO && this.logGameCompleted(ee.mode, "Solo"), ee.mode === Q.B_.DIRECT_CHALLENGE && this.logGameCompleted(ee.mode, "Direct Challenge", ee.match_id), this.handleProgression(ee.mode)
                    })).subscribe(h.Z, xe => {
                        console.error("playService->play() error starting a game", xe), Object.values(G.k).includes(xe) ? this.showInfoModal("Unable to start game", xe) : this.showInfoModal("Unable to start game", G.k.CODE_5)
                    })
                }

                logGameCompleted(ee, ne, xe) {
                    "function" == typeof fbq && fbq("track", "ViewContent"), "function" == typeof gtag && gtag("event", "completed", {
                        event_category: "game",
                        event_label: "user"
                    }), this.analyticsService.postEvent(new p.Game.Completed.Event({
                        game_id: 1,
                        latest_id: xe,
                        mode_id: ee,
                        mode_name: ne
                    }))
                }

                handleProgression(ee) {
                    this.checkWhetherToShowAccountProgress().pipe((0, D.q)(1), (0, w.b)(ne => {
                        this.setPlaying(ne && 0 !== ee ? T.PROGRESSION_ACCOUNT : T.OUT, ee)
                    })).subscribe()
                }

                checkWhetherToShowAccountProgress() {
                    const ee = this.authService.getUserId(),
                        ne = this.progressionService.getStoredAccountProgression(ee);
                    return this.guUserService.getAccountProperties().pipe((0, D.q)(1), (0, t.U)(xe => this.hasProgressed(ne, xe)))
                }

                hasProgressed(ee, ne) {
                    return ee.lvl !== ne.level || ee.xp !== ne.total_xp
                }

                showInfoModal(ee, ne) {
                    this.modalService.createModal(E.S, {title: ee, text: ne}, {
                        blurredBackground: !0,
                        canCloseFromInside: !1,
                        position: pe.e1.Center,
                        size: pe.Cg.StretchableWorkarea
                    })
                }

                socketMsgName(ee) {
                    switch (ee) {
                        case 6:
                            return "CLIENT_SERVER_PING";
                        case 7:
                            return "CLIENT_SERVER_PONG";
                        case 8:
                            return "SERVER_CLIENT_PING";
                        case 9:
                            return "SERVER_CLIENT_PONG";
                        case 20:
                            return "QUEUE_REQ";
                        case 30:
                            return "QUEUE_ACK";
                        case 21:
                            return "QUEUE_RES";
                        case 35:
                            return "QUEUE_PING";
                        case 36:
                            return "QUEUE_PONG";
                        case 40:
                            return "RESTART_REQ";
                        case 22:
                            return "CANCEL_REQ";
                        case 23:
                            return "CANCEL_RES";
                        default:
                            return "UNKNOWN_MESSAGE"
                    }
                }
            }

            return ye.\u0275fac = function (ee) {
                return new (ee || ye)(V.LFG(he.eN), V.LFG(ie), V.LFG(X.hM), V.LFG(Ce.g), V.LFG(b.mI), V.LFG(Re.MZ), V.LFG(re.Z), V.LFG(z.$z), V.LFG(Te.xV), V.LFG(s.LE), V.LFG(b.pk), V.LFG(s.yD), V.LFG(ve.D))
            }, ye.\u0275prov = V.Yz7({token: ye, factory: ye.\u0275fac, providedIn: "root"}), ye
        })()
    }, 47313: (te, U, o) => {
        "use strict";
        o.d(U, {oW: () => w, $z: () => I});
        var p = o(591), r = o(61737), f = o(55778), e = o(72986), _ = o(2994), g = o(27221), h = o(24850), i = o(11130),
            t = o(73307), n = o(5e3);

        class w {
            constructor(b = 0, E = 0, R = 0) {
                this.xp = b, this.xpToNext = E, this.lvl = R
            }
        }

        class S {
            constructor(b, E, R, X, pe, re) {
                this.game_mode = b, this.rating = E, this.rank_level = R, this.win_points = X, this.loss_points = pe, this.safety_line = re
            }
        }

        let I = (() => {
            class s {
                constructor(E, R, X) {
                    this.gameApi = E, this.storage = R, this.guGameService = X, this.dataStore = {
                        accountThresholds: [],
                        gameRanks: [],
                        userRankLevels: []
                    }, this._accountThresholds$ = new p.X(Object.assign({}, this.dataStore).accountThresholds), this._gameRanks$ = new p.X(Object.assign({}, this.dataStore).gameRanks), this._userRankLevels$ = new p.X(Object.assign({}, this.dataStore).userRankLevels)
                }

                get accountThresholds$() {
                    return this._accountThresholds$.asObservable()
                }

                get gameRanks$() {
                    return this._gameRanks$.asObservable()
                }

                get userRankLevels$() {
                    return this._userRankLevels$.asObservable()
                }

                isMaxRank(E, R) {
                    return !(!E || !R || 0 === R.length) && E.rank_level === R[R.length - 1].level
                }

                fetchUserRankLevel() {
                    return this.guGameService.fetchPlayerRanks$().pipe((0, e.q)(1), (0, _.b)(E => (this.dataStore.userRankLevels = E, this._userRankLevels$.next([...E]), E))).subscribe()
                }

                fetchUserGameProgression({userId: E, gameModeId: R}) {
                    return this.gameApi.get(`/user/${E}/progression/${R}`).pipe((0, e.q)(1), (0, g.K)(X => (console.error("error during loading of post game progression stats"), (0, r._)(X))))
                }

                fetchGameRanks() {
                    this.gameApi.get("/rank").pipe((0, e.q)(1), (0, _.b)(E => (this.dataStore.gameRanks = E, this._gameRanks$.next([...E]), E)), (0, g.K)(E => (console.error("error during loading game ranks"), console.error(E), E))).subscribe()
                }

                fetchAccountThresholds() {
                    this.gameApi.get("/level_threshold").pipe((0, e.q)(1), (0, _.b)(E => {
                        this.dataStore.accountThresholds = E, this._accountThresholds$.next(Object.assign({}, this.dataStore).accountThresholds)
                    }), (0, g.K)(E => (console.error("error during loading lvl thresholds"), E))).subscribe()
                }

                fetchAccountThresholdsByUserId(E) {
                    this.gameApi.get(`/user/${E}/level_threshold`).pipe((0, e.q)(1), (0, _.b)(R => {
                        this.dataStore.accountThresholds = R, this._accountThresholds$.next(Object.assign({}, this.dataStore).accountThresholds)
                    }), (0, g.K)(R => (console.error("error during loading lvl thresholds"), R))).subscribe()
                }

                storeAccountProgression(E, R) {
                    this.storage.set([`last-progress-${E.toString()}`], R)
                }

                storeRankedProgression(E, R) {
                    this.storage.set([`last-progress-${E.toString()}`], R)
                }

                getStoredAccountProgression(E) {
                    return this.storage.get([`last-progress-${E.toString()}`]) || new w
                }

                storeLastGameId(E, R) {
                    this.storage.set([`last-game-${E.toString()}`], R)
                }

                getStoredLastGameId(E) {
                    return this.storage.get([`last-game-${E.toString()}`]) || ""
                }

                saveRankedProgression(E, R) {
                    this.storage.set([`last-ranked-progress-${E.toString()}`, R.game_mode.toString()], R)
                }

                getStoredRankedProgression(E, R) {
                    const X = this.storage.get([`last-ranked-progress-${E.toString()}`, R.toString()]) || new S(R, 0, 1, 0, 0, 40);
                    return this.dataStore.userRankLevels.push(X), this._userRankLevels$.next([...this.dataStore.userRankLevels]), X
                }

                getRankedProgressions(E) {
                    return this.gameApi.get(`/user/${E}/rank`)
                }

                getRankedProgressionById(E, R) {
                    return this.getRankedProgressions(E).pipe((0, h.U)(X => X.find(pe => pe.game_mode === R)), (0, _.b)(X => (this.saveRankedProgression(E, X), X)))
                }

                calcPercentage(E, R) {
                    const X = this.getLowerBoundaryForLvl(E.lvl, R);
                    return 100 * (E.xp - X) / (E.xp + E.xpToNext - X)
                }

                getLowerBoundaryForLvl(E, R) {
                    const X = R.find(pe => pe.level === E - 1);
                    return X ? X.total_xp : 0
                }
            }

            return s.\u0275fac = function (E) {
                return new (E || s)(n.LFG(f.Ft), n.LFG(t.qy), n.LFG(i.xV))
            }, s.\u0275prov = n.Yz7({token: s, factory: s.\u0275fac}), s
        })()
    }, 64523: (te, U, o) => {
        "use strict";
        o.d(U, {r: () => D, H: () => m});
        var p = o(72224), r = o(44416), f = o(55778), e = o(73307), _ = o(591), g = o(8929), h = o(98723), i = o(72986),
            t = o(2994), n = o(7625), C = o(24850), k = o(83035), $ = o(33403), w = o(5e3), D = (() => {
                return (A = D || (D = {}))[A.AVAILABLE = 0] = "AVAILABLE", A[A.WAITING_TO_START = 1] = "WAITING_TO_START", A[A.STARTED = 2] = "STARTED", A[A.REWARDS_AVAILABLE = 3] = "REWARDS_AVAILABLE", A[A.ENDED = 4] = "ENDED", D;
                var A
            })();
        let m = (() => {
            class A {
                constructor(y, I, s, b) {
                    this.gameApi = y, this.authService = I, this.queueService = s, this.utilService = b, this.dataStore = {
                        sealedMode: null,
                        sealedModeStatus: D.AVAILABLE
                    }, this._sealedMode$ = new _.X(null), this._sealedModeStatus$ = new _.X(this.dataStore.sealedModeStatus), this.unsubscribe = new g.xQ
                }

                get sealedMode$() {
                    return this._sealedMode$.asObservable()
                }

                get sealedModeStatus$() {
                    return this._sealedModeStatus$.asObservable()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                fetchSealed() {
                    const y = this.authService.getUserId(), I = this.authService.getGameSessionTicket();
                    this.gameApi.get(`/user/${y}/mode/${$.B_.SEALED_DECK}/deck?session=${I}`).pipe((0, i.q)(1)).subscribe(s => {
                        this.updateSealedMode(s)
                    }, s => {
                        this.updateSealedMode(void 0)
                    })
                }

                enterSealed$(y) {
                    const I = this.authService.getUserId(), s = this.authService.getGameSessionTicket();
                    return this.gameApi.post(`/user/${I}/mode/${$.B_.SEALED_DECK}/deck?session=${s}`, {god: y}).pipe((0, i.q)(1), (0, t.b)(b => {
                        this.updateSealedMode(b)
                    }))
                }

                updateSealedMode(y) {
                    y && (y.game_mode_data = this.transformSealedModeGameModeData(y.game_mode_data)), this.dataStore.sealedMode = y, this._sealedMode$.next(y ? Object.assign({}, this.dataStore.sealedMode) : void 0), this.handleSealedModeStatus(y)
                }

                transformSealedModeGameModeData(y) {
                    const I = this.utilService.adjustToServerTime(y.end_time_remaining);
                    return Object.assign(Object.assign({}, y), {
                        end_time_server: I,
                        end_timestamp_server: Date.parse(I),
                        properties: Object.assign(Object.assign({}, y.properties), {
                            entry_cutoff_server: this.utilService.adjustToServerTime(y.properties.entry_cutoff_remaining),
                            start_time_server: this.utilService.adjustToServerTime(y.properties.start_time_remaining)
                        })
                    })
                }

                handleSealedModeStatus(y) {
                    if (y && y.sealed_id) if ("ended" !== y.status) {
                        if (!this.areRewardsAvailable(y)) return this.areWaitingToStart(y) ? (this.scheduleRefresh(y.game_mode_data.properties.start_time_server), void this.updateSealedModeStatus(D.WAITING_TO_START)) : (this.scheduleRefresh(y.game_mode_data.end_time_server, this.onSealedEnded.bind(this)), void this.updateSealedModeStatus(D.STARTED));
                        this.updateSealedModeStatus(D.REWARDS_AVAILABLE)
                    } else this.updateSealedModeStatus(D.ENDED); else this.updateSealedModeStatus(D.AVAILABLE)
                }

                scheduleRefresh(y, I) {
                    const s = Date.now(), E = new Date(y).getTime() + 1e3 - s;
                    E > 0 && E < p.v && (0, h.H)(E).pipe((0, n.R)(this.unsubscribe), (0, i.q)(1)).subscribe(R => {
                        this.fetchSealed(), I && I()
                    })
                }

                onSealedEnded() {
                    this.queueService.activeQueues$.pipe((0, i.q)(1), (0, C.U)(y => y.find(I => I.mode.id === $.B_.SEALED_DECK))).subscribe(y => {
                        y && this.queueService.cancel(y)
                    })
                }

                areRewardsAvailable(y) {
                    const I = Date.now(), s = new Date(y.game_mode_data.end_time_server).getTime();
                    return y.losses >= y.max_losses || y.wins >= y.max_wins || I > s
                }

                areWaitingToStart(y) {
                    const I = Date.now(), s = new Date(y.game_mode_data.properties.start_time_server).getTime();
                    return s && I < s
                }

                updateSealedModeStatus(y) {
                    this.dataStore.sealedModeStatus = y, this._sealedModeStatus$.next(this.dataStore.sealedModeStatus)
                }

                claimRewards$(y) {
                    const I = this.authService.getUserId(), s = this.authService.getGameSessionTicket();
                    return this.gameApi.put(`/user/${I}/mode/${$.B_.SEALED_DECK}/deck/${y}?session=${s}`, {action: "claim"})
                }
            }

            return A.\u0275fac = function (y) {
                return new (y || A)(w.LFG(f.Ft), w.LFG(e.mI), w.LFG(k.g), w.LFG(r.F))
            }, A.\u0275prov = w.Yz7({token: A, factory: A.\u0275fac, providedIn: "root"}), A
        })()
    }, 80537: (te, U, o) => {
        "use strict";
        o.d(U, {k: () => p});
        var p = (() => {
            return (r = p || (p = {})).CODE_0 = "You are already queueing for another game mode. (Error Code 0)", r.CODE_1 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 1)", r.CODE_2 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 2)", r.CODE_3 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 3)", r.CODE_4 = "Queueing is currently disabled for maintenance. Please try again later. (Error Code 4)", r.CODE_5 = "There was an error while starting the game. (Error Code 5)", r.CODE_6 = "There was an error while starting the game. Unable to verify game files. (Error Code 6)", r.CODE_7 = "There was an error while starting the game. Unable to verify game files. (Error Code 7)", r.CODE_8 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 8)", r.CODE_9 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 9)", r.CODE_10 = "Unable to join queue. Suspicious account activity has been detected. (Error Code 10)", r.CODE_11 = "The deck you are queueing with is not complete. (Error Code 11)", r.CODE_12 = "There was an issue authorising the game build download. (Error Code 12)", r.CODE_13 = "There was an issue downloading the game. (Error Code 13)", r.CODE_14 = "There was an issue extracting the game. (Error Code 14)", p;
            var r
        })()
    }, 8611: (te, U, o) => {
        "use strict";
        o.d(U, {n: () => f});
        var p = o(66088), r = o(5e3);
        let f = (() => {
            class e {
                constructor(g) {
                    this.modalService = g
                }

                ngOnInit() {
                }

                hideModal() {
                    this.modalService.destroyTopModal()
                }

                reject() {
                    window.open("https://immutable.atlassian.net/servicedesk/customer/portal/1/group/1/create/18", "_blank")
                }
            }

            return e.\u0275fac = function (g) {
                return new (g || e)(r.Y36(p.Z))
            }, e.\u0275cmp = r.Xpm({
                type: e,
                selectors: [["app-bot-alert-modal"]],
                inputs: {title: "title", message: "message", onOk: "onOk", okButtonText: "okButtonText"},
                decls: 12,
                vars: 0,
                consts: [[1, "gradientOverlay"], [1, "title"], [1, "description"], ["size", "large", "text", "accept", 1, "acceptButton", 3, "click"], [1, "rejectText", 3, "click"]],
                template: function (g, h) {
                    1 & g && (r._UZ(0, "div", 0), r.TgZ(1, "div", 1), r._uU(2, " account issue "), r.qZA(), r.TgZ(3, "div", 2), r._uU(4, " We\u2019ve detected some unusual activity on your account, and suspect you might be a bot. "), r._UZ(5, "br"), r._UZ(6, "br"), r._UZ(7, "br"), r._uU(8, " You won\u2019t be able to queue for games or fuse cards until we can be sure you\u2019re a human.\n"), r.qZA(), r.TgZ(9, "gu-primary-hex-button", 3), r.NdJ("click", function () {
                        return h.hideModal()
                    }), r.qZA(), r.TgZ(10, "a", 4), r.NdJ("click", function () {
                        return h.reject()
                    }), r._uU(11, " i am not a bot "), r.qZA())
                },
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.title[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.rejectText[_ngcontent-%COMP%], .description[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.title[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.rejectText[_ngcontent-%COMP%], .description[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.description[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:center;width:calc(var(--vh) * 50);height:calc(var(--vh) * 45);padding-bottom:calc(var(--vw) * 2.5);background-image:url(/gu-assets/images/backgrounds/trader-overlay-bg.webp);background-size:cover;background-position:center}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.gradientOverlay[_ngcontent-%COMP%]{position:absolute;width:calc(var(--vh) * 50);height:calc(var(--vh) * 45);border:1px solid #182531;background:radial-gradient(ellipse at center,rgba(12,22,32,0) -80%,#0c1620 70%)}.title[_ngcontent-%COMP%]{background:linear-gradient(to bottom,#fff2d8 0%,#ebc98b 50%,#c6a052 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;padding-bottom:calc(var(--vh) * 2);padding-top:calc(var(--vh) * 6);text-transform:uppercase}.description[_ngcontent-%COMP%]{margin-top:calc(calc(var(--vw) * 2) * .7);padding-left:calc(var(--vh) * 6);padding-right:calc(var(--vh) * 6);text-align:center}.acceptButton[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2)}.rejectText[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2);text-transform:uppercase;color:#8be1e0;cursor:pointer}.rejectText[_ngcontent-%COMP%]:hover{text-decoration:underline}"]
            }), e
        })()
    }, 5231: (te, U, o) => {
        "use strict";
        o.d(U, {s: () => f});
        var p = o(66088), r = o(5e3);
        let f = (() => {
            class e {
                constructor(g) {
                    this.modalService = g
                }

                ngOnInit() {
                }

                onOkCLick() {
                    this.onOk()
                }
            }

            return e.\u0275fac = function (g) {
                return new (g || e)(r.Y36(p.Z))
            }, e.\u0275cmp = r.Xpm({
                type: e,
                selectors: [["app-hijack-modal"]],
                inputs: {title: "title", message: "message", onOk: "onOk", okButtonText: "okButtonText"},
                decls: 5,
                vars: 3,
                consts: [[1, "title-section"], [1, "message-section"], ["size", "large", 1, "cta-button", 3, "text", "click"]],
                template: function (g, h) {
                    1 & g && (r.TgZ(0, "div", 0), r._uU(1), r.qZA(), r.TgZ(2, "div", 1), r._uU(3), r.qZA(), r.TgZ(4, "gu-primary-hex-button", 2), r.NdJ("click", function () {
                        return h.onOkCLick()
                    }), r.qZA()), 2 & g && (r.xp6(1), r.Oqu(h.title), r.xp6(2), r.Oqu(h.message), r.xp6(1), r.Q6J("text", h.okButtonText))
                },
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.title-section[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.message-section[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.title-section[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.message-section[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.message-section[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{border:calc(var(--vh) * .15) solid #527493;background-color:#0c1620;position:relative;display:block;color:#f6f6f6;padding:calc(var(--vw) * 2);width:calc(var(--vw) * 30);display:flex;flex-flow:column nowrap;align-items:center;padding-bottom:calc(var(--vw) * 2.5)}.title-section[_ngcontent-%COMP%]{padding-bottom:calc(var(--vh) * 2);border-bottom:calc(var(--vh) * .15) solid #fff;text-transform:uppercase}.message-section[_ngcontent-%COMP%]{margin-top:calc(calc(var(--vw) * 2) * .7);text-align:center}.cta-button[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2)}"]
            }), e
        })()
    }, 14618: (te, U, o) => {
        "use strict";
        o.d(U, {
            gK: () => p,
            ky: () => r,
            Kg: () => f,
            dY: () => e,
            yn: () => _,
            Ry: () => g,
            Tg: () => h,
            c7: () => i,
            Vm: () => t,
            $9: () => n,
            X4: () => C,
            Lg: () => k,
            P6: () => $,
            wT: () => w
        });
        var p = (() => {
            return (D = p || (p = {})).GAME_BUILD_DOWNLOAD_CHECK = "[GameResources] Game Build Download Check", D.GAME_BUILD_DOWNLOAD_REQUEST = "[GameResources] Game Build Download Request", D.GAME_BUILD_DOWNLOAD_PROGRESS = "[GameResources] Game Build Download Progress", D.GAME_BUILD_DOWNLOAD_EXTRACT = "[GameResources] Game Build Download Extract", D.GAME_BUILD_DOWNLOAD_SUCCESS = "[GameResources] Game Build Download Success", D.GAME_BUILD_DOWNLOAD_ERROR = "[GameResources] Game Build Download Error", D.GAME_BUILD_DOWNLOAD_UPDATE_STATUS = "[GameResources] Game Build Download Update Status", D.GAME_ASSETS_DOWNLOAD_CHECK = "[GameResources] Game Assets Download Check", D.GAME_ASSETS_DOWNLOAD_REQUEST = "[GameResources] Game Assets Download Request", D.GAME_ASSETS_DOWNLOAD_PROGRESS = "[GameResources] Game Assets Download Progress", D.GAME_ASSETS_DOWNLOAD_SUCCESS = "[GameResources]  Game Assets Download Success", D.GAME_ASSETS_DOWNLOAD_ERROR = "[GameResources]  Game Assets Download Error", D.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS = "[GameResources] Game Assets Download Update Status", p;
            var D
        })();

        class r {
            constructor(m) {
                this.payload = m, this.type = p.GAME_BUILD_DOWNLOAD_CHECK
            }
        }

        class f {
            constructor() {
                this.type = p.GAME_BUILD_DOWNLOAD_REQUEST
            }
        }

        class e {
            constructor(m) {
                this.payload = m, this.type = p.GAME_BUILD_DOWNLOAD_PROGRESS
            }
        }

        class _ {
            constructor(m) {
                this.payload = m, this.type = p.GAME_BUILD_DOWNLOAD_EXTRACT
            }
        }

        class g {
            constructor() {
                this.type = p.GAME_BUILD_DOWNLOAD_SUCCESS
            }
        }

        class h {
            constructor(m) {
                this.payload = m, this.type = p.GAME_BUILD_DOWNLOAD_UPDATE_STATUS
            }
        }

        class i {
            constructor(m) {
                this.payload = m, this.type = p.GAME_BUILD_DOWNLOAD_ERROR
            }
        }

        class t {
            constructor(m) {
                this.payload = m, this.type = p.GAME_ASSETS_DOWNLOAD_CHECK
            }
        }

        class n {
            constructor() {
                this.type = p.GAME_ASSETS_DOWNLOAD_REQUEST
            }
        }

        class C {
            constructor(m) {
                this.payload = m, this.type = p.GAME_ASSETS_DOWNLOAD_PROGRESS
            }
        }

        class k {
            constructor(m) {
                this.payload = m, this.type = p.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS
            }
        }

        class ${constructor(){this.type=p.GAME_ASSETS_DOWNLOAD_SUCCESS}
    }class w{
    constructor(m) {
        this.payload = m, this.type = p.GAME_ASSETS_DOWNLOAD_ERROR
    }
}
},
69931
:
(te, U, o) => {
    "use strict";
    o.d(U, {VD: () => r, DM: () => f, gP: () => e});
    var p = o(96727);
    const r = (0, p.ZF)("gameResources"), f = () => (0, p.P1)(r, _ => _.gameBuild),
        e = () => (0, p.P1)(r, _ => _.gameAssets)
}, 63411
:
(te, U, o) => {
    "use strict";
    o.d(U, {e: () => m});
    var p = o(73175), r = o(591), f = o(61737), e = o(21086), _ = o(2994), g = o(61709), h = o(27221), i = o(24850),
        t = o(72986), n = o(40520), C = o(73307), k = o(5e3), $ = o(11735);
    const w = new p.N0;
    let m = (() => {
        class A {
            constructor(y, I, s, b) {
                this.authHostService = y, this.storage = I, this.featureFlagsService = s, this.router = b, this.isRemembering = !0, this.dataStore = {account: null}, this._account$ = new r.X(null)
            }

            login(y, I, s) {
                return this.authHostService.post("/auth2?type=login&code=" + this.generate(), y).pipe((0, _.b)(b => this.sendAnalytics(!0, y.email, +b.id)), (0, g.VS)(b => this.saveAccount(b, I, s)), (0, _.b)(b => this.fetchAccount()), (0, h.K)(b => (this.sendAnalytics(!1, y.email), (0, f._)(b))))
            }

            saveAccount(y, I, s) {
                return this.auth = y, "function" == typeof window.bridge.updateAuthPair && window.bridge.updateAuthPair(y), this.isRemembering = I, I && (this.storage.set(["user_id"], y.id), this.storage.set(["refresh"], y.refresh), this.storage.set(["access"], y.access)), this.authHostService.post(`/account/${y.id}/session`, {game_id: s}).pipe((0, _.b)(b => {
                    "function" == typeof window.bridge.updateSession && window.bridge.updateSession(b), this.storage.set(["game_session"], b)
                }), (0, i.U)(() => !0), (0, h.K)(b => (0, e.of)(!1)))
            }

            getLinkedAddresses(y) {
                return this.authHostService.get(`v2/account/${y}`).pipe((0, i.U)(I => I.addresses.map(s => s.address)))
            }

            fetchSession() {
                return (0, e.of)(this.getGameSessionTicket())
            }

            sendAnalytics(y, I, s) {
            }

            get account$() {
                return this._account$.asObservable()
            }

            _emitAccount(y) {
                this.dataStore.account = y, this._account$.next(Object.assign({}, this.dataStore).account), this.featureFlagsService.setContext(y ? {
                    userID: `${y.id}`,
                    email: y.email,
                    name: y.username,
                    anonymous: !1
                } : {anonymous: !0})
            }

            getUserId() {
                return this.auth && null != this.auth.id ? this.auth.id : this.storage.get(["user_id"])
            }

            getGameSessionTicket() {
                return this.storage.get(["game_session"])
            }

            fetchAccount() {
                const y = this.getUserId();
                !y || this.authHostService.get(`/v2/account/${y}`).pipe((0, t.q)(1), (0, _.b)(I => this._emitAccount(I))).subscribe()
            }

            fetchAccountDetails() {
                const y = this.getUserId();
                if (y) return this.authHostService.get(`/v2/account/${y}`)
            }

            updateCurrentUser(y) {
                const I = this.getUserId();
                return this.updateUser(I, y)
            }

            updateUser(y, I) {
                return this.authHostService.put("/account/" + y, I).pipe((0, t.q)(1), (0, _.b)(s => this._emitAccount(s)))
            }

            getAuthHeader() {
                let y = new n.WM;
                return y = y.append("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"), y = y.append("Authorization", this.getAccessToken()), y
            }

            getRefreshToken() {
                return this.storage.get(["refresh"])
            }

            getAccessToken() {
                return this.storage.get(["access"])
            }

            getAuthToken() {
                return this.auth
            }

            register(y) {
                return this.authHostService.post("/register", y)
            }

            resend(y) {
                return this.authHostService.post("/resend", {email: y})
            }

            resetPassword(y) {
                return this.authHostService.put("/reset", {email: y})
            }

            isLoggedIn() {
                const y = this.getRefreshToken();
                return null != y && y.length > 0
            }

            logout() {
                this.auth = null, this._emitAccount(null), this.storage.delete(["user_id"]), this.storage.delete(["refresh"]), this.storage.delete(["access"]), this.storage.delete(["email"]), this.storage.delete(["subscribe"]), this.authHostService.post("/logout"), this.router.navigate(["/login"]), this.featureFlagsService.setContext({
                    userID: void 0,
                    email: void 0,
                    name: void 0,
                    anonymous: !0
                })
            }

            refreshToken() {
                const y = this.getRefreshToken();
                return this.authHostService.post("/auth2?type=refresh&code=" + this.generate(), {refresh: y}).pipe((0, _.b)(I => {
                }))
            }

            linkReferralCode(y) {
                const I = this.getUserId();
                return this.authHostService.post(`/account/${I}/referrer`, {referral: y})
            }

            tokenIsExpired() {
                const y = this.getAuthToken();
                return w.isTokenExpired(y.access)
            }

            generate() {
                function y(Z, V) {
                    return (Z.length - Z.replace(new RegExp(V, "g"), "").length) / V.length
                }

                function I(Z, V, ie) {
                    return V > Z.length - 1 ? Z : Z.substr(0, V) + ie + Z.substr(V + 1)
                }

                const s = function (Z) {
                    const ie = Math.pow(16, Math.min(Z, 8) - 1), Q = Math.pow(16, Math.min(Z, 8)) - 1;
                    let G = (Math.floor(Math.random() * (Q - ie + 1)) + ie).toString(16);
                    for (; G.length < Z;) G += s(Z - 8);
                    return G
                }, b = Math.ceil(25 * Math.random()), E = 32 - b - 4;
                let R = ("" + s(b) + 2 + s(2) + 2 + s(E)).toLowerCase(), re = y(R, "a") - y(R, "b") + 1, Ce = 0;
                for (; re > 0 && ("a" !== R[Ce] && "b" !== R[Ce] && "2" !== R[Ce] && (R = I(R, Ce, "b"), re--), Ce++, !(Ce > R.length));) ;
                for (; re < 0 && ("a" !== R[Ce] && "b" !== R[Ce] && "2" !== R[Ce] && (R = I(R, Ce, "a"), re++), Ce++, !(Ce > R.length));) ;
                return R
            }
        }

        return A.\u0275fac = function (y) {
            return new (y || A)(k.LFG(C.LI), k.LFG(C.qy), k.LFG(C.B3), k.LFG($.F0))
        }, A.\u0275prov = k.Yz7({token: A, factory: A.\u0275fac}), A
    })()
}, 69340
:
(te, U, o) => {
    "use strict";
    o.d(U, {b5: () => A});
    var p = o(21086), r = o(41746), f = o(8929), e = o(56498), _ = o(24850), g = o(87168), h = o(61709), i = o(87545),
        t = o(14618), n = o(69931), C = o(79763), k = o(44416), $ = o(5e3), w = o(96727);
    let A = (() => {
        class S {
            constructor(I, s, b, E) {
                this.gameService = I, this.zone = s, this.utils = b, this.ngrxStore = E, this.downloads = new Map
            }

            getCurrentDownload() {
                return this.currentDownload
            }

            getVersionFile(I, s) {
                return window.bridge.httpGet(`https://s3-ap-southeast-2.amazonaws.com/gods-builds/manifests/${s}-manifest.json`).pipe(this.utils.enterZone(this.zone))
            }

            getLatest(I, s) {
                return this.getVersionFile(I, s).pipe((0, _.U)(b => b.build_version))
            }

            getLocal(I) {
                return (0, p.of)(this.gameService.getProperty(I.id, "version"))
            }

            getVersions(I, s) {
                let b;
                return b = (0, r.$R)("local" === s ? this.getLocal(I) : this.getLatest(I, s), this.getLocal(I)), b
            }

            requiresUpdate(I, s) {
                return this.getVersions(I, s).pipe((0, g.M)(this.ngrxStore.select(n.VD)), (0, h.VS)(([[b, E], R]) => {
                    let X = !0;
                    return E && E === b && (X = "downloaded" === this.gameService.getProperty(I.id, "status")), X && "downloading" !== R.gameBuild.status && "extracting" !== R.gameBuild.status && this.ngrxStore.dispatch(new t.ky({isUpdateRequired: X})), (0, p.of)(X)
                }))
            }

            getUserPlatform() {
                return "win32" === window.bridge.platform() ? "win" : "mac"
            }

            getLatestAssetsVersions(I, s) {
                const b = {platform: this.getUserPlatform(), branch: s};
                return window.bridge.httpPost("https://oyhca2oyje.execute-api.us-east-1.amazonaws.com/test/1/game/assets", b).pipe(this.utils.enterZone(this.zone))
            }

            getLocalAssetsVersions(I) {
                return this.gameService.getProperty(I.id, "assets") ? (0, p.of)(JSON.parse(this.gameService.getProperty(I.id, "assets"))) : (0, p.of)(null)
            }

            requiresAssetsUpdate(I, s) {
                return (0, r.$R)(this.getLocalAssetsVersions(I), this.getLatestAssetsVersions(I, s)).pipe((0, g.M)(this.ngrxStore.select(n.VD)), (0, i.w)(([[b, E], R]) => {
                    let X;
                    return X = b ? this.deltaAssetsVersions(b, E) : E, X.length > 0 && "downloading" !== R.gameAssets.status && this.ngrxStore.dispatch(new t.Vm({isUpdateRequired: X.length > 0})), (0, p.of)(X)
                }))
            }

            deltaAssetsVersions(I, s) {
                let b = [];
                return b = I ? s ? s.filter(E => !I.some(R => E.etag === R.etag)) : [] : s, b
            }

            getDownloadInfo(I, s, b) {
                return this.gameService.isObfuscatedBranch(I.id) ? {
                    url: `${I.base_url_auth}/builds/game/${s}/${this.getFileName(I, s)}`,
                    authToken: b
                } : {url: `${I.base_url}/builds/${s}/${this.getFileName(I, s)}`, authToken: void 0}
            }

            getFileName(I, s) {
                return "win32" === window.bridge.platform() ? "gods_" + s + I.extensions.windows : "gods_" + s + I.extensions.osx
            }

            downloadAndExtract(I, s, b) {
                const E = this.gameService.getInstallPath(I), R = this.getDownloadInfo(I, s, b),
                    X = window.bridge.download(R.url, E, this.getFileName(I, s), b).pipe((0, _.U)(pe => (this.currentDownload.extracting = !0, this.gameService.setProperty(I.id, "version", s), this.gameService.setProperty(I.id, "status", "downloaded"), {
                        game: I,
                        fileName: this.getFileName(I, s),
                        installPath: E
                    })));
                return this.currentDownload = {
                    progress: window.bridge.progress,
                    download: X,
                    extracting: !1,
                    error$: new f.xQ
                }, this.currentDownload
            }

            displayDownloadCompleteNotification(I) {
                new window.Notification("Download Complete", {
                    body: I.title + " has finished downloading.",
                    silent: !0
                }).onclick = () => {
                }
            }

            deleteFile(I, s) {
                const b = window.bridge.join(s, I);
                window.bridge.exists(b) && window.bridge.deleteFile(b)
            }

            extractGame(I, s, b) {
                return new e.y(E => {
                    const R = window.bridge.join(b, s), X = window.bridge.join(b, I.title);
                    window.bridge.exists(R) || (console.error("GameDownloadService->extractGame() unable to find file to extract"), E.error("File not found! Cannot extract.")), window.bridge.extract(R, X, pe => {
                        "win32" !== window.bridge.platform() ? window.bridge.chmod(X + "/StandaloneOSXUniversal/gods.app/Contents/MacOS/gods", Ce => {
                            Ce ? (console.error(Ce), E.error(Ce)) : E.next(!0)
                        }) : E.next(!0)
                    })
                }).pipe((0, h.VS)(E => {
                    if (E) return this.gameService.setProperty(I.id, "status", "extracted"), this.gameService.refreshGameContext(), null != this.currentDownload && (this.currentDownload.extracting = !1), (0, p.of)(E)
                }))
            }

            uninstallGame(I, s) {
                window.bridge.deleteFile(window.bridge.join(s, I.title))
            }
        }

        return S.\u0275fac = function (I) {
            return new (I || S)($.LFG(C.hM), $.LFG($.R0b), $.LFG(k.F), $.LFG(w.yh))
        }, S.\u0275prov = $.Yz7({token: S, factory: S.\u0275fac, providedIn: "root"}), S
    })()
}, 79763
:
(te, U, o) => {
    "use strict";
    o.d(U, {hM: () => S});
    var p = o(591), r = o(61737), f = o(21086), e = o(24850), _ = o(92198), g = o(72986), h = o(55778), i = o(73307),
        t = o(63764), n = o(80537), k = (o(63411), o(52492)), $ = o(66088), w = o(5e3);
    let S = (() => {
        class y {
            constructor(s, b, E, R, X, pe) {
                this.authHostService = s, this.auth = b, this.storage = E, this.modalService = R, this.akuma = X, this.gameApi = pe, this._currentGameContext$ = new p.X(null), this._branches$ = new p.X([]), this.dataStore = {
                    currentGameContext: null,
                    branches: []
                }
            }

            get currentGameContext$() {
                return this._currentGameContext$.asObservable()
            }

            get branches$() {
                return this._branches$.asObservable()
            }

            getBranch$(s) {
                const b = this.getProperty(s, "branch"), E = b && "" !== b ? b : "beta";
                return this.branches$.pipe((0, e.U)(R => R.find(X => X.name === E)), (0, _.h)(R => !!R))
            }

            isObfuscatedBranch(s = 1) {
                const b = this.getProperty(s, "branch"), E = this.dataStore.branches.find(R => R.name === b);
                return E && E.obfuscated
            }

            onValidBranch(s, b) {
                return !(!s || !b.find(E => E.name === s))
            }

            fetchBranchesExtended(s) {
                const b = this.getProperty(s, "branch");
                this.fetchBranchesExtendedApi(s).subscribe(E => {
                    this.onValidBranch(b, E) || (this.setProperty(s, "branch", "beta"), this.refreshGameContext(), "string" == typeof b && (this.auth.logout(), setTimeout(() => window.location.reload()))), this.dataStore.branches = E, this._branches$.next([...this.dataStore.branches])
                })
            }

            fetchBranchesExtendedApi(s) {
                const b = this.auth.getUserId();
                return this.authHostService.get(`/game/${s}/player/${b}/branch?format=extended`).pipe((0, g.q)(1))
            }

            setGuGameContext() {
                this.dataStore.currentGameContext = this.getMockedGuGame(), this._emitCurrentGameContext()
            }

            refreshGameContext() {
                this._emitCurrentGameContext()
            }

            _emitCurrentGameContext() {
                this._currentGameContext$.next(Object.assign({}, this.dataStore).currentGameContext)
            }

            getGames(s) {
                return this.authHostService.get("/account/" + s + "/game")
            }

            getUserTutorialMissions(s, b) {
                return (!s || !b) && (s = this.auth.getUserId(), b = this.auth.getGameSessionTicket()), this.gameApi.get(`/user/${s}/tutorial?session=${b}`)
            }

            updateUserTutorialMissions(s, b, E) {
                return (!s || !E) && (s = this.auth.getUserId(), E = this.auth.getGameSessionTicket()), this.gameApi.post(`/user/${s}/tutorial?session=${E}`, b)
            }

            setProcessID(s, b) {
                null == this.sessions && (this.sessions = new Map);
                const E = this.sessions.get(s);
                E && (E.pid = b, this.sessions.set(s, E))
            }

            isInstalled(s) {
                const b = this.getPlayPath(s), E = window.bridge.exists(b);
                return E || console.error("Game is not installed", b), E
            }

            play(s, b) {
                const E = this.getPlayPath(s);
                if (!this.isInstalled(s)) return console.error("gameService->play() game not intalled", s.id, s.title), (0, r._)(n.k.CODE_6);
                let R;
                return R = b ? window.bridge.executeArgs(E, b, (X, pe) => {
                    if (pe) return console.error("gameService->play()->window.bridge.executeArgs() error starting game", E, pe), (0, r._)(n.k.CODE_7);
                    this.logGameClientLaunched()
                }) : window.bridge.execute(E, (X, pe) => {
                    if (pe) return console.error("gameService->play()->window.bridge.execute() error starting game", E, pe), (0, r._)(n.k.CODE_7);
                    this.logGameClientLaunched()
                }), "win32" !== window.bridge.platform() && R.pid++, this.setProcessID(s.id, R.pid), (0, f.of)({process: R})
            }

            logGameClientLaunched() {
                "function" == typeof gtag && gtag("event", "succeeded", {event_category: "gameClientLaunched"}), this.akuma.postEvent("Flow", "_gameClientLaunched_succeeed")
            }

            getPlayPath(s) {
                const b = this.getInstallPath(s), E = window.bridge.join(b, s.title);
                return "win32" === window.bridge.platform() ? window.bridge.join(E, s.executables.windows) : window.bridge.join(E, s.executables.osx)
            }

            showInfoModal(s, b) {
                this.modalService.createModal(t.S, {title: s, text: b}, {
                    blurredBackground: !0,
                    canCloseFromInside: !1,
                    position: k.e1.Center,
                    size: k.Cg.StretchableWorkarea
                })
            }

            getMockedGuGame() {
                return {
                    id: 1,
                    title: "Gods Unchained",
                    description: "Gods Unchained is a state of the art competitive card game driven by decentralized asset ownership.\n      <br><br>Gods Unchained combines the convenience and beauty of digital card games with\n      the true ownership offered by physical card games to create the world's first blockchain eSport.",
                    background_url: "",
                    thumbnail_url: "launcher-mockup-gu-logo.png",
                    base_url: "https://builds.godsunchained.com",
                    base_url_auth: "https://d2kgdofmel8ecp.cloudfront.net",
                    userId: this.auth.getUserId(),
                    role: "dev",
                    executables: {osx: "/StandaloneOSXUniversal/gods.app", windows: "/StandaloneWindows64/gods.exe"},
                    extensions: {osx: "_osx_full.zip", windows: "_win64_full.zip"}
                }
            }

            getDefaultInstallPath() {
                return "win32" === window.bridge.platform() ? window.bridge.homeDirectory() + "\\AppData\\Local\\GodsUnchained" : window.bridge.homeDirectory() + "/Library/GodsUnchained/"
            }

            getInstallPath(s) {
                return this.getProperty(s.id, "path") || this.getDefaultInstallPath()
            }

            getAssetsPath() {
                return "win32" === window.bridge.platform() ? window.bridge.homeDirectory() + "\\Documents\\My Games\\GodsUnchained\\Assets" : window.bridge.homeDirectory() + "/Library/GodsUnchained/Assets"
            }

            getGameId() {
                return this.dataStore.currentGameContext ? this.dataStore.currentGameContext.id : null
            }

            getProperty(s, b) {
                return this.storage.get(["game", String(s), b])
            }

            deleteProperty(s, b) {
                return this.storage.delete(["game", String(s), b])
            }

            setProperty(s, b, E) {
                return this.storage.set(["game", String(s), b], E)
            }

            getBranch(s) {
                const b = this.getProperty(s, "branch");
                return (0, f.of)(b && "" !== b ? b : "beta")
            }

            clearAssets(s) {
                this.setProperty(s, "assets", JSON.stringify([])), window.bridge.clearGUAssets(b => {
                    console.error("Error Clearing New Assets", b)
                }), location.reload()
            }

            checkInstallationPath(s) {
                if (!this.getProperty(s, "path")) {
                    const E = this.getDefaultInstallPath();
                    this.setProperty(s, "path", E), this.clearVersion(s)
                }
            }

            clearVersion(s) {
                this.deleteProperty(s, "version"), this.refreshGameContext(), setTimeout(() => window.location.reload())
            }
        }

        return y.\u0275fac = function (s) {
            return new (s || y)(w.LFG(i.LI), w.LFG(i.mI), w.LFG(i.qy), w.LFG($.Z), w.LFG(h.jt), w.LFG(h.Ft))
        }, y.\u0275prov = w.Yz7({token: y, factory: y.\u0275fac, providedIn: "root"}), y
    })()
}, 24058
:
(te, U, o) => {
    "use strict";
    o.d(U, {m: () => f});
    var p = o(73307), r = o(5e3);
    let f = (() => {
        class e {
            constructor(g) {
                this.storageService = g, this.logsClearedKey = "logsCleared", this.fileNames = ["main.log", "main.old.log", "renderer.log", "renderer.old.log"]
            }

            shouldClearLogs() {
                return !this.storageService.get([this.logsClearedKey])
            }

            clearLogs() {
                ("win32" === window.bridge.platform() ? this.windowsPaths() : this.macPaths()).forEach(h => {
                    this.fileNames.forEach(i => {
                        const t = `${h}${i}`;
                        window.bridge.exists(t) && window.bridge.deleteFile(t)
                    })
                }), this.storageService.set([this.logsClearedKey], !0)
            }

            windowsPaths() {
                return [`${window.bridge.homeDirectory()}\\AppData\\Roaming\\immutable-launcher\\logs\\`, `${window.bridge.homeDirectory()}\\AppData\\Roaming\\apollo-launcher\\logs\\`]
            }

            macPaths() {
                return [`${window.bridge.homeDirectory()}/Library/Logs/immutable-launcher/`, `${window.bridge.homeDirectory()}/Library/Logs/apollo-launcher/`]
            }
        }

        return e.\u0275fac = function (g) {
            return new (g || e)(r.LFG(p.qy))
        }, e.\u0275prov = r.Yz7({token: e, factory: e.\u0275fac, providedIn: "root"}), e
    })()
}, 52492
:
(te, U, o) => {
    "use strict";
    o.d(U, {e1: () => p, Cg: () => r});
    var p = (() => {
        return (e = p || (p = {}))[e.Center = 0] = "Center", e[e.Custom = 1] = "Custom", p;
        var e
    })(), r = (() => {
        return (e = r || (r = {}))[e.Fullscreen = 0] = "Fullscreen", e[e.Workarea = 1] = "Workarea", e[e.StretchableFullscreen = 2] = "StretchableFullscreen", e[e.StretchableWorkarea = 3] = "StretchableWorkarea", r;
        var e
    })()
}, 66088
:
(te, U, o) => {
    "use strict";
    o.d(U, {Z: () => $});
    var p = o(8929), r = o(2994), f = o(36622), e = o(5e3), _ = o(22313), g = o(69808);
    const h = ["modalHolder"];

    function i(w, D) {
    }

    let t = (() => {
        class w {
            constructor(m, A, S) {
                this.resolver = m, this.sanitizer = A, this.el = S, this.blurredBackground = !1, this.canCloseFromInside = !1, this.canCloseFromOutside = !0, this.closeModal$ = new e.vpe
            }

            get myStyle() {
                return this.sanitizer.bypassSecurityTrustStyle(`\n      z-index: ${this.styles.zIndex};\n    `)
            }

            ngOnInit() {
                const m = this.resolver.resolveComponentFactory(this.component);
                this.componentRef = this.modalHolder.createComponent(m, 0, this.modalHolder.injector, [[]]), Object.assign(this.componentRef.instance, this.inputs), this.calculateLocation()
            }

            ngOnDestroy() {
                this.componentRef = null
            }

            calculateLocation() {
            }

            closeModal(m) {
                m && !this.canCloseFromInside || !m && this.canCloseFromOutside && this.closeModal$.emit()
            }

            onClickedOutside(m) {
            }
        }

        return w.\u0275fac = function (m) {
            return new (m || w)(e.Y36(e._Vd), e.Y36(_.H7), e.Y36(e.SBq))
        }, w.\u0275cmp = e.Xpm({
            type: w,
            selectors: [["app-modal"]],
            viewQuery: function (m, A) {
                if (1 & m && e.Gf(h, 7, e.s_b), 2 & m) {
                    let S;
                    e.iGM(S = e.CRH()) && (A.modalHolder = S.first)
                }
            },
            hostVars: 2,
            hostBindings: function (m, A) {
                2 & m && e.Akn(A.myStyle)
            },
            inputs: {
                component: "component",
                inputs: "inputs",
                styles: "styles",
                blurredBackground: "blurredBackground",
                canCloseFromInside: "canCloseFromInside",
                canCloseFromOutside: "canCloseFromOutside"
            },
            outputs: {closeModal$: "closeModal$"},
            decls: 4,
            vars: 1,
            consts: [[1, "bgOverlay", 3, "click"], [1, "modalContentContainer", 3, "ngStyle", "click"], ["modalHolder", ""]],
            template: function (m, A) {
                1 & m && (e.TgZ(0, "a", 0), e.NdJ("click", function () {
                    return A.closeModal(!1)
                }), e.qZA(), e.TgZ(1, "div", 1), e.NdJ("click", function () {
                    return A.closeModal(!0)
                }), e.YNc(2, i, 0, 0, "ng-template", null, 2, e.W1O), e.qZA()), 2 & m && (e.xp6(1), e.Q6J("ngStyle", A.styles))
            },
            directives: [g.PC],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;display:block}.bgOverlay[_ngcontent-%COMP%]{position:absolute;right:0;left:0;top:0;bottom:0;background-color:#0c1620;opacity:.7}.bgOverlay--transparent[_ngcontent-%COMP%]{background:transparent}.modalContentContainer[_ngcontent-%COMP%]{position:absolute;top:0;left:0;opacity:1}"]
        }), w
    })();
    var n = o(6674), C = o(44416), k = o(52492);
    let $ = (() => {
        class w {
            constructor(m, A, S, y, I) {
                this.resolver = m, this.appRef = A, this.utilsService = y, this.resizeService = I, this._modalDestroy$ = new p.xQ, this.modalsStack = [], this.modalFactory = this.resolver.resolveComponentFactory(t), this.renderer = S.createRenderer(null, null), this.resizeService.viewPortUnits$.pipe((0, r.b)(({vh: s}) => this.vh = s)).subscribe()
            }

            setModalVCRs(m, A) {
                this.workareaVcr = m, this.fullscreenVcr = A
            }

            get modalDestroy$() {
                return this._modalDestroy$.asObservable()
            }

            createModal(m, A = {}, {
                canCloseFromInside: S = !1,
                canCloseFromOutside: y = !0,
                blurredBackground: I = !1,
                position: s = k.e1.Center,
                customPosition: b = null,
                size: E = k.Cg.StretchableFullscreen
            } = {}, R) {
                const X = R || this.getVCR(E), pe = this.getModalHolderStyles(s, E, b);
                0 === this.modalsStack.length && (this.renderer.addClass(X.element.nativeElement.parentElement, "addModalBlurBackground"), this.modalsStack.push({
                    vcr: X,
                    nativeElement: X.element.nativeElement,
                    parentElement: X.element.nativeElement.parentElement
                }));
                const re = this.createModalComponent(m, A, X, pe, I, S, y);
                this.modalsStack.push({
                    component: re,
                    vcr: X,
                    nativeElement: re.instance.el.nativeElement
                }), this.updateBlur()
            }

            getVCR(m) {
                switch (m) {
                    case k.Cg.Fullscreen:
                    case k.Cg.StretchableFullscreen:
                        return this.fullscreenVcr || this.appRef.components[0].instance.vcr;
                    case k.Cg.Workarea:
                    case k.Cg.StretchableWorkarea:
                        return this.workareaVcr
                }
            }

            getModalHolderStyles(m, A, S) {
                if (m === k.e1.Custom) {
                    (null === S || 2 !== S.split(":").length) && console.error("Provide valid customPosition (SELECTOR:POSITION ex. '#elementId:left')");
                    const y = S.split(":");
                    return Object.assign(Object.assign({}, this.getRelativePos(y[0], y[1])), {zIndex: A === k.Cg.Workarea ? f.Rl.measurements.headerBarZLevel - 1 : f.Rl.measurements.modalLayerZLevel})
                }
                return Object.assign(Object.assign({}, this.getBoundaries(m, A)), {zIndex: A === k.Cg.Workarea ? f.Rl.measurements.headerBarZLevel - 1 : f.Rl.measurements.modalLayerZLevel})
            }

            destroyTopModal() {
                if (0 === this.modalsStack.length) return;
                const m = this.modalsStack.pop();
                this._modalDestroy$.next(m.component.componentType), m.component && m.component.destroy(), m.component = null, this.updateBlur(), 1 === this.modalsStack.length && (this.renderer.removeClass(this.modalsStack[0].parentElement, "addModalBlurBackground"), this.modalsStack = [])
            }

            destroyModalsStack() {
                0 !== this.modalsStack.length && (this.modalsStack.filter(m => m.component).forEach(m => {
                    this._modalDestroy$.next(m.component.componentType), m.component.destroy(), m.component = null, m.nativeElement = null
                }), this.updateBlur(), this.renderer.removeClass(this.modalsStack[0].parentElement, "addModalBlurBackground"), this.modalsStack = [])
            }

            createModalComponent(m, A, S, y, I, s, b) {
                const E = S.createComponent(this.modalFactory, this.modalsStack.length - 1, S.injector, [[]]);
                return Object.assign(E.instance, {
                    styles: y,
                    blurredBackground: I,
                    canCloseFromInside: s,
                    canCloseFromOutside: b,
                    component: m,
                    inputs: A
                }), E.instance.closeModal$.subscribe(() => {
                    S.remove(), this.destroyTopModal()
                }), E
            }

            getBoundaries(m, A) {
                if (m === k.e1.Center) {
                    if (A === k.Cg.StretchableFullscreen || A === k.Cg.StretchableWorkarea) return {
                        "top.%": 50,
                        "left.%": 50,
                        transform: "translate(-50%, -50%)"
                    };
                    if (A === k.Cg.Fullscreen || A === k.Cg.Workarea) return {top: 0, bottom: 0, left: 0, right: 0};
                    console.error(`Size '${A}' not supported`)
                } else console.error(`Position '${m}' not supported`)
            }

            getRelativePos(m, A) {
                const y = window.document.querySelector(m).getBoundingClientRect();
                switch (A) {
                    case"left":
                        return {
                            "right.px": document.body.clientWidth - y.right + y.width + 15,
                            "top.px": y.top + y.height / 2,
                            transform: "translateY(-50%)"
                        };
                    case"right":
                        return {"left.px": y.right + 15, "top.px": y.top + y.height / 2, transform: "translateY(-50%)"};
                    case"top":
                        return {
                            top: "unset",
                            "bottom.px": document.body.clientHeight - y.bottom + y.height + 15,
                            "left.px": y.left + y.width / 2,
                            transform: "translateX(-50%)"
                        };
                    case"bottom":
                        return {"top.px": y.bottom + 15, "left.px": y.left + y.width / 2, transform: "translateX(-50%)"}
                }
                return {"top.%": 50, "left.%": 50, transform: "translate(-50%, -50%)"}
            }

            updateBlur() {
                if (this.modalsStack.filter(m => !!m.nativeElement).forEach(m => this.setBlurredBackground(m.nativeElement, !1)), this.modalsStack.length > 1) {
                    const m = this.utilsService.findLastIndex(this.modalsStack, A => A.component && A.component.instance && A.component.instance.blurredBackground);
                    m > 0 && this.setBlurredBackground(this.modalsStack[m].nativeElement, !0)
                }
            }

            setBlurredBackground(m, A) {
                let S;
                m instanceof Comment ? S = m.previousSibling : (S = m, this.renderer.setStyle(m, "backgroundColor", A ? "rgba(29,47,65, 0.6)" : "unset")), this.renderer.setStyle(S, "backdrop-filter", A ? `blur(${1.5 * this.vh}px)` : "none")
            }
        }

        return w.\u0275fac = function (m) {
            return new (m || w)(e.LFG(e._Vd), e.LFG(e.z2F), e.LFG(e.FYo), e.LFG(C.F), e.LFG(n._))
        }, w.\u0275prov = e.Yz7({token: w, factory: w.\u0275fac}), w
    })()
}, 77391
:
(te, U, o) => {
    "use strict";
    o.d(U, {f: () => f});
    var p = o(591), r = o(5e3);
    let f = (() => {
        class e {
            constructor() {
                this._currentRoute$ = new p.X("")
            }

            get currentRoute$() {
                return this._currentRoute$.asObservable()
            }

            updateCurrentRoute(g) {
                this._currentRoute$.next(g)
            }
        }

        return e.\u0275fac = function (g) {
            return new (g || e)
        }, e.\u0275prov = r.Yz7({token: e, factory: e.\u0275fac, providedIn: "root"}), e
    })()
}, 236
:
(te, U, o) => {
    "use strict";
    o.d(U, {u: () => r});
    var p = o(5e3);
    let r = (() => {
        class f {
            transform(_) {
                const g = Math.floor(_ / 60);
                return g.toString().padStart(1, "0") + ":" + Math.floor(_ - 60 * g).toString().padStart(2, "0")
            }
        }

        return f.\u0275fac = function (_) {
            return new (_ || f)
        }, f.\u0275pipe = p.Yjl({name: "duration", type: f, pure: !0}), f
    })()
}, 83035
:
(te, U, o) => {
    "use strict";
    o.d(U, {g: () => i});
    var p = o(59633), f = o(591), e = o(1059), _ = o(92198), g = o(55778), h = o(5e3);
    let i = (() => {
        class t {
            constructor(C, k) {
                this.analyticsService = C, this.akumaService = k, this.dataStore = {activeQueues: []}, this._activeQueues$ = new f.X([]), this._queueStatus$ = new f.X(null)
            }

            get queueStatus$() {
                return this._queueStatus$.asObservable()
            }

            get activeQueues$() {
                return this._activeQueues$.asObservable()
            }

            _emitQueues() {
                this._activeQueues$.next(Object.assign({}, this.dataStore).activeQueues)
            }

            enqueue(C) {
                this.dataStore.activeQueues.push(C), this._emitQueues()
            }

            dequeue(C) {
                this.dataStore.activeQueues = this.dataStore.activeQueues.filter(k => k !== C), this._emitQueues()
            }

            start(C, k, $) {
                const w = {game_id: C, mode: k, startTimestamp: (new Date).getTime(), status: "active", params: $};
                return this.enqueue(w), this._queueStatus$.next(w), this.logQueueStarted(w), this.getQueueSubset(m => m === w).pipe((0, e.O)(w))
            }

            cancel(C) {
                this.dataStore.activeQueues = this.dataStore.activeQueues.filter(k => k && (k.game_id !== C.game_id || k.mode.id !== C.mode.id)), C.status = "cancelled", C.startTimestamp = null, this._queueStatus$.next(C), this._emitQueues(), this.logQueueCancelled(C)
            }

            complete(C) {
                this.dataStore.activeQueues = this.dataStore.activeQueues.filter(k => k && (k.game_id !== C.game_id || k.mode.id !== C.mode.id)), C.status = "completed", C.startTimestamp = null, this._queueStatus$.next(C), this._emitQueues(), this.logQueueCompleted(C)
            }

            stopAllQueues() {
                this.dataStore.activeQueues.forEach(C => this.cancel(C))
            }

            getQueue(C, k) {
                return this.getQueueSubset($ => $ && $.game_id === C && $.mode.id === k)
            }

            getGameQueues(C) {
                return this.getQueueSubset(k => k && k.game_id === C)
            }

            getQueueSubset(C) {
                return this.queueStatus$.pipe((0, _.h)(k => C(k)))
            }

            logQueueCancelled(C) {
                "function" == typeof gtag && gtag("event", "failed", {event_category: "queue"});
                const k = {
                    game_id: C.game_id,
                    mode_id: C.mode.id,
                    mode_name: C.mode.name,
                    button_state: "queue_cancelled"
                };
                this.analyticsService.postEvent(new p.Queue.Cancelled.Event(k)), this.akumaService.postEvent("Flow", "_queue_failed", k), this.akumaService.postEvent("Control", "arenaHomeGameStartBtn_pressed", k)
            }

            logQueueCompleted(C) {
                "function" == typeof gtag && gtag("event", "succeeded", {event_category: "queue"});
                const k = {
                    game_id: C.game_id,
                    mode_id: C.mode.id,
                    mode_name: C.mode.name,
                    button_state: "queue_completed"
                };
                this.analyticsService.postEvent(new p.Queue.Completed.Event(k)), this.akumaService.postEvent("Flow", "_queue_succeeded", k)
            }

            logQueueStarted(C) {
                "function" == typeof gtag && gtag("event", "started", {event_category: "queue"});
                const k = {
                    game_id: C.game_id,
                    mode_id: C.mode.id,
                    mode_name: C.mode.name,
                    button_state: "queue_started"
                };
                this.analyticsService.postEvent(new p.Queue.Started.Event(k)), this.akumaService.postEvent("Flow", "_queue_started", k), this.akumaService.postEvent("Control", "arenaHomeGameStartBtn_pressed", k)
            }
        }

        return t.\u0275fac = function (C) {
            return new (C || t)(h.LFG(g.yD), h.LFG(g.jt))
        }, t.\u0275prov = h.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
    })()
}, 6674
:
(te, U, o) => {
    "use strict";
    o.d(U, {_: () => C});
    var p = o(8929), r = o(591), f = o(23753), e = o(80013), _ = o(92198), g = o(2994), h = o(7625), i = o(44416),
        t = o(73307), n = o(5e3);
    let C = (() => {
        class k {
            constructor(w, D, m) {
                this.utils = w, this.zone = D, this.storage = m, this.unsubscribe = new p.xQ, this._windowSize$ = new r.X({
                    width: 0,
                    height: 0
                }), this._viewPortUnits$ = new r.X({
                    vh: 0,
                    vw: 0
                }), this.ClientSize = "CLIENT_SIZE", this.updateBridgeClientViewport(), this.watchWindowResize()
            }

            get windowSize$() {
                return this._windowSize$.asObservable()
            }

            get viewPortUnits$() {
                return this._viewPortUnits$.asObservable()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            onResize(w) {
                this._windowSize$.next({width: w.target.innerWidth, height: w.target.innerHeight})
            }

            setViewPortUnits({vh: w, vw: D}) {
                this._viewPortUnits$.next({vw: D, vh: w})
            }

            watchWindowResize() {
                (0, f.R)(window, "resize").pipe((0, e.b)(100)).subscribe(w => this.onResize(w))
            }

            watchClientResize() {
                this._currentDisplaySize = window.bridge.getDisplaySize(), window.bridge.displayMetricsChange$.pipe(this.utils.enterZone(this.zone), (0, _.h)(w => this.displayMetricsDiffer(w)), (0, g.b)(w => {
                    this._currentDisplaySize = w, this.resizeClient(this.currentClientSize)
                })).subscribe()
            }

            get currentClientSize() {
                return this.storage.get([this.ClientSize]) || "medium"
            }

            resizeClient(w) {
                const D = k.clientSizes.find(A => A.name === w);
                if (!D) return void console.error(`Client Size: ${w}, not supported`);
                this.storage.set([this.ClientSize], D.name);
                const m = this.calcClientSize(D.displayPortion, this._currentDisplaySize.width);
                window.bridge.setClientSize(m.width, m.height, !0, !0)
            }

            calcClientSize(w, D) {
                const m = Math.floor(D * w);
                return {width: m, height: Math.floor(9 * m / 16)}
            }

            displayMetricsDiffer(w) {
                return w.width !== this._currentDisplaySize.width && w.height !== this._currentDisplaySize.height
            }

            updateBridgeClientViewport() {
                this.viewPortUnits$.pipe((0, _.h)(() => "function" == typeof window.bridge.updateViewportUnits), (0, g.b)(w => window.bridge.updateViewportUnits(w)), (0, h.R)(this.unsubscribe)).subscribe()
            }
        }

        return k.clientSizes = [{name: "small", displayPortion: .5}, {
            name: "medium",
            displayPortion: .75
        }, {name: "large", displayPortion: .85}], k.\u0275fac = function (w) {
            return new (w || k)(n.LFG(i.F), n.LFG(n.R0b), n.LFG(t.qy))
        }, k.\u0275prov = n.Yz7({token: k, factory: k.\u0275fac}), k
    })()
}, 5969
:
(te, U, o) => {
    "use strict";
    o.d(U, {g: () => f});
    var p = o(591), r = o(5e3);
    let f = (() => {
        class e {
            constructor() {
                this._openSettings$ = new p.X(null)
            }

            get openSettings$() {
                return this._openSettings$.asObservable()
            }

            openSettings(g = "immutable") {
                this._openSettings$.next(g)
            }

            markSettingsAsOpen() {
                this._openSettings$.next(null)
            }
        }

        return e.\u0275fac = function (g) {
            return new (g || e)
        }, e.\u0275prov = r.Yz7({token: e, factory: e.\u0275fac}), e
    })()
}, 44416
:
(te, U, o) => {
    "use strict";
    o.d(U, {F: () => g});
    var p = o(52886), r = o(55778), f = o(56498), e = o(57674), _ = o(5e3);
    let g = (() => {
        class h {
            constructor(t) {
                this.filterService = t
            }

            markFormGroupTouched(t) {
                Object.values(t.controls).forEach(n => {
                    n.markAsTouched(), n.controls && this.markFormGroupTouched(n)
                })
            }

            getRandomInt(t, n) {
                return t = Math.ceil(t), n = Math.floor(n), Math.floor(Math.random() * (n - t + 1)) + t
            }

            arrayToMap(t, n, C) {
                return t ? t.reduce((k, $) => (k[n($)] = C($), k), {}) : {}
            }

            groupBy(t, n) {
                const C = new Map;
                return t.forEach(k => {
                    const $ = n(k), w = C.get($);
                    w ? w.push(k) : C.set($, [k])
                }), C
            }

            convertIdsToCards(t, n, C) {
                const k = [];
                for (const $ in n) if (n[$]) {
                    const w = C.get(parseInt($));
                    n[$].forEach(D => {
                        if (-1 !== t.indexOf(D.id)) {
                            const m = new p.Zb(D.id, parseInt($), D.q, w, D.status);
                            k.push(m)
                        }
                    })
                }
                return k
            }

            diff(t, n) {
                return [...t.filter($ => !n.includes($)), ...n.filter($ => !t.includes($))]
            }

            enterZone(t) {
                return n => new f.y(C => n.subscribe({
                    next(k) {
                        t.run(() => C.next(k))
                    }, error(k) {
                        C.error(k)
                    }, complete() {
                        C.complete()
                    }
                }))
            }

            findLastIndex(t, n) {
                const C = t.slice().reverse().findIndex(n);
                return C >= 0 ? t.length - 1 - C : C
            }

            hashCode(t) {
                let C, k, n = 0;
                if (0 === t.length) return n;
                for (C = 0; C < t.length; C++) k = t.charCodeAt(C), n = (n << 5) - n + k, n |= 0;
                return n
            }

            chunk(t, n) {
                const C = [];
                for (; t.length;) C.push(t.splice(0, n));
                return C
            }

            calcTopCards(t, n, C) {
                const k = this.filterService.getSort(e.PE.AscScarcity, t), $ = [...n].sort(k),
                    w = Math.min(C, $.length);
                return $.slice(0, w)
            }

            toISODateString(t) {
                function n(C) {
                    return C < 10 ? "0" + C : C
                }

                return t.getUTCFullYear() + "-" + n(t.getUTCMonth() + 1) + "-" + n(t.getUTCDate()) + "T" + n(t.getUTCHours()) + ":" + n(t.getUTCMinutes()) + ":" + n(t.getUTCSeconds()) + "." + n(t.getUTCMilliseconds()) + "Z"
            }

            calculateContentHeight(t, n) {
                let C = t.style.height, k = t.offsetHeight, $ = t.scrollHeight, w = t.style.overflow;
                if (!(k >= $)) return $;
                if (t.style.height = k + n + "px", t.style.overflow = "hidden", $ < t.scrollHeight) {
                    for (; t.offsetHeight >= t.scrollHeight;) t.style.height = (k -= n) + "px";
                    for (; t.offsetHeight < t.scrollHeight;) t.style.height = k++ + "px";
                    return t.style.height = C, t.style.overflow = w, k
                }
            }

            dictionaryToMap(t) {
                return Object.entries(t).map(([n, C]) => ({
                    key: n,
                    val: C
                })).reduce((n, C) => n.set(Number(C.key), C.val), new Map)
            }

            adjustToServerTime(t) {
                const n = 1e3 * t, k = (new Date).getTime() + n;
                return new Date(k).toISOString()
            }
        }

        return h.\u0275fac = function (t) {
            return new (t || h)(_.LFG(r.iZ))
        }, h.\u0275prov = _.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
    })()
}, 49757
:
(te, U, o) => {
    "use strict";
    o.d(U, {m: () => s});
    var p = o(45210), r = o(69808), f = o(93075), e = o(73307), _ = o(51649), g = o(5e3);
    let h = (() => {
        class b {
        }

        return b.\u0275fac = function (R) {
            return new (R || b)
        }, b.\u0275mod = g.oAB({type: b}), b.\u0275inj = g.cJS({
            providers: [{provide: _.R, useClass: _.E}],
            imports: [[r.ez]]
        }), b
    })();
    var i = o(55778), t = o(43991);
    let n = (() => {
        class b {
        }

        return b.\u0275fac = function (R) {
            return new (R || b)
        }, b.\u0275mod = g.oAB({type: b}), b.\u0275inj = g.cJS({providers: [t.z], imports: [[r.ez, i.xd]]}), b
    })();
    var C = o(66773), k = o(69878), $ = o(23569), w = o(79763), D = o(66088), m = o(236), A = o(18464);
    let y = (() => {
        class b {
            transform(R, X) {
                const pe = new A.BigNumber(10).pow(18);
                return R ? new A.BigNumber(R).div(pe) : null
            }
        }

        return b.\u0275fac = function (R) {
            return new (R || b)
        }, b.\u0275pipe = g.Yjl({name: "WeiToEth", type: b, pure: !0}), b
    })();
    var I = o(5969);
    let s = (() => {
        class b {
            static forRoot() {
                return {ngModule: b, providers: [D.Z, w.hM, m.u, y, i.$c, $.d, I.g, {provide: e.Ho, useValue: k.N}]}
            }
        }

        return b.\u0275fac = function (R) {
            return new (R || b)
        }, b.\u0275mod = g.oAB({type: b}), b.\u0275inj = g.cJS({imports: [[r.ez, p.aw, f.u5, f.UX, C.W2, n, i.xd, h], p.aw, f.UX, C.W2, i.xd, h]}), b
    })()
}, 69878
:
(te, U, o) => {
    "use strict";
    o.d(U, {N: () => D});
    var p = o(55778), r = o(43991), f = o(63411), e = o(73307), _ = o(40886), g = o(26959), h = o(45425), i = o(5254),
        t = o(68896), n = o(18499), C = o(24850), k = o(5e3);
    const D = {
        production: !0,
        appConfig: "./assets/config/appConfig.prod.json",
        appConfigDev: "./assets/config/appConfig.dev.json",
        facebookId: "1069247517330-3up4o81s0idk15isj1j884v7i4kng8l9.apps.googleusercontent.com",
        googleId: "329849180933335",
        ipApiKey: "MaCXYSWqarQdyw4",
        wyreId: "AC_D3GURN789ZF",
        tickerHost: "https://api.coinmarketcap.com/v1/ticker",
        analyticsHost: "https://ingest.immutable.com/",
        immutableWalletPageURL: "https://landing.immutable.com/wallet",
        envClasses: {
            authService: f.e, ethService: (() => {
                class m {
                    constructor(S) {
                        this.environment = S, this.initHTTPProvider()
                    }

                    initHTTPProvider() {
                        this._httpProvider = this.environment.production ? new g.J : new g.J("ropsten")
                    }

                    get httpProvider() {
                        return this._httpProvider
                    }

                    getTransactionReceipt$(S) {
                        return (0, i.D)(this._httpProvider.getTransactionReceipt(S))
                    }

                    getBalance(S) {
                        return (0, i.D)(this._httpProvider.getBalance(S))
                    }

                    getTransaction$(S) {
                        return (0, i.D)(this.provider.getTransaction(S))
                    }

                    getWETHBalance(S) {
                        let y, I;
                        return y = new h.ethers.providers.InfuraProvider(this.environment.production ? _.t : _.Y), I = this.environment.production ? "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2" : "0xc778417e063141139fce010982780140aa0cd5ab", (0, i.D)(n.WETH9.at(y, I).balanceOf(S)).pipe((0, C.U)(s => s.toString()))
                    }

                    getGasPrice() {
                        return (0, i.D)(this.provider ? this.provider.getGasPrice() : (0, t.c)())
                    }
                }

                return m.\u0275fac = function (S) {
                    return new (S || m)(k.LFG(e.Ho))
                }, m.\u0275prov = k.Yz7({token: m, factory: m.\u0275fac}), m
            })(), cardsService: p.dK, storageService: (() => {
                class m {
                    constructor() {
                    }

                    set(S, y) {
                        return null != y && window.bridge.set(S, y)
                    }

                    get(S) {
                        return window.bridge.get(S)
                    }

                    delete(S) {
                        return window.bridge.delete(S)
                    }
                }

                return m.\u0275fac = function (S) {
                    return new (S || m)
                }, m.\u0275prov = k.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
            })(), authHostService: p.f1, assetsService: r.z, audioService: p.QF, featureFlagsService: p.ai
        },
        clientType: "desktop",
        guWebsite: "https://godsunchained.com",
        guManageWalletsURL: "https://godsunchained.com/manage-wallets",
        guRegisterURL: "https://godsunchained.com/account/register",
        GUPropertyValidators: {
            card: "0x200e6fb8febf5355596ccdefe1247e92382cfcfb",
            board: "0x81428219ba5faee2afbe1dbe26ba5e47aab1ed45",
            trinket: "0xc50fd991bc8008928853048d0a4f9fecf3a5e8a3",
            noprop: "0xfd75675db386450d42e3968f405d34dce317adb8"
        },
        recaptchaPublicSiteKeyV2: "6LeBjfcUAAAAAMnGQNtQk2aQZ1W3pENSCbOPfp3g",
        recaptchaPublicSiteKeyV3: "6LcdouAUAAAAABwriEGDpNUrkXoIPbSSVVB2WP2f",
        sentry: {
            dsn: "https://6f5677b3a54f433bbb68ca9f275ebd2a@o1090070.ingest.sentry.io/6112682",
            tracesSampleRate: .1
        },
        purchasingUiHost: "https://purchasing-ui.prod.godsunchained.com",
        launchDarklyKey: "60135261d87a7e09e20a42fe",
        immutableXMarketplaceUrl: "https://market.x.immutable.com",
        immutableXMarketplaceUrlGUCollection: "https://market.x.immutable.com/assets?collection=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c",
        GUCollectioimmutableXMarketplaceUrlGUInventory: "https://market.x.immutable.com/inventory/0xacb3c6a43d15b907e8433077b6d38ae40936fe2c"
    }
}, 11978
:
(te, U, o) => {
    "use strict";
    var p = o(22313), r = o(8929), f = o(591), e = o(21086), _ = o(5254);

    class i {
        constructor(x, l, M, F) {
            this.remote = x, this.directory = l, this.filename = M
        }

        start() {
        }

        pause() {
        }

        resume() {
        }

        finish() {
        }

        cancel() {
        }

        download(x) {
            return (0, e.of)()
        }

        dummyDownload(x) {
            return (0, e.of)()
        }
    }

    class k {
        constructor() {
            this.log = void 0, this.warn = void 0, this.error = void 0, this.initLogger()
        }

        initLogger() {
        }
    }

    k.consoleLog = console.log, k.consoleError = console.error, k.consoleWarn = console.warn;
    var $ = o(35736);

    class D {
        constructor(x = 1) {
            this.currentRequests = [], this.runningRequests = 0, this.maxConcurrentRequests = x
        }

        callFunction(x, ...l) {
            return x.bind(this, l), console.log("callFunction ---- ", x.name, l), new Promise((M, F) => {
                this.currentRequests.push({resolve: M, reject: F, fnToCall: x, args: l}), this.tryNext()
            })
        }

        tryNext() {
            if (this.currentRequests.length && this.runningRequests < this.maxConcurrentRequests) {
                const {resolve: x, reject: l, fnToCall: M, args: F} = this.currentRequests.shift();
                this.runningRequests++, M(...F).then(Ee => x(Ee)).catch(Ee => l(Ee)).finally(() => {
                    this.runningRequests--, this.tryNext()
                })
            }
        }
    }

    function m(a) {
        return a.join("-")
    }

    function A(a) {
        return "object" == typeof navigator && "string" == typeof navigator.userAgent && navigator.userAgent.indexOf(a) >= 0
    }

    !window.bridge && (!A("Electron") || A("Cypress")) && (window.bridge = new class {
        constructor() {
            this.logger = new k, this.variant = "browser", this.progress = new r.xQ, this.appsModalExisting$ = new f.X(!1), this.displayMetricsChange$ = new r.xQ, this.isInGame$ = new f.X(!1), this.protocolRedirect$ = new f.X(null), this.watchForDisplayChanges(), this.watchInGameStatus(), this.checkAdditionalArgs(), this.watchForAppsModal(), this.watchProtocolRedirect()
        }

        getDownloadProgress$() {
            return (0, e.of)()
        }

        watchProtocolRedirect() {
            return null
        }

        cancelDownload() {
            console.log("Preload->cancelDownload()"), this.gameDownload && this.gameDownload.cancel()
        }

        pauseDownload() {
            console.log("Preload->pauseDownload()"), this.gameDownload && this.gameDownload.pause()
        }

        resumeDownload() {
            console.log("Preload->resumeDownload()"), this.gameDownload && this.gameDownload.resume()
        }

        openDialog(x, l) {
        }

        isRunning(x) {
            return !0
        }

        extract(x, l, M) {
        }

        download(x, l, M, F) {
            return console.log("Preload->download(urlr, location, filename)", x, l, M), this.gameDownload = new i(x, l, M), this.progress = new r.xQ, (0, _.D)(this.gameDownload.download({
                authToken: F,
                onStart: le => {
                    console.log("Preload->download()->onStart", le)
                },
                onProgress: le => {
                    null != window && this.progress.next(le)
                },
                onEnd: le => {
                    this.progress.complete()
                }
            }))
        }

        downloadAssets(x, l) {
            console.log("Preload->downloadAssets(WithOutSempahore)", x);
            let M = [];
            return M = x.map((F, le) => new i(F.url, l + F.location, F.file_name)), M
        }

        downloadAssetsWithSempahore(x, l, M, F, le) {
            console.log("Preload->downloadAssetsWithSempahore()", x);
            const Ee = new D(le);
            return x.map((we, De) => {
                const lt = {
                    authToken: F, onStart: ue => {
                    }, onProgress: ue => {
                        M[De].next(ue)
                    }, onEnd: ue => {
                        M[De].complete()
                    }
                };
                console.log(we.url, l + we.location, we.file_name);
                const ct = new i(we.url, l + we.location, we.file_name), fe = ct.download.bind(ct, lt);
                return (0, _.D)(Ee.callFunction(fe, lt))
            })
        }

        onQuit(x) {
        }

        focus() {
        }

        deleteFile(x) {
        }

        chmod(x, l) {
        }

        execute(x, l) {
            return null
        }

        executeArgs(x, l, M) {
            return null
        }

        clearCache() {
        }

        exists(x) {
            return !0
        }

        homeDirectory() {
            return ""
        }

        platform() {
            return ""
        }

        createServer(x, l) {
        }

        serverActive() {
            return null
        }

        closeServer() {
        }

        set(x, l) {
            window.sessionStorage.setItem(m(x), JSON.stringify(l))
        }

        get(x) {
            const l = window.sessionStorage.getItem(m(x));
            return null !== l ? JSON.parse(l) : null
        }

        delete(x) {
            window.sessionStorage.removeItem(m(x))
        }

        minimizeWindow() {
        }

        maximizeWindow() {
        }

        closeWindow() {
        }

        setFullscreen(x) {
        }

        getDisplaySize() {
            return {height: 0, width: 0}
        }

        setClientSize(x, l, M = !1, F = !1) {
        }

        watchForDisplayChanges() {
        }

        watchInGameStatus() {
        }

        watchForAppsModal() {
        }

        setInGameStatus(x) {
        }

        clearGUAssets(x) {
        }

        checkAdditionalArgs() {
            const x = $.argv.map(l => l.split("=")).reduce((l, [M, F]) => (l[M] = F, l), {});
            x["--auth-id"] && x["--auth-access"] && (this.authId = +x["--auth-id"], this.authAccess = x["--auth-access"]), x["--session-ticket"] && (this.sessionTicket = x["--session-ticket"]), x["--vw"] && x["--vh"] && (this.vw = x["--vw"], this.vh = x["--vh"])
        }

        updateAuthPair(x) {
        }

        updateSession(x) {
        }

        updateViewportUnits(x) {
        }

        setClientPosition(x, l, M = !1) {
        }

        toggleFullscreen() {
        }

        createClient(x, l) {
            return {
                on: (M, F) => {
                }, send: (M, F) => {
                }, destroy: () => {
                }, socketConnected: !1
            }
        }

        join(...x) {
        }

        version() {
        }

        launcherTarget() {
        }

        httpGet(x) {
            return (0, _.D)(fetch(x).then(l => l.json()))
        }

        httpPost(x, l) {
            return (0, e.of)()
        }
    });
    var I = o(43050), s = o(5e3);
    const b = JSON.parse('{"buildNumber":"958","branch":"master"}');
    var E = o.t(b, 2), X = (o(12751), o(53161)), pe = o(16517), re = o(32182), Ce = o(96727), Z = o(99565),
        V = o(60870), ie = o(40520), Q = o(93075), be = o(76360), G = o(73307), ae = o(38076);
    let ve = (() => {
        class a {
            constructor(l) {
                this.authService = l
            }

            init() {
                this.authService.account$.subscribe(l => {
                    l ? ae.av({id: String(l.id), username: l.username}) : ae.e(M => M.setUser(null))
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.LFG(G.mI))
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac, providedIn: "root"}), a
    })();
    var Te = o(87182), Re = o(85115), z = o(11735);
    o(57334);
    let ce = (() => {
        class a {
            serialize(l) {
                return {
                    url: l.url,
                    params: Se(l.root, M => M.params),
                    queryParams: Se(l.root, M => M.queryParams),
                    data: $e(l.root)
                }
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac}), a
    })();

    function Se(a, x) {
        if (!a) return {};
        const l = x(a), M = a.children.find(F => "primary" === F.outlet) || a.firstChild;
        return Object.assign(Object.assign({}, l), Se(M, x))
    }

    function $e(a) {
        if (!a) return {};
        const x = a.data, l = a.children.find(M => "primary" === M.outlet) || a.firstChild;
        return Object.assign(Object.assign({}, x), $e(l))
    }

    const Be = {stateKey: "router", navigationActionTiming: re.R0.PostActivation, serialzer: ce};
    (0, Ce.ZF)(Be.stateKey);
    var T = o(55778), Y = o(66773), J = o(69878), at = (o(70893), o(59633)), Ge = o(61715), Qe = o(7625), He = o(61709),
        Ze = o(27221), Ne = o(92198), Ue = o(24850), Fe = o(2994), ht = (o(36622), o(70655)), Ve = o(79763);
    let st = (() => {
        class a {
            constructor(l, M) {
                this.authHostService = l, this.gameService = M
            }

            recordActivity(l) {
                return (0, _.D)(this.getCurrentGameID()).pipe((0, He.VS)(M => this.authHostService.post("/account/" + l + "/activity", {game_id: M})))
            }

            getCurrentGameID() {
                return (0, ht.mG)(this, void 0, void 0, function* () {
                    return this.gameService.getGameId()
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.LFG(G.LI), s.LFG(Ve.hM))
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac, providedIn: "root"}), a
    })();
    o(63411);
    var ye = o(44416);
    let Pt = (() => {
        class a {
            constructor(l, M, F) {
                this.utils = l, this.zone = M, this.router = F, this._protocolPayload$ = new r.xQ, this.unsubscribe = new r.xQ
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get protocolPayload$() {
                return this._protocolPayload$.asObservable()
            }

            watchProtocol() {
                window.bridge.protocolRedirect$.pipe(this.utils.enterZone(this.zone), (0, Qe.R)(this.unsubscribe), (0, Ne.h)(l => !!l), (0, Fe.b)(({url: l}) => {
                    this.handlePayload(l), this.handleRouteChange(l)
                })).subscribe()
            }

            handlePayload(l) {
                const M = l.split("?payload=")[1];
                if (!M) return !1;
                const F = decodeURIComponent(M), le = JSON.parse(F);
                if (this._protocolPayload$.next(le), le.toString().indexOf("/game/gu/")) {
                    const Ee = le.toString();
                    this.router.navigate([Ee])
                }
            }

            handleRouteChange(l) {
                const M = l.match(/(imtbl.*):\/\/(game\/gu\/.*)/);
                if (!M) return !1;
                const F = M[2];
                F && this.router.navigate([`/${F}`])
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.LFG(ye.F), s.LFG(s.R0b), s.LFG(z.F0))
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac, providedIn: "root"}), a
    })();
    var ee = o(77391), ne = o(6674);
    const xe = ["ratioSetter"], N = ["*"];
    let j = (() => {
        class a {
            constructor(l, M) {
                this.resizeService = l, this.el = M
            }

            ngOnInit() {
                this.resizeService.windowSize$.subscribe(() => this.setCustomViewportProps()), this.setCustomViewportProps()
            }

            triggerCalcs() {
                this.setCustomViewportProps()
            }

            setCustomViewportProps() {
                const l = this.ratioSetter.nativeElement, M = .01 * l.offsetWidth, F = .01 * l.offsetHeight;
                document.documentElement.style.setProperty("--vw", `${M}px`), document.documentElement.style.setProperty("--vh", `${F}px`), this.resizeService.setViewPortUnits({
                    vw: M,
                    vh: F
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(ne._), s.Y36(s.SBq))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-auto-letterbox"]],
            viewQuery: function (l, M) {
                if (1 & l && s.Gf(xe, 7), 2 & l) {
                    let F;
                    s.iGM(F = s.CRH()) && (M.ratioSetter = F.first)
                }
            },
            ngContentSelectors: N,
            decls: 5,
            vars: 0,
            consts: [[1, "appRatioSetter"], ["ratioSetter", ""], ["src", "/assets/images/16-x-9-ratio.png", "alt", "ratio image", 1, "appRatioSetter__ratioImage", 3, "load"], [1, "innerAppContainer"]],
            template: function (l, M) {
                1 & l && (s.F$t(), s.TgZ(0, "div", 0, 1), s.TgZ(2, "img", 2), s.NdJ("load", function () {
                    return M.triggerCalcs()
                }), s.qZA(), s.TgZ(3, "div", 3), s.Hsn(4), s.qZA(), s.qZA())
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;height:100vh;width:100vw;background:#0f1b27;background-image:url(/assets/images/client-background-watermark-x2.webp);background-size:cover;background-position:center}.appRatioSetter[_ngcontent-%COMP%]{margin:auto;position:relative;width:100vw;padding-bottom:56.23%}.appRatioSetter__ratioImage[_ngcontent-%COMP%]{display:none}.innerAppContainer[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;overflow:hidden;display:flex;flex-direction:column}@media screen and (min-aspect-ratio: 1282/720){.appRatioSetter[_ngcontent-%COMP%]{height:100vh;width:auto;padding-bottom:0}.appRatioSetter__ratioImage[_ngcontent-%COMP%]{display:block;width:auto;height:100%}}"]
        }), a
    })();
    var d = o(52492), v = o(66088), L = o(41777), se = o(72986), _e = o(69808), ot = o(80013), Ye = o(40537),
        vt = o(83035);

    function Ut(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "form", 8), s.TgZ(1, "label", 9), s._uU(2, "Username"), s.qZA(), s.TgZ(3, "div", 10), s.TgZ(4, "input", 11), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().audioService.clickTinyV1.play()
            }), s.qZA(), s.TgZ(5, "gu-primary-hex-button", 12), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().updateUser()
            }), s.qZA(), s.qZA(), s.TgZ(6, "div", 13), s._uU(7, " Your username will be publicly visible. "), s.qZA(), s.qZA()
        }
        if (2 & a) {
            const l = s.oxw();
            s.Q6J("formGroup", l.formGroup), s.xp6(5), s.Q6J("text", l.updating ? "Saving" : "Save")
        }
    }

    function nt(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "gu-primary-hex-button", 14), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().logout()
            }), s.qZA()
        }
    }

    const {buildNumber: es, branch: xs} = E, jt = window.bridge && window.bridge.version ? window.bridge.version() : 0,
        Vt = window.bridge && window.bridge.launcherTarget ? window.bridge.launcherTarget() : "PROD";
    let mt = (() => {
        class a {
            constructor(l, M, F, le, Ee, me, we, De) {
                this.authService = l, this.fb = M, this.audioService = F, this.modalService = le, this.resizeService = Ee, this.utils = me, this.storage = we, this.queueService = De, this.loading = !1, this.updating = !1, this.version = jt, this.launcherTarget = Vt, this.cerberusBuildNumber = es, this.cerberusBranch = xs, this.clientSizes = ne._.clientSizes, this.volume = 0, this.volumeControl = new Q.NI(.9), this.unsubscribe = new r.xQ
            }

            ngOnInit() {
                this.anonymous || this.initUserNameForm(), this.clientSize = this.resizeService.currentClientSize, this.initVolumeControl()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initVolumeControl() {
                const l = this.storage.get(["gu-audioVolume"]);
                this.volumeControl.setValue(l), this.volumeControl.valueChanges.pipe((0, Qe.R)(this.unsubscribe), (0, ot.b)(100)).subscribe(M => this.audioService.setGlobalVolume(M))
            }

            logout() {
                this.modalService.destroyTopModal(), this.queueService.stopAllQueues(), this.authService.logout()
            }

            clearCache() {
                window.bridge.clearCache(), location.reload()
            }

            updateUser() {
                this.formGroup.invalid ? this.utils.markFormGroupTouched(this.formGroup) : this.updating || (this.updating = !0, this.authService.updateCurrentUser({username: this.formGroup.get("username").value}).pipe((0, Ye.x)(() => {
                    this.updating = !1
                })).subscribe())
            }

            updateClientSize(l) {
                this.resizeService.resizeClient(l)
            }

            initUserNameForm() {
                this.buildFormGroup(), this.loading = !0, this.authService.account$.pipe((0, Qe.R)(this.unsubscribe), (0, Fe.b)(l => this.formGroup.get("username").setValue(l.username)), (0, Ze.K)(l => (this.logout(), l)), (0, Ye.x)(() => this.loading = !1)).subscribe()
            }

            buildFormGroup() {
                this.formGroup = this.fb.group({
                    username: ["", Q.kI.required],
                    volume: [this.storage.get(["gu-audioVolume"]) || 0, Q.kI.required]
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(G.mI), s.Y36(Q.qu), s.Y36(G.pk), s.Y36(v.Z), s.Y36(ne._), s.Y36(ye.F), s.Y36(G.qy), s.Y36(vt.g))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-apollo-settings"]],
            inputs: {anonymous: "anonymous"},
            decls: 14,
            vars: 10,
            consts: [["class", "settingsForm", 3, "formGroup", 4, "ngIf"], [1, "audioControl"], [1, "audioControl__heading"], ["id", "volume", "type", "range", "min", "0", "max", "1", "step", "0.1", 1, "audioControl__rangeInput", 3, "formControl"], ["for", "#volume", 1, "audioControl__volumeLabel"], [1, "version-label"], ["size", "regular", "text", "Clear Cache", 1, "settingsForm__bottomCta", "settingsForm__bottomCta--cacheClear", 3, "click"], ["class", "settingsForm__bottomCta", "size", "regular", "text", "Logout", 3, "click", 4, "ngIf"], [1, "settingsForm", 3, "formGroup"], ["for", "usernameInput", 1, "settingsForm__label"], [1, "settingsForm__inputsRow"], ["name", "username", "type", "text", "formControlName", "username", "id", "usernameInput", "aria-describedby", "usernameHelp", 1, "settingsForm__textInput", 3, "click"], ["size", "regular", 1, "settingsForm__cta", 3, "text", "click"], ["id", "usernameHelp", 1, "settingsForm__hintText"], ["size", "regular", "text", "Logout", 1, "settingsForm__bottomCta", 3, "click"]],
            template: function (l, M) {
                1 & l && (s.YNc(0, Ut, 8, 2, "form", 0), s.TgZ(1, "div", 1), s.TgZ(2, "label", 2), s._uU(3, "Audio Volume"), s.qZA(), s._UZ(4, "input", 3), s.TgZ(5, "label", 4), s._uU(6), s.qZA(), s.qZA(), s.TgZ(7, "h5", 5), s._uU(8), s.ALo(9, "lowercase"), s.qZA(), s.TgZ(10, "h5", 5), s._uU(11), s.qZA(), s.TgZ(12, "gu-primary-hex-button", 6), s.NdJ("click", function () {
                    return M.clearCache()
                }), s.qZA(), s.YNc(13, nt, 1, 0, "gu-primary-hex-button", 7)), 2 & l && (s.Q6J("ngIf", !M.anonymous), s.xp6(4), s.Q6J("formControl", M.volumeControl), s.xp6(2), s.Oqu(M.volumeControl.value), s.xp6(2), s.AsE("Launcher Version: ", M.version, "-", s.lcZ(9, 8, M.launcherTarget), ""), s.xp6(3), s.AsE("Cerberus Version: ", M.cerberusBranch, ".", M.cerberusBuildNumber, ""), s.xp6(2), s.Q6J("ngIf", !M.anonymous))
            },
            directives: [_e.O5, Q.eT, Q.Fj, Q.JJ, Q.oH, Q._Y, Q.JL, Q.sg, Q.u],
            pipes: [_e.i8],
            styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.version-label[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%], .audioControl__heading[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.version-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.audioControl__heading[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;margin:auto}.settingsForm[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;align-self:center;width:70%}.settingsForm__inputsRow[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%}.settingsForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4);flex-grow:1;margin:0 calc(var(--vw) * 1) 0 0}.settingsForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__cta[_ngcontent-%COMP%]{min-width:calc(var(--vw) * 8);flex-grow:0}.settingsForm__hintText[_ngcontent-%COMP%]{padding-top:calc(var(--vh) * 2)}.version-label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4);text-align:center;user-select:all}.settingsForm__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);font-size:calc(var(--vh) * 1.9)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__bottomCta[_ngcontent-%COMP%]{width:70%;margin:0 auto}.settingsForm__bottomCta--cacheClear[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4);margin-bottom:calc(var(--vh) * 2)}.audioControl[_ngcontent-%COMP%]{width:70%;margin:calc(var(--vh) * 3) auto}.audioControl__volumeLabel[_ngcontent-%COMP%]{display:inline-block;position:relative;width:60px;line-height:20px;text-align:center;border-radius:3px;color:#e0c58f;padding:5px 10px;margin-left:8px}.audioControl__rangeInput[_ngcontent-%COMP%]{-webkit-appearance:none;width:calc(100% - 73px);height:10px;border-radius:5px;background:#1d2f41;outline:none;padding:0;margin:0}.audioControl__rangeInput[_ngcontent-%COMP%]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:20px;height:20px;border-radius:50%;background:#e0c58f;cursor:pointer}.audioControl__rangeInput[_ngcontent-%COMP%]:active::-webkit-slider-thumb{background:#e0c58f}.audioControl__rangeInput[_ngcontent-%COMP%]::-moz-range-thumb{width:20px;height:20px;border:0;border-radius:50%;background:#e0c58f;cursor:pointer}"]
        }), a
    })();
    var qe = o(69340);

    function Nt(a, x) {
        if (1 & a && (s.TgZ(0, "option", 12), s._uU(1), s.qZA()), 2 & a) {
            const l = x.$implicit;
            s.Q6J("ngValue", l.name), s.xp6(1), s.Oqu(l.name)
        }
    }

    function Kt(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.ynx(0), s.TgZ(1, "label", 9), s._uU(2, "Branch"), s.qZA(), s.TgZ(3, "select", 10), s.NdJ("ngModelChange", function (F) {
                return s.CHM(l), s.oxw(2).updateBranch(F, !0)
            })("click", function () {
                return s.CHM(l), s.oxw(2).playClickTinyV1()
            })("ngModelChange", function (F) {
                return s.CHM(l), s.oxw(2).branch = F
            }), s.YNc(4, Nt, 2, 2, "option", 11), s.qZA(), s.BQk()
        }
        if (2 & a) {
            const l = s.oxw(2);
            s.xp6(3), s.Q6J("ngModel", l.branch), s.xp6(1), s.Q6J("ngForOf", l.branchesExtended)
        }
    }

    function de(a, x) {
        if (1 & a && (s.ynx(0), s.TgZ(1, "label", 13), s._uU(2, "Local Version"), s.qZA(), s._UZ(3, "input", 5), s.BQk()), 2 & a) {
            const l = s.oxw(2);
            s.xp6(3), s.Q6J("value", l.local)
        }
    }

    function bt(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "form", 1), s.YNc(1, Kt, 5, 2, "ng-container", 2), s.TgZ(2, "label", 3), s._uU(3, "Installation Path"), s.qZA(), s.TgZ(4, "div", 4), s._UZ(5, "input", 5), s.TgZ(6, "gu-icon", 6), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().showDialog()
            }), s.qZA(), s.qZA(), s.YNc(7, de, 4, 1, "ng-container", 2), s.TgZ(8, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().clearVersion()
            }), s.qZA(), s.TgZ(9, "gu-primary-hex-button", 8), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().clearAssets()
            }), s.qZA(), s.qZA()
        }
        if (2 & a) {
            const l = s.oxw();
            s.xp6(1), s.Q6J("ngIf", l.branchesExtended), s.xp6(4), s.Q6J("value", l.path), s.xp6(2), s.Q6J("ngIf", l.local)
        }
    }

    let Rt = (() => {
        class a {
            constructor(l, M, F) {
                this.gameService = l, this.gameDownloadService = M, this.audioService = F, this.loaded = !1
            }

            ngOnInit() {
                !this.game || (this.branch = this.gameService.getProperty(this.game.id, "branch"), this.path = this.gameService.getInstallPath(this.game), this.version = this.gameService.getProperty(this.game.id, "version"), this.updateBranch(this.branch), this.initBranches())
            }

            initBranches() {
                this.gameService.branches$.pipe((0, He.VS)(l => (this.branchesExtended = l, !this.branch && this.branchesExtended && this.updateBranch(this.branchesExtended[0].name), this.gameDownloadService.getVersions(this.game, this.branch)))).subscribe(([l, M]) => {
                    this.local = M, this.loaded = !0
                }, () => this.loaded = !0)
            }

            updateBranch(l, M) {
                this.branch = l, this.gameService.setProperty(this.game.id, "branch", this.branch), this.gameService.refreshGameContext(), M && setTimeout(() => window.location.reload())
            }

            clearVersion() {
                this.gameService.deleteProperty(this.game.id, "version"), this.gameService.refreshGameContext(), setTimeout(() => window.location.reload())
            }

            clearAssets() {
                this.gameService.clearAssets(this.game.id)
            }

            showDialog() {
                this.playClickTinyV1(), window.bridge.openDialog({
                    properties: ["openDirectory", "createDirectory"],
                    defaultPath: this.path,
                    message: "Choose Install Directory"
                }, (l, M) => {
                    l && l.length > 0 && (this.path = l[0], this.gameService.setProperty(this.game.id, "path", this.path))
                })
            }

            playClickTinyV1() {
                this.audioService.clickTinyV1.play()
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(Ve.hM), s.Y36(qe.b5), s.Y36(G.pk))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-game-settings"]],
            inputs: {game: "game"},
            decls: 1,
            vars: 1,
            consts: [["class", "settingsForm", 4, "ngIf"], [1, "settingsForm"], [4, "ngIf"], ["for", "installpath", 1, "settingsForm__label"], [1, "settingsForm__path"], ["type", "text", "disabled", "", 1, "settingsForm__textInput", 3, "value"], ["iconLigature", "settings_cog", 1, "path-select-btn", 3, "click"], ["size", "large", "text", "Clear Version", 1, "settingsForm__cta", 3, "click"], ["size", "large", "text", "Clear Assets", 1, "settingsForm__cta", 3, "click"], ["for", "sel1", 1, "settingsForm__label"], ["name", "branch", "id", "sel1", 1, "settingsForm__select", 3, "ngModel", "ngModelChange", "click"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "settingsForm__label"]],
            template: function (l, M) {
                1 & l && s.YNc(0, bt, 10, 3, "form", 0), 2 & l && s.Q6J("ngIf", M.loaded)
            },
            directives: [_e.O5, Q._Y, Q.JL, Q.F, Q.EJ, Q.JJ, Q.On, _e.sg, Q.YN, Q.Kr],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.settingsForm__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:block;margin:auto}.settingsForm[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:60%;margin:auto}.settingsForm__path[_ngcontent-%COMP%]{display:flex}.settingsForm__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.path-select-btn[_ngcontent-%COMP%]{height:calc(var(--vh) * 5);line-height:calc(var(--vh) * 5);width:calc(var(--vh) * 5);margin-top:calc(var(--vh) * .65);background-color:#072337;border-radius:0 calc(var(--vh) * .4) calc(var(--vh) * .4) 0;cursor:pointer;border:calc(var(--vh) * .15) solid #c6a052;border-left:none;text-align:center;display:flex}.path-select-btn[_ngcontent-%COMP%]     i{margin:auto}.settingsForm__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4);margin-top:calc(var(--vh) * .65)}.settingsForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__textInput[_ngcontent-%COMP%]{flex:1;border:calc(var(--vh) * .15) solid #c6a052;border-radius:calc(var(--vh) * .4) 0 0 calc(var(--vh) * .4)}.settingsForm__cta[_ngcontent-%COMP%]{align-self:center;margin:0 auto;margin-top:calc(var(--vh) * 4)}"]
        }), a
    })(), Vs = (() => {
        class a {
            constructor() {
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-wallet-settings"]],
            decls: 9,
            vars: 0,
            consts: [["top", "2x-large", 1, "manageWalletsLink"], ["kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100"], ["both", "large"], ["kind", "small", "fillColor", "colors.light.100"], ["href", "https://godsunchained.com/manage-wallets", "target", "_blank", "backgroundFillColor", "colors.gunmetal.500", "borderColor", "colors.gunmetal.300", "borderColorHover", "colors.gunmetal.100", "fillColor", "colors.light.300", "icon", "leave_website", "leftIconPosition", "true"]],
            template: function (l, M) {
                1 & l && (s.TgZ(0, "gu-vertical-space", 0), s.TgZ(1, "gu-vertical-space"), s.TgZ(2, "gu-paragraph-text", 1), s._uU(3, " Wallet Management & Linking to Immutable X "), s.qZA(), s.qZA(), s.TgZ(4, "gu-vertical-space", 2), s.TgZ(5, "gu-paragraph-text", 3), s._uU(6, " Add, remove, or view wallets, and link your wallets to the Immutable X marketplace. "), s.qZA(), s.qZA(), s.TgZ(7, "gu-plain-square-button", 4), s._uU(8, " Go to Website "), s.qZA(), s.qZA())
            },
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settings__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.settings__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:block;margin:0 auto}.settings[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:100%;margin:auto}.settings__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.settings__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settings__cta[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);color:#affaed}.manageWalletsLink[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}"]
        }), a
    })();

    function Ks(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "div", 1), s.NdJ("click", function () {
                const le = s.CHM(l).$implicit;
                return s.oxw().selectTab(le.title, le)
            }), s._uU(1), s.qZA()
        }
        if (2 & a) {
            const l = x.$implicit, M = s.oxw();
            s.ekj("active", l.title === M.activeTab), s.xp6(1), s.hij(" ", l.title.toUpperCase(), " ")
        }
    }

    function Qt(a, x) {
        if (1 & a && s._UZ(0, "app-apollo-settings", 7), 2 & a) {
            const l = s.oxw();
            s.Q6J("anonymous", l.anonymous)
        }
    }

    function Qs(a, x) {
        if (1 & a && s._UZ(0, "app-game-settings", 8), 2 & a) {
            const l = s.oxw();
            s.Q6J("game", l.selectedGame)
        }
    }

    function Ss(a, x) {
        1 & a && s._UZ(0, "app-wallet-settings", 9)
    }

    let Je = (() => {
        class a {
            constructor(l, M, F) {
                this.gameService = l, this.audioService = M, this.authService = F, this.activeTab = "immutable", this.games = []
            }

            ngOnInit() {
                const l = this.authService.getUserId();
                l ? (this.anonymous = !1, this.gameService.getGames(l).pipe((0, se.q)(1)).subscribe(M => this.games = M.records)) : this.anonymous = !0
            }

            selectTab(l, M) {
                this.audioService.clickMediumV1.play(), this.activeTab = l, M && (this.selectedGame = M)
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(Ve.hM), s.Y36(G.pk), s.Y36(G.mI))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-settings-modal"]],
            inputs: {activeTab: "activeTab"},
            decls: 10,
            vars: 9,
            consts: [[1, "side-pane"], [1, "side-pane-item", 3, "click"], ["class", "side-pane-item", 3, "active", "click", 4, "ngFor", "ngForOf"], [1, "settingsContent"], ["class", "settingsContent__tab", 3, "anonymous", 4, "ngIf"], ["class", "settingsContent__tab", 3, "game", 4, "ngIf"], ["class", "settingsContent__tab", 4, "ngIf"], [1, "settingsContent__tab", 3, "anonymous"], [1, "settingsContent__tab", 3, "game"], [1, "settingsContent__tab"]],
            template: function (l, M) {
                1 & l && (s.TgZ(0, "aside", 0), s.TgZ(1, "div", 1), s.NdJ("click", function () {
                    return M.selectTab("immutable")
                }), s._uU(2, " Immutable "), s.qZA(), s.YNc(3, Ks, 2, 3, "div", 2), s.TgZ(4, "div", 1), s.NdJ("click", function () {
                    return M.selectTab("wallet")
                }), s._uU(5, " WALLET "), s.qZA(), s.qZA(), s.TgZ(6, "div", 3), s.YNc(7, Qt, 1, 1, "app-apollo-settings", 4), s.YNc(8, Qs, 1, 1, "app-game-settings", 5), s.YNc(9, Ss, 1, 0, "app-wallet-settings", 6), s.qZA()), 2 & l && (s.xp6(1), s.ekj("active", "immutable" === M.activeTab), s.xp6(2), s.Q6J("ngForOf", M.games), s.xp6(1), s.ekj("active", "wallet" === M.activeTab), s.xp6(2), s.Q6J("@fade", M.activeTab), s.xp6(1), s.Q6J("ngIf", "immutable" === M.activeTab), s.xp6(1), s.Q6J("ngIf", "wallet" !== M.activeTab && "immutable" !== M.activeTab), s.xp6(1), s.Q6J("ngIf", "wallet" === M.activeTab))
            },
            directives: [_e.sg, _e.O5, mt, Rt, Vs],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.side-pane-item[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.side-pane-item[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22);line-height:1.4}[_nghost-%COMP%]{width:calc(var(--vw) * 60);height:calc(var(--vh) * 80);border-radius:calc(var(--vh) * .4);background-color:#0c1620;border:calc(var(--vh) * .15) solid #e0c58f;display:flex}.side-pane[_ngcontent-%COMP%]{width:30%;border-right:calc(var(--vh) * .15) solid #e0c58f;display:flex;flex-flow:column nowrap}.side-pane-item[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.8);color:#f6f6f6;text-align:center;transition:all .15s ease;cursor:pointer}.side-pane-item[_ngcontent-%COMP%]:hover{background-color:#1d2f41}.side-pane-item.active[_ngcontent-%COMP%]{background-color:#182531}.settingsContent[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.8);flex:1;display:flex}.settingsContent__tab[_ngcontent-%COMP%]{width:calc(var(--vw) * 30)}"],
            data: {animation: [(0, L.X$)("fade", [(0, L.eR)("* => *", [(0, L.jt)(500, (0, L.F4)([(0, L.oB)({opacity: 0}), (0, L.oB)({opacity: 1})]))])])]}
        }), a
    })();
    var ts = o(5969);
    let Ps = (() => {
        class a {
            constructor(l, M, F, le) {
                this.modalService = l, this.audioService = M, this.settingsService = F, this.akumaService = le, this.unsubscribe = new r.xQ
            }

            ngOnInit() {
                this.watchSettingsService()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            watchSettingsService() {
                this.settingsService.openSettings$.pipe((0, Qe.R)(this.unsubscribe), (0, Ne.h)(l => !!l)).subscribe(l => {
                    this.openSettings(l), this.settingsService.markSettingsAsOpen()
                })
            }

            windowFullscreen() {
                this.audioService.clickTinyV1.play(), window.bridge.toggleFullscreen()
            }

            closeWindow() {
                this.audioService.clickTinyV1.play(), window.bridge.closeWindow()
            }

            minimize() {
                this.audioService.clickTinyV1.play(), window.bridge.minimizeWindow()
            }

            openSettings(l) {
                this.akumaService.postControlEvent("gu", "Arena", "", "settings", "Mnu", "pressed"), this.audioService.clickTinyV1.play(), this.modalService.createModal(Je, {activeTab: l}, {
                    blurredBackground: !0,
                    canCloseFromOutside: !0,
                    position: d.e1.Center,
                    size: d.Cg.StretchableFullscreen
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(v.Z), s.Y36(G.pk), s.Y36(ts.g), s.Y36(T.jt))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["cerberus-draggable-titlebar"]],
            decls: 9,
            vars: 0,
            consts: [[1, "electronMenuItem", "electronMenuItem--closeWindow", 3, "click"], ["iconLigature", "close_x", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--windowToggle", 3, "click"], ["iconLigature", "window_toggle", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--minimise", 3, "click"], ["iconLigature", "window_minimise", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--settings", 3, "click"], ["iconLigature", "settings_cog", 1, "electronMenuItem__icon"], [1, "draggable"]],
            template: function (l, M) {
                1 & l && (s.TgZ(0, "a", 0), s.NdJ("click", function () {
                    return M.closeWindow()
                }), s._UZ(1, "gu-icon", 1), s.qZA(), s.TgZ(2, "a", 2), s.NdJ("click", function () {
                    return M.windowFullscreen()
                }), s._UZ(3, "gu-icon", 3), s.qZA(), s.TgZ(4, "a", 4), s.NdJ("click", function () {
                    return M.minimize()
                }), s._UZ(5, "gu-icon", 5), s.qZA(), s.TgZ(6, "a", 6), s.NdJ("click", function () {
                    return M.openSettings("immutable")
                }), s._UZ(7, "gu-icon", 7), s.qZA(), s._UZ(8, "div", 8))
            },
            styles: ["[_nghost-%COMP%]{width:100%;height:28px;z-index:23;background:#1D2F41;display:flex;flex-direction:row-reverse;padding-right:8px}.draggable[_ngcontent-%COMP%]{flex:1;-webkit-app-region:drag}.electronMenuItem[_ngcontent-%COMP%]{cursor:pointer;display:flex;width:28px}.electronMenuItem[_ngcontent-%COMP%]:hover   .electronMenuItem__icon[_ngcontent-%COMP%]{color:#f6f6f6}.electronMenuItem__icon[_ngcontent-%COMP%]{font-size:14px;margin:auto;text-shadow:0 2px 0 rgba(39,39,39,.4);color:#7192b0}"]
        }), a
    })();
    var Xe = o(39765), Ys = o(25774), ks = o(97993);

    function as(a, x) {
        1 & a && (s.TgZ(0, "cerberus-announce-banner-control", 2), s._UZ(1, "cerberus-controllable-banner"), s.qZA())
    }

    function ls(a, x) {
        if (1 & a && (s.ynx(0), s.YNc(1, as, 2, 0, "cerberus-announce-banner-control", 1), s.BQk()), 2 & a) {
            const l = s.oxw();
            s.xp6(1), s.Q6J("featureFlagIf", l.Flags.showControllableBanner)
        }
    }

    let Js = (() => {
        class a {
            constructor(l, M, F, le, Ee, me, we, De, lt) {
                this.vcr = l, this.analyticsService = M, this.authService = F, this.activityService = le, this.router = Ee, this.navigationService = me, this.route = we, this.protocolService = De, this.akumaService = lt, this.Flags = T.vU, this.destroyed$ = new r.xQ, this.watchForNavigation(), this.protocolService.watchProtocol()
            }

            ngOnInit() {
                this.recordActivity(), this.logSessionStarted(), this.logSessionAuthenticated(), this.authService.account$.pipe((0, Qe.R)(this.destroyed$)).subscribe(l => {
                    this.isLoggedIn = !!l
                })
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            logSessionStarted() {
                "function" == typeof gtag && gtag("event", "started", {event_category: "session"});
                const l = {is_referred: !1, landing_page: window.location.pathname};
                this.analyticsService.postEvent(new at.Session.Started.Event(l)), this.akumaService.postEvent("Flow", "_session_started", l), "function" == typeof fbq && fbq("track", "ViewLauncher")
            }

            logSessionAuthenticated() {
                this.authService.isLoggedIn() && ("function" == typeof gtag && gtag("event", "authenticated", {event_category: "session"}), this.analyticsService.postEvent(new at.Session.Authenticated.Event({})), this.akumaService.postEvent("Flow", "_sessionAuthenticated_succeeded"))
            }

            recordActivity() {
                (0, Ge.F)(3e4).pipe((0, He.VS)(() => {
                    const l = this.authService.getUserId();
                    return l && this.authService.isLoggedIn() ? this.activityService.recordActivity(l) : (0, e.of)()
                }), (0, Ze.K)((l, M) => (console.error("App->recordActivity() error", l), (0, e.of)(l)))).subscribe()
            }

            watchForNavigation() {
                this.router.events.pipe((0, Ne.h)(l => l instanceof z.m2), (0, Ue.U)(() => this.route), (0, Ue.U)(l => {
                    for (; l.firstChild;) l = l.firstChild;
                    return l
                }), (0, He.zg)(l => l.data), (0, Ue.U)(l => l.hasOwnProperty("state") ? l.state : ""), (0, Fe.b)(l => this.navigationService.updateCurrentRoute(l))).subscribe(() => {
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(s.s_b), s.Y36(T.yD), s.Y36(G.mI), s.Y36(st), s.Y36(z.F0), s.Y36(ee.f), s.Y36(z.gz), s.Y36(Pt), s.Y36(T.jt))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["cerberus-root"]],
            decls: 4,
            vars: 1,
            consts: [[4, "ngIf"], ["class", "announceBannerControl announceBannerControl--inline", 4, "featureFlagIf"], [1, "announceBannerControl", "announceBannerControl--inline"]],
            template: function (l, M) {
                1 & l && (s.TgZ(0, "app-auto-letterbox"), s._UZ(1, "cerberus-draggable-titlebar"), s.YNc(2, ls, 2, 1, "ng-container", 0), s._UZ(3, "router-outlet"), s.qZA()), 2 & l && (s.xp6(2), s.Q6J("ngIf", !M.isLoggedIn))
            },
            directives: [j, Ps, _e.O5, z.lC, Xe.w, Ys.O, ks.i],
            styles: ["[_nghost-%COMP%]{display:block}"]
        }), a
    })(), ws = (() => {
        class a {
            constructor() {
            }

            ngOnInit() {
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-home"]],
            decls: 1,
            vars: 0,
            template: function (l, M) {
                1 & l && s._UZ(0, "router-outlet")
            },
            directives: [z.lC],
            styles: ["[_nghost-%COMP%]{display:block;flex:1}.screen-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0;left:0;z-index:-1}.app-bar[_ngcontent-%COMP%]{right:calc(var(--vw) * 3.33);position:absolute;bottom:0;right:calc(var(--vw) * 10)}"]
        }), a
    })();
    var Po = o(75778), Xs = o(98723);

    function cs(a, x) {
        1 & a && (s.TgZ(0, "div", 6), s._uU(1, " Username is required "), s.qZA())
    }

    function ss(a, x) {
        1 & a && (s.TgZ(0, "div", 6), s._uU(1, " Username must be at least 4 characters long "), s.qZA())
    }

    function ds(a, x) {
        if (1 & a && (s.TgZ(0, "div", 6), s._uU(1), s.qZA()), 2 & a) {
            const l = s.oxw();
            s.xp6(1), s.hij(" ", l.usernameError, " ")
        }
    }

    let Es = (() => {
        class a {
            constructor(l, M, F, le) {
                this.router = l, this.modalService = M, this.http = F, this.authService = le, this.unsubscribe = new r.xQ
            }

            ngOnInit() {
                this.initForm()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initForm() {
                this.usernameControl = new Q.NI(this.username, [Q.kI.required, Q.kI.minLength(4)]), this.watchSearch()
            }

            watchSearch() {
                this.usernameControl.valueChanges.pipe((0, Qe.R)(this.unsubscribe), (0, ot.b)(500), (0, Po.x)(), (0, Fe.b)(l => {
                    this.username = l, this.usernameError = void 0
                })).subscribe()
            }

            submit() {
                this.submitUsernameApi$(this.username).pipe((0, se.q)(1), (0, Fe.b)(l => {
                    this.modalService.destroyTopModal(), this.router.navigate(["/"])
                }), (0, Ze.K)(l => (403 === l.status && (this.usernameError = "Username not allowed."), 400 === l.status && (this.usernameError = "Username is invalid."), 500 === l.status && (this.usernameError = "Username is taken."), (0, e.of)(l)))).subscribe()
            }

            submitUsernameApi$(l) {
                const M = this.authService.getUserId(), F = this.authService.getGameSessionTicket();
                return this.http.post(`https://test-auth.apollo.gg/account/${M}/user?session=${F}`, {username: l})
            }

            isUsernameValid$(l) {
                const M = ["immutable", "apollo", "mythic"];
                return (0, Xs.H)(1e3).pipe((0, Fe.b)(F => {
                    this.usernameError = M.some(le => le === l) ? "Username is taken" : void 0
                }))
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(z.F0), s.Y36(v.Z), s.Y36(ie.eN), s.Y36(G.mI))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["app-username-onboarding"]],
            decls: 11,
            vars: 5,
            consts: [[1, "title"], [1, "onboarding"], ["type", "search", "name", "usernameControl", "maxlength", "15", 1, "form__textInput", 3, "formControl"], [1, "form__inputHint"], ["class", "form__inputHint__text", 4, "ngIf"], ["size", "large", "text", "Submit", 1, "form__submitButton", 3, "disabled", "click"], [1, "form__inputHint__text"]],
            template: function (l, M) {
                1 & l && (s.TgZ(0, "header", 0), s._uU(1, " Unique Username Onboarding "), s.qZA(), s.TgZ(2, "section", 1), s._uU(3, " Onboarding section for inputting username. Please enter a unique username "), s._UZ(4, "input", 2), s.TgZ(5, "div", 3), s.YNc(6, cs, 2, 0, "div", 4), s.YNc(7, ss, 2, 0, "div", 4), s.qZA(), s.TgZ(8, "gu-primary-hex-button", 5), s.NdJ("click", function () {
                    return M.submit()
                }), s.qZA(), s.TgZ(9, "div", 3), s.YNc(10, ds, 2, 1, "div", 4), s.qZA(), s.qZA()), 2 & l && (s.xp6(4), s.Q6J("formControl", M.usernameControl), s.xp6(2), s.Q6J("ngIf", M.usernameControl.hasError("required") && M.usernameControl.touched), s.xp6(1), s.Q6J("ngIf", M.usernameControl.hasError("minlength") && M.usernameControl.touched), s.xp6(1), s.Q6J("disabled", !M.usernameControl.valid || M.usernameError), s.xp6(2), s.Q6J("ngIf", M.usernameError))
            },
            directives: [Q.Fj, Q.nD, Q.JJ, Q.oH, _e.O5],
            styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form__inputHint__text[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.form__inputHint__text[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{min-width:calc(var(--vw) * 15.62);border:1px solid white;z-index:21;overflow:auto;background-color:#060b11b3;border-radius:calc(var(--vh) * .4);display:flex;flex-direction:column}.title[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);border-bottom:1px solid white;font-size:x-large;text-align:center}.onboarding[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);text-align:center}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);text-align:center;margin:0 auto;margin-top:calc(var(--vh) * 5);width:calc(var(--vw) * 25);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1);min-height:15px}.form__inputHint__text[_ngcontent-%COMP%]{text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);width:calc(var(--vw) * 25);margin-left:auto;margin-right:auto}"]
        }), a
    })();

    function kt(a, x) {
        1 & a && (s.TgZ(0, "div", 13), s._uU(1, "Email address is required"), s.qZA())
    }

    function Os(a, x) {
        1 & a && (s.TgZ(0, "div", 13), s._uU(1, " Enter valid email address "), s.qZA())
    }

    function qs(a, x) {
        1 & a && (s.TgZ(0, "div", 13), s._uU(1, " Password is required "), s.qZA())
    }

    function Ms(a, x) {
        if (1 & a && (s.TgZ(0, "div", 14), s._uU(1), s.qZA()), 2 & a) {
            const l = s.oxw();
            s.xp6(1), s.Oqu(l.loginError)
        }
    }

    function It(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " Email address is required "), s.qZA())
    }

    function Zt(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " Enter valid email address "), s.qZA())
    }

    function os(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " This email is already in use. "), s.qZA())
    }

    function Dt(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " User name is required "), s.qZA())
    }

    function ps(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " User name cannot be the same as email "), s.qZA())
    }

    function dt(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " Password is required "), s.qZA())
    }

    function Bt(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " Passwords must be at least 8 characters long "), s.qZA())
    }

    function eo(a, x) {
        1 & a && (s.TgZ(0, "div", 16), s._uU(1, " Passwords don't match "), s.qZA())
    }

    function Ts(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "form", 4), s.NdJ("ngSubmit", function () {
                return s.CHM(l), s.oxw().register()
            }), s.TgZ(1, "input", 5), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(2, It, 2, 0, "div", 6), s.YNc(3, Zt, 2, 0, "div", 6), s.YNc(4, os, 2, 0, "div", 6), s.TgZ(5, "input", 7), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(6, Dt, 2, 0, "div", 6), s.YNc(7, ps, 2, 0, "div", 6), s.TgZ(8, "input", 8), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(9, dt, 2, 0, "div", 6), s.YNc(10, Bt, 2, 0, "div", 6), s.TgZ(11, "input", 9), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(12, eo, 2, 0, "div", 6), s.TgZ(13, "gu-vertical-space", 10), s.TgZ(14, "gu-checkbox-input", 11), s.NdJ("onCheck", function (F) {
                return s.CHM(l), s.oxw().onAcceptTermsCheck(F)
            }), s.qZA(), s.qZA(), s.TgZ(15, "gu-checkbox-input", 12), s.NdJ("onCheck", function (F) {
                return s.CHM(l), s.oxw().onSubscribeCheck(F)
            }), s.qZA(), s.TgZ(16, "gu-primary-hex-button", 13), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().register()
            }), s.qZA(), s.TgZ(17, "label", 14), s._uU(18, "Already have an account? "), s.TgZ(19, "a", 15), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().playClickTinyV1()
            }), s._uU(20, " Login Now. "), s.qZA(), s.qZA(), s.qZA()
        }
        if (2 & a) {
            const l = s.oxw();
            s.Q6J("formGroup", l.formGroup), s.xp6(2), s.Q6J("ngIf", l.email.hasError("required") && l.email.touched), s.xp6(1), s.Q6J("ngIf", l.email.hasError("email") && l.email.touched && (null == l.email.value ? null : l.email.value.length) > 0), s.xp6(1), s.Q6J("ngIf", l.emailError), s.xp6(2), s.Q6J("ngIf", l.userName.hasError("required") && l.userName.touched), s.xp6(1), s.Q6J("ngIf", l.userName.hasError("mismatch") && l.userName.touched), s.xp6(2), s.Q6J("ngIf", l.password.hasError("required") && l.password.touched), s.xp6(1), s.Q6J("ngIf", l.password.hasError("minlength") && l.password.touched), s.xp6(2), s.Q6J("ngIf", (l.passwordConfirm.hasError("required") || l.passwordConfirm.hasError("mismatch")) && l.passwordConfirm.touched), s.xp6(4), s.Q6J("loading", l.loading)("text", l.loading ? "Signing Up" : "Sign Up"), s.uIk("disabled", !l.formGroup.valid)
        }
    }

    function $s(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "div", 17), s.TgZ(1, "div", 18), s.TgZ(2, "div"), s._uU(3, " We've sent an email to "), s.TgZ(4, "span"), s._uU(5), s.qZA(), s._uU(6, " - please follow the link in that email to confirm your account in a browser and then come back to login. "), s.qZA(), s._UZ(7, "gu-primary-hex-button", 19), s.TgZ(8, "div"), s._uU(9, " Still waiting? Try sending again or starting from scratch. "), s.qZA(), s.TgZ(10, "gu-primary-hex-button", 20), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().register(!0)
            }), s.qZA(), s.TgZ(11, "gu-primary-hex-button", 21), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().resetRegister()
            }), s.qZA(), s.qZA(), s.qZA()
        }
        if (2 & a) {
            const l = s.oxw();
            s.xp6(5), s.Oqu(l.email.value)
        }
    }

    function wt(a, x) {
        1 & a && (s.TgZ(0, "div", 9), s._uU(1, " Enter valid email address "), s.qZA())
    }

    function so(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "form", 4), s.NdJ("submit", function () {
                return s.CHM(l), s.oxw().reset()
            }), s.TgZ(1, "input", 5), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(2, wt, 2, 0, "div", 6), s.TgZ(3, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().reset()
            }), s.qZA(), s.TgZ(4, "a", 8), s._uU(5, " Back to login "), s.qZA(), s.qZA()
        }
        if (2 & a) {
            const l = s.oxw();
            s.Q6J("formGroup", l.formGroup), s.xp6(2), s.Q6J("ngIf", l.email.errors && l.email.touched), s.xp6(1), s.Q6J("text", l.loading ? "Resetting" : "Reset Password")
        }
    }

    function As(a, x) {
        if (1 & a) {
            const l = s.EpF();
            s.TgZ(0, "div", 10), s.TgZ(1, "div", 11), s._uU(2), s.qZA(), s.TgZ(3, "a", 12), s.NdJ("click", function () {
                return s.CHM(l), s.oxw().tryAgain()
            }), s._uU(4, " Try Again "), s.qZA(), s.TgZ(5, "a", 8), s._uU(6, " Back to login "), s.qZA(), s.qZA()
        }
        if (2 & a) {
            const l = s.oxw();
            s.xp6(2), s.Oqu(l.info)
        }
    }

    const Ls = [{path: "", redirectTo: "game/gu", pathMatch: "full"}, {
        path: "login", component: (() => {
            class a {
                constructor(l, M, F, le, Ee, me, we, De, lt, ct, fe, ue) {
                    this.analyticsService = l, this.authService = M, this.fb = F, this.utils = le, this.router = Ee, this.modalService = me, this.vcr = we, this.storageService = De, this.audioService = lt, this.http = ct, this.akumaService = fe, this.environment = ue, this.loading = !1, this.loginVideoSrc = "/assets/videos/login-video.webm"
                }

                ngOnInit() {
                    this.buildFormGroup(), this.formGroup.setValue({rememberMe: !0, email: null, password: null})
                }

                login() {
                    if (this.formGroup.invalid) return void this.utils.markFormGroupTouched(this.formGroup);
                    if (this.loading) return;
                    const l = {email: this.formGroup.value.email, password: this.formGroup.value.password},
                        M = this.formGroup.value.rememberMe;
                    this.loginError = "", this.loading = !0, this.authService.login(l, M, 1).pipe((0, se.q)(1), (0, Fe.b)(F => {
                        this.logSessionAuthenticated(F), this.storageService.set(["email"], l.email), this.router.navigate(["/"])
                    }), (0, Ze.K)(F => this.handleLoginError(F)), (0, Ye.x)(() => this.loading = !1)).subscribe()
                }

                logSessionAuthenticated(l) {
                    "function" == typeof gtag && gtag("event", "authenticated", {event_category: "session"}), this.analyticsService.postEvent(new at.Session.Authenticated.Event({})), this.akumaService.postEvent("Flow", "_sessionAuthenticated_succeeded")
                }

                handleLoginError(l) {
                    return console.warn("Login->login()->authService->login() unsuccessful.", l), this.loginError = l.error.error || "Unable to login.", (0, e.of)([])
                }

                get email() {
                    return this.formGroup.get("email")
                }

                get password() {
                    return this.formGroup.get("password")
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({
                        email: ["", [Q.kI.required, Q.kI.email]],
                        password: ["", [Q.kI.required]],
                        rememberMe: !0
                    })
                }

                hasUniqueUsername$(l) {
                    const M = this.authService.getGameSessionTicket();
                    return this.http.get(`https://test-auth.apollo.gg/account/${l}/user?session=${M}`)
                }

                handleNoUniqueUsername() {
                    this.modalService.createModal(Es, {}, {
                        blurredBackground: !0,
                        canCloseFromInside: !1,
                        canCloseFromOutside: !1,
                        position: d.e1.Center,
                        size: d.Cg.StretchableWorkarea
                    }, this.vcr)
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return a.\u0275fac = function (l) {
                return new (l || a)(s.Y36(T.yD), s.Y36(G.mI), s.Y36(Q.qu), s.Y36(ye.F), s.Y36(z.F0), s.Y36(v.Z), s.Y36(s.s_b), s.Y36(G.qy), s.Y36(G.pk), s.Y36(ie.eN), s.Y36(T.jt), s.Y36(G.Ho))
            }, a.\u0275cmp = s.Xpm({
                type: a,
                selectors: [["cerberus-login"]],
                decls: 17,
                vars: 8,
                consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "loginVideo", 3, "src"], ["videoPlayer", ""], [1, "loginForm", 3, "formGroup", "submit"], [1, "logo_wrapper"], ["src", "/assets/images/gu-logo-large.webp", 1, "large_logo"], ["aria-describedby", "emailErrorLabel", "id", "email", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", 1, "loginForm__textInput", 3, "keyup.enter", "click"], ["class", "loginForm__inputHint", 4, "ngIf"], ["aria-describedby", "loginErrorLabel", "name", "username", "id", "password", "type", "password", "formControlName", "password", "placeholder", "Password", 1, "loginForm__textInput", 3, "keyup.enter", "click"], ["class", "loginForm__inputHint", "id", "loginErrorLabel", 4, "ngIf"], ["routerLink", "/reset", 1, "loginForm__forgottenLink"], ["id", "button__SignIn", "size", "large", "text", "SIGN IN", 1, "loginForm__submitButton", 3, "loading", "click"], [1, "creatAccountArea"], ["icon", "leave_website", "text", "CREATE ACCOUNT", "kind", "secondary", 3, "href"], [1, "loginForm__inputHint"], ["id", "loginErrorLabel", 1, "loginForm__inputHint"]],
                template: function (l, M) {
                    1 & l && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.TgZ(3, "form", 2), s.NdJ("submit", function () {
                        return M.login()
                    }), s.TgZ(4, "div", 3), s._UZ(5, "img", 4), s.qZA(), s.TgZ(6, "input", 5), s.NdJ("keyup.enter", function () {
                        return M.login()
                    })("click", function () {
                        return M.playClickTinyV1()
                    }), s.qZA(), s.YNc(7, kt, 2, 0, "div", 6), s.YNc(8, Os, 2, 0, "div", 6), s.TgZ(9, "input", 7), s.NdJ("keyup.enter", function () {
                        return M.login()
                    })("click", function () {
                        return M.playClickTinyV1()
                    }), s.qZA(), s.YNc(10, qs, 2, 0, "div", 6), s.YNc(11, Ms, 2, 1, "div", 8), s.TgZ(12, "a", 9), s._uU(13, " Forgotten password? "), s.qZA(), s.TgZ(14, "gu-primary-hex-button", 10), s.NdJ("click", function () {
                        return M.login()
                    }), s.qZA(), s.qZA(), s.TgZ(15, "div", 11), s._UZ(16, "gu-primary-hex-button", 12), s.qZA()), 2 & l && (s.Q6J("src", M.loginVideoSrc, s.LSH), s.xp6(3), s.Q6J("formGroup", M.formGroup), s.xp6(4), s.Q6J("ngIf", M.email.hasError("required") && M.email.touched), s.xp6(1), s.Q6J("ngIf", M.email.hasError("email") && M.email.touched && (null == M.email.value ? null : M.email.value.length) > 0), s.xp6(2), s.Q6J("ngIf", M.password.hasError("required") && M.password.touched), s.xp6(1), s.Q6J("ngIf", M.loginError), s.xp6(3), s.Q6J("loading", M.loading), s.xp6(2), s.Q6J("href", M.environment.guRegisterURL))
                },
                directives: [Q._Y, Q.JL, Q.sg, Q.Fj, Q.JJ, Q.u, _e.O5, z.yS],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.loginForm__forgottenLink[_ngcontent-%COMP%], .loginForm__inputHint[_ngcontent-%COMP%], .creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.loginForm__forgottenLink[_ngcontent-%COMP%], .loginForm__inputHint[_ngcontent-%COMP%], .creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%;position:relative}.logo_wrapper[_ngcontent-%COMP%]{width:100%;text-align:center}.large_logo[_ngcontent-%COMP%]{width:70%}.loginVideo[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:1}.loginForm[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 17.7);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.loginForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.loginForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.loginForm__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.loginForm__forgottenLink[_ngcontent-%COMP%]{text-align:right;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:4px;margin-bottom:8px}.loginForm__submitButton[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;padding:0 50px;min-width:216px}.creatAccountArea[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 10.9);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap;align-items:center}.creatAccountArea__text[_ngcontent-%COMP%]{text-align:center;font-weight:600;color:#f6f6f6}.notify_users[_ngcontent-%COMP%]{margin-top:20px;color:#f6f6f6;z-index:1;width:600px;text-align:center;background-color:#0f1b27;padding:20px;border-radius:5px;line-height:1.5}"]
            }), a
        })()
    }, {
        path: "register", component: (() => {
            class a {
                constructor(l, M, F, le, Ee, me) {
                    this.analyticsService = l, this.auth = M, this.fb = F, this.utils = le, this.storageService = Ee, this.audioService = me, this.termsError = !1, this.emailError = !1, this.finished = !1, this.loading = !1, this.videoSrc = "/assets/videos/login-video.webm", this.unsubscribe = new r.xQ
                }

                ngOnInit() {
                    this.buildFormGroup(), this.logRegistrationStarted(), this.email.valueChanges.pipe((0, Qe.R)(this.unsubscribe)).subscribe(() => this.emailError = !1)
                }

                ngOnDestroy() {
                    this.passwordChangeSubscription && this.passwordChangeSubscription.unsubscribe(), this.passwordChangeSubscription = null, this.emailChangeSubscription && this.emailChangeSubscription.unsubscribe(), this.emailChangeSubscription = null, this.unsubscribe.next(), this.unsubscribe.complete()
                }

                logRegistrationStarted() {
                    "function" == typeof fbq && fbq("track", "Lead"), "function" == typeof gtag && gtag("event", "generate_lead"), this.analyticsService.postEvent(new at.Registration.Started.Event({}))
                }

                logAccountCreated(l) {
                    this.storageService.set(["user_id"], l.id), this.analyticsService.postEvent(new at.Account.Created.Event({
                        email: l.email,
                        is_referred: !1,
                        subscribed: l.subscribe,
                        username: l.username,
                        user_id: l.id
                    })), this.storageService.delete(["user_id"]), "function" == typeof fbq && fbq("track", "CompleteRegistration"), "function" == typeof gtag && gtag("event", "sign_up")
                }

                onSubscribeCheck(l) {
                    this.subscribe.setValue(l.detail.checked)
                }

                onAcceptTermsCheck(l) {
                    this.agreeToTerms.setValue(l.detail.checked)
                }

                register(l) {
                    const M = {
                        email: this.email.value,
                        username: this.userName.value,
                        password: this.password.value,
                        subscribe: this.subscribe.value
                    }, F = Object.assign({}, M);
                    delete F.password;
                    for (const le in F) F.hasOwnProperty(le) && this.storageService.set([le], `${F[le]}`);
                    if (this.formGroup.invalid) this.utils.markFormGroupTouched(this.formGroup); else if (!this.loading) {
                        if (this.termsError = !1, this.emailError = !1, !this.agreeToTerms.value) return void (this.termsError = !0);
                        this.loading = !0, this.auth.register(M).pipe((0, se.q)(1), (0, Fe.b)(le => {
                            this.finished = !0, l || this.logAccountCreated(Object.assign({id: le}, F))
                        }), (0, Ze.K)(le => (console.error("Register->register()->authService.register() registration unsuccessfull.", le), this.emailError = !0, (0, e.of)([]))), (0, Ye.x)(() => this.loading = !1)).subscribe()
                    }
                }

                resetRegister() {
                    this.formGroup.reset(), this.finished = !1
                }

                passwordMatchValidator(l) {
                    if (!l.parent) return null;
                    const M = l.parent.get("password");
                    return this.passwordChangeSubscription || (this.passwordChangeSubscription = M.valueChanges.pipe((0, Qe.R)(this.unsubscribe)).subscribe(() => {
                        l.updateValueAndValidity()
                    })), M.value !== l.value ? {mismatch: !0} : null
                }

                usernameMatchEmailValidator(l) {
                    if (!l.parent) return null;
                    const M = l.parent.get("email");
                    return this.emailChangeSubscription || (this.emailChangeSubscription = M.valueChanges.pipe((0, Qe.R)(this.unsubscribe)).subscribe(F => {
                        l.updateValueAndValidity()
                    })), l.value === M.value ? {mismatch: !0} : null
                }

                get email() {
                    return this.formGroup.get("email")
                }

                get password() {
                    return this.formGroup.get("password")
                }

                get passwordConfirm() {
                    return this.formGroup.get("passwordConfirm")
                }

                get userName() {
                    return this.formGroup.get("userName")
                }

                get agreeToTerms() {
                    return this.formGroup.get("agreeToTerms")
                }

                get subscribe() {
                    return this.formGroup.get("subscribe")
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({
                        email: ["", [Q.kI.required, Q.kI.email]],
                        userName: ["", [Q.kI.required, this.usernameMatchEmailValidator.bind(this)]],
                        password: ["", [Q.kI.required, Q.kI.minLength(8)]],
                        passwordConfirm: ["", [Q.kI.required, this.passwordMatchValidator.bind(this)]],
                        subscribe: [!1],
                        agreeToTerms: [!1]
                    })
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return a.\u0275fac = function (l) {
                return new (l || a)(s.Y36(T.yD), s.Y36(G.mI), s.Y36(Q.qu), s.Y36(ye.F), s.Y36(G.qy), s.Y36(G.pk))
            }, a.\u0275cmp = s.Xpm({
                type: a,
                selectors: [["app-register"]],
                decls: 5,
                vars: 3,
                consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "video", 3, "src"], ["videoPlayer", ""], ["class", "form", 3, "formGroup", "ngSubmit", 4, "ngIf"], ["class", "success-info", 4, "ngIf"], [1, "form", 3, "formGroup", "ngSubmit"], ["aria-describedby", "emailErrorLabel", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", "autocomplete", "false", 1, "form__textInput", 3, "click"], ["class", "form__inputHint", 4, "ngIf"], ["aria-describedby", "usernameErrorLabel", "name", "username", "type", "text", "formControlName", "userName", "placeholder", "Username", "autocomplete", "false", 1, "form__textInput", 3, "click"], ["name", "password", "type", "password", "formControlName", "password", "placeholder", "Password", 1, "form__textInput", 3, "click"], ["name", "repeat", "type", "password", "formControlName", "passwordConfirm", "placeholder", "Repeat", 1, "form__textInput", 3, "click"], ["both", "medium"], ["labelText", "I agree to the <a href='https://apollo.gg/terms'>Terms and Conditions</a>", 3, "onCheck"], ["labelText", "Sign up for exclusive updates!", 3, "onCheck"], ["size", "large", 1, "form__submitButton", 3, "loading", "text", "click"], [1, "nav_login", "font-weight-bold"], ["routerLink", "/login", 1, "form__backToLogin", 3, "click"], [1, "form__inputHint"], [1, "success-info"], [1, "register-finished", "text-center"], ["size", "normal", "routerLink", "/login", "text", "Login", 1, "form__submitButton"], ["size", "normal", "text", "Resend", 1, "form__submitButton", 3, "click"], ["size", "normal", "text", "Re-Register", 1, "form__submitButton", 3, "click"]],
                template: function (l, M) {
                    1 & l && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.YNc(3, Ts, 21, 12, "form", 2), s.YNc(4, $s, 12, 1, "div", 3)), 2 & l && (s.Q6J("src", M.videoSrc, s.LSH), s.xp6(3), s.Q6J("ngIf", !M.finished), s.xp6(1), s.Q6J("ngIf", M.finished))
                },
                directives: [_e.O5, Q._Y, Q.JL, Q.sg, Q.Fj, Q.JJ, Q.u, z.yS, z.rH],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form-check-label[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%], .form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%], .register-finished[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.register-finished[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.form-check-label[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%], .form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%}.video[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:.65}.form[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 31);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.success-info[_ngcontent-%COMP%]{width:calc(var(--vw) * 27.7)}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{text-align:center;margin-top:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%]{text-align:center;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:calc(var(--vh) * 2);cursor:pointer}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);margin-bottom:calc(var(--vh) * 4.44);margin-left:auto;margin-right:auto;min-width:160px}.form__subscribe-checkbox[_ngcontent-%COMP%], .form__submitButton[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}"]
            }), a
        })()
    }, {
        path: "reset", component: (() => {
            class a {
                constructor(l, M, F, le) {
                    this.authService = l, this.fb = M, this.utils = F, this.audioService = le, this.finished = !1, this.loading = !1, this.videoSrc = "/assets/videos/login-video.webm"
                }

                ngOnInit() {
                    this.buildFormGroup()
                }

                reset() {
                    this.formGroup.invalid ? this.utils.markFormGroupTouched(this.formGroup) : this.loading || (this.loading = !0, this.authService.resetPassword(this.email.value).pipe((0, se.q)(1)).subscribe(l => {
                        this.loading = !1, this.finished = !0, this.info = "Follow the instructions sent to you by email in order to reset your password."
                    }, l => {
                        this.loading = !1, this.finished = !0, console.error(l), this.info = "Error has occurred during sending an email. Try again later."
                    }))
                }

                get email() {
                    return this.formGroup.get("email")
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({email: ["", [Q.kI.required, Q.kI.email]]})
                }

                tryAgain() {
                    this.finished = !1, this.formGroup.reset()
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return a.\u0275fac = function (l) {
                return new (l || a)(s.Y36(G.mI), s.Y36(Q.qu), s.Y36(ye.F), s.Y36(G.pk))
            }, a.\u0275cmp = s.Xpm({
                type: a,
                selectors: [["app-reset"]],
                decls: 5,
                vars: 3,
                consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "video", 3, "src"], ["videoPlayer", ""], ["class", "form", 3, "formGroup", "submit", 4, "ngIf"], ["class", "success-info", 4, "ngIf"], [1, "form", 3, "formGroup", "submit"], ["aria-describedby", "emailErrorLabel", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", 1, "form__textInput", 3, "click"], ["class", "form__inputHint", 4, "ngIf"], ["size", "large", 1, "form__submitButton", 3, "text", "click"], ["routerLink", "/login", 1, "form__backToLogin"], [1, "form__inputHint"], [1, "success-info"], [1, "info-label"], [1, "form__tryAgain", 3, "click"]],
                template: function (l, M) {
                    1 & l && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.YNc(3, so, 6, 3, "form", 2), s.YNc(4, As, 7, 1, "div", 3)), 2 & l && (s.Q6J("src", M.videoSrc, s.LSH), s.xp6(3), s.Q6J("ngIf", !M.finished), s.xp6(1), s.Q6J("ngIf", M.finished))
                },
                directives: [_e.O5, Q._Y, Q.JL, Q.sg, Q.Fj, Q.JJ, Q.u, z.yS],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%}.video[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:.65}.form[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 37.96);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.success-info[_ngcontent-%COMP%]{width:calc(var(--vw) * 27.7)}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{text-align:center;margin-top:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%]{text-align:center;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:calc(var(--vh) * 2);cursor:pointer}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);margin-left:auto;margin-right:auto}"]
            }), a
        })()
    }, {path: "demo-sheet", component: Y.q6}, {
        path: "game",
        component: ws,
        canActivate: [(() => {
            class a {
                constructor(l) {
                    this.authService = l
                }

                canActivate(l, M) {
                    return this.authService.refreshToken().pipe((0, He.VS)(F => this.authService.saveAccount(F, !0, 1)), (0, Ze.K)(F => (this.authService.logout(), (0, e.of)(F))))
                }
            }

            return a.\u0275fac = function (l) {
                return new (l || a)(s.LFG(G.mI))
            }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac, providedIn: "root"}), a
        })()],
        data: {reuse: !0},
        children: [{path: "gu", loadChildren: () => o.e(848).then(o.bind(o, 37848)).then(a => a.GuModule)}]
    }];
    let Us = (() => {
        class a {
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275mod = s.oAB({type: a}), a.\u0275inj = s.cJS({
            imports: [[z.Bz.forRoot(Ls, {
                useHash: !0,
                enableTracing: !1
            })], z.Bz]
        }), a
    })();
    var Rs = o(98009), Bs = o(47313), Yt = o(41746), gs = o(30567), Fs = o(36053), Et = o(87545), Gs = o(43164),
        ko = o(52216), hs = o(28510), oo = o(88632), wo = o(87168), yt = o(33403), Eo = o(11130), Oo = o(8561);
    let Mo = (() => {
        class a {
            constructor(l, M, F) {
                this.cerberusModalService = l, this.activeModal = M, this.akumaService = F
            }

            ngOnInit() {
                this.akumaService.postScreenEvent("tutorial", "Skip", "", "opened")
            }

            goBack() {
                this.akumaService.postControlEvent("tutorial", "Skip", "", "return", "Btn", "pressed"), this.activeModal.close("Coinbase CTA closed")
            }

            skipTutorial() {
                this.akumaService.postControlEvent("tutorial", "Skip", "", "confirm", "Btn", "pressed"), this.cerberusModalService.dismissAll()
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(hs.Qz), s.Y36(hs.mX), s.Y36(T.jt))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["cerberus-skip-tutorial-modal"]],
            decls: 15,
            vars: 0,
            consts: [[1, "modal__header"], [1, "modal__content"], ["top", "3x-large", "bottom", "medium"], ["align", "center", "size", "x-small", "fillGradient", "gradients.gold.simple"], ["top", "medium", "bottom", "medium"], ["fillColor", "colors.light.800", "kind", "x-small"], [1, "modal__btnsGroup"], [1, "modal__btn", 3, "click"]],
            template: function (l, M) {
                1 & l && (s._UZ(0, "div", 0), s.TgZ(1, "div", 1), s.TgZ(2, "gu-vertical-space", 2), s.TgZ(3, "gu-heading-text", 3), s._uU(4, " Are you Sure you want to skip the tutorial?"), s.qZA(), s.qZA(), s.TgZ(5, "gu-vertical-space", 4), s.TgZ(6, "gu-paragraph-text", 5), s._uU(7, " You won\u2019t receive your 3 Core Packs. "), s._UZ(8, "br"), s._uU(9, " To unlock this reward at a later time, come back by selecting \u201cTutorial\u201d from the Arena screen. "), s.qZA(), s.qZA(), s.TgZ(10, "div", 6), s.TgZ(11, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                    return M.goBack()
                }), s._uU(12, " Go Back "), s.qZA(), s.TgZ(13, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                    return M.skipTutorial()
                }), s._uU(14, " Yes "), s.qZA(), s.qZA(), s.qZA())
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;max-width:640px;text-align:center}.modal__header[_ngcontent-%COMP%]{background:linear-gradient(90deg,#c6a052 2.93%,#ebc98b 25.01%,#fff2d8 50.44%,#ebc98b 74.21%,#c6a052 96.95%);box-shadow:0 2px 5px #0000004d;height:3px;width:100%}.modal__content[_ngcontent-%COMP%]{background:linear-gradient(90deg,#0f1b27 1.39%,#0f1b27 12.6%,#1d2f41 50.06%,#0f1b27 87.64%,#0f1b27 98.63%);box-sizing:border-box;border:2px solid #3D5A74;display:flex;flex-direction:column;padding:0 calc(var(--vw) * 1.5);align-items:center}.modal__btnsGroup[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;padding:20px 0;width:50%}.modal__btn[_ngcontent-%COMP%]{padding:15px;margin:10px}.modal__closeButton[_ngcontent-%COMP%]{position:absolute;top:20px;right:20px;z-index:1;font-size:calc(var(--vh) * 2);color:#8be1e0;cursor:pointer}.modal__closeButton[_ngcontent-%COMP%]:hover{color:#fff}"]
        }), a
    })();
    var To = o(17268);
    let $o = (() => {
        class a {
            constructor(l, M, F, le, Ee, me, we, De) {
                this.cerberusModalService = l, this.queueService = M, this.gameService = F, this.guGameService = le, this.playService = Ee, this.authService = me, this.audioService = we, this.akumaService = De
            }

            ngOnInit() {
                this.akumaService.postScreenEvent("tutorial", "Welcome", "", "opened"), this.akumaService.postFlowEvent("tutorialComplete", "started")
            }

            beginTutorial() {
                this.audioService.arenaClickStart.play(), this.akumaService.postControlEvent("tutorial", "Welcome", "", "go", "Btn", "pressed");
                const l = this.authService.getUserId();
                this.queueService.activeQueues$.pipe((0, se.q)(1)).subscribe(M => {
                    M.forEach(F => this.queueService.cancel(F))
                }), this.gameService.getBranch$(1).pipe((0, se.q)(1), (0, wo.M)(this.guGameService.getGameMode$(yt.B_.TUTORIAL)), (0, Fe.b)(([M, F]) => {
                    this.playService.play({
                        realm: M.id,
                        mode: yt.B_.TUTORIAL,
                        mission: F.properties.mission,
                        player: {
                            id: l,
                            deck: {id: F.properties.player.deck.id, global: F.properties.player.deck.global},
                            collection: {id: F.properties.player.collection.id}
                        },
                        opponent: {
                            deck: {id: F.properties.opponent.deck.id, global: F.properties.opponent.deck.global},
                            collection: {id: F.properties.opponent.collection.id}
                        }
                    })
                })).subscribe(M => this.cerberusModalService.dismissAll())
            }

            skipTutorial() {
                this.akumaService.postControlEvent("tutorial", "Welcome", "", "skip", "Btn", "pressed");
                this.cerberusModalService.open(Mo, {centered: !0}).result.then(F => {
                }, F => {
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.Y36(hs.Qz), s.Y36(vt.g), s.Y36(Ve.hM), s.Y36(Eo.xV), s.Y36(Oo.GT), s.Y36(G.mI), s.Y36(G.pk), s.Y36(T.jt))
        }, a.\u0275cmp = s.Xpm({
            type: a,
            selectors: [["cerberus-tutorial-start-modal"]],
            decls: 48,
            vars: 1,
            consts: [[1, "leftPanel"], ["src", "/gu-assets/images/tutorial/citadel-herald-bg.webp", 1, "leftPanel__image"], [1, "leftPanel__imageShadow"], ["src", "/gu-assets/images/GULogo-white.svg", "alt", "", 1, "leftPanel__logoImage"], [1, "rightPanel"], ["fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", "size", "x-small", 1, "rightPanel__title"], ["fillColor", "colors.light.300", 1, "rightPanel__subtitle"], [1, "rightPanel__gameplay"], ["src", "/gu-assets/images/tutorial/gameplay-basics.webp", 1, "rightPanel__gameplay__image"], [1, "rightPanel__gameplay__title"], ["fillColor", "colors.light.300"], [1, "rightPanel__howto"], [1, "rightPanel__howto__mana"], ["src", "/gu-assets/images/tutorial/how-mana-works.webp", 1, "rightPanel__howto__image"], [1, "rightPanel__howto__title"], [1, "rightPanel__howto__win"], ["src", "/gu-assets/images/tutorial/how-to-win.webp", 1, "rightPanel__howto__image"], [1, "rightPanel__freeStuff"], ["src", "/gu-assets/images/tutorial/free-stuff-banner-start.png", 1, "rightPanel__freeStuff__bgImage"], ["src", "/gu-assets/images/tutorial/free-core-pack.png", 1, "rightPanel__freeStuff__cardImage"], ["fillColor", "colors.light.300", 1, "rightPanel__freeStuff__text"], [1, "rightPanel__freeStuff__tooltip", 3, "title"], ["iconLigature", "little_help"], ["size", "medium", "text", "BEGIN", 1, "rightPanel__beginTutorialBtn", 3, "click"], ["fillColor", "colors.apocyan.100", 1, "rightPanel__closeTutorialBtn", 3, "click"]],
            template: function (l, M) {
                1 & l && (s.TgZ(0, "div", 0), s.TgZ(1, "picture"), s._UZ(2, "img", 1), s.qZA(), s._UZ(3, "div", 2), s.TgZ(4, "picture"), s._UZ(5, "img", 3), s.qZA(), s.qZA(), s.TgZ(6, "div", 4), s.TgZ(7, "gu-heading-text", 5), s._uU(8, " Welcome to the Tutorial "), s.qZA(), s.TgZ(9, "gu-simple-text", 6), s._uU(10, " A swift lesson to help you learn the basics. All great heroes need to start somewhere! "), s.qZA(), s.TgZ(11, "div", 7), s.TgZ(12, "picture"), s._UZ(13, "img", 8), s.qZA(), s.TgZ(14, "div", 9), s.TgZ(15, "gu-simple-text", 10), s.TgZ(16, "strong"), s._uU(17, "GAMEPLAY BASICS"), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.TgZ(18, "div", 11), s.TgZ(19, "div", 12), s.TgZ(20, "picture"), s._UZ(21, "img", 13), s.qZA(), s.TgZ(22, "div", 14), s.TgZ(23, "gu-simple-text", 10), s.TgZ(24, "strong"), s._uU(25, "HOW MANA WORKS"), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.TgZ(26, "div", 15), s.TgZ(27, "picture"), s._UZ(28, "img", 16), s.qZA(), s.TgZ(29, "div", 14), s.TgZ(30, "gu-simple-text", 10), s.TgZ(31, "strong"), s._uU(32, "HOW TO WIN"), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.TgZ(33, "div", 17), s.TgZ(34, "picture"), s._UZ(35, "img", 18), s.qZA(), s.TgZ(36, "picture"), s._UZ(37, "img", 19), s.qZA(), s.TgZ(38, "gu-simple-text", 20), s._uU(39, " Receive "), s.TgZ(40, "strong"), s._uU(41, "3 Core Packs "), s.qZA(), s.TgZ(42, "app-tooltip", 21), s._UZ(43, "gu-icon", 22), s.qZA(), s._uU(44, " upon completion of the tutorial. "), s.qZA(), s.qZA(), s.TgZ(45, "gu-primary-hex-button", 23), s.NdJ("click", function () {
                    return M.beginTutorial()
                }), s.qZA(), s.TgZ(46, "gu-simple-text", 24), s.NdJ("click", function () {
                    return M.skipTutorial()
                }), s._uU(47, " MAYBE LATER "), s.qZA(), s.qZA()), 2 & l && (s.xp6(42), s.Q6J("title", "Core Packs hold <br/> non-blockchain cards that can <br/> be used to expand your decks."))
            },
            directives: [To.K],
            styles: ["[_nghost-%COMP%]{display:flex;background-color:#0f1b27;border:2px solid #3D5A74;box-sizing:border-box;box-shadow:5px 5px 15px #0006;width:1050px}.rightPanel[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%}.rightPanel__title[_ngcontent-%COMP%]{margin-top:20px}.rightPanel__subtitle[_ngcontent-%COMP%]{margin:20px;text-align:center}.rightPanel__gameplay[_ngcontent-%COMP%]{margin:0 30px;width:450px}.rightPanel__gameplay__image[_ngcontent-%COMP%]{width:450px;display:block}.rightPanel__gameplay__title[_ngcontent-%COMP%]{background:linear-gradient(to left,#0F1B27 0%,#1D2F41 100%);text-align:center;padding:10px}.rightPanel__howto[_ngcontent-%COMP%]{display:flex;margin-top:10px}.rightPanel__howto__mana[_ngcontent-%COMP%]{margin-right:3px}.rightPanel__howto__win[_ngcontent-%COMP%]{margin-left:3px}.rightPanel__howto__image[_ngcontent-%COMP%]{width:222px;display:block}.rightPanel__howto__title[_ngcontent-%COMP%]{background:linear-gradient(to left,#0F1B27 0%,#1D2F41 100%);text-align:center;padding:10px}.rightPanel__freeStuff[_ngcontent-%COMP%]{position:relative}.rightPanel__freeStuff__bgImage[_ngcontent-%COMP%]{width:510px;display:block;margin-top:35px}.rightPanel__freeStuff__cardImage[_ngcontent-%COMP%]{position:absolute;top:0px;left:15px;height:90px}.rightPanel__freeStuff__text[_ngcontent-%COMP%]{position:absolute;top:45px;left:85px;font-size:15px}.rightPanel__freeStuff__tooltip[_ngcontent-%COMP%]{display:inline;text-align:center}.rightPanel__beginTutorialBtn[_ngcontent-%COMP%]{margin-top:20px;padding:0 40px}.rightPanel__closeTutorialBtn[_ngcontent-%COMP%]{margin-top:20px;font-size:15px;cursor:pointer}.leftPanel[_ngcontent-%COMP%]{position:relative;width:100%}.leftPanel__image[_ngcontent-%COMP%]{max-width:100%;max-height:100%;display:block}.leftPanel__imageShadow[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0px;background:linear-gradient(180deg,rgba(15,27,39,0) 57.61%,rgba(15,27,39,.7) 73.26%,rgba(15,27,39,.9) 100%)}.leftPanel__logoImage[_ngcontent-%COMP%]{width:330px;position:absolute;bottom:60px;left:0;right:0;margin-left:auto;margin-right:auto}"]
        }), a
    })();
    var Ke = o(14618);
    let Io = (() => {
        class a {
            constructor(l, M, F, le, Ee, me, we, De, lt, ct) {
                this.actions$ = l, this.ngrxStore = M, this.gameApi = F, this.authService = le, this.guUserService = Ee, this.gameService = me, this.gameDownloadService = we, this.zone = De, this.utils = lt, this.cerberusModalService = ct, this.GameAssetsDownloadRequest$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(Ke.gK.GAME_ASSETS_DOWNLOAD_REQUEST), (0, Et.w)(fe => this.gameService.currentGameContext$.pipe((0, Ne.h)(ue => null != ue), (0, He.VS)(ue => (0, Yt.$R)((0, e.of)(ue), this.gameService.getBranch(ue.id))), (0, He.VS)(([ue, ut]) => (0, Yt.$R)((0, e.of)(ue), this.gameDownloadService.getLatestAssetsVersions(ue, ut), this.gameDownloadService.getLocalAssetsVersions(ue), this.getBasicAuthToken())), (0, se.q)(1))), (0, Et.w)(([fe, ue, ut, Ot]) => {
                    const rt = this.gameService.isObfuscatedBranch(fe.id) ? Ot : void 0,
                        Ct = this.gameDownloadService.deltaAssetsVersions(ut, ue),
                        Xt = Ct.reduce((qt, zs) => qt + zs.size, 0), xt = this.gameService.getAssetsPath(),
                        rs = Array.from({length: Ct.length}, () => new f.X(null)),
                        Ft = window.bridge.downloadAssetsWithSempahore(Ct, xt, rs, rt, 5).map(qt => qt.pipe(this.utils.enterZone(this.zone)));
                    return (0, e.of)({
                        downloadAssets: Ft,
                        assetsProgresses: rs,
                        totalBytes: Xt,
                        game: fe,
                        remoteAssets: ue
                    })
                }), (0, Et.w)(fe => (0, Yt.$R)((0, gs.D)(fe.downloadAssets).pipe((0, Ue.U)(ue => ({
                    downloads: ue,
                    game: fe.game,
                    remoteAssets: fe.remoteAssets
                }))), (0, Fs.aj)(fe.assetsProgresses).pipe((0, Gs.p)(1e3), (0, Fe.b)(ue => {
                    const ut = ue.reduce((rt, Ct) => Ct ? rt + Ct.bytesCompleted : rt + 0, 0),
                        Ot = Math.round(100 * ut / fe.totalBytes);
                    this.ngrxStore.dispatch(new Ke.X4({percentage: Ot, status: "downloading"}))
                })))), (0, Et.w)(([fe, ue]) => (this.gameService.deleteProperty(fe.game.id, "assets"), this.gameService.setProperty(fe.game.id, "assets", JSON.stringify(fe.remoteAssets)), this.gameService.refreshGameContext(), this.gameDownloadService.displayDownloadCompleteNotification(fe.game), [new Ke.P6])), (0, Ze.K)((fe, ue) => (console.error(fe), this.ngrxStore.dispatch(new Ke.wT({error: fe})), ue)))), this.GameAssetsDownloadSuccess$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(Ke.gK.GAME_ASSETS_DOWNLOAD_SUCCESS), (0, Et.w)(fe => {
                    const ue = this.authService.getUserId();
                    return this.gameService.getUserTutorialMissions(ue).pipe((0, se.q)(1))
                }), (0, Et.w)(fe => (fe[0].completed || this.showTutorialModal(), [new Ke.Lg({
                    status: "idle",
                    percentage: 100
                })])), (0, Ze.K)((fe, ue) => (console.error(fe), ue)))), this.GameBuildDownloadExtractRequest$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(Ke.gK.GAME_BUILD_DOWNLOAD_EXTRACT), (0, Ue.U)(fe => fe.payload), (0, Et.w)(fe => this.gameService.getBranch(fe.game.id).pipe((0, Ue.U)(ue => ({
                    branch: ue,
                    action: fe
                })))), (0, Et.w)(({
                                      branch: fe,
                                      action: ue
                                  }) => this.gameDownloadService.extractGame(ue.game, ue.fileName, ue.installPath).pipe((0, Ue.U)(ut => ({
                    result: ut,
                    branch: fe,
                    action: ue
                })))), (0, Et.w)(({action: ue}) => (this.gameService.setProperty(ue.game.id, "status", "extracted"), this.gameService.refreshGameContext(), ue.localVersion && this.gameDownloadService.deleteFile(this.gameDownloadService.getFileName(ue.game, ue.localVersion), this.gameService.getInstallPath(ue.game)), this.gameDownloadService.displayDownloadCompleteNotification(ue.game), [new Ke.Ry])), (0, Ze.K)((fe, ue) => (console.error(fe), this.ngrxStore.dispatch(new Ke.c7({error: fe})), ue)))), this.GameBuildDownloadRequest$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(Ke.gK.GAME_BUILD_DOWNLOAD_REQUEST), (0, Et.w)(fe => this.gameService.currentGameContext$.pipe((0, Ne.h)(ue => null != ue), (0, He.VS)(ue => (0, Yt.$R)((0, e.of)(ue), this.gameService.getBranch(ue.id))), (0, He.VS)(([ue, ut]) => (0, Yt.$R)((0, e.of)(ue), this.gameDownloadService.getVersions(ue, ut), this.getBasicAuthToken())), (0, se.q)(1))), (0, Et.w)(([fe, [ue, ut], Ot]) => {
                    const rt = this.gameService.getInstallPath(fe),
                        Ct = this.gameDownloadService.getDownloadInfo(fe, ue, Ot),
                        Xt = this.gameService.isObfuscatedBranch(fe.id) ? Ot : void 0;
                    return (0, Fs.aj)([window.bridge.download(Ct.url, rt, this.getFileName(fe, ue), Xt).pipe(this.utils.enterZone(this.zone), (0, Ue.U)(xt => ({
                        game: fe,
                        fileName: this.getFileName(fe, ue),
                        installPath: rt,
                        remoteVersion: ue,
                        localVersion: ut
                    }))), window.bridge.progress.pipe(this.utils.enterZone(this.zone), (0, Gs.p)(1e3), (0, ko.V)(12e4), (0, Ue.U)(xt => (this.ngrxStore.dispatch(new Ke.dY({
                        percentage: this.getPercentage(xt),
                        status: "downloading"
                    })), xt)))])
                }), (0, He.zg)(([fe, ue]) => (this.gameService.setProperty(fe.game.id, "version", fe.remoteVersion), this.gameService.setProperty(fe.game.id, "status", "downloaded"), [new Ke.yn({
                    game: fe.game,
                    fileName: fe.fileName,
                    installPath: fe.installPath,
                    localVersion: fe.localVersion
                })])), (0, Ze.K)((fe, ue) => (console.error(fe), this.ngrxStore.dispatch(new Ke.c7({error: fe})), ue))))
            }

            getBasicAuthToken() {
                const l = this.authService.getUserId(), M = this.authService.getGameSessionTicket();
                return this.gameApi.get(`/user/${l}/build?session=${M}`).pipe((0, Ue.U)(F => F.basic_auth))
            }

            getPercentage(l) {
                return l ? Math.round(100 * l.bytesCompleted / l.bytesTotal) : 0
            }

            getFileName(l, M) {
                return "win32" === window.bridge.platform() ? "gods_" + M + l.extensions.windows : "gods_" + M + l.extensions.osx
            }

            showTutorialModal() {
                this.cerberusModalService.open($o).result.then(F => {
                }, F => {
                })
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.LFG(pe.eX), s.LFG(Ce.yh), s.LFG(T.Ft), s.LFG(G.mI), s.LFG(oo.MZ), s.LFG(Ve.hM), s.LFG(qe.b5), s.LFG(s.R0b), s.LFG(ye.F), s.LFG(hs.Qz))
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac}), a
    })();
    const no = {
        gameBuild: {isUpdateRequired: !1, percentage: 0, status: "idle"},
        gameAssets: {isUpdateRequired: !1, percentage: 0, status: "idle"}
    };

    function ro(a, x) {
        switch (x.type) {
            case Ke.gK.GAME_BUILD_DOWNLOAD_CHECK:
                return Object.assign(Object.assign({}, a), {gameBuild: Object.assign(Object.assign({}, a.gameBuild), {isUpdateRequired: x.payload.isUpdateRequired})});
            case Ke.gK.GAME_BUILD_DOWNLOAD_PROGRESS:
                return Object.assign(Object.assign({}, a), {
                    gameBuild: Object.assign(Object.assign({}, a.gameBuild), {
                        percentage: x.payload.percentage,
                        status: x.payload.status
                    })
                });
            case Ke.gK.GAME_BUILD_DOWNLOAD_SUCCESS:
                return Object.assign(Object.assign({}, a), {
                    gameBuild: Object.assign(Object.assign({}, a.gameBuild), {
                        isUpdateRequired: !1,
                        status: "completed",
                        percentage: 100
                    })
                });
            case Ke.gK.GAME_BUILD_DOWNLOAD_UPDATE_STATUS:
                return Object.assign(Object.assign({}, a), {
                    gameBuild: Object.assign(Object.assign({}, a.gameBuild), {
                        isUpdateRequired: a.gameBuild.isUpdateRequired,
                        status: x.payload.status,
                        percentage: a.gameBuild.percentage
                    })
                });
            case Ke.gK.GAME_BUILD_DOWNLOAD_ERROR:
                return Object.assign(Object.assign({}, a), {
                    gameBuild: Object.assign(Object.assign({}, a.gameBuild), {
                        isUpdateRequired: a.gameBuild.isUpdateRequired,
                        status: "error",
                        percentage: a.gameBuild.percentage
                    })
                });
            case Ke.gK.GAME_ASSETS_DOWNLOAD_CHECK:
                return Object.assign(Object.assign({}, a), {gameAssets: Object.assign(Object.assign({}, a.gameAssets), {isUpdateRequired: x.payload.isUpdateRequired})});
            case Ke.gK.GAME_ASSETS_DOWNLOAD_PROGRESS:
                return Object.assign(Object.assign({}, a), {
                    gameAssets: Object.assign(Object.assign({}, a.gameAssets), {
                        percentage: x.payload.percentage,
                        status: x.payload.status
                    })
                });
            case Ke.gK.GAME_ASSETS_DOWNLOAD_SUCCESS:
                return Object.assign(Object.assign({}, a), {
                    gameAssets: Object.assign(Object.assign({}, a.gameAssets), {
                        isUpdateRequired: !1,
                        status: "completed",
                        percentage: 100
                    })
                });
            case Ke.gK.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS:
                return Object.assign(Object.assign({}, a), {
                    gameAssets: Object.assign(Object.assign({}, a.gameAssets), {
                        isUpdateRequired: a.gameAssets.isUpdateRequired,
                        status: x.payload.status,
                        percentage: x.payload.percentage
                    })
                });
            case Ke.gK.GAME_ASSETS_DOWNLOAD_ERROR:
                return Object.assign(Object.assign({}, a), {
                    gameAssets: Object.assign(Object.assign({}, a.gameAssets), {
                        isUpdateRequired: a.gameAssets.isUpdateRequired,
                        status: "error",
                        percentage: a.gameAssets.percentage
                    })
                });
            default:
                return a
        }
    }

    let io = (() => {
        class a {
            constructor() {
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac}), a
    })();
    var ns = o(56302);
    const ao = {wallet: null, user: null};
    (0, Ce.ZF)("account");
    var Lt = (() => {
        return (a = Lt || (Lt = {})).INIT_WALLET = "[App] Initialize Wallet", a.INIT_METAMASK = "[App] Initialize MetaMask", a.UPDATE_STORE = "[App] Update Store", a.UPDATE_MARKETPRICE_ETH = "[App] Update Market Price of Ether", Lt;
        var a
    })();
    const Fo = {
        app: function (a, x) {
            switch (x.type) {
                case Lt.INIT_WALLET:
                case Lt.INIT_METAMASK:
                    return Object.assign({}, a);
                default:
                    return a
            }
        }, router: re.mg, account: function (a = ao, x) {
            switch (x.type) {
                case ns.X8.FETCH_USER_ACCOUNT_SUCCESS:
                    return Object.assign(Object.assign({}, a), {user: x.payload.accountData});
                case ns.X8.FETCH_USER_WALLET_SUCCESS:
                    return Object.assign(Object.assign({}, a), {wallet: x.payload.walletData});
                case ns.X8.UPDATE_USER_ETH_BALANCE:
                    return Object.assign(Object.assign({}, a), {wallet: Object.assign(Object.assign({}, a.wallet), {ethBalance: x.payload.balance})});
                default:
                    return a
            }
        }
    }, _s = [], vs = "reCaptchaOnloadCallback";
    let go = (() => {
        class a {
            constructor(l) {
                this.http = l, this.$loaded = new f.X(!1), this.registerOnloadCallback(), this.load()
            }

            registerOnloadCallback() {
                window[vs] = () => {
                    const l = "g-recpatcha";
                    this.addWidget(l), this.renderWidget(l), this.$loaded.next(!0)
                }
            }

            addWidget(l) {
                const M = document.createElement("div");
                M.id = l, M.style.visibility = "hidden", document.body.appendChild(M)
            }

            renderWidget(l) {
                this.grecaptcha().render(l, {sitekey: J.N.recaptchaPublicSiteKeyV3, size: "invisible"})
            }

            load() {
                return this.$loaded.getValue() || this.addScriptTag(), this.$loaded.asObservable()
            }

            addScriptTag() {
                const l = document.body, M = this.createScriptTag();
                l.appendChild(M)
            }

            createScriptTag() {
                const l = document.createElement("script");
                return l.innerHTML = "", l.src = this.getScriptSrc(), l.async = !0, l.defer = !0, l
            }

            getScriptSrc() {
                let l = "https://www.recaptcha.net/recaptcha/api.js";
                return l += "?onload=" + vs, l += "&render=" + J.N.recaptchaPublicSiteKeyV3, l
            }

            execute(l) {
                return (0, _.D)(this.grecaptcha().execute({action: l}))
            }

            grecaptcha() {
                return window.grecaptcha
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.LFG(ie.eN))
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac, providedIn: "root"}), a
    })(), Mt = (() => {
        class a {
            constructor() {
                this.dataStore = {headerOptions: []}, this._headerOptions$ = new f.X([])
            }

            get headerOptions$() {
                return this._headerOptions$.asObservable()
            }

            _emit() {
                this._headerOptions$.next(Object.assign({}, this.dataStore).headerOptions)
            }

            update(l) {
                this.dataStore.headerOptions = l, this._emit()
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac, providedIn: "root"}), a
    })();
    var _t = o(24058), zt = o(61737), bs = o(77604);
    let ys = (() => {
        class a {
            constructor(l) {
                this.auth = l, this.isRefreshingToken = !1, this.tokenSubject = new f.X(null)
            }

            addToken(l, M) {
                return l.clone({setHeaders: {Authorization: "Bearer " + M}})
            }

            intercept(l, M) {
                const F = this.auth.getAuthToken();
                return M.handle(this.addToken(l, F ? F.access : null)).pipe((0, Ze.K)(Ee => {
                    if (Ee instanceof ie.UA) switch (Ee.status) {
                        case 400:
                            return this.badRequest(Ee);
                        case 401:
                            if (-1 == l.url.indexOf("login")) {
                                if (-1 == l.url.indexOf("refresh")) return this.unauthorized(l, M);
                                this.auth.logout()
                            }
                    }
                    return (0, zt._)(Ee)
                }))
            }

            badRequest(l) {
                return l && 400 === l.status && l.error && "invalid_grant" === l.error.error ? (this.auth.logout(), null) : (0, zt._)(l)
            }

            unauthorized(l, M) {
                return this.isRefreshingToken ? this.tokenSubject.pipe((0, Ne.h)(F => null != F), (0, se.q)(1), (0, He.VS)(F => M.handle(this.addToken(l, F)))) : (this.isRefreshingToken = !0, this.tokenSubject.next(null), this.auth.refreshToken().pipe((0, He.VS)(F => F && F.refresh ? this.auth.saveAccount(F, this.auth.isRemembering, 1).pipe((0, bs.h)(F)) : (this.auth.logout(), (0, e.of)())), (0, He.VS)(F => (this.tokenSubject.next(F.access), M.handle(this.addToken(l, F.access)))), (0, Ze.K)(F => (0, zt._)("unauthorized")), (0, Ye.x)(() => {
                    this.isRefreshingToken = !1
                })))
            }
        }

        return a.\u0275fac = function (l) {
            return new (l || a)(s.LFG(G.mI))
        }, a.\u0275prov = s.Yz7({token: a, factory: a.\u0275fac}), a
    })();
    var Wt, Ns = o(49757);
    let P = [T.LE, {provide: Window, useValue: window}, {
        provide: s.ip1,
        useFactory: a => () => a.loadConfigurations().toPromise(),
        multi: !0,
        deps: [T.LE]
    }, {provide: ie.TP, useClass: ys, multi: !0}, {provide: re.GC, useClass: ce}, {
        provide: G.B3,
        useClass: J.N.envClasses.featureFlagsService
    }, {provide: G.mI, useClass: J.N.envClasses.authService}, {
        provide: G.qy,
        useClass: J.N.envClasses.storageService
    }, {provide: G.ux, useClass: J.N.envClasses.ethService}, {
        provide: G.LI,
        useClass: J.N.envClasses.authHostService
    }, {provide: G.eQ, useClass: J.N.envClasses.assetsService}, {
        provide: G.pk,
        useClass: J.N.envClasses.audioService
    }, _t.m, V.x0, ye.F, T.Ho, T.n2, T.dK, Rs.D, Mt, ne._, Pt, go, T.fY, Bs.$z];
    (null === (Wt = J.N.sentry) || void 0 === Wt ? void 0 : Wt.dsn) && (P = [...P, {
        provide: s.qLn,
        useValue: Te.v({showDialog: !1})
    }, {provide: Re.aN, deps: [z.F0]}, {
        provide: s.ip1,
        useFactory: (a, x) => () => x.init(),
        deps: [Re.aN, ve],
        multi: !0
    }]);
    let W = (() => {
        class a {
        }

        return a.\u0275fac = function (l) {
            return new (l || a)
        }, a.\u0275mod = s.oAB({type: a, bootstrap: [Js]}), a.\u0275inj = s.cJS({
            providers: P,
            imports: [[Q.u5, ie.JF, Us, Q.UX, be.PW, p.b2, Ns.m.forRoot(), Ce.Aw.forRoot(Fo, {metaReducers: _s}), re.Qi.forRoot(Be), J.N.production ? [] : Z.FT.instrument(), pe.sQ.forRoot([io]), Ce.Aw.forFeature("gameResources", ro, {initialState: no}), pe.sQ.forFeature([Io]), Y.ic, X.j]]
        }), a
    })();
    var u;
    if (J.N.production && ((0, s.G48)(), null === (u = J.N.sentry) || void 0 === u ? void 0 : u.dsn)) {
        const {buildNumber: a} = E;
        I.S({
            release: `gu-cerberus@0.13.3+${a}`,
            environment: J.N.production ? "production" : "staging",
            dsn: J.N.sentry.dsn,
            integrations: [],
            tracesSampleRate: J.N.sentry.tracesSampleRate || 0
        })
    }
    p.q6().bootstrapModule(W).catch(a => console.error(a))
}, 12751
:
(te, U, o) => {
    "use strict";
    o(10609), window.process = {env: {DEBUG: void 0}}, window.global = window, global.Buffer = o(93172).Buffer, global.process = o(35736)
}, 73307
:
(te, U, o) => {
    "use strict";
    o.d(U, {
        Ho: () => r,
        mI: () => f,
        ux: () => e,
        qy: () => g,
        LI: () => i,
        eQ: () => t,
        pk: () => n,
        Hd: () => C,
        B3: () => k
    });
    var p = o(5e3);
    const r = new p.OlP("environment-settings"), f = new p.OlP("i-auth-service"), e = new p.OlP("i-eth-service"),
        g = (new p.OlP("i-cards-service"), new p.OlP("i-storage-service")),
        i = (new p.OlP("i-modal-service"), new p.OlP("i-auth-host-service")), t = new p.OlP("i-assets-service"),
        n = new p.OlP("i-audio-service"), C = new p.OlP("i-launchdarkly-client"),
        k = new p.OlP("i-feature-flag-service");
    new p.OlP("i-deck-code-service"), new p.OlP("apollo-token"), new p.OlP("game-status")
}, 51649
:
(te, U, o) => {
    "use strict";
    o.d(U, {R: () => i, E: () => t});
    var p = o(39017), r = o(61737), f = o(36053), e = o(72986), _ = o(24850), g = o(5e3), h = o(69439);
    const i = new g.OlP("deck-code-service");
    let t = (() => {
        class n {
            constructor(k) {
                this.cardsService = k
            }

            decodeDeckCode(k) {
                let $, w, D;
                try {
                    ({domain: $, formatCode: w, libraryIds: D} = (0, p.Jx)(k))
                } catch (m) {
                    return (0, r._)(m)
                }
                return (0, f.aj)([this.cardsService.protoCards$, this.cardsService.inventory$]).pipe((0, e.q)(1), (0, _.U)(([m, A]) => {
                    const {ownedCards: S, unownedProtos: y} = this.buildFromInventory(m, A, $, D, w);
                    return {ownedCards: S, unownedProtos: y, domain: $, formatCode: w}
                }))
            }

            validateProtos(k, $, w) {
                if ($.length > 30) throw new Error("Too many cards in the deck.");
                if (w.length !== $.length) throw new Error("One or more cards in your deck are not valid.");
                $.forEach(D => {
                    const m = k.get(D), A = $.filter(S => S === D).length;
                    if (A > 2 || ("legendary" === m.rarity || "mythic" === m.rarity) && A > 1) throw new Error("There are too many copies of one or more cards in your deck.")
                })
            }

            buildFromInventory(k, $, w, D, m) {
                const A = this.getProtos(D, k, w);
                this.validateProtos(k, A, D);
                const {ownedCards: S, unownedProtos: y} = this.convertToOwnedUnowned(A, $, k);
                return {ownedCards: S, unownedProtos: y, domain: w, formatCode: m}
            }

            convertToOwnedUnowned(k, $, w) {
                const D = [], m = [];
                return k.forEach(A => {
                    const S = $[A];
                    if (!S || !S.length) return void m.push(A);
                    const I = [...S].sort((s, b) => s.q - b.q).filter(s => !D.map(b => b.id).includes(s.id));
                    if (I && I.length) {
                        const s = {proto: A, quality: I[0].q, id: I[0].id, protoCard: w.get(A)};
                        D.push(s)
                    } else m.push(A)
                }), {ownedCards: D, unownedProtos: this.sortProtos(m, w)}
            }

            sortProtos(k, $) {
                return [...k.map(S => $.get(S))].sort((S, y) => S.name < y.name ? -1 : 1).sort((S, y) => S.mana - y.mana).map(S => S.proto)
            }

            getProtos(k, $, w) {
                const D = [];
                return $.forEach((m, A) => {
                    if ("neutral" !== m.god && m.god !== w) return;
                    const S = k.filter(y => y === m.lib_id).length;
                    for (let y = 0; y < S; y++) D.push(A)
                }), D
            }

            encodeDeck(k, $) {
                return (0, p.cv)(k, $)
            }
        }

        return n.\u0275fac = function (k) {
            return new (k || n)(g.LFG(h.d))
        }, n.\u0275prov = g.Yz7({token: n, factory: n.\u0275fac, providedIn: "root"}), n
    })()
}, 36622
:
(te, U, o) => {
    "use strict";
    o.d(U, {Rl: () => p.Rl});
    var p = o(39029), r = o(70655), e = (o(61517), o(32830)), _ = o(86041), g = o(56418), h = o(65171), i = o(80102),
        t = o(26532), n = o(65281);
    let C = class extends e.oi {
        constructor() {
            super(...arguments), this.closable = !0
        }

        static get styles() {
            return e.iv`
      :host {
        width: 100%;
        display: flex;
        position: fixed;
        background-color: rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.dark[900]))}, 0.8);
      }

      .closeIcon {
        position: absolute;
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
        top: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
        right: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
        cursor: pointer;
        z-index: 1;
      }
    `
        }

        close() {
            this.dispatchEvent(new CustomEvent("onCloseAnnounceBanner", {bubbles: !1}))
        }

        render() {
            return e.dy`
      ${this.closable ? e.dy`<gu-icon
            fillColor="colors.apocyan.300"
            iconLigature="close_x"
            class="closeIcon"
            @click="${this.close}"
            data-test-id="announce-banner-close-icon"
          ></gu-icon>` : ""}

      <slot></slot>
    `
        }
    };
    (0, r.gn)([(0, g.C)({type: Boolean}), (0, r.w6)("design:type", Object)], C.prototype, "closable", void 0), C = (0, r.gn)([(0, _.M)("gu-announce-banner-template")], C);
    var k = o(47925);
    let $ = class extends e.oi {
        constructor() {
            super(...arguments), this.responsiveSize = []
        }

        static get properties() {
            return {top: {type: String}, bottom: {type: String}, both: {type: String}, responsiveSize: {type: Array}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        margin-top: var(--marginTop);
        margin-bottom: var(--marginBottom);
      }
    `
        }

        pickMarginValue(c, O) {
            return c ? n.measurements.spacingAmountMapping[c] : O ? n.measurements.spacingAmountMapping[O] : 0
        }

        generateVariablesAndMediaQueries() {
            const c = this.pickMarginValue(this.both, this.top), O = this.pickMarginValue(this.both, this.bottom);
            return e.dy`
      <style>

        /* DEFINE BASE SIZING */
        ${(0, t.asCssProp)(`\n          :host {\n            --marginTop: ${c};\n            --marginBottom: ${O};\n          }\n        `)}

        /* DEFINE RESPONSIVE SIZING */
        ${this.responsiveSize.map(({breakpoint: H, topSize: oe, bottomSize: ke, bothSize: Le}) => {
                const je = this.pickMarginValue(Le, oe), ft = this.pickMarginValue(Le, ke);
                return e.iv`
            @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping[H])}) {
              :host {
                ${(0, t.asCssProp)(je ? `--marginTop: ${je};` : "")}
                ${(0, t.asCssProp)(ft ? `--marginBottom: ${ft};` : "")}
              }
            }
          `
            })}
      </style>
    `
        }

        render() {
            return e.dy`
      ${this.generateVariablesAndMediaQueries()}
      <slot></slot>
    `
        }
    };
    $ = (0, r.gn)([(0, _.M)("gu-vertical-space")], $), o(11015);
    let D = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(16))};
        width: 100%;
        height: 100vh;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          Gods Unchained is currently offline while we resolve issues affecting the launcher. Weâ€™ll be back online
          shortly.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    D = (0, r.gn)([(0, _.M)("gu-outage-banner")], D);
    let m = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(16))};
        width: 100%;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          Due to ongoing issues, Weekend Ranked will not run this weekend. It will resume the following weekend for a
          special double rewards event.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    m = (0, r.gn)([(0, _.M)("gu-ranked-weekend-cancelled-banner")], m);
    let A = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(16))};
        width: 100%;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          <strong>WEEKEND RANKED IS POSTPONED<strong>
          <br />
          Due to a critical issue, the Weekend Ranked event has been cancelled. Next event will yield double rewards as a result.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    A = (0, r.gn)([(0, _.M)("gu-maintenance-banner")], A);
    var S = o(38872), y = o(98539);
    let I = class extends e.oi {
        constructor() {
            super(...arguments), this.overlay = !1, this.reveal = !1, this.imageLoader = new Image, this.isLoading = !1
        }

        static get styles() {
            return e.iv`
      :host {
        width: 100vw;
        height: 100vh;
        position: fixed;
        z-index: -10;
        background-position: center center;
        background-size: cover;
      }

      .backdrop__image,
      .backdrop__overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: block;
        border: none;
      }

      .backdrop__image {
        background-position: center center;
        background-size: cover;
        transition: opacity ease-in-out 0.5s;
      }

      :host(.loading) .backdrop__image {
        opacity: 0;
        transition: none;
      }

      .backdrop__overlay {
        z-index: 1;
        background: linear-gradient(
          0deg,
          rgba(10, 10, 10, 0.9) 0%,
          rgba(10, 10, 10, 0.5) 51.49%,
          rgba(10, 10, 10, 0.25) 77.04%,
          rgba(10, 10, 10, 0.75) 100%
        );
        mix-blend-mode: normal;
        opacity: 0.75;
      }

      .backdrop__overlay--reveal {
        animation: backdropFade 3s forwards;
      }

      @keyframes backdropFade {
        from {
          background-color: rgba(0, 0, 0, 1);
          opacity: 1;
        }
        to {
          background-color: rgba(0, 0, 0, 0);
          opacity: 0.75;
        }
      }
    `
        }

        updated(c) {
            super.updated(c), c.has("image") && this.image && (this.imageLoader.src = `/assets/images/backdrops/${this.image}`, !this.isLoading && (this.isLoading = !0, (0, i.waitForImageToLoad)(this.imageLoader).then(() => {
                requestAnimationFrame(() => {
                    this.classList.add("loading"), this.style.backgroundImage = this.imageElement.style.backgroundImage, this.imageElement.style.backgroundImage = `url(/assets/images/backdrops/${this.image})`, this.isLoading = !1, requestAnimationFrame(() => {
                        this.dispatchEvent(new CustomEvent("image-changed", {
                            detail: this.image,
                            bubbles: !1,
                            composed: !1
                        })), this.classList.remove("loading")
                    })
                })
            })))
        }

        renderBackdrop() {
            return this.image ? e.dy` <div class="backdrop__image" /> ` : e.dy``
        }

        renderOverlay() {
            return this.overlay ? e.dy`
      <div class="${(0, y.$)({backdrop__overlay: !0, "backdrop__overlay--reveal": this.reveal})}"></div>
    ` : e.dy``
        }

        render() {
            return e.dy` ${this.renderBackdrop()} ${this.renderOverlay()} `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], I.prototype, "image", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], I.prototype, "overlay", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], I.prototype, "reveal", void 0), (0, r.gn)([(0, S.I)(".backdrop__image"), (0, r.w6)("design:type", HTMLImageElement)], I.prototype, "imageElement", void 0), I = (0, r.gn)([(0, _.M)("gu-backdrop")], I);
    var s = o(92436);
    const b = new s.do(B => {
        B.forEach(c => {
            c.target.handleResize()
        })
    });
    let E = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
      }

      /* Make the iframe keep an aspect ratio, and
      position it in the middle of its parent wrapper*/
      iframe {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        width: calc(var(--cw) * 100);
        height: calc(var(--cw) * 56.25);
        /* Given a 16:9 aspect ratio, 9/16*100 = 56.25 */
        min-height: calc(var(--ch) * 100);
        min-width: calc(var(--ch) * 177.77);
        /* Given a 16:9 aspect ratio, 16/9*100 = 177.77 */
      }

      :host([cropFromTop='true']) iframe {
        top: 0;
        transform: translate(-50%, 0%);
      }
    `
        }

        static get properties() {
            return {videoId: {type: String}, cropFromTop: {type: String}, quality: {type: String}}
        }

        firstUpdated() {
            b.observe(this), this.handleResize()
        }

        disconnectedCallback() {
            b.unobserve(this)
        }

        handleResize(c) {
            const ke = .01 * this.offsetHeight;
            this.style.setProperty("--cw", .01 * this.offsetWidth + "px"), this.style.setProperty("--ch", `${ke}px`)
        }

        qualityParam() {
            return this.quality ? `&quality=${this.quality}` : ""
        }

        render() {
            return e.dy`
      <iframe
        src=${`https://player.vimeo.com/video/${this.videoId}?autoplay=1&loop=1&title=0&byline=0&portrait=0&background=1&muted=1${this.qualityParam()}`}
        frameborder="0"
        allow="autoplay; fullscreen"
      ></iframe>
    `
        }
    };
    E = (0, r.gn)([(0, _.M)("gu-background-vimeo-embed")], E);
    var R = o(14879), re = (o(89534), o(51256), o(72650)), Ce = o(93270), Z = o(40010);
    const G = e.iv`
  ${Z.W2}

  /* host element establishes 1px outline */
  :host {
    background: ${(0, t.asCssProp)(n.colors.dark[500])};
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  /* golden border */
  :host::before {
    ${(0, t.inset)(1)}
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
    z-index: 1;
  }

  /* inner outline */
  :host::after {
    position: absolute;
    content: ' ';
    ${(0, t.inset)(5, 6)}
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
    z-index: 2;
  }

  /* button content and inner brackground */
  :host .button__content {
    position: absolute;
    ${(0, t.inset)(7, 8)}
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
    z-index: 3;
  }

  .button__icon,
  .button__text {
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .button__icon {
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(5.5))};
  }

  .button__text {
    line-height: ${(0, t.asCssProp)("48px")};
  }

  /* Default style */

  :host([type='default'])::before {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='default'])::after {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host([type='default']) .button__icon,
  :host([type='default']) .button__text {
    background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='default']:hover) .button__content,
  :host([type='default']:active) .button__content {
    background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='default']:hover) .button__text,
  :host([type='default']:hover) .button__icon,
  :host([type='default']:active) .button__text,
  :host([type='default']:active) .button__icon {
    background-image: none;
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  /* Inverted style */

  :host([type='inverted'])::before {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='inverted'])::after {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host([type='inverted']) .button__content {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='inverted']) .button__text,
  :host([type='inverted']) .button__icon {
    background-image: none;
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='inverted']:hover) .button__content,
  :host([type='inverted']:active) .button__content {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='inverted']:hover) .button__text,
  :host([type='inverted']:hover) .button__icon,
  :host([type='inverted']:active) .button__text,
  :host([type='inverted']:active) .button__icon {
    background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  /* Flat silver style */

  :host([type='silver'])::before {
    background: ${(0, t.asCssProp)(n.colors.light[500])};
  }

  :host([type='silver'])::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='silver']) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.light[500])};
  }

  :host([type='silver']:hover) .button__content,
  :host([type='silver']:active) .button__content {
    background-color: ${(0, t.asCssProp)(n.colors.light[500])};
  }

  :host([type='silver']:hover) .button__text,
  :host([type='silver']:active) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='silver']:active)::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    opacity: 0.2;
  }

  /* Flat gold style */

  :host([type='gold'])::before {
    background: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='gold'])::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='gold']) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='gold']:hover) .button__content,
  :host([type='gold']:active) .button__content {
    background-color: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='gold']:hover) .button__text,
  :host([type='gold']:active) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='gold']:active)::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    opacity: 0.2;
  }
`;

    class ae extends R.o {
        constructor() {
            super(...arguments), this.type = "default"
        }

        static get styles() {
            return G
        }

        renderText() {
            return e.dy`
      <gu-heading-text class="button__text" size="2x-small">
        <slot></slot>
      </gu-heading-text>
    `
        }
    }

    (0, r.gn)([(0, g.C)({reflect: !0}), (0, r.w6)("design:type", String)], ae.prototype, "type", void 0), customElements.define("gu-gilded-hex-button", (0, re.b)((0, Ce.Z)(ae))), o(43977);
    let Te = class extends e.oi {
        constructor() {
            super(...arguments), this.gap = 16, this.layout = "centered", this.visible = !0, this.layouts = {
                centered: "center",
                justified: "space-between"
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        justify-content: var(--layout, center);
        align-items: center;
        gap: var(--gap, 16px);
      }

      ${(0, t.asCssProp)((0, t.fadeReveal)(":host", ":host(.visible)"))}
    `
        }

        render() {
            return this.classList.toggle("visible", this.visible), this.style.setProperty("--gap", `${this.gap}px`), this.style.setProperty("--layout", this.layouts[this.layout]), e.dy`<slot></slot>`
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Te.prototype, "gap", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], Te.prototype, "layout", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Te.prototype, "visible", void 0), Te = (0, r.gn)([(0, _.M)("gu-button-group")], Te), o(1949);
    var z = o(26711);
    const he = e.iv`
  :host {
    display: inline-flex;
    position: relative;
    min-width: var(--gu-button-min-width);
    height: var(--gu-button-height);
    line-height: var(--gu-button-height);

    --gu-button-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
    --gu-button-border-width: ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
    --gu-button-min-width: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
    --gu-button-height: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
    --gu-button-padding-x: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
    --gu-button-margin: 0px;
    --gu-button-disabled-color: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-font-size: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
    --gu-button-font-family: 'Open Sans', sans-serif;
    --gu-button-text-transform: inherit;
    --gu-button-text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.3);
  }

  :host([theme='dark']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(n.colors.dark[900])};
    --gu-button-secondary-text-shadow: none;

    --gu-button-subtle-background-color: ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-subtle-background-color-hover: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-button-subtle-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-subtle-border-color-hover: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-button-subtle-color: ${(0, t.asCssProp)(n.colors.light[700])};
    --gu-button-subtle-color-hover: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-subtle-text-shadow: var(--gu-button-text-shadow);

    --gu-button-danger-background-color: ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-background-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-border-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-text-shadow: var(--gu-button-text-shadow);
  }

  :host([theme='light']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-secondary-text-shadow: none;

    --gu-button-subtle-background-color: ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-subtle-background-color-hover: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-subtle-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-subtle-border-color-hover: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-subtle-color: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-subtle-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-subtle-text-shadow: none;

    --gu-button-danger-background-color: ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-background-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-border-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-text-shadow: var(--gu-button-text-shadow);

    --gu-button-disabled-color: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-disabled-border: hover var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host([theme='gunmetal']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    --gu-button-secondary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-disabled-color: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  .standard-button {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    line-height: var(--gu-button-height);
    font-size: var(--gu-button-font-size);
    font-family: var(--gu-button-font-family);
    font-weight: 700;
    color: var(--gu-button-color);
    border-radius: var(--gu-button-border-radius);
    padding: 0px var(--gu-button-padding-x);
    margin: var(--gu-button-margin);
    min-width: calc(var(--gu-button-min-width) - var(--gu-button-padding-x));
    z-index: 3;
    text-decoration-line: none;
    flex-grow: 1;
  }

  .standard-button__loader {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    z-index: 1;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    border-radius: var(--gu-button-border-radius);
  }

  .standard-button__icon {
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(1.5))};
  }

  .standard-button--icon-right .standard-button__icon {
    order: 1;
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(1.5))};
    margin-right: 0px;
  }

  .standard-button--icon-only .standard-button__icon {
    position: absolute;
    left: 50%;
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(-2))};
    margin-right: 0px;
  }

  .standard-button--primary {
    background-color: var(--gu-button-primary-background-color);
    border: var(--gu-button-primary-border);
    color: var(--gu-button-primary-color);
    text-shadow: var(--gu-button-primary-text-shadow);
  }
  .standard-button--primary .standard-button__loader {
    background-color: var(--gu-button-primary-background-color);
  }

  .standard-button--secondary {
    background-color: var(--gu-button-secondary-background-color);
    border: var(--gu-button-secondary-border);
    color: var(--gu-button-secondary-color);
    text-shadow: var(--gu-button-secondary-text-shadow);
  }
  .standard-button--secondary .standard-button__loader {
    background-color: var(--gu-button-secondary-background-color);
  }

  .standard-button--subtle {
    background-color: var(--gu-button-subtle-background-color);
    border: var(--gu-button-subtle-border);
    color: var(--gu-button-subtle-color);
    text-shadow: var(--gu-button-subtle-text-shadow);
  }
  .standard-button--subtle .standard-button__loader {
    background-color: var(--gu-button-subtle-background-color);
  }

  .standard-button--danger {
    background-color: var(--gu-button-danger-background-color);
    border: var(--gu-button-danger-border);
    color: var(--gu-button-danger-color);
    text-shadow: var(--gu-button-danger-text-shadow);
  }
  .standard-button--danger .standard-button__loader {
    background-color: var(--gu-button-danger-background-color);
  }

  /* Hover states
    ----------------------------------------------------------------------------------- */
  .standard-button--primary:hover {
    background-color: var(--gu-button-primary-background-color-hover);
    border-color: var(--gu-button-primary-border-color-hover);
    color: var(--gu-button-primary-color-hover);
  }
  .standard-button--secondary:hover {
    background-color: var(--gu-button-secondary-background-color-hover);
    border-color: var(--gu-button-secondary-border-color-hover);
    color: var(--gu-button-secondary-color-hover);
  }

  :host([theme='light']) .standard-button--secondary:hover {
    text-shadow: var(--gu-button-text-shadow);
  }

  .standard-button--subtle:hover {
    background-color: var(--gu-button-subtle-background-color-hover);
    border-color: var(--gu-button-subtle-border-color-hover);
    color: var(--gu-button-subtle-color-hover);
  }
  .standard-button--danger:hover {
    background-color: var(--gu-button-danger-background-color-hover);
    border-color: var(--gu-button-danger-border-color-hover);
    color: var(--gu-button-danger-color-hover);
  }

  /* Active states
    ----------------------------------------------------------------------------------- */
  :host([theme='light']) .standard-button:active > * {
    opacity: 0.7;
  }

  :host([theme='dark']) .standard-button:active > * {
    opacity: 0.7;
  }

  :host([theme='gunmetal']) .standard-button:active {
    box-shadow: inset 0px 2px 6px rgba(0, 0, 0, 0.75);
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */

  :host([expand='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }
  :host([expand='true']) .standard-button {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Disabled and Loading states
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']) .standard-button {
    color: var(--gu-button-disabled-color);
    border: var(--gu-button-disabled-border);
    background-color: var(--gu-button-disabled-background-color);
    text-shadow: none;
  }

  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
  }

  /* Icon coloring rules
    ----------------------------------------------------------------------------------- */
  :host(.standard-button-icon-success) gu-icon {
    --textFillColor: ${(0, t.asCssProp)(n.colors.apocyan[500])};
  }
`;
    let K = class extends e.oi {
        constructor() {
            super(...arguments), this.loading = !1, this.disabled = !1, this.expand = !1, this.iconPosition = "left", this.iconOnly = !1, this.type = "primary", this.theme = "light"
        }

        static get styles() {
            return he
        }

        renderIcon() {
            return this.icon ? e.dy`<gu-icon iconLigature=${this.icon} class="standard-button__icon"></gu-icon>` : e.dy``
        }

        renderLoader() {
            return !this.loading || this.disabled ? e.dy`` : e.dy` <div class="standard-button__loader">
      <gu-rectangular-spinner color="grey"></gu-rectangular-spinner>
    </div>`
        }

        getClassMap() {
            return {
                "standard-button": !0,
                "standard-button--icon-only": this.iconOnly,
                [`standard-button--icon-${this.iconPosition}`]: !0,
                [`standard-button--${this.type}`]: !0
            }
        }

        render() {
            return this.href ? e.dy` <a
        ?disabled="${this.disabled}"
        href=${this.href}
        target=${this.target}
        class=${(0, y.$)(this.getClassMap())}
      >
        ${this.renderLoader()} ${this.renderIcon()}
        <div class="standard-button__content">
          <slot data-test-id="standard-button-text-slot"></slot>
        </div>
      </a>` : e.dy` <button ?disabled="${this.disabled}" class=${(0, y.$)(this.getClassMap())}>
        ${this.renderLoader()} ${this.renderIcon()}
        <div class="standard-button__content">
          <slot data-test-id="standard-button-text-slot"></slot>
        </div>
      </button>`
        }
    };
    (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], K.prototype, "loading", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], K.prototype, "disabled", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], K.prototype, "expand", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], K.prototype, "iconPosition", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], K.prototype, "iconOnly", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], K.prototype, "icon", void 0), (0, r.gn)([(0, g.C)({reflect: !0}), (0, r.w6)("design:type", String)], K.prototype, "type", void 0), (0, r.gn)([(0, g.C)({reflect: !0}), (0, r.w6)("design:type", String)], K.prototype, "theme", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], K.prototype, "href", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], K.prototype, "target", void 0), K = (0, r.gn)([(0, _.M)("gu-standard-button")], K);
    var q = o(84876), ge = o(25297), ce = o(72985), Se = o(58672);
    const $e = {text: {type: String}, href: {type: String}, target: {type: String}},
        Be = Object.assign(Object.assign({}, $e), {
            loading: {type: String},
            loadingColor: {type: String},
            disabled: {type: String},
            icon: {type: String},
            leftIconPosition: {type: Boolean},
            size: {type: String},
            enableSounds: {type: Boolean},
            horizontalStretch: {type: String}
        }), We = Object.assign(Object.assign({}, $e), {
            color: {type: String},
            loading: {type: String},
            loadingColor: {type: String},
            disabled: {type: String},
            size: {type: String},
            enableSounds: {type: Boolean},
            horizontalStretch: {type: String}
        });
    var gt = o(91418);
    const it = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.75))};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    flex-grow: 0;
    height: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(3.5))};
  }

  .buttonContent--square {
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(1.5))};
    position: relative;
    z-index: 2;
    order: 1;
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
  }

  :host([iconColor]) .buttonContent__icon {
    color: var(--iconColor);
  }

  .buttonContent__text {
    position: relative;
    z-index: 2;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    order: 1;
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([horizontalStretch='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, i.gridUnits)(1))} 0 0;
  }

  /* Button content when layout is vertical
    ----------------------------------------------------------------------------------- */
  .buttonContent--vertical {
    flex-direction: column;
    align-items: center;
    min-width: 70px;
    max-width: 80px;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(3))} ${(0, t.asCssProp)((0, i.gridUnits)(3))};
  }

  .buttonContent--vertical .buttonContent__icon {
    order: 0;
    margin: 0;
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
  }

  .buttonContent--vertical .buttonContent__text {
    text-align: center;
  }

  :host([backgroundFillColor='colors.apocyan.500']) {
    text-shadow: 0px 1px 1px rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.black))}, 0.3);
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
  }

  :host([disabled='true']) {
    filter: grayscale(100%);
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.gunmetal[300])};
    color: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host(:active) {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.light[300])};
    color: ${(0, t.asCssProp)(n.colors.light[100])};
  }

  :host([borderColorHover]:hover),
  :host([borderColorHover]:hover) ::slotted(*) {
    box-shadow: 0px 0px ${(0, t.asCssProp)((0, i.gridUnits)(1))} var(--borderColorHover);
  }

  ${(0, t.asCssProp)(gt.fillColoringRules)}
`, T = 18, J = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: flex;
    flex-grow: 0;
    justify-self: center;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    overflow: hidden;
    cursor: pointer;
    color: ${(0, t.asCssProp)(n.colors.light[100])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(12, 12))};
    ${(0, t.asCssProp)(n.animation.standardTransition("all"))};

    /* NORMAL SIZING BY DEFAULT */
    min-width: 140px;
    height: ${(0, t.asCssProp)("32px")};
    line-height: ${(0, t.asCssProp)("32px")};
  }

  /* The background "fill" color of the button */
  :host::before {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
    ${(0, t.asCssProp)(n.animation.standardTransition("all"))};
  }

  /* "LARGE" SIZE BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([size='large']) {
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(T, T))};
  }

  :host([size='large']) .buttonContent {
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, i.gridUnits)(2))});
  }

  :host([size='large'])::before {
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  :host([size='large']) .buttonContent__icon {
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(5.5))};
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([horizontalStretch='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("12px")} + ${(0, t.asCssProp)((0, i.gridUnits)(2))});
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
    position: relative;
    z-index: 2;
    order: 2;
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
  }

  .buttonContent__text {
    position: relative;
    z-index: 2;
    color: inherit;
    text-shadow: 0 calc(var(--vh) * 0.2) calc(var(--vh) * 0.2) rgba(${(0, t.asCssProp)(n.colors.dark[900])}, 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    align-content: center;
    order: 1;
    gap: 8px;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, i.gridUnits)(1))} 0 0;
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    filter: grayscale(100%);
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
  }

  /*  MOUSE-DOWN FX
    ----------------------------------------------------------------------------------- */
  :host(:active)::after {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, t.asCssProp)(n.gradients.apocyan.simple())};
    opacity: 0.2;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
  }
`, Me = e.iv`
  ${J}

  :host {
    background: ${(0, t.asCssProp)(n.gradients.apocyan.simple("bottom"))};
  }

  .waveArtwork {
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
    position: absolute;
    z-index: 2;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
  }

  .waveArtwork__side {
    position: absolute;
    left: 50%;
  }

  .waveArtwork__side img {
    display: block;
    height: 100%;
  }

  .waveArtwork__side--top {
    height: calc(${(0, t.asCssProp)("32px")} * 1.4);
    bottom: 36%;
    transform: translateX(-42%);
  }

  .waveArtwork__side--bottom {
    height: calc(${(0, t.asCssProp)("32px")} * 2);
    top: 32%;
    transform: translateX(-58%);
  }

  /* "LARGE" SIZE BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([size='large']) .waveArtwork__side--top {
    height: calc(${(0, t.asCssProp)("48px")} * 1.4);
  }

  :host([size='large']) .waveArtwork__side--bottom {
    height: calc(${(0, t.asCssProp)("48px")} * 2);
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    color: ${(0, t.asCssProp)(n.colors.light[100])};
  }

  :host(:hover)::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host(:hover) .waveArtwork__side {
    opacity: 0.8;
  }
`, at = e.iv`
  ${J}

  :host {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
  }

  :host::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
  }

  :host(:hover)::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }
`, Qe = (e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: inline-flex;
    justify-content: flex-start;
    cursor: pointer;
  }

  .buttonText {
    color: ${(0, t.asCssProp)(n.colors.apocyan[100])};
    border-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.apocyan[100])};
    padding-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) .buttonText {
    border-color: ${(0, t.asCssProp)(n.colors.gold[300])};
    color: ${(0, t.asCssProp)(n.colors.gold[300])};
  }
`, e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}
  ${J}

  :host {
    display: flex;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    cursor: pointer;
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
  }

  :host::before {
    background: none;
  }

  .hexLayer {
    position: absolute;
  }

  .outerKeyline {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: ${(0, t.asCssProp)(n.colors.dark[500])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(T, T))};
  }

  .outerGolden {
    top: 1px;
    bottom: 1px;
    left: 1px;
    right: 1px;
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  .innerGunmetal {
    top: 5px;
    bottom: 5px;
    left: 6px;
    right: 6px;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
  }

  .innerButtonFill {
    top: 7px;
    bottom: 7px;
    left: 8px;
    right: 8px;
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, i.gridUnits)(2))});
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    position: relative;
    z-index: 2;
    order: 1;
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(5.5))};
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .buttonContent__text {
    display: inline;
    position: relative;
    z-index: 2;
    text-decoration: none;
    line-height: ${(0, t.asCssProp)("48px")};
    order: 1;
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, i.gridUnits)(2))} 0 0;
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) .innerButtonFill,
  :host(:active) .innerButtonFill {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host(:hover) .buttonContent__text,
  :host(:hover) .buttonContent__icon,
  :host(:active) .buttonContent__text,
  :host(:active) .buttonContent__icon {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    background-clip: text;
    -webkit-background-clip: text;
  }

  /*  INVERTED COLORING
  ----------------------------------------------------------------------------------- */
  :host(.invertColoring) .innerButtonFill {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host(.invertColoring) .buttonContent__text,
  :host(.invertColoring) .buttonContent__icon {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    background-clip: text;
    -webkit-background-clip: text;
  }

  /*  INVERTED HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(.invertColoring:hover) .innerButtonFill,
  :host(.invertColoring:active) .innerButtonFill {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host(.invertColoring:hover) .buttonContent__text,
  :host(.invertColoring:hover) .buttonContent__icon,
  :host(.invertColoring:active) .buttonContent__text,
  :host(.invertColoring:active) .buttonContent__icon {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }
`), He = n.colors.light[500], Ze = n.colors.gold[500], Ne = n.colors.dark[500], Ue = n.colors.dark[900], Fe = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}
  ${J}

  :host {
    display: flex;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    cursor: pointer;
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
  }

  :host::before {
    background: none; // fixing the dark bleed in common-hex-button
  }

  .hexLayer {
    position: absolute;
  }

  .outerKeyline {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: ${(0, t.asCssProp)(Ne)};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(T, T))};
  }

  .outer {
    top: 1px;
    bottom: 1px;
    left: 1px;
    right: 1px;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }
  .outerSilver {
    background-color: ${(0, t.asCssProp)(He)};
  }
  .outerGold {
    background-color: ${(0, t.asCssProp)(Ze)};
  }

  .innerDark {
    top: 5px;
    bottom: 5px;
    left: 6px;
    right: 6px;
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
  }

  .innerButtonFill {
    top: 7px;
    bottom: 7px;
    left: 8px;
    right: 8px;
    background: ${(0, t.asCssProp)(Ue)};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, i.gridUnits)(2))});
  }

  .buttonContent__text {
    display: inline;
    position: relative;
    z-index: 2;
    text-decoration: none;
    line-height: ${(0, t.asCssProp)("48px")};
    order: 1;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .buttonContent__textSilver {
    background-color: ${(0, t.asCssProp)(He)};
  }
  .buttonContent__textGold {
    background-color: ${(0, t.asCssProp)(Ze)};
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) .innerButtonFillSilver,
  :host(:active) .innerButtonFillSilver {
    background-color: ${(0, t.asCssProp)(He)};
  }
  :host(:hover) .innerButtonFillGold,
  :host(:active) .innerButtonFillGold {
    background-color: ${(0, t.asCssProp)(Ze)};
  }

  :host(:hover) .buttonContent__text,
  :host(:active) .buttonContent__text {
    background-color: ${(0, t.asCssProp)(Ue)};
    background-clip: text;
    -webkit-background-clip: text;
  }

  :host(:active)::after {
    background: ${(0, t.asCssProp)(Ue)};
    opacity: 0.2;
  }
`, At = e.iv`
  ${J}

  :host {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(n.colors.apocyan[100])};
    text-transform: uppercase;
  }

  :host::before {
    display: none;
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }
`;

    function ht(B, c) {
        return c && "true" !== B ? e.dy` <gu-icon iconLigature=${c} class="buttonContent__icon"></gu-icon> ` : null
    }

    function Ve(B, c, O = "grey") {
        return "true" === c ? e.dy`<gu-rectangular-spinner color=${O}></gu-rectangular-spinner>` : B || e.dy` <slot></slot> `
    }

    const ye = e.dy`
  <div class="waveArtwork">
    <picture class="waveArtwork__side waveArtwork__side--top">
      <source srcset="/assets/images/hex-button/hex-button--top-wave-art.webp" type="image/webp" />
      <source srcset="/assets/images/hex-button/hex-button--top-wave-art.png" type="image/png" />
      <img src="/assets/images/hex-button/hex-button--top-wave-art.png" />
    </picture>

    <picture class="waveArtwork__side waveArtwork__side--bottom">
      <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.webp" type="image/webp" />
      <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.png" type="image/png" />
      <img src="/assets/images/hex-button/hex-button--bottom-wave-art.png" />
    </picture>
  </div>
`, j = Object.assign(Object.assign({}, Be), {invertColoring: {type: Boolean}});
    customElements.define("gu-special-hex-button", (0, Se.x)({
        renderer: function ({text: B, loading: c, loadingColor: O, icon: H, leftIconPosition: oe, invertColoring: ke}) {
            return (0, q.d4)(() => {
                ke ? this.classList.add("invertColoring") : this.classList.remove("invertColoring")
            }, [ke]), e.dy` ${(({icon: B, leftIconPosition: c, text: O, loading: H, loadingColor: oe}) => e.dy`
  <i class="hexLayer outerKeyline"></i>
  <i class="hexLayer outerGolden"></i>
  <i class="hexLayer innerGunmetal"></i>
  <i class="hexLayer innerButtonFill"></i>

  <div class=${(0, y.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-heading-text class="buttonContent__text" size="2x-small">
      ${Ve(O, H, oe)}
    </gu-heading-text>
    ${ht(H, B)}
  </div>
`)({text: B, icon: H, loading: c, loadingColor: O, leftIconPosition: oe})} `
        }, baseClass: (0, ce.lH)((0, ce.Am)((0, ce.s)((0, ce.Xg)(ge.J)))), props: {properties: j, styles: Qe}
    })), customElements.define("gu-special-hex-flat-button", (0, Se.x)({
        renderer: function ({color: B, text: c, loading: O, loadingColor: H}) {
            return e.dy` ${(({color: B, text: c, loading: O, loadingColor: H}) => {
                const oe = B ? B[0].toUpperCase() + B.slice(1) : "Silver";
                return e.dy`
    <i class="hexLayer outerKeyline"></i>
    <i class="hexLayer outer outer${oe}"></i>
    <i class="hexLayer innerDark"></i>
    <i class="hexLayer innerButtonFill innerButtonFill${oe}"></i>

    <div class=${(0, y.$)({buttonContent: !0})}>
      <gu-heading-text class="buttonContent__text buttonContent__text${oe}" size="2x-small">
        ${Ve(c, O, H)}
      </gu-heading-text>
    </div>
  `
            })({color: B, text: c, loading: O, loadingColor: H})} `
        }, props: {properties: We, styles: Fe}, baseClass: (0, ce.Am)((0, ce.s)((0, ce.Xg)(ge.J)))
    })), customElements.define("gu-primary-hex-button", (0, Se.x)({
        renderer: function ({text: B, loading: c, loadingColor: O, size: H, icon: oe, leftIconPosition: ke}) {
            return e.dy`
    ${ye} ${(({icon: B, leftIconPosition: c, size: O, text: H, loading: oe, loadingColor: ke}) => e.dy`
  <div class=${(0, y.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-heading-text class="buttonContent__text" size=${"large" === O ? "2x-small" : "3x-small"}>
      ${Ve(H, oe, ke)}
    </gu-heading-text>
    ${ht(oe, B)}
  </div>
`)({text: B, icon: oe, size: H, loading: c, loadingColor: O, leftIconPosition: ke})}
  `
        }, props: {properties: Be, styles: Me}, baseClass: (0, ce.lH)((0, ce.Am)((0, ce.s)((0, ce.Xg)(ge.J))))
    })), customElements.define("gu-secondary-hex-button", (0, Se.x)({
        renderer: function ({text: B, loading: c, loadingColor: O, icon: H, leftIconPosition: oe}) {
            return e.dy` ${(({icon: B, leftIconPosition: c, text: O, loading: H, loadingColor: oe}) => e.dy`
  <div class=${(0, y.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-simple-text class="buttonContent__text" kind="small">
      ${Ve(O, H, oe)}
    </gu-simple-text>
    ${ht(H, B)}
  </div>
`)({text: B, icon: H, loading: c, loadingColor: O, leftIconPosition: oe})} `
        }, props: {properties: Be, styles: at}, baseClass: (0, ce.Am)((0, ce.s)((0, ce.Xg)(ge.J)))
    })), customElements.define("gu-subtle-hex-button", (0, Se.x)({
        renderer: function ({text: B, loading: c, loadingColor: O, size: H, icon: oe, leftIconPosition: ke}) {
            return e.dy` ${(({icon: B, leftIconPosition: c, text: O, loading: H, loadingColor: oe, size: ke}) => e.dy`
  <div class=${(0, y.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-heading-text class="buttonContent__text" size=${"large" === ke ? "2x-small" : "3x-small"}>
      ${Ve(O, H, oe)}
    </gu-heading-text>
    ${ht(H, B)}
  </div>
`)({text: B, icon: oe, size: H, loading: c, loadingColor: O, leftIconPosition: ke})} `
        }, props: {properties: Be, styles: At}, baseClass: (0, ce.Am)((0, ce.s)((0, ce.Xg)(ge.J)))
    }));
    var _e = o(5284), ot = o(52102);
    const {asCssProp: Ye} = _e.ZB, {gridUnits: vt} = _e.dz, Ut = e.iv`
  :host {
    display: inline-flex;
    justify-content: flex-start;
    cursor: pointer;
  }

  :host,
  :host([kind='small']),
  :host([kind='help']) {
    border-bottom: ${Ye(vt(.25))} solid;
    padding-bottom: ${Ye(vt(.25))};
  }

  :host([kind='large']) {
    border-bottom: ${Ye(vt(.5))} solid;
    padding-bottom: ${Ye(vt(.25))};
  }

  :host([kind='tag']) {
    border-bottom: ${Ye(vt(.5))} solid;
    padding-bottom: ${Ye(vt(.25))};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    border-color: ${Ye(n.colors.gold[300])};
    color: ${Ye(n.colors.gold[300])};
  }
`;
    let nt = class extends ((0, ce.Xg)(ot._)) {
        static get styles() {
            const c = [];
            return super.styles && c.push(super.styles), c.push(Ut), c
        }

        static get properties() {
            return Object.assign(Object.assign({}, super.properties), $e)
        }
    };
    nt = (0, r.gn)([(0, _.M)("gu-simple-text-button")], nt);
    const es = Object.assign(Object.assign({}, Be), {
        iconColor: {type: String},
        fillColor: {type: String},
        fillColorHover: {type: String},
        fillGradient: {type: String},
        fillGradientTarget: {type: String},
        backgroundFillColor: {type: String},
        backgroundFillColorHover: {type: String},
        backgroundFillGradient: {type: String},
        backgroundFillGradientTarget: {type: String},
        borderColor: {type: String},
        borderColorHover: {type: String},
        verticalLayout: {type: Boolean},
        square: {type: Boolean}
    });
    customElements.define("gu-plain-square-button", (0, Se.x)({
        renderer: function ({
                                text: B,
                                loading: c,
                                loadingColor: O,
                                icon: H,
                                iconColor: oe,
                                leftIconPosition: ke,
                                fillColor: Le,
                                fillColorHover: je,
                                fillGradient: ft,
                                fillGradientTarget: Gt,
                                backgroundFillColor: St,
                                backgroundFillColorHover: Tt,
                                backgroundFillGradient: pt,
                                backgroundFillGradientTarget: Oe,
                                borderColor: Ae,
                                borderColorHover: $t,
                                verticalLayout: Ie,
                                square: et
                            }) {
            return (0, q.d4)(() => {
                (0, h.updateColoringVariables)({
                    component: this,
                    iconColor: oe,
                    fillColor: Le,
                    fillColorHover: je,
                    fillGradient: ft,
                    fillGradientTarget: Gt,
                    backgroundFillColor: St,
                    backgroundFillColorHover: Tt,
                    backgroundFillGradient: pt,
                    backgroundFillGradientTarget: Oe,
                    borderColor: Ae,
                    borderColorHover: $t
                })
            }, [oe, Le, je, ft, Gt, St, Tt, pt, Oe, Ae, $t]), e.dy`${(({
                                                                           icon: B,
                                                                           leftIconPosition: c,
                                                                           text: O,
                                                                           loading: H,
                                                                           loadingColor: oe,
                                                                           verticalLayout: ke,
                                                                           square: Le
                                                                       }) => e.dy`
  <div
    class=${(0, y.$)({
                buttonContent: !0,
                "buttonContent--leftIcon": c,
                "buttonContent--vertical": ke,
                "buttonContent--square": Le
            })}
  >
    <gu-paragraph-text class="buttonContent__text" kind=${ke ? "tag" : "small"} fontWeight="bold">
      ${Ve(O, H, oe)}
    </gu-paragraph-text>
    ${ht(H, B)}
  </div>
`)({icon: H, leftIconPosition: ke, loading: c, loadingColor: O, text: B, verticalLayout: Ie, square: et})}`
        }, props: {properties: es, styles: it}, baseClass: (0, ce.Am)((0, ce.s)((0, ce.Xg)(ge.J)))
    }));
    var jt = (() => {
        return (B = jt || (jt = {})).img2text = "img2text", B.text2img = "text2img", jt;
        var B
    })();
    let Vt = class extends e.oi {
        constructor() {
            super(...arguments), this.direction = jt.img2text, this.headerSize = "small", this.headerColor = n.colors.light[100], this.textKind = "small", this.textColor = n.colors.light[500], this.backgroundPosition = "top", this.backgroundSize = "contain", this.headerResponsiveSize = [], this.textResponsiveKind = [], this.backgroundImageResponsive = [], this.breakpoint = "medium"
        }

        static get properties() {
            return {
                background: {type: String},
                direction: {type: String},
                header: {type: String},
                headerSize: {type: String},
                headerColor: {type: String},
                text: {type: String},
                textKind: {type: String},
                textColor: {type: String},
                backgroundPosition: {type: String},
                backgroundSize: {type: String},
                headerResponsiveSize: {type: Array},
                textResponsiveKind: {type: Array},
                backgroundImageResponsive: {type: Array},
                breakpoint: {type: String}
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
      }
      .flex-box-col {
        display: flex;
        flex-direction: column;
      }
      .character {
        display: flex;
        background-repeat: no-repeat;
        border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.dark[500])};
        align-items: flex-end;
        justify-content: center;
        min-height: 450px;
      }
      .character-text {
        box-sizing: border-box;
        margin: 280px 20px 20px;
        width: 100%;
        padding-left: 20px;
        border-left: 4px solid ${(0, t.asCssProp)(n.colors.gold[500])};
        text-align: left;
      }
      @media only screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping["x-small"])}) ) {
        .character {
          height: 440px;
        }
        .character-text {
          margin: 40px;
        }
      }
    `
        }

        generateBackgroundImageMediaQueries() {
            return this.backgroundImageResponsive.map(({
                                                           breakpoint: c,
                                                           pos: O,
                                                           size: H
                                                       }) => `\n        @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping[c])}) {\n          .character {\n            background-image: ${["x-small", "small"].includes(c) ? "linear-gradient(to bottom, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 1) 80%), " : ""}\n            url('${this.background}') !important;\n            background-position: ${(0, t.asCssProp)(O)} !important;\n            background-size: ${(0, t.asCssProp)(H)} !important;\n          }\n        }\n    `).join("\n")
        }

        generateMediaQueries() {
            return `\n      /* DEFINE RESPONSIVE SIZING */\n      ${this.generateBackgroundImageMediaQueries()}\n        @media\n        screen\n        and\n        (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping[this.breakpoint])}) {\n        .character {\n          flex-direction: column !important;\n          align-items: flex-end !important;\n          justify-content: center !important;\n        }\n        .character-img2text {\n          align-items: flex-end !important;\n        }\n        .character-text2img {\n          align-items: flex-start !important;\n        }\n        .character-text {\n          width: 50% !important;\n          margin: 20px !important;\n        }\n        .character-text-img2text {\n          padding-left: 0 !important;\n          border-left: none !important;\n          padding-right: 20px !important;\n          border-right: 4px solid ${(0, t.asCssProp)(n.colors.gold[500])} !important;\n          text-align: right !important;\n        }\n        .character-text-text2img {\n          padding-right: 0 !important;\n          border-right: none !important;\n          padding-left: 20px !important;\n          border-left: 4px solid ${(0, t.asCssProp)(n.colors.gold[500])} !important;\n          text-align: left !important;\n        }\n      }`
        }

        generateAllStyles() {
            return e.dy`<style>
      .character {
        background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 1) 45%),
          url('${this.background}');
        background-color: #000;
        background-position: ${this.backgroundPosition};
        background-size: ${this.backgroundSize};
      }
      ${this.generateMediaQueries()}
    </style>`
        }

        render() {
            return e.dy`
      ${this.generateAllStyles()}
      <div class="character character-${this.direction} ">
        <div class="character-text character-text-${this.direction}">
          <gu-heading-text
            class="character-textAllignment"
            fillcolor="${this.headerColor}"
            size="${this.headerSize}"
            .responsiveSize=${this.headerResponsiveSize}
          >
            ${this.header}
          </gu-heading-text>
          <gu-vertical-space both="medium"></gu-vertical-space>
          <gu-paragraph-text
            class="character-textAllignment"
            fillcolor="${this.textColor}"
            kind="${this.textKind}"
            .responsiveKind=${this.textResponsiveKind}
          >
            ${this.text}
          </gu-paragraph-text>
        </div>
      </div>
    `
        }
    };
    Vt = (0, r.gn)([(0, _.M)("gu-card-character")], Vt);
    var mt = o(7302), qe = o(49219);
    const Nt = B => `https://images.godsunchained.com/cardpack-images--${B}`, Kt = B => "undefined" === B || !B;
    let de = class extends e.oi {
        constructor() {
            super(...arguments), this.type = "marketing", this.responsiveSrcsetSizes = `${qe.imageQualities.normal}px`
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        width: 100%;
      }

      .picture {
        display: block;
        width: 100%;
        padding-bottom: 100%;
        position: relative;
      }

      .picture--marketing {
        padding-bottom: 128%;
      }

      .image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        transition: opacity 0.2s ease-in-out;

        -webkit-touch-callout: none;
        -webkit-user-drag: none;
      }

      :host(.loading) .image {
        opacity: 0;
      }
    `
        }

        update(c) {
            c.has("god") && (this.sanitizedGod = "all" === this.god || "core" === this.god ? "neutral" : this.god), super.update(c)
        }

        updated(c) {
            super.updated(c), this.image && (this.image.complete ? (this.classList.remove("loading", "error"), this.notifyState("loaded")) : (this.classList.remove("error"), this.classList.add("loading"), this.notifyState("loading"), (0, i.waitForImageToLoad)(this.image).then(() => {
                this.classList.remove("loading", "error"), this.notifyState("loaded")
            }).catch(() => {
                this.classList.remove("loading"), this.classList.add("error"), this.notifyState("error")
            })))
        }

        notifyState(c) {
            this.dispatchEvent(new CustomEvent(c, {detail: this, bubbles: !1, composed: !1}))
        }

        render() {
            const {type: c, set: O, rarity: H, sanitizedGod: oe, responsiveSrcsetSizes: ke} = this;
            return Kt(c) || Kt(O) || Kt(oe) || Kt(H) ? e.dy`` : e.dy`
      <picture class="picture picture--${c}">
        <source
          srcset=${Object.keys(qe.imageQualities).map(Le => {
                const je = qe.imageQualities[Le];
                return `${Nt(c)}/${je}/${O}--${oe}--${H}.webp ${je}w`
            }).join(", ")}
          type="image/webp"
          sizes="${ke}"
        />
        <source
          srcset=${Object.keys(qe.imageQualities).map(Le => {
                const je = qe.imageQualities[Le];
                return `${Nt(c)}/${je}/${O}--${oe}--${H}.png ${je}w`
            }).join(",")}
          type="image/png"
          sizes="${ke}"
        />
        <img
          class="image"
          src="${Nt(c)}/${qe.imageQualities.small}/${O}--${oe}--${H}.png"
          alt="Card Pack Image"
        />
      </picture>
    `
        }
    };
    (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], de.prototype, "set", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], de.prototype, "rarity", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], de.prototype, "god", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], de.prototype, "type", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", Object)], de.prototype, "responsiveSrcsetSizes", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", String)], de.prototype, "sanitizedGod", void 0), (0, r.gn)([(0, S.I)(".image"), (0, r.w6)("design:type", HTMLImageElement)], de.prototype, "image", void 0), de = (0, r.gn)([(0, _.M)("gu-card-pack-picture")], de);
    const bt = (B, c) => `https://card.godsunchained.com/?id=${B}&q=${c}`;
    let Rt = class extends e.oi {
        constructor() {
            super(...arguments), this.quality = 1, this.protoId = 1, this.responsiveSrcsetSizes = `${qe.imageQualities.normal}px`, this.showLoadingState = !1
        }

        updated(c) {
            super.updated(c), (c.has("protoId") || c.has("quality")) && (this.classList.add("loading"), (0, i.waitForImageToLoad)(this.image).then(() => this.classList.remove("loading")))
        }

        render() {
            return e.dy`
      <picture class="picture">
        <source
          srcset=${Object.keys(qe.imageQualities).map(c => {
                const O = qe.imageQualities[c];
                return `${bt(this.protoId, this.quality)}&w=${O} ${O}w`
            }).join(", ")}
          type="image/webp"
          sizes="${this.responsiveSrcsetSizes}"
        />
        <source
          srcset=${Object.keys(qe.imageQualities).map(c => {
                const O = qe.imageQualities[c];
                return `${bt(this.protoId, this.quality)}&w=${O}&png=true ${O}w`
            }).join(", ")}
          type="image/png"
          sizes="${this.responsiveSrcsetSizes}"
        />
        <img
          class="image"
          src="${bt(this.protoId, this.quality)}&w=${qe.imageQualities.small}&png=true"
          alt="Card Pack Image"
        />
      </picture>
      <gu-icon iconLigature="action_hidePassword" class="loadingIcon"></gu-icon>
    `
        }
    };
    Rt.styles = e.iv`
    :host {
      position: relative;
      display: block;
      width: 100%;
    }

    :host(.loading) .image {
      opacity: 0.9;
    }

    :host(.loading) .loadingIcon {
      opacity: 0.9;
    }

    .picture {
      display: block;
      width: 100%;
      padding-bottom: 134.75%; /* ratio of card images is: 1.347583643122677 */
      position: relative;
    }

    .image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .loadingIcon {
      position: absolute;
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
      color: ${(0, t.asCssProp)(n.colors.light[100])};
      opacity: 0;
    }
  `, (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Rt.prototype, "quality", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Rt.prototype, "protoId", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], Rt.prototype, "responsiveSrcsetSizes", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], Rt.prototype, "showLoadingState", void 0), (0, r.gn)([(0, S.I)("img.image"), (0, r.w6)("design:type", HTMLImageElement)], Rt.prototype, "image", void 0), Rt = (0, r.gn)([(0, _.M)("gu-card-picture")], Rt);
    var Vs = o(71459), Ks = o.n(Vs), Qt = o(49749), Qs = o(63082), Ss = o.n(Qs);
    const ts_ALL = "slidesListing__slide", ts_CURRENT = "slidesListing__slide--currentSlide", Ps = new s.do(B => {
        B.forEach(c => {
            c.target.handleResize()
        })
    });
    let Xe = class extends e.oi {
        constructor() {
            super(...arguments), this.slidesPerView = 1, this.spaceBetween = 0, this.centeredSlides = !1, this.responsiveBreakpoints = [], this.state = {
                leftLocked: !1,
                rightLocked: !1,
                translateRatio: 1,
                slidesPerView: 1,
                spaceBetween: 0,
                specialRemainderSlideActive: !1,
                lockTranslateX: null,
                hasRemainderSlide: !1,
                translateX: 0,
                startTranslateX: 0,
                currentSlideIndexes: [],
                totalSlidesCount: 0,
                centeredSlides: !1
            }, this.dimensions = {
                width: 0,
                height: 0,
                slideWidth: 0,
                totalWidth: 0,
                slideCenteringSideMargin: 0,
                left: 0,
                top: 0
            }, this.debouncedResize = Ss()(() => {
                this.layoutSlides(), this.updatePaneClasses(), this.reset()
            }, 500)
        }

        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: block;
        position: relative;
        overflow: hidden;
      }

      .slidesListing {
        display: flex;
        align-items: flex-start;
        height: 100%;
        overflow: hidden;
        position: relative;
        transition: height ${250}ms ease-in-out;
      }

      ::slotted(.slidesListing__slide) {
        display: flex;
        flex-shrink: 0;
        flex-grow: 0;
      }

      ::slotted(.slideListing__slide--currentSlide) {
        z-index: 1;
      }
    `
        }

        static get properties() {
            return {
                slidesPerView: {type: Number},
                spaceBetween: {type: Number},
                centeredSlides: {type: Boolean},
                responsiveBreakpoints: {type: Array}
            }
        }

        firstUpdated() {
            Ps.observe(this), this.slidesListingDom = this.shadowRoot.querySelector(".slidesListing"), this.gestureControl = new (Ks())(this, {
                sensitivity: 0,
                swipeVelocity: 60,
                passive: !1,
                capture: !0,
                startDirectionLoopCount: 1
            }), this.gestureControl.on("pan.prestart", c => {
                c.sourceEvent instanceof MouseEvent && c.sourceEvent.preventDefault()
            }), this.gestureControl.on("pan.start", c => this.onPanStart(c)), this.gestureControl.on("pan.all", c => this.onPan(c)), this.gestureControl.on("pan.end", c => this.onPanEnd(c)), this.storeSlideDoms(), this.handleResize(), this.updatePaneClasses()
        }

        disconnectedCallback() {
            this.gestureControl.destroy(), Ps.unobserve(this), super.disconnectedCallback()
        }

        get onLastSlide() {
            const {state: {currentSlideIndexes: c}} = this;
            return this.state.centeredSlides ? c[c.length - 1] >= this.state.totalSlidesCount : c[c.length - 1] >= this.state.totalSlidesCount - 1
        }

        get onFirstSlide() {
            return 0 === this.state.currentSlideIndexes[0]
        }

        get isMultiSlide() {
            return this.state.slidesPerView > 1
        }

        get hasRemainderSlide() {
            return this.state.slidesPerView - Math.floor(this.state.slidesPerView) != 0
        }

        layoutSlides() {
            this.slidesListingDom.style.width = `${this.dimensions.totalWidth + 2 * this.dimensions.slideCenteringSideMargin}px`, Qt.p8.set(this.slideDoms, {
                width: this.dimensions.slideWidth,
                marginLeft: c => this.state.centeredSlides && 0 === c ? this.dimensions.slideCenteringSideMargin : 0,
                marginRight: c => c === this.state.totalSlidesCount - 1 ? this.dimensions.slideCenteringSideMargin : this.state.spaceBetween
            })
        }

        onPanStart(c) {
            this.slidesListingDom.style.cursor = "grabbing", this.direction = null, this.state.startTranslateX = 0 === this.state.currentSlideIndexes[0] ? 0 : this.state.translateX, this.state.translateX = 0, this.state.rightLocked = !1, this.state.leftLocked = !1, this.setXTrans("left", 0)
        }

        onPan(c) {
            this.setXTrans(c.deltaX < 0 ? "left" : "right", c.deltaX)
        }

        setXTrans(c, O) {
            this.direction = c;
            let H = 1;
            const oe = O * H, ke = this.state.startTranslateX + oe;
            "right" === c && ke >= 0 ? this.state.rightLocked || (this.state.lockTranslateX = oe, this.state.rightLocked = !0) : this.state.rightLocked = !1, "left" === c && this.dimensions.totalWidth - this.dimensions.width + ke + 2 * this.dimensions.slideCenteringSideMargin <= 0 ? this.state.leftLocked || (this.state.lockTranslateX = oe, this.state.leftLocked = !0) : this.state.leftLocked = !1, H = this.state.leftLocked || this.state.rightLocked ? .1 : 1;
            let je = this.state.startTranslateX + oe;
            (this.state.rightLocked || this.state.leftLocked) && (je = this.state.startTranslateX + this.state.lockTranslateX + (O - this.state.lockTranslateX) * H), this.state.translateX = je, this.drawFrame()
        }

        onPanEnd(c) {
            console.log("!!!!!!!! PAN END"), this.slidesListingDom.style.cursor = null;
            const O = Math.abs(this.state.translateX - this.state.startTranslateX),
                H = this.state.slidesPerView > 1 ? .8 : .5;
            let oe = Math.abs(O) / (this.dimensions.slideWidth * H);
            return !this.state.centeredSlides && !this.onLastSlide && Math.abs(this.state.translateX - this.dimensions.width) >= this.dimensions.totalWidth ? this.nextSlides(null, [this.state.totalSlidesCount - 2, this.state.totalSlidesCount - 1, this.state.totalSlidesCount]) : (!this.state.centeredSlides && this.onLastSlide && this.state.hasRemainderSlide && (oe = oe >= .5 ? 1 : oe), Math.floor(oe) >= 1 ? this.state.translateX < this.state.startTranslateX ? this.nextSlides(Math.floor(oe)) : this.prevSlides(Math.floor(oe)) : c.isSwipe ? "right" === c.swipeDirection ? this.prevSlides(1) : "left" === c.swipeDirection ? this.nextSlides(1) : null : this.reset())
        }

        drawFrame() {
            this.resetAnimation && this.resetAnimation.kill(), Qt.p8.set(this.slidesListingDom, {x: this.state.translateX})
        }

        onSlotChange(c) {
            this.storeSlideDoms(), this.updatePaneClasses(), this.setCarouselHeight()
        }

        storeSlideDoms() {
            const c = this.shadowRoot.getElementById("slidesSlot");
            this.slideDoms = c.assignedElements(), this.state.totalSlidesCount = this.slideDoms.length
        }

        updatePaneClasses() {
            this.slideDoms.forEach((c, O) => {
                c.classList.remove(ts_ALL, ts_CURRENT), c.classList.add(ts_ALL), -1 !== this.state.currentSlideIndexes.indexOf(O) && c.classList.add(ts_CURRENT)
            })
        }

        getTransToLastSlide() {
            return -1 * (this.dimensions.totalWidth - this.dimensions.width + 2 * this.dimensions.slideCenteringSideMargin)
        }

        getTransToFirstSlide() {
            const c = this.state.currentSlideIndexes[0];
            return -1 * (c * this.dimensions.slideWidth + this.state.spaceBetween * c)
        }

        reset({duration: c = .25, specialResetForEndOfSlides: O = !1} = {}) {
            O && (this.state.specialRemainderSlideActive = O);
            let H = this.state.specialRemainderSlideActive ? this.getTransToLastSlide() : this.getTransToFirstSlide();
            this.state.centeredSlides && this.onLastSlide && (H = this.getTransToLastSlide()), H !== this.state.translateX && (this.state.translateX = H, this.resetAnimation = Qt.p8.to(this.slidesListingDom, {
                duration: c,
                x: this.state.translateX,
                ease: "power2.inOut"
            })), this.setCarouselHeight()
        }

        setCarouselHeight() {
            if (this.state.centeredSlides) return !1;
            const c = this.getMaxCurrentSlideHeight();
            this.slidesListingDom.style.height = `${c}px`
        }

        getMaxCurrentSlideHeight() {
            return this.state.currentSlideIndexes.reduce((O, H) => {
                const oe = this.slideDoms[H];
                return O < oe.offsetHeight ? oe.offsetHeight : O
            }, 0)
        }

        emitSlideChange(c) {
            let O = this.state.currentSlideIndexes;
            this.state.centeredSlides && (O = O.map(this.onFirstSlide ? (H, oe) => 0 === oe ? null : H - 1 : this.onLastSlide ? (H, oe) => oe === O.length - 1 ? null : H : (H, oe) => H - 1)), this.dispatchEvent(new CustomEvent("onSlideChange", {
                detail: {
                    direction: c,
                    currentActiveSlides: O,
                    atEnd: this.onLastSlide,
                    atStart: this.onFirstSlide
                }
            }))
        }

        incrementCurrentIndexes(c, O) {
            this.state.currentSlideIndexes = c || this.state.currentSlideIndexes.map(H => null === H ? 0 : H + O)
        }

        assignResponsiveVariables(c) {
            const O = this.responsiveBreakpoints.filter(H => {
                const oe = parseInt(k.breakpointSizeMapping[H.minWidth], 10);
                return c >= oe
            }).sort((H, oe) => {
                const ke = parseInt(k.breakpointSizeMapping[H.minWidth], 10);
                return parseInt(k.breakpointSizeMapping[oe.minWidth], 10) - ke
            })[0];
            if (O) {
                const {slidesPerView: H, spaceBetween: oe, minWidth: ke} = O,
                    Le = parseInt(k.breakpointSizeMapping[ke], 10);
                c >= Le && ("number" == typeof H && (this.state.slidesPerView = H), "number" == typeof oe && (this.state.spaceBetween = oe))
            } else this.state.slidesPerView = this.slidesPerView, this.state.spaceBetween = this.spaceBetween;
            1 === this.state.slidesPerView ? (this.state.spaceBetween = 0, this.state.centeredSlides = !1) : this.state.centeredSlides = this.centeredSlides, this.state.currentSlideIndexes.length !== Math.ceil(this.state.slidesPerView) && (this.state.currentSlideIndexes = Array(Math.ceil(this.state.slidesPerView)).fill(0).map((H, oe) => oe))
        }

        nextSlides(c = 1, O) {
            if (this.onLastSlide) return O && this.incrementCurrentIndexes(O), this.reset({specialResetForEndOfSlides: !0});
            this.incrementCurrentIndexes(O, c), this.state.translateX = this.state.startTranslateX + (this.dimensions.slideWidth + this.state.spaceBetween) * c * -1, Qt.p8.to(this.slidesListingDom, {
                duration: .25,
                x: this.state.translateX,
                ease: "power2.inOut",
                onComplete: () => {
                    this.reset(), this.updatePaneClasses(), this.emitSlideChange(this.direction)
                }
            })
        }

        prevSlides(c = 1, O) {
            if (this.onFirstSlide || this.state.specialRemainderSlideActive) return this.state.specialRemainderSlideActive = !1, this.reset();
            this.incrementCurrentIndexes(O, -1 * c), this.state.translateX = this.state.startTranslateX + (this.dimensions.slideWidth + this.state.spaceBetween) * c, Qt.p8.to(this.slidesListingDom, {
                duration: .25,
                x: this.state.translateX,
                ease: "power2.inOut",
                onComplete: () => {
                    this.reset(), this.updatePaneClasses(), this.emitSlideChange(this.direction)
                }
            })
        }

        gotoSlide(c) {
            if (c < 0 || c > this.state.totalSlidesCount - 1 || this.state.centeredSlides) return console.error("Error! Application requested a bad slide index:", c), !1;
            this.state.currentSlideIndexes = this.state.currentSlideIndexes.map(() => c).map((O, H) => O + H), this.reset(), this.emitSlideChange()
        }

        handleResize() {
            const {width: c, height: O, left: H, top: oe} = this.getBoundingClientRect();
            this.assignResponsiveVariables(c);
            const ke = Math.floor(c - this.state.spaceBetween * (this.state.slidesPerView - 1)),
                Le = Math.floor(ke / this.state.slidesPerView),
                je = Math.floor(this.state.totalSlidesCount * Le + this.state.spaceBetween * (this.state.totalSlidesCount - 1)),
                ft = this.state.centeredSlides ? Math.floor(.5 * (c - Le)) : 0;
            this.dimensions = {
                width: c,
                height: O,
                slideWidth: Le,
                totalWidth: je,
                slideCenteringSideMargin: ft,
                left: H,
                top: oe
            }, this.debouncedResize(this.dimensions)
        }

        render() {
            return e.dy`
      <div class="slidesListing">
        <slot id="slidesSlot" @slotchange=${this.onSlotChange}></slot>
      </div>
    `
        }
    };
    Xe = (0, r.gn)([(0, _.M)("gu-carousel")], Xe);
    var Ys = o(89728), ks = o(19444);
    const as = "20px";
    let ws = class extends e.oi {
        constructor() {
            super(...arguments), this.labelText = "", this.size = "normal", this.checked = !1, this.labelPlacement = "left", this.id = "", this.kind = "tag"
        }

        static get properties() {
            return {
                kind: {type: String},
                iconLigature: {type: String},
                labelText: {type: String},
                size: {type: String},
                checked: {type: Boolean},
                labelPlacement: {type: String},
                id: {type: String}
            }
        }

        static get styles() {
            return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  /* DEFAULTS ARE SMALL AND LEFT LABEL PLACEMENT */
  :host {
    display: flex;
    align-items: center;
    position: relative;
    min-height: ${(0, t.asCssProp)(as)};
  }

  :host([size='large']) .checkmark {
    font-size: 20px;
    width: ${(0, t.asCssProp)("30px")};
    height: ${(0, t.asCssProp)("30px")};
  }

  :host([size='large']) .label {
    font-size: ${(0, t.asCssProp)(n.typography.simpleTextSizeMapping.small)};
  }

  :host([labelPlacement='right']) .checkboxLabel {
    padding-right: 15px;
    order: 1;
  }

  :host([labelPlacement='right']) .checkmark {
    order: 2;
    margin-left: auto;
    margin-right: 0;
  }

  :host(:hover) .checkmark {
    border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
  }

  .input {
    cursor: pointer;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    display: block;
    margin: 0;
  }

  .checkmark {
    width: ${(0, t.asCssProp)(as)};
    height: ${(0, t.asCssProp)(as)};
    border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    display: flex;
    flex-shrink: 0;
    font-size: 16px;
    margin-right: 15px;
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))}
  }

  .label {
    position: relative;
  }

  .input:checked ~ .checkmark {
    border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
  }

  /*
  .input:checked ~ .label {
    color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
  }

  .input:checked ~ .checkmark {
    color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
  }
  */
`
        }

        onCheck() {
            this.checked = !this.checked, this.dispatchEvent(new CustomEvent("onCheck", {detail: {checked: this.checked}}))
        }

        render() {
            const {onCheck: c, checked: O, labelText: H, kind: oe} = this, ke = (0, ks.v4)();
            return e.dy`
      <input id=${ke} type="checkbox" class="input" @change=${c} .checked=${O} />
      <gu-icon class="checkmark" iconLigature=${this.checked ? "checkbox_tick" : ""}></gu-icon>
      ${void 0 !== H ? e.dy`
            <label for=${ke} class="label">
              <gu-simple-text .kind=${oe}> ${(0, Ys.A)(H)} </gu-simple-text>
            </label>
          ` : ""}
    `
        }
    };
    ws = (0, r.gn)([(0, _.M)("gu-checkbox-input")], ws), o(62701);
    const Xs = ["days", "hours", "minutes", "seconds"];
    let kt = class extends e.oi {
        constructor() {
            super(...arguments), this.darkBackground = !1, this.targetTime = 1755790779, this.showFields = Xs, this.size = "large", this.simpleTextDisplay = !1, this.simpleTextKind = "small", this.padZeroes = !1, this.getDelta = () => new Date(1e3 * this.targetTime).getTime() - (new Date).getTime(), this.getTimeRemaining = () => {
                const c = this.getDelta();
                let O = Math.floor(c / 864e5), H = Math.floor(c % 864e5 / 36e5), oe = Math.floor(c % 36e5 / 6e4),
                    ke = Math.floor(c % 6e4 / 1e3);
                return O = O < 0 ? 0 : O, H = H < 0 ? 0 : H, oe = oe < 0 ? 0 : oe, ke = ke < 0 ? 0 : ke, {
                    seconds: this.addPadding(`${ke}`),
                    minutes: this.addPadding(`${oe}`),
                    hours: this.addPadding(`${H}`),
                    days: this.addPadding(`${O}`)
                }
            }, this.addPadding = c => c.length < 2 && this.padZeroes ? `0${c}` : c, this.getHeadingTextSize = c => "small" === c ? "small" : "large", this.getDividerHeadingTextSize = c => "small" === c ? "large" : "x-large", this.getSimpleTextKind = c => "small" === c ? "micro" : "small"
        }

        update(c) {
            c.has("targetTime") && this.initializeCounter(), c.has("simpleTextDisplay") && (this.simpleTextDisplay ? this.classList.add("simpleTextMode") : this.classList.remove("simpleTextMode")), super.update(c)
        }

        disconnectedCallback() {
            clearInterval(this.timer)
        }

        initializeCounter() {
            this.timeLeft = this.getTimeRemaining(), clearInterval(this.timer), this.timer = window.setInterval(() => {
                this.timeLeft = this.getTimeRemaining(), this.getDelta() < 0 && (clearInterval(this.timer), this.dispatchEvent(new CustomEvent("onCountdownComplete")))
            }, 1e3)
        }

        maybePluralise(c, O) {
            return 1 === c ? O.replace(/s$/, "") : O
        }

        render() {
            return void 0 === this.timeLeft ? e.dy`` : ((0, h.updateColoringVariables)({
                component: this,
                fillColor: this.fillColor
            }), this.simpleTextDisplay ? e.dy`
          ${this.showFields.map((c, O) => e.dy` <gu-simple-text
              fillColor=${this.fillColor}
              .kind=${this.simpleTextKind}
              align="center"
            >
              ${this.timeLeft[c]}
              ${O < this.showFields.length - 1 ? e.dy`<span class="simpleTextDivider"> : </span>` : null}
            </gu-simple-text>`)}
        ` : e.dy`
          ${this.showFields.map((c, O) => e.dy`
              <div
                class=${(0, y.$)({digit: !0, [`digit--${this.size}`]: !0, darkBackground: this.darkBackground})}
              >
                <gu-heading-text size=${this.getHeadingTextSize(this.size)}> ${this.timeLeft[c]} </gu-heading-text>
                <gu-simple-text
                  fillColor=${this.fillColor}
                  kind=${this.getSimpleTextKind(this.size)}
                  align="center"
                  class="label"
                  .text=${this.maybePluralise(parseInt(this.timeLeft[c], 10), c)}
                ></gu-simple-text>
              </div>
              ${O < this.showFields.length - 1 ? e.dy`<gu-heading-text
                    class="divider divider--${this.size}"
                    size=${this.getDividerHeadingTextSize(this.size)}
                    >:</gu-heading-text
                  >` : null}
            `)}
        `)
        }
    };
    kt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}

    :host {
      display: flex;
      align-items: center;
    }

    :host(.simpleTextMode) {
      display: inline-flex;
    }

    .divider {
      color: ${(0, t.asCssProp)(n.colors.gold[500])};
      margin: ${(0, t.asCssProp)((0, i.gridUnits)(-11))} ${(0, t.asCssProp)((0, i.gridUnits)(.5))} 0;
      line-height: 1;
    }

    .divider--small {
      margin: ${(0, t.asCssProp)((0, i.gridUnits)(-9))} ${(0, t.asCssProp)((0, i.gridUnits)(.5))} 0;
    }

    .divider:last-child {
      display: none;
    }
    .label {
      text-transform: uppercase;
    }

    .digit {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .digit > gu-heading-text {
      width: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
      height: ${(0, t.asCssProp)((0, i.gridUnits)(22))};
      line-height: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
      background: url('/assets/images/countdown-timer/ui-embellishments--digit-background.svg') no-repeat;
      background-size: contain;
      background-position: center top;
      text-align: center;
    }

    .digit.darkBackground > gu-heading-text {
      background: url('/assets/images/countdown-timer/ui-embellishments--digit-dark-background.svg') no-repeat;
      background-size: contain;
      background-position: center top;
    }

    .digit--large > gu-heading-text {
      width: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
      height: ${(0, t.asCssProp)((0, i.gridUnits)(22))};
      line-height: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
      margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
    }

    .digit--small > gu-heading-text {
      width: ${(0, t.asCssProp)((0, i.gridUnits)(15))};
      height: ${(0, t.asCssProp)((0, i.gridUnits)(17))};
      line-height: ${(0, t.asCssProp)((0, i.gridUnits)(15))};
      margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(2.5))};
    }
  `, (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Boolean)], kt.prototype, "darkBackground", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], kt.prototype, "targetTime", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Array)], kt.prototype, "showFields", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], kt.prototype, "fillColor", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], kt.prototype, "size", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Boolean)], kt.prototype, "simpleTextDisplay", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], kt.prototype, "simpleTextKind", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Boolean)], kt.prototype, "padZeroes", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], kt.prototype, "timeLeft", void 0), kt = (0, r.gn)([(0, _.M)("gu-countdown-timer")], kt);
    const Os = (0, t.asCssProp)(`${n.measurements.standardBorderSize} solid ${n.colors.gold[500]}`);
    let Ms = class extends e.oi {
        constructor() {
            super(...arguments), this.expanded = !1, this.selectedId = "", this.items = [], this.placeholderText = ""
        }

        static get styles() {
            return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: block;
    position: relative;
  }

  .dropdownToggle {
    display: block;
    cursor: pointer;
    border-bottom: ${Os};
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .dropdownToggle--expanded {
  }

  .dropdownMenu {
    position: absolute;
    height: 0px;
    right: 0;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    ${(0, t.asCssProp)(n.animation.standardTransition("height"))}
  }

  .dropdownMenu--expanded {
    height: auto;
    background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    border-right: ${Os};
    padding: ${(0, t.asCssProp)(`${_e.dz.gridUnits(2)}`)} 0;
    z-index: 1;
  }

  .dropdownMenu__item {
    padding: ${(0, t.asCssProp)(`${_e.dz.gridUnits(2)} ${_e.dz.gridUnits(4)};`)};
    cursor: pointer;
    margin: 0;
    white-space: nowrap;
    text-align: right;
  }

  .dropdownMenu__item--selected {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .dropdownMenu__item:hover {
    color: ${(0, t.asCssProp)(n.colors.light[100])};
  }
`
        }

        static get properties() {
            return {
                expanded: {type: Boolean},
                selectedId: {type: String},
                items: {type: Array},
                placeholderText: {type: String}
            }
        }

        toggleMenu(c) {
            c.stopPropagation(), this.expanded = !this.expanded
        }

        get selectedItem() {
            return this.items ? this.items.find(c => c.id === this.selectedId) : null
        }

        selectDropDownItem(c) {
            this.selectedId = c, this.expanded = !1, this.dispatchEvent(new CustomEvent("onSelect", {detail: {item: this.selectedItem}}))
        }

        render() {
            return e.dy`
      <gu-simple-text
        class=${(0, y.$)({dropdownToggle: !0, "dropdownToggle--expanded": this.expanded})}
        @click=${this.toggleMenu}
        kind="tag"
      >
        <gu-vertical-space bottom="x-small">
          ${this.selectedItem ? this.selectedItem.name : this.placeholderText}
        </gu-vertical-space>
      </gu-simple-text>

      <div
        class=${(0, y.$)({dropdownMenu: !0, "dropdownMenu--expanded": this.expanded})}
      >
        ${this.items.map(c => e.dy`
            <gu-simple-text
              class=${(0, y.$)({dropdownMenu__item: !0, "dropdownMenu__item--selected": c.id === this.selectedId})}
              @click=${() => this.selectDropDownItem(c.id)}
              kind="tag"
            >
              ${c.name}
            </gu-simple-text>
          `)}
      </div>
    `
        }
    };
    Ms = (0, r.gn)([(0, _.M)("gu-dropdown")], Ms), o(99454);
    let It = class extends e.oi {
        constructor() {
            super(...arguments), this.time = ""
        }

        static get styles() {
            return e.iv`
      :host {
        width: 84px;
      }
    `
        }

        start() {
            this.timer || (this.updateTime(), this.timer = setInterval(() => this.updateTime(), 1e3))
        }

        updateTime() {
            const c = new Date, O = Math.floor((this.target.getTime() - c.getTime()) / 1e3), H = [];
            O > 604800 && H.push(this.withUnit(Math.floor(O / 604800), "w")), O > 86400 && H.push(this.withUnit(Math.floor(O % 604800 / 86400), "d")), O > 3600 && H.push(this.withUnit(Math.floor(O % 86400 / 3600), "h")), O > 60 && H.push(this.withUnit(Math.floor(O % 3600 / 60), "min")), H.push(this.withUnit(O % 60, "s")), this.time = H.join(" "), this.requestUpdate("time")
        }

        withUnit(c, O) {
            return `${Math.max(c, 0)}${O}`
        }

        stop() {
            this.timer && clearInterval(this.timer), this.time = "", this.timer = void 0, this.requestUpdate("time")
        }

        render() {
            return this.target ? this.start() : this.stop(), e.dy`${this.time}`
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Date)], It.prototype, "target", void 0), It = (0, r.gn)([(0, _.M)("gu-game-mode-timer")], It);
    let Zt = class extends e.oi {
        constructor() {
            super(...arguments), this.isRunning = !1, this.complete = !1, this.type = "", this.images = {
                "": "",
                tutorial: "/assets/images/game-modes/options/tutorial.png",
                solo: "/assets/images/game-modes/options/solo.png",
                "server-solo": "/assets/images/game-modes/options/solo.png",
                ranked: "/assets/images/game-modes/options/ranked.png",
                sealed: "/assets/images/game-modes/options/ranked.png",
                "direct-challenge": "/assets/images/game-modes/options/direct-challenge.png"
            }
        }

        static get styles() {
            return e.iv`
      :host {
        height: 100%;
        display: flex;
        place-content: stretch stretch;
        overflow: hidden;
        margin: 0 0 0 -8px;
        padding: 0 8px;
      }

      .game-mode-options {
        display: flex;
        flex: 1 1 auto;
        flex-direction: column;
        background: linear-gradient(
            180deg,
            rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.gunmetal[900]))}, 0.7) 0%,
            #0c1620 100%
          ),
          var(--image, ''), ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        background-size: cover;
        background-position: center;
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
        place-content: stretch stretch;
        opacity: 1;
        transition: opacity 0.25s ease, transform 0.25s cubic-bezier(0.42, 0.01, 0.54, 1.31);
        overflow: hidden;
        padding: 12px;
      }

      .game-mode-options--hidden {
        opacity: 0;
        transform: translateX(100%);
      }

      .game-mode-options__actions {
        margin: 16px 0 0 0;
      }

      .game-mode-options__scroll-area {
        flex: 1 1 auto;
        overflow: hidden;
        overflow-y: scroll;
        display: flex;
        flex-direction: column;
        place-content: stretch flex-start;
        margin: -12px -8px -12px -12px;
        padding: 12px 4px 12px 12px;
        -webkit-mask-image: linear-gradient(0deg, transparent, black 16px, black calc(100% - 16px), transparent);
      }

      ${(0, t.asCssProp)((0, t.styleScrollbars)(".game-mode-options__scroll-area"))}

      .game-mode-options__timer,
      .game-mode-options__description {
        margin: 4px 0;
      }

      .game-mode-options__extra {
        vertical-align: baseline;
        transform: translateY(3px) scale(90%);
      }
    `
        }

        startGame() {
            this.dispatchEvent(new CustomEvent("startGame", {detail: Object.assign({}, this.gameMode)}))
        }

        renderStartButton() {
            return e.dy`
      <gu-button-group class="game-mode-options__actions">
        <gu-gilded-hex-button
          data-test-id="launch-game-cta"
          size="large"
          .disabled=${this.isRunning || !this.complete}
          .loading=${this.isRunning}
          @click=${this.startGame}
        >
          Start
        </gu-gilded-hex-button>
      </gu-button-group>
    `
        }

        renderActions() {
            return this.renderStartButton()
        }

        renderHeader() {
            var c, O, H, oe;
            return e.dy`
      <gu-vertical-space bottom="small" data-test-id="game-mode-options-header">
        <gu-heading-text
          class="game-mode-options__title"
          size="x-small"
          data-test-id="game-mode-title"
          fillGradient="gradients.gold.simple"
        >
          ${null !== (O = null === (c = this.gameMode) || void 0 === c ? void 0 : c.name) && void 0 !== O ? O : ""} ${this.renderTitleExtras()}
        </gu-heading-text>
        ${this.renderCountdownTimer()}
        <gu-paragraph-text
          class="game-mode-options__description"
          kind="micro"
          fillColor="white"
          data-test-id="game-mode-description"
        >
          ${null !== (oe = null === (H = this.gameMode) || void 0 === H ? void 0 : H.description) && void 0 !== oe ? oe : ""}
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }

        renderCountdownTimer() {
            var c, O;
            return null !== (O = null === (c = this.gameMode) || void 0 === c ? void 0 : c.expiry) && void 0 !== O && O ? Math.floor((this.gameMode.expiry.getTime() - (new Date).getTime()) / 1e3) > 7776e3 ? e.dy`` : e.dy`
      <gu-paragraph-text
        class="game-mode-options__timer"
        kind="micro"
        fontWeight="bold"
        fillColor="${(0, t.asCssProp)(n.colors.gunmetal[100])}"
      >
        <gu-game-mode-timer .target=${this.gameMode.expiry} data-test-id="game-mode-timer"></gu-game-mode-timer>
      </gu-paragraph-text>
    ` : e.dy``
        }

        renderTitleExtras() {
            var c, O;
            return null !== (O = null === (c = this.gameMode) || void 0 === c ? void 0 : c.ranked) && void 0 !== O && O ? e.dy`<gu-icon class="game-mode-options__extra" iconLigature="flux_symbol"></gu-icon>` : e.dy``
        }

        render() {
            var c;
            return this.gameMode && (this.type = this.gameMode.key), this.style.setProperty("--image", `url(${null !== (c = this.images[this.type]) && void 0 !== c ? c : ""})`), e.dy`
      <div
        class=${(0, y.$)({
                "game-mode-options": !0,
                [`game-mode-options--${this.type}`]: "" !== this.type,
                "game-mode-options--hidden": "" === this.type
            })}
      >
        <div class="game-mode-options__scroll-area">
          ${this.renderHeader()}
          <slot class="game-mode-options__body" data-test-id="game-mode-options-body"></slot>
        </div>
        ${this.renderActions()}
      </div>
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Zt.prototype, "gameMode", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Zt.prototype, "isRunning", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], Zt.prototype, "error", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Zt.prototype, "complete", void 0), Zt = (0, r.gn)([(0, _.M)("gu-game-mode-panel")], Zt);
    let os = class extends e.oi {
        constructor() {
            super(...arguments), this.gameModes = [], this.images = {
                tutorial: "/assets/images/game-modes/selector/tutorial.png",
                solo: "/assets/images/game-modes/selector/solo.png",
                "server-solo": "/assets/images/game-modes/selector/solo.png",
                ranked: "/assets/images/game-modes/selector/ranked.png",
                sealed: "/assets/images/game-modes/selector/ranked.png",
                "direct-challenge": "/assets/images/game-modes/selector/direct-challenge.png"
            }
        }

        static get properties() {
            return {gameModes: {type: Array}, active: {type: Object}}
        }

        static get styles() {
            return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        width: 100%;
        height: 100%;
        display: block;
        overflow-y: scroll;
      }

      :host::-webkit-scrollbar {
        display: none;
      }

      .game-modes {
        display: flex;
        flex-direction: column;
        padding: 4px 12px 4px 8px;
        margin: 0;
        position: relative; // apply stacking context on iOS, thereby avoiding scrolling issues
        z-index: 1; // apply stacking context on iOS, thereby avoiding scrolling issues
      }

      .game-mode-tile {
        display: block;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        border-radius: 4px;
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);
        background-position: center center;
        background-size: cover;
        margin: 4px 0;
        transition: transform 0.5s ease;
        user-select: none;
      }

      .game-mode-tile--active {
        transform: translateX(4px);
      }

      .game-mode-tile--active .game-mode-tile__link {
        border: 1px solid #54bbcd;
        box-shadow: 0 0 8px #8be1e0;
      }

      .game-mode-tile__link {
        display: block;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        background: linear-gradient(270deg, rgba(15, 27, 39, 0.2) 0%, rgba(15, 27, 39, 0.7) 43.4%, #0f1b27 100%);
        padding: 8px 12px 8px 12px;
        border-radius: 4px;
        text-decoration: none;
        height: 54px;
        position: relative;

        -webkit-touch-callout: none;
        -webkit-user-drag: none;
      }

      .game-mode-tile__title {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0 0 8px 0;
      }

      .game-mode-tile__title,
      .game-mode-tile__description {
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.75);
      }

      .game-mode-tile__description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .game-mode-tile__extra {
        position: absolute;
        font-size: 24px;
        right: 4px;
        top: 4px;
        text-color: black;
        background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
        border-radius: 4px;
        box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);
        padding: 2px;
      }

      ${(0, t.asCssProp)((0, t.listReveal)(".game-mode-tile"))}
    `
        }

        onClick(c) {
            this.active = c, this.dispatchEvent(new CustomEvent("gameModeSelection", {
                detail: c,
                bubbles: !0,
                composed: !0
            }))
        }

        renderTile(c) {
            var O;
            return e.dy`
      <li
        class=${(0, y.$)({"game-mode-tile": !0, "game-mode-tile--active": this.active && this.active.key === c.key})}
        style="background-image: url(${null !== (O = this.images[c.key]) && void 0 !== O ? O : this.images.solo});"
      >
        <a
          class="game-mode-tile__link"
          data-test-id="game-mode-tile-link"
          href="javascript:void(0)"
          @click=${() => this.onClick(c)}
        >
          <gu-heading-text class="game-mode-tile__title" size="2x-small" fillColor="${n.colors.light[100]}">
            ${c.name}
          </gu-heading-text>
          <gu-paragraph-text class="game-mode-tile__description" kind="micro" fillColor="${n.colors.light[100]}">
            ${c.description}
          </gu-paragraph-text>
          ${this.renderExtras(c)}
        </a>
      </li>
    `
        }

        renderExtras(c) {
            return c.ranked ? e.dy`
        <div class="game-mode-tile__extra">
          <gu-icon iconLigature="flux_symbol" fillColor="black"></gu-icon>
        </div>
      ` : e.dy``
        }

        render() {
            return e.dy`
      <ul class="game-modes">
        ${this.gameModes.map(c => this.renderTile(c))}
      </ul>
    `
        }
    };
    os = (0, r.gn)([(0, _.M)("gu-game-modes")], os);
    let Dt = class extends e.oi {
        constructor() {
            super(...arguments), this.time = "00:00"
        }

        static get properties() {
            return {started: {type: Object}}
        }

        static get styles() {
            return e.iv`
      :host {
        width: 84px;
      }
    `
        }

        start() {
            this.timer || (this.timer = setInterval(() => {
                const c = new Date, O = Math.floor((c.getTime() - this.started.getTime()) / 1e3),
                    H = ("00" + Math.floor(O / 60)).substr(-2, 2), oe = ("00" + O % 60).substr(-2, 2);
                this.time = `${H}:${oe}`, this.requestUpdate("time")
            }, 1e3))
        }

        stop() {
            this.timer && clearInterval(this.timer), this.time = "00:00", this.timer = void 0, this.requestUpdate("time")
        }

        render() {
            return this.started ? this.start() : this.stop(), e.dy` <gu-heading-text size="medium" data-test-id="queue-time">${this.time}</gu-heading-text> `
        }
    };
    Dt = (0, r.gn)([(0, _.M)("gu-queue-timer")], Dt);
    let ps = class extends e.oi {
        constructor() {
            super(...arguments), this.type = "queue"
        }

        static get properties() {
            return {gameMode: {type: Object}, type: {type: String}, queueStarted: {type: Date}}
        }

        static get styles() {
            return e.iv`
      :host {
        position: absolute;
        width: 100%;
        bottom: 0;
        height: 0;
        transition: transform 1s ease;
        transform: translateY(70px);
      }

      :host(.visible) {
        transform: translateY(0);
      }

      .game-queue-panel__finish {
        content: '';
        position: absolute;
        bottom: 0;
        display: block;
        height: 4px;
        width: 100%;
        left: 0;
        background: ${(0, t.asCssProp)(n.gradients.gold.mirror("left"))};
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
      }

      .game-queue-panel__content {
        position: absolute;
        bottom: 0;
        left: 50%;
        height: 60px;
        width: 50%;
        display: flex;
        place-content: stretch stretch;
        overflow: hidden;
      }

      .game-queue-panel__content::before {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        transform: skew(-15deg) translateX(15px);
        display: block;
        height: 60px;
        width: 50vw;
        background: ${(0, t.asCssProp)(n.gradients.gunmetal.simple("left"))};
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
        z-index: -1;
      }

      .game-queue-panel__left,
      .game-queue-panel__right {
        display: flex;
        place-content: center;
        flex: 1 1 auto;
        width: 40%;
      }

      .game-queue-panel__devider {
        width: 2px;
        flex: 0 0 auto;
        background: linear-gradient(180deg, rgba(198, 160, 82, 0) 0%, #fff2d8 50.99%, rgba(198, 160, 82, 0) 100%);
        margin: 8px 12px 12px 12px;
      }

      .game-queue-panel__left {
        text-align: right;
        padding-left: 28px;
        flex-direction: column;
      }

      .game-queue-panel__right {
        flex-direction: row;
        place-items: center;
        gap: 8px;
        flex-wrap: nowrap;
        flex: 0 1 0;
        padding-right: 8px;
      }

      .ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    `
        }

        handleCancelButton() {
            this.dispatchEvent(new CustomEvent("cancel", {detail: this.gameMode}))
        }

        render() {
            return this.classList.toggle("visible", !!this.gameMode), e.dy`
      <div
        data-test-id="game-queue-panel-panel"
        class=${(0, y.$)({
                "game-queue-panel__content": !0,
                [`game-queue-panel__content--type-${this.gameMode ? this.gameMode.key : ""}`]: !!this.gameMode
            })}
        data-test-id="game-queue-panel"
      >
        <div class="game-queue-panel__left">
          <gu-simple-text kind="tag" fillColor="${n.colors.gunmetal[100]}" align="right">
            ${this.gameMode ? "In Queue" : " "}
          </gu-simple-text>
          <gu-heading-text class="ellipsis" size="x-small" fillColor="white" align="right">
            ${this.gameMode ? this.gameMode.name : " "}
          </gu-heading-text>
        </div>
        <div class="game-queue-panel__devider"></div>
        <div class="game-queue-panel__right">
          <gu-queue-timer data-test-id="queue-timer" .started=${this.queueStarted}></gu-queue-timer>
          <gu-circular-close-button
            data-test-id="queue-cancel-button"
            @click=${this.handleCancelButton}
          ></gu-circular-close-button>
        </div>
      </div>
      <div class="game-queue-panel__finish"></div>
    `
        }
    };
    ps = (0, r.gn)([(0, _.M)("gu-game-queue-panel")], ps);
    let dt = class extends e.oi {
        render() {
            return e.dy`<slot></slot>`
        }
    };
    dt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}
    :host {
      height: ${(0, t.asCssProp)(`${n.measurements.standardHeaderAlertBarHeight}px`)};
      position: relative;
      display: flex;
      background: ${(0, t.asCssProp)(n.colors.light[100])};
    }
  `, dt = (0, r.gn)([(0, _.M)("gu-header-alert-bar")], dt);
    const Bt = (0, i.gridUnits)(5), eo = (0, i.gridUnits)(5), Ts = (0, i.gridUnits)(8), $s = (0, i.gridUnits)(10),
        to = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    width: 100%;
    height: ${n.measurements.standardHeaderHeight}px;
    display: flex;
    justify-content: center;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    position: relative;
  }

  .userArea {
    position: absolute;
    top: 0;
    right: 0;
  }

  .menuToggleButton {
    cursor: pointer;
    padding: 0 ${(0, t.asCssProp)(Bt)};
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(7))};
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
  }

  .menuToggleButton--open {
    transform: rotate(180deg);
  }

  .notificationBubble {
    position: absolute;
    top: ${(0, t.asCssProp)((0, i.gridUnits)(6.7))};
    left: ${(0, t.asCssProp)((0, i.gridUnits)(10.5))};
    opacity: 1;
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  .notificationBubble--hide {
    opacity: 0;
  }

  .logoArea {
    display: flex;
    align-items: center;
    cursor: pointer;
  }

  .logoArea__guIcon {
    width: ${(0, t.asCssProp)(Ts)};
    height: ${(0, t.asCssProp)(Ts)};
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    display: none;
  }

  .logoArea__guIcon__img {
    display: block;
    width: 100%;
  }

  .logoArea__guWordMark {
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["2x-small"])}) {
    .logoArea__guIcon {
      display: block;
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      justify-content: flex-start;
    }

    .notificationBubble {
      display: none;
    }

    .menuToggleButton,
    .logoArea__guWordMark {
      display: none;
    }

    .logoArea {
      padding: 0 ${(0, t.asCssProp)(eo)};
    }

    .logoArea__guIcon {
      width: ${(0, t.asCssProp)($s)};
      height: ${(0, t.asCssProp)($s)};
      margin: 0;
    }
  }
`;
    var wt = o(4390), so = o(97223);
    const As = "TOGGLE_NAV", Is = "CLOSE_NAV", Ds = "TOGGLE_SUB_MENU", Ls = "UPDATE_CURRENT_ROUTE",
        Us = "CLOSE_ALL_SUB_MENUS", Rs = "TOGGLE_USER_MENU", Bs = "CLOSE_USER_MENU", gs = () => ({type: Is}),
        Et = B => ({type: Ls, payload: B}),
        oo = {currentRoute: "", navMenuOpen: !1, navSubMenusOpen: {}, userMenuOpen: !1},
        yt = (0, so.MT)((B = oo, {type: c, payload: O}) => {
            switch (c) {
                case As:
                    return Object.assign(Object.assign({}, B), {navMenuOpen: !B.navMenuOpen, userMenuOpen: !1});
                case Is:
                    return Object.assign(Object.assign({}, B), {navSubMenusOpen: {}, navMenuOpen: !1});
                case Ds:
                    return Object.assign(Object.assign({}, B), {navSubMenusOpen: {[O]: !B.navSubMenusOpen[O]}});
                case Us:
                    return Object.assign(Object.assign({}, B), {navSubMenusOpen: {}});
                case Ls:
                    return Object.assign(Object.assign({}, B), {currentRoute: O});
                case Rs:
                    return Object.assign(Object.assign({}, B), {userMenuOpen: !B.userMenuOpen, navMenuOpen: !1});
                case Bs:
                    return Object.assign(Object.assign({}, B), {userMenuOpen: !1});
                default:
                    return B
            }
        }, oo), Oo = {
            navigationItems: {type: Array},
            loggedIn: {type: Boolean},
            router: {type: Object},
            ngZone: {type: Object}
        };
    customElements.define("gu-header-bar", (0, Se.x)({
        renderer: function ({navigationItems: B, router: c, ngZone: O}) {
            if (!B) return null;
            const H = (0, p.v9)({store: yt, selector: St => St.navMenuOpen}),
                oe = (0, p.I0)(yt), [ke, Le] = (0, q.eJ)(!1), je = () => {
                    oe(gs()), (0, wt.pR)(c, O, B.home.path), this.dispatchEvent(new CustomEvent("onLogoClick"))
                };
            return (0, q.d4)(() => {
                Le((() => {
                    if (!B) return !1;
                    let St = !1;
                    e:for (const Tt of Object.keys(B)) {
                        const pt = B[Tt];
                        if (pt.children) {
                            for (const Oe of Object.keys(pt.children)) if (pt.children[Oe].showNotificationBubble) {
                                St = !0;
                                break e
                            }
                        } else if (pt.showNotificationBubble) {
                            St = !0;
                            break e
                        }
                    }
                    return St
                })())
            }, [B]), e.dy`
    <gu-icon
      class="menuToggleButton ${H ? "menuToggleButton--open" : ""}"
      iconLigature=${H ? "close_x" : "hamburger_menu"}
      @click=${St => {
                St.cancelBubble = !0, oe({type: As})
            }}
      fillColor=${n.colors.gunmetal[100]}
    >
    </gu-icon>
    ${ke ? e.dy`
          <gu-notification-bubble class="notificationBubble ${H ? "notificationBubble--hide" : ""}">
          </gu-notification-bubble>
        ` : null}
    <div class="logoArea" @click=${() => je()}>
      <picture class="logoArea__guIcon">
        <source type="image/webp" srcset="/assets/images/internal-logos/logo--gods-unchained-icon.webp" />
        <source type="image/png" srcset="/assets/images/internal-logos/logo--gods-unchained-icon.png" />
        <img
          class="logoArea__guIcon__img"
          alt="A digital trading card game where you can trade cards you purchase or earn for real-world currency."
          src="/assets/images/internal-logos/logo--gods-unchained-icon.png"
        />
      </picture>

      <gu-heading-text
        class="logoArea__guWordMark"
        size="3x-small"
        .responsiveSize=${[{breakpoint: "2x-small", size: "2x-small"}]}
      >
        Gods Unchained
      </gu-heading-text>
    </div>

    <gu-menu .router=${c} .ngZone=${O} .navigationItems=${B}></gu-menu>

    <div class="userArea">
      <slot name="userArea"></slot>
    </div>
  `
        }, props: {properties: Oo, styles: to}
    }));
    var Mo = o(92198), To = o(11735);
    const $o = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    position: absolute;
    top: ${n.measurements.standardHeaderHeight}px;
    height: calc(100vh - ${n.measurements.standardHeaderHeight}px);
    width: 100%;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    list-style: none;
    margin: 0;
    padding: 0 ${(0, t.asCssProp)(Bt)};
    transform: translateX(-101%);
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
    display: flex;
    flex-direction: column;
    overflow: hidden;
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: ${(0, t.asCssProp)(n.colors.gunmetal[500])} ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  :host::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  :host::-webkit-scrollbar-track {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  :host::-webkit-scrollbar-thumb {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    box-shadow: inset 0 0 0 2px ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  :host::-webkit-scrollbar-corner {
    background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  :host(.open) {
    transform: translateX(0);
  }

  .menuItem {
    flex-shrink: 0;
    flex-grow: 0;
    cursor: pointer;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(5))} 0;
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    text-transform: uppercase;
    white-space: nowrap;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
  }

  .menuItem__icon {
    display: block;
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(-1))};
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    line-height: 0;
  }

  .menuItem__longName + .menuItem__shortName {
    display: none;
  }

  .menuItem__caret {
    display: block;
    line-height: 0;
    transform-origin: center;
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
  }

  .menuItem__externalIcon {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(-1))};
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    line-height: 0;
  }

  .menuItem__caret--rotated {
    transform: rotate(180deg);
  }

  .menuItem > * {
    color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
  }

  .menuItem--selected > *:not(gu-sub-menu):not(gu-notification-bubble) {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .menuItem--opened > * {
    color: ${(0, t.asCssProp)(n.colors.light[100])};
  }

  gu-notification-bubble {
    position: absolute;
    right: 0;
    top: ${(0, t.asCssProp)((0, i.gridUnits)(7))};
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  .menuItem--opened gu-notification-bubble {
    opacity: 0;
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      position: relative;
      transform: translateX(0);
      background: transparent;
      flex-direction: row;
      top: auto;
      width: auto;
      height: auto;
      padding: 0;
      overflow: unset;
    }

    .menuItem {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(6.5))};
      padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(1))};
      border: none;
    }

    .menuItem--hasSubMenu {
      padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(4.5))};
    }

    .menuItem--isExternal {
      padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    }

    .menuItem:last-of-type {
      margin: 0;
    }

    .menuItem:hover > * {
      color: ${(0, t.asCssProp)(n.colors.light[100])};
    }

    .menuItem__icon {
      margin: 0 0 ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    }

    .menuItem__longName {
      display: none;
    }

    .menuItem__longName + .menuItem__shortName {
      display: block;
    }

    .menuItem__caret {
      position: absolute;
      right: 0;
      bottom: ${(0, t.asCssProp)((0, i.gridUnits)(4.5))};
    }

    .menuItem__externalIcon {
      margin: 0;
      position: absolute;
      right: 0;
      bottom: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
      font-size: ${(0, t.asCssProp)((0, i.gridUnits)(2.75))};
    }

    gu-notification-bubble {
      top: ${(0, t.asCssProp)((0, i.gridUnits)(4.5))};
      right: 50%;
      transform: translateX(150%);
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
    .menuItem {
      flex-direction: row;
      padding: 0;
      margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    }

    .menuItem--hasSubMenu {
      padding-right: 0;
    }

    .menuItem__icon {
      position: static;
      margin: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))} ${(0, t.asCssProp)((0, i.gridUnits)(2))} 0 0;
      top: unset;
      left: unset;
      transform: unset;
    }

    .menuItem--hasSubMenu .menuItem__caret {
      position: relative;
      right: auto;
      bottom: auto;
    }

    .menuItem__longName {
      display: block;
    }

    .menuItem__longName + .menuItem__shortName {
      display: none;
    }

    gu-notification-bubble {
      top: 50%;
      right: auto;
      left: ${(0, t.asCssProp)((0, i.gridUnits)(3.4))};
      transform: translate(0%, -170%);
    }

    .menuItem--hasSubMenu gu-notification-bubble {
      margin-right: 0;
    }
  }
`;
    customElements.define("gu-menu", (0, Se.x)({
        renderer: function ({navigationItems: B, router: c, ngZone: O}) {
            const H = (0, p.v9)({store: yt, selector: Oe => Oe.navMenuOpen}),
                oe = (0, p.v9)({store: yt, selector: Oe => Oe.currentRoute}),
                ke = (0, p.v9)({store: yt, selector: Oe => Oe.navSubMenusOpen}), Le = (0, p.I0)(yt);
            (0, q.d4)(() => {
                Le(Et(c.url));
                const Oe = c.events.pipe((0, Mo.h)(Ae => Ae instanceof To.m2)).subscribe(Ae => {
                    Le(Et(Ae.url))
                });
                return () => {
                    Oe.unsubscribe()
                }
            }, []), (0, q.d4)(() => {
                H ? this.classList.add("open") : this.classList.remove("open")
            }, [H]);
            const je = Oe => {
                this.dispatchEvent(new CustomEvent("onMenuDropDownOpen", {
                    detail: {navItem: Oe},
                    bubbles: !0,
                    composed: !0
                })), Le((B => ({type: Ds, payload: B}))(Oe.path))
            }, Gt = Oe => Oe.children ? je(Oe) : (Oe => {
                Oe(), Le(gs())
            })(Oe.url ? () => {
                this.dispatchEvent((0, wt.Cs)(Oe)), (0, wt.rb)(Oe)
            } : () => (0, wt.pR)(c, O, Oe.path)), St = Oe => {
                let Ae = !1;
                const {children: $t} = Oe;
                return ("/" === oe && "home" === Oe.shortName || -1 !== oe.indexOf(Oe.path) && "home" !== Oe.shortName || !!$t && (0, wt.M0)($t, oe)) && (Ae = !0), Ae
            }, Tt = Oe => !!ke[Oe.path];
            return e.dy`
    ${Object.keys(B).map(Oe => {
                const Ae = B[Oe], $t = !Ae.children && !!Ae.url;
                return e.dy`
        <div
          class=${(0, y.$)({
                    menuItem: !0,
                    "menuItem--selected": St(Ae),
                    "menuItem--opened": Tt(Ae),
                    "menuItem--hasSubMenu": !!Ae.children,
                    "menuItem--isExternal": $t
                })}
          @click=${() => Gt(Ae)}
        >
          <gu-icon class="menuItem__icon" iconLigature=${Ae.icon}> </gu-icon>
          ${Ae.longName ? e.dy`
                <gu-simple-text
                  class="menuItem__longName"
                  kind="large"
                  fontWeight="bold"
                  .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
                >
                  ${Ae.longName}
                </gu-simple-text>
              ` : null}

          <gu-simple-text
            class="menuItem__shortName"
            kind="large"
            fontWeight="bold"
            .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
          >
            ${Ae.shortName}
          </gu-simple-text>

          ${$t ? e.dy` <gu-icon class="menuItem__externalIcon" iconLigature="leave_website"></gu-icon> ` : null}
          ${Ae.children ? e.dy`
                <gu-icon
                  class=${(0, y.$)({menuItem__caret: !0, "menuItem__caret--rotated": Tt(Ae)})}
                  iconLigature="caret_down"
                ></gu-icon>
                <gu-sub-menu
                  .router=${c}
                  .ngZone=${O}
                  .subMenuItems=${Ae.children}
                  .topLevelPath=${Ae.path}
                ></gu-sub-menu>
              ` : null}
          ${Ae.showNotificationBubble || (Oe => !!Oe.children && Object.keys(Oe.children).reduce((Ae, $t) => {
                    const Ie = Oe.children[$t];
                    return !(!Ie || !Ie.showNotificationBubble) || Ae
                }, !1))(Ae) ? e.dy` <gu-notification-bubble></gu-notification-bubble> ` : null}
        </div>
      `
            })}
  `
        },
        props: {
            properties: {navigationItems: {type: Array}, router: {type: Object}, ngZone: {type: Object}},
            styles: $o
        }
    }));
    const Io = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: flex;
    flex-flow: column;
    color: ${(0, t.asCssProp)(n.colors.light[500])};
    overflow: hidden;
    max-height: 0px;
    padding-top: 0px;
    opacity: 0;
    width: 100%;
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
    transition-property: max-height, padding, opacity;
  }

  .subMenu {
    margin: 0;
    padding: 0 0 0 ${(0, t.asCssProp)((0, i.gridUnits)(7))};
    list-style: none;
  }

  .subMenu__item {
    padding-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    color: ${(0, t.asCssProp)(n.colors.light[100])};
    line-height: 1;
    position: relative;
    white-space: normal;
  }

  .subMenu__item:last-of-type {
    padding-bottom: 0;
  }

  .subMenu__item--selected {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  :host(.open) {
    max-height: calc(var(--maxHeight) + ${(0, t.asCssProp)((0, i.gridUnits)(5))});
    opacity: 1;
    padding-top: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
  }

  gu-notification-bubble {
    position: absolute;
    right: 0;
    top: ${(0, t.asCssProp)((0, i.gridUnits)(1.75))};
  }

  .item__externalIcon {
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(4.75))};
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      position: absolute;
      top: 100%;
      left: ${(0, t.asCssProp)((0, i.gridUnits)(-4))};
      width: ${(0, t.asCssProp)((0, i.gridUnits)(36))};
      padding: 0;
      z-index: 1;
    }

    :host::after {
      content: '';
      display: block;
      height: var(--maxHeight);
      width: 100%;
    }

    :host(.open) {
      max-height: var(--maxHeight);
      padding: 0;
      box-shadow: 0px ${(0, t.asCssProp)((0, i.gridUnits)(.5))} ${(0, t.asCssProp)((0, i.gridUnits)(3))} 0px
        rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.black))}, 0.5);
    }

    .subMenu {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      padding: 0;
      border-left: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      border-top: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    }

    .subMenu__item,
    .subMenu__item:last-of-type {
      padding: ${(0, t.asCssProp)((0, i.gridUnits)(3))} ${(0, t.asCssProp)((0, i.gridUnits)(4))};
      border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    }

    .subMenu__item:hover {
      background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    }

    .subMenu__item--selected:hover {
      ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
    }

    .item__externalIcon {
      font-size: ${(0, t.asCssProp)((0, i.gridUnits)(3.5))};
      margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(.75))};
    }

    gu-notification-bubble {
      right: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
      top: 50%;
      transform: translateY(-50%);
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.large)}) {
    :host {
      left: 0;
    }
  }
`;
    customElements.define("gu-sub-menu", (0, Se.x)({
        renderer: function ({topLevelPath: B, subMenuItems: c, router: O, ngZone: H}) {
            const oe = (0, p.v9)({store: yt, selector: Ie => Ie.navSubMenusOpen}),
                ke = (0, p.v9)({store: yt, selector: Ie => Ie.currentRoute}), Le = (0, p.I0)(yt), je = Ie => {
                    Ie.url ? (this.dispatchEvent((0, wt.Cs)(Ie)), (0, wt.rb)(Ie)) : (Le(gs()), (0, wt.pR)(O, H, Ie.path))
                }, Gt = Ie => ke.includes(Ie.path), St = Ss()(() => {
                    this.style.setProperty("--maxHeight", `${pt.offsetHeight}px`)
                }, 500), Tt = new s.do(Ie => {
                    Ie.forEach(() => St())
                });
            let pt;
            (0, q.d4)(() => (pt = this.shadowRoot.querySelector(".subMenu"), Tt.observe(pt), () => Tt.unobserve(pt)), []);
            const Ae = () => {
                document.removeEventListener("click", $t)
            }, $t = Ie => {
                Le({type: Us})
            };
            return (0, q.d4)(() => (oe[B] ? (this.classList.add("open"), setTimeout(() => {
                document.addEventListener("click", $t)
            })) : (this.classList.remove("open"), Ae()), () => Ae()), [oe]), e.dy`
    <ul class="subMenu">
      ${Object.keys(c).map(Ie => {
                const et = c[Ie], Qo = {subMenu__item: !0, "subMenu__item--selected": Gt(et)};
                return e.dy`
          <li
            class=${(0, y.$)(Qo)}
            @click=${Vo => {
                    Vo.cancelBubble = !0, je(et)
                }}
          >
            ${et.longName ? e.dy`
                  <gu-simple-text
                    class="item__longName"
                    kind="large"
                    .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
                  >
                    ${et.longName}
                  </gu-simple-text>
                ` : null}

            <gu-simple-text
              class="item__shortName"
              kind="large"
              .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
            >
              ${et.shortName}
            </gu-simple-text>

            ${et.url ? e.dy` <gu-icon class="item__externalIcon" iconLigature="leave_website"></gu-icon> ` : null}
            ${et.showNotificationBubble ? e.dy` <gu-notification-bubble></gu-notification-bubble> ` : null}
          </li>
        `
            })}
    </ul>
  `
        },
        props: {
            properties: {
                subMenuItems: {type: Array},
                router: {type: Object},
                ngZone: {type: Object},
                topLevelPath: {type: String}
            }, styles: Io
        }
    }));
    const ro = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: block;
    height: ${qe.standardHeaderHeight}px;
  }

  gu-user-details {
    padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
  }

  .signedOutArea {
    height: 100%;
    display: flex;
    align-items: center;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(4))} 0;
    padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }

  .signedOutArea__signInButton {
    cursor: pointer;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }

  .signedOutArea__signInButton::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: ${(0, t.asCssProp)((0, i.gridUnits)(-2))};
    height: 100%;
    width: 1px;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  .signedOutArea__downloadButton {
    display: none;
  }

  .userDetailsArea {
    height: 100%;
    display: flex;
    align-items: center;
    cursor: pointer;
  }

  .userDetailsArea__imgContainer {
    margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
    width: ${(0, t.asCssProp)((0, i.gridUnits)(13))};
    height: ${(0, t.asCssProp)((0, i.gridUnits)(13))};
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
    position: relative;
  }

  .userDetailsArea__imgContainer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: ${(0, t.asCssProp)(n.gradients.gold.complex("bottom"))};
    box-shadow: 0 ${(0, t.asCssProp)((0, i.gridUnits)(1))} ${(0, t.asCssProp)((0, i.gridUnits)(2))}
      rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.dark[900]))}, 0.6);
    border-radius: 50%;
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
    z-index: 2;
  }

  .userDetailsArea__imgContainer__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 50%;
    position: relative;
    z-index: 2;
  }

  .userDetailsArea__imgContainer__bannerSide {
    width: ${(0, t.asCssProp)((0, i.gridUnits)(1.75))};
    height: ${(0, t.asCssProp)((0, i.gridUnits)(4.5))};
    position: absolute;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    z-index: 1;
    bottom: 1px;
  }

  .userDetailsArea__imgContainer__bannerSide--left {
    left: 0;
    transform: translateX(-90%);
  }

  .userDetailsArea__imgContainer__bannerSide--right {
    right: 0;
    transform: translateX(90%);
  }

  .userDetailsArea__imgContainer__levelLabel {
    position: absolute;
    width: 58px;
    bottom: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
    left: 50%;
    transform: translateX(-50%);
    z-index: 3;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} 0;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }

  .userDetailsArea__imgContainer__tinyCorner {
    position: absolute;
    top: 50%;
    left: -3px;
    border: ${(0, t.asCssProp)((0, i.gridUnits)(1.5))} solid transparent;
    border-bottom-color: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    z-index: 1;
  }

  .userDetailsArea__imgContainer__tinyCorner--right {
    left: auto;
    right: -3px;
  }

  gu-user-details {
    display: none;
  }

  gu-notification-bubble {
    position: absolute;
    top: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
    right: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  .userDetailsArea--open gu-notification-bubble {
    opacity: 0;
  }
  .userDetailsArea--open .userDetailsArea__imgContainer::before {
    transform: rotate(-180deg);
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
    .signedOutArea {
      padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
    }
    .signedOutArea__signInButton {
      padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(3))};
    }
    .signedOutArea__signInButton::after {
      left: ${(0, t.asCssProp)((0, i.gridUnits)(-3))};
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.large)}) {
    gu-user-details {
      display: flex;
      height: 100%;
      align-items: center;
    }

    .signedOutArea__downloadButton {
      display: flex;
      min-width: ${(0, t.asCssProp)((0, i.gridUnits)(45))};
    }

    .signedOutArea__signInButton {
      margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
      padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    }

    .signedOutArea__signInButton::after {
      right: 0;
      left: auto;
    }
  }
`;
    customElements.define("gu-header-user-area", (0, Se.x)({
        renderer: function ({
                                menuItems: B,
                                router: c,
                                ngZone: O,
                                userProperties: H,
                                downloadLauncherUrl: oe,
                                userStarsTotal: ke,
                                userFluxTotal: Le
                            }) {
            if (!B) return null;
            const je = (0, p.v9)({store: yt, selector: Ae => Ae.userMenuOpen}),
                ft = (0, p.I0)(yt), [Gt, St] = (0, q.eJ)(!1), Oe = () => {
                    this.dispatchEvent(new CustomEvent("onUserDetailsClick"))
                };
            return e.dy`
    ${H ? e.dy`
          <div
            class=${(0, y.$)({userDetailsArea: !0, "userDetailsArea--open": je})}
          >
            <gu-user-details
              .userProperties=${H}
              .userStarsTotal=${ke}
              .userFluxTotal=${Le}
              @click=${Oe}
            ></gu-user-details>
            <div class="userDetailsArea__imgContainer" @click=${() => ft({type: Rs})}>
              ${Gt ? e.dy`<gu-notification-bubble highPriority="true"></gu-notification-bubble>` : null}
              <img class="userDetailsArea__imgContainer__img" src=${H.image_url} alt="user avatar image" />
              <i class="userDetailsArea__imgContainer__bannerSide userDetailsArea__imgContainer__bannerSide--left"></i>
              <i class="userDetailsArea__imgContainer__bannerSide userDetailsArea__imgContainer__bannerSide--right"></i>
              <i class="userDetailsArea__imgContainer__tinyCorner"></i>
              <i class="userDetailsArea__imgContainer__tinyCorner userDetailsArea__imgContainer__tinyCorner--right"></i>
              <gu-simple-text kind="tag" class="userDetailsArea__imgContainer__levelLabel" align="center">
                LVL${H.level}
              </gu-simple-text>
            </div>
          </div>

          <gu-user-menu
            .userProperties=${H}
            .userStarsTotal=${ke}
            .userFluxTotal=${Le}
            .router=${c}
            .ngZone=${O}
            .menuItems=${B}
            @onUserDetailsClick=${Oe}
          ></gu-user-menu>
        ` : e.dy`
          <div class="signedOutArea">
            <gu-simple-text kind="tag" @click=${() => {
                this.dispatchEvent(new CustomEvent("onLoginModal"))
            }} class="signedOutArea__signInButton" data-test-id="signinButton">
              sign in
            </gu-simple-text>
            ${oe ? e.dy`
                  <gu-primary-hex-button
                    class="signedOutArea__downloadButton"
                    size="large"
                    href=${oe}
                    @click=${() => {
                this.dispatchEvent(new CustomEvent("onRegisterModal"))
            }}
                  >
                    play now
                  </gu-primary-hex-button>
                ` : null}
          </div>
        `}
  `
        },
        props: {
            properties: {
                menuItems: {type: Array},
                router: {type: Object},
                ngZone: {type: Object},
                userProperties: {type: Object},
                downloadLauncherUrl: {type: String},
                userStarsTotal: {type: String},
                userFluxTotal: {type: String}
            }, styles: ro
        }
    }));
    const Lo = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    position: absolute;
    top: ${n.measurements.standardHeaderHeight}px;
    right: 0;
    width: ${(0, t.asCssProp)((0, i.gridUnits)(65))};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    list-style: none;
    margin: 0;
    transform: translateX(101%);
    opacity: 0;
    display: flex;
    flex-direction: column;
    border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    border-left: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    ${(0, t.asCssProp)(n.animation.slowTransition("all"))};
  }

  :host(.open) {
    transform: translateX(0);
    opacity: 1;
  }

  .menuItem {
    cursor: pointer;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(5))} ${(0, t.asCssProp)(Bt)};
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    white-space: nowrap;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
  }

  .menuItem:hover {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  .menuItem__subMenu {
    display: flex;
    align-items: center;
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    border-left: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
  }

  .menuItem__subMenu__item {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }

  gu-notification-bubble {
    position: absolute;
    right: ${(0, t.asCssProp)(Bt)};
    top: 50%;
    transform: translateY(-50%);
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  gu-user-details {
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(3.5))} ${(0, t.asCssProp)(Bt)};
    cursor: pointer;
  }

  gu-user-details:hover {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.large)}) {
    gu-user-details {
      display: none;
    }
  }
`, ao = new CustomEvent("onLogout", {bubbles: !0, composed: !0}),
        lo = new CustomEvent("onConnectWallet", {bubbles: !0, composed: !0});
    customElements.define("gu-user-menu", (0, Se.x)({
        renderer: function ({
                                userProperties: B,
                                router: c,
                                ngZone: O,
                                menuItems: H,
                                userStarsTotal: oe,
                                userFluxTotal: ke
                            }) {
            const Le = (0, p.v9)({store: yt, selector: Ie => Ie.userMenuOpen}), je = (0, p.I0)(yt),
                ft = () => this.dispatchEvent(lo), Gt = () => this.dispatchEvent(ao), Tt = () => {
                    document.removeEventListener("click", pt)
                }, pt = Ie => {
                    je({type: Bs})
                };
            return (0, q.d4)(() => (Le ? (this.classList.add("open"), setTimeout(() => {
                document.addEventListener("click", pt)
            })) : (this.classList.remove("open"), Tt()), () => Tt()), [Le]), e.dy`
    <gu-user-details
      verticalLayout
      .userProperties=${B}
      .userStarsTotal=${oe}
      .userFluxTotal=${ke}
      @click=${() => {
                this.dispatchEvent(new CustomEvent("onUserDetailsClick"))
            }}
    ></gu-user-details>
    ${Object.keys(H).map(Ie => {
                const et = H[Ie];
                return et.visible ? e.dy`
            <div class="menuItem" @click=${() => (Ie => {
                    "Log Out" === Ie.shortName ? Gt() : "Connect Wallet" === Ie.shortName ? ft() : Ie.url ? (0, wt.rb)(Ie) : Ie.path && (0, wt.pR)(c, O, Ie.path)
                })(et)}>
              <gu-simple-text class="menuItem__shortName" kind="small"> ${et.shortName} </gu-simple-text>

              ${et.showNotificationBubble ? e.dy` <gu-notification-bubble highPriority="true"></gu-notification-bubble> ` : null}
              ${et.children ? e.dy`
                    <div class="menuItem__subMenu">
                      ${Object.keys(et.children).map(Qo => {
                    const Vo = et.children[Qo];
                    return e.dy`
                          <gu-simple-text
                            kind="tag"
                            class="menuItem__subMenu__item"
                            @click=${hn => ((Ie, et) => {
                        Ie.stopPropagation(), et.url ? (0, wt.rb)(et) : et.path && (0, wt.pR)(c, O, et.path)
                    })(hn, Vo)}
                            fillColor=${n.colors.gunmetal[100]}
                          >
                            ${Vo.shortName}
                          </gu-simple-text>
                        `
                })}
                    </div>
                  ` : null}
            </div>
          ` : null
            })}
  `
        },
        props: {
            properties: {
                userProperties: {type: Object},
                userStarsTotal: {type: Number},
                userFluxTotal: {type: Number},
                menuItems: {type: Object},
                router: {type: Object},
                ngZone: {type: Object}
            }, styles: Lo
        }
    }));
    const uo = e.iv`
  :host {
    display: flex;
  }

  .side {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
  }

  .side--left {
    position: relative;
    align-items: stretch;
    white-space: nowrap;
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
    padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
    padding-left: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
  }

  .side--right {
    max-width: 190px;
    flex: 1;
    padding-top: ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
    padding-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(.75))};
  }

  .side--left:hover .side__hoverGradient {
    opacity: 1;
  }

  .side__border {
    position: absolute;
    right: 0;
    top: 25%;
    height: 50%;
    border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  .side__hoverGradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(180deg, #0f1b27 0%, #1d2f41 51.56%, rgba(61, 90, 116, 0.75) 100%);
    opacity: 0;
    z-index: 0;
  }

  .side__part {
    position: relative;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  .side__part > gu-icon {
    font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
  }

  .row {
    display: flex;
    text-align: right;
  }

  .row--top {
    color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    align-items: center;
  }

  .row--bottom {
    justify-content: flex-end;
  }

  .row__userName {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .row__rank {
    text-transform: uppercase;
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2.5))};
    padding-left: ${(0, t.asCssProp)((0, i.gridUnits)(2.5))};
    border-left: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }

  :host(.verticalLayout) {
    flex-direction: column;
  }

  :host(.verticalLayout) .side__border {
    display: none;
  }

  :host(.verticalLayout) .side--left {
    order: 2;
    flex-direction: row;
    justify-content: flex-start;
    margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    padding-left: 0;
  }

  :host(.verticalLayout) .side--left:hover .side__hoverGradient {
    opacity: 0;
  }

  :host(.verticalLayout) .side--right {
    max-width: 100%;
    padding: 0;
  }

  :host(.verticalLayout) .side__part:first-child {
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(2.5))};
  }

  :host(.verticalLayout) .row {
    text-align: left;
  }

  :host(.verticalLayout) .row--bottom {
    justify-content: flex-start;
  }

  :host(.verticalLayout) .row__userName {
    margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
  }
`, Ro = {
        userProperties: {type: Object},
        userStarsTotal: {type: String},
        userFluxTotal: {type: String},
        verticalLayout: {type: Boolean}
    };
    customElements.define("gu-user-details", (0, Se.x)({
        renderer: function ({userProperties: B, userStarsTotal: c = "0", userFluxTotal: O = "0", verticalLayout: H}) {
            return (0, q.d4)(() => {
                H ? this.classList.add("verticalLayout") : this.classList.remove("verticalLayout")
            }, [H]), e.dy`
    <div class="side side--left">
      <gu-simple-text kind="small" fontWeight="bold" fillColor=${n.colors.gold[300]} class="side__part side__part--flux">
        <gu-icon iconLigature="flux_symbol" class="side__part__icon"></gu-icon>
        ${O || "0"}
      </gu-simple-text>

      <gu-simple-text
        kind="small"
        fontWeight="bold"
        fillColor=${n.colors.apocyan[300]}
        class="side__part side__part--stars"
      >
        <gu-icon iconLigature="collectable_stars" class="side__part__icon"></gu-icon>
        ${c || "0"}
      </gu-simple-text>
      <div class="side__border"></div>
      <div class="side__hoverGradient"></div>
    </div>
    <div class="side side--right">
      <div class="row row--top">
        <div class="row__cardsCount">
          <gu-icon iconLigature="cards_stack" class="row__cardsCount__icon"></gu-icon>
          <gu-simple-text kind="small" class="row__cardsCount__value">
            ${B.unique_card_count}
          </gu-simple-text>
        </div>

        <gu-simple-text kind="small" fontWeight="bold" fillColor=${n.colors.gunmetal[100]} class="row__rank">
          ${B.rank}
        </gu-simple-text>
      </div>
      <div class="row row--bottom">
        <gu-simple-text kind="small" class="row__userName"> ${B.username} </gu-simple-text>
      </div>
    </div>
  `
        }, props: {properties: Ro, styles: uo}
    }));
    const Lt = [824, 825, 826, 827, 828, 829];
    let Jt = class extends e.oi {
        constructor() {
            super(...arguments), this.videoId = 412954513, this.cropVideoFromTop = !0, this.randomChampionProto = Lt[parseInt("" + (Math.random() * Lt.length - 1), 10)]
        }

        connectedCallback() {
            super.connectedCallback(), this.style.setProperty("--headerAreaHeight", `${n.measurements.standardHeaderHeight}px`)
        }

        render() {
            return e.dy`
      <gu-background-vimeo-embed
        class="videoBackground"
        cropFromTop=${this.cropVideoFromTop}
        videoId=${this.videoId}
      ></gu-background-vimeo-embed>
      <picture class="fallbackImage">
        <source
          type="image/webp"
          sizes="100vw"
          srcset="
            //images.godsunchained.com/art2/250/${this.randomChampionProto}.webp   250w,
            //images.godsunchained.com/art2/375/${this.randomChampionProto}.webp   375w,
            //images.godsunchained.com/art2/500/${this.randomChampionProto}.webp   500w,
            //images.godsunchained.com/art2/720/${this.randomChampionProto}.webp   720w,
            //images.godsunchained.com/art2/1024/${this.randomChampionProto}.webp 1024w,
            //images.godsunchained.com/art2/1280/${this.randomChampionProto}.webp 1280w
          "
        />
        <source
          type="image/jpg"
          sizes="100vw"
          srcset="
            //images.godsunchained.com/art2/250/${this.randomChampionProto}.jpg    250w,
            //images.godsunchained.com/art2/375/${this.randomChampionProto}.jpg    375w,
            //images.godsunchained.com/art2/500/${this.randomChampionProto}.jpg   500w,
            //images.godsunchained.com/art2/720/${this.randomChampionProto}.jpg   720w,
            //images.godsunchained.com/art2/1024/${this.randomChampionProto}.jpg 1024w,
            //images.godsunchained.com/art2/1280/${this.randomChampionProto}.jpg 1280w
          "
        />
        <img src="//images.godsunchained.com/art2/720/827.jpg" alt="" class="fallbackImage__img" />
      </picture>
      <i class="overlaySkrimGradient"></i>
      <slot name="bannerLogo"></slot>
      <div class="slotContent">
        <slot name="bannerContent"></slot>
      </div>
    `
        }
    };
    Jt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}

    :host {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      position: relative;
      min-height: calc(100vh - var(--headerAreaHeight));
    }

    :host([centerContent='true']) {
      justify-content: center;
    }

    .overlaySkrimGradient {
      content: '';
      position: absolute;
      top: calc((100vh - var(--headerAreaHeight)) / 2);
      height: calc((100vh - var(--headerAreaHeight)) / 2);
      left: 0;
      right: 0;
      background: linear-gradient(
        to top,
        rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.dark[900]))}, 1) 0%,
        rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.dark[900]))}, 0) 100%
      );
    }

    .slotContent {
      position: relative;
    }

    .fallbackImage {
      position: absolute;
      top: 0;
      left: 0;
      height: calc(100vh - var(--headerAreaHeight));
      width: 100%;
    }

    .fallbackImage__img {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center top;
    }

    .videoBackground {
      display: none;
      position: absolute;
      top: 0;
      left: 0;
    }

    @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping.small)}) {
      .videoBackground {
        display: block;
      }
      .fallbackImage {
        display: none;
      }
      .overlaySkrimGradient {
        top: auto;
        bottom: 0;
        height: 50%;
      }
    }
  `, (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Jt.prototype, "videoId", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Jt.prototype, "cropVideoFromTop", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], Jt.prototype, "randomChampionProto", void 0), Jt = (0, r.gn)([(0, _.M)("gu-hero-video-banner")], Jt);
    var po = o(66974);
    const Bo = ["xx-small", "x-small", "small", "medium", "large"],
        _s = {"xx-small": "10px", "x-small": "12px", small: "14px", medium: "16px", large: "20px"},
        fs = {"xx-small": "18px", "x-small": "20px", small: "22px", medium: "24px", large: "28px"},
        vs = {light: 100, regular: 300, "semi-bold": 500, bold: 700, "extra-bold": 900};
    var Zs;
    let Mt = Zs = class extends e.oi {
        constructor() {
            super(...arguments), this.fontWeight = "regular", this.fontStyle = "regular", this.align = "center", this.plain = !1, this.responsiveSizes = []
        }

        static get styles() {
            return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: inline;
    font-family: 'Open Sans', sans-serif;
    ${(0, t.asCssProp)(_e.uA.enhancedTextRenderingStyles)};
    font-size: ${(0, t.asCssProp)(_s.medium)};
  }

  :host:not([plain]) {
    line-height: ${(0, t.asCssProp)(fs.medium)};
  }

  ${(0, t.asCssProp)(Bo.map(B => e.iv`
          :host([size=${(0, t.asCssProp)(B)}]),
          :host([size=${(0, t.asCssProp)(B)}]) ::slotted(*) {
            font-size: ${(0, t.asCssProp)(_s[B])};
          }

          :host([size='${(0, t.asCssProp)(B)}]):not([plain']),
          :host([size='${(0, t.asCssProp)(B)}]):not([plain']) ::slotted(*) {
            line-height: ${(0, t.asCssProp)(fs[B])};
          }
        `).join("\n"))}

  :host([fontStyle='italic']),
  :host([fontStyle='italic']) ::slotted(*) {
    font-style: italic;
  }

  ${(0, t.asCssProp)(Object.keys(vs).map(B => e.iv`
          :host([fontWeight=${(0, t.asCssProp)(B)}]),
    :host([fontWeight=${(0, t.asCssProp)(B)}]) ::slotted(*) {
            font-weight: ${vs[B]};
          }
        `).join("\n"))}

  ${(0, t.asCssProp)(po.textAlignRules)}
  ${(0, t.asCssProp)(gt.fillColoringRules)}
`
        }

        static hasColoringPropertyChanged(c) {
            return c.has("fillColor") || c.has("fillGradient") || c.has("fillGradientTarget")
        }

        updated(c) {
            if (Zs.hasColoringPropertyChanged(c)) {
                const {fillColor: O, fillGradient: H, fillGradientTarget: oe} = this;
                (0, h.updateColoringVariables)({component: this, fillColor: O, fillGradient: H, fillGradientTarget: oe})
            }
        }

        generateMediaQueries() {
            const {breakpointSizeMapping: c} = n.breakpoints, {asCssProp: O} = _e.ZB;
            return this.responsiveSizes.length ? e.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveSizes.map(({breakpoint: H, size: oe = "small"}) => e.iv`
                @media screen and (min-width: ${O(c[H])}) {
                  :host(.overWrite[size='${O(this.size)}']),
                  :host(.overWrite[size='${O(this.size)}']) ::slotted(*) {
                    font-size: ${O(_s[oe])} !important;
                  }

                  :host(.overWrite[size='${O(this.size)}']):not([plain]),
                  :host(.overWrite[size='${O(this.size)}']):not([plain]) ::slotted(*) {
                    line-height: ${O(fs[oe])} !important;
                  }
                }
              `)}
          </style>
        ` : null
        }

        render() {
            return this.responsiveSizes.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), e.dy`
      ${this.generateMediaQueries()}
      <slot data-test-id="body-text-slot"></slot>
    `
        }
    };
    (0, r.gn)([(0, g.C)({
        type: String,
        reflect: !0
    }), (0, r.w6)("design:type", String)], Mt.prototype, "size", void 0), (0, r.gn)([(0, g.C)({
        type: String,
        reflect: !0
    }), (0, r.w6)("design:type", String)], Mt.prototype, "fontWeight", void 0), (0, r.gn)([(0, g.C)({
        type: String,
        reflect: !0
    }), (0, r.w6)("design:type", String)], Mt.prototype, "fontStyle", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], Mt.prototype, "align", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], Mt.prototype, "fillColor", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], Mt.prototype, "fillGradient", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], Mt.prototype, "fillGradientTarget", void 0), (0, r.gn)([(0, g.C)({
        type: Boolean,
        reflect: !0
    }), (0, r.w6)("design:type", Object)], Mt.prototype, "plain", void 0), (0, r.gn)([(0, g.C)({type: Array}), (0, r.w6)("design:type", Array)], Mt.prototype, "responsiveSizes", void 0), Mt = Zs = (0, r.gn)([(0, _.M)("gu-body-text")], Mt);

    class _t extends e.oi {
        constructor() {
            super(...arguments), this.disabled = !1, this.valid = void 0, this.dirty = !1, this.status = "initial", this.keyHandlers = {Escape: () => this.reset()}
        }

        static get styles() {
            return e.iv`
      :host([disabled]) {
        filter: grayscale(100%);
      }
    `
        }

        firstUpdated(c) {
            this.initialValue = this.value, this.dispatchEvent(new CustomEvent("registerFormControl", {
                detail: {control: this},
                bubbles: !0,
                composed: !0
            })), super.firstUpdated(c)
        }

        connectedCallback() {
            super.connectedCallback(), this.addEventListener("keyup", this.handleKey), this.addEventListener("input", this.setDirty)
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.removeEventListener("keyup", this.handleKey), this.removeEventListener("input", this.setDirty)
        }

        setDirty() {
            this.dirty = !0
        }

        update(c) {
            this.status = this.disabled ? "disabled" : this.dirty ? this.valid ? "valid" : "invalid" : "initial", super.update(c)
        }

        handleKey(c) {
            if (this.disabled) return;
            const O = this.keyHandlers[c.code];
            O && O(c)
        }

        reset() {
            this.value = this.initialValue, this.dirty = !1
        }
    }

    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], _t.prototype, "name", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], _t.prototype, "value", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean
    }), (0, r.w6)("design:type", Object)], _t.prototype, "disabled", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Boolean)], _t.prototype, "valid", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], _t.prototype, "dirty", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], _t.prototype, "status", void 0);
    let zt = class extends _t {
        constructor() {
            super(...arguments), this.size = "normal"
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: inline;
      }

      .checkbox__input {
        cursor: pointer;
        display: inline-block;
        width: 20px;
        height: 20px;
        appearance: none;
        border-radius: 2px;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        margin: 0 8px 0 0;
        transition: background-size 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        outline: none;
        background-size: 0 0;
      }

      .checkbox__input:focus {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      :host([size='large']) .checkbox__input {
        width: 24px;
        height: 24px;
        padding: 11px;
      }

      .checkbox__input:checked {
        background-image: url("data:image/svg+xml,%3Csvg width='10' height='8' viewBox='0 0 10 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M2 3L4 5L8 0L10 1L4 8L0 4L2 3Z' fill='%238BE1E0'%3E%3C/path%3E%3C/svg%3E");
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .checkbox__input:indeterminate {
        background-image: linear-gradient(
          0deg,
          ${(0, t.asCssProp)(n.colors.gunmetal[900])} 45%,
          ${(0, t.asCssProp)(n.colors.apocyan[300])} 45%,
          ${(0, t.asCssProp)(n.colors.apocyan[300])} 55%,
          ${(0, t.asCssProp)(n.colors.gunmetal[900])} 55%
        );
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .checkbox__label {
        position: relative;
        display: flex;
        place-content: center stretch;
        place-items: center;
        flex: 1 0 auto;
      }

      .checkbox__input:focus {
        box-shadow: 0 0 6px ${(0, t.asCssProp)(n.colors.apocyan[300])}, 0 0 2px ${(0, t.asCssProp)(n.colors.apocyan[300])} inset;
      }
    `
        }

        getInputHandler(c) {
            return O => {
                O.stopPropagation(), this.updateValue(c, O.target.checked), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
            }
        }

        onChange(c) {
            c.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        updateValue(c, O) {
            this.value = O
        }

        activate() {
            const c = this.renderRoot.querySelector("input");
            c && c.click()
        }

        unfocus(c) {
            c.x > 0 && c.y > 0 && c.target.blur()
        }

        render() {
            return e.dy`
      <input
        type="checkbox"
        class="checkbox__input"
        @input=${this.getInputHandler(!0)}
        @change=${this.onChange}
        @click=${this.unfocus}
        .checked=${this.value}
        .indeterminate="${void 0 === this.value}"
        .disabled=${this.disabled}
        data-test-id="checkbox-native-element"
      />
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], zt.prototype, "size", void 0), zt = (0, r.gn)([(0, _.M)("gu-checkbox")], zt);
    let bs = class extends zt {
        constructor() {
            super(...arguments), this.options = [], this.value = []
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        place-content: center space-between;
        margin: 8px 0 16px 0;
        gap: 8px;
      }

      :host([layout='vertical']) {
        flex-direction: column;
      }
    `
        }

        updateValue(c, O) {
            O ? this.value.splice(this.value.push(c)) : this.value.splice(this.value.indexOf(c), 1)
        }

        activate() {
            const c = this.renderRoot.querySelector("input");
            c && c.focus()
        }

        render() {
            return e.dy`
      ${this.options.map(c => e.dy`
          <label class="checkbox__label">
            <input
              type="checkbox"
              class="checkbox__input"
              @input=${this.getInputHandler(c.value)}
              @change=${this.onChange}
              @click=${this.unfocus}
              .checked=${!!this.value.find(O => O == c.value)}
              .disabled=${this.disabled}
              data-test-id="checkbox-native-element"
            />
            <gu-body-text size="medium" plain="true">${c.label}</gu-body-text>
          </label>
        `)}
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Array)], bs.prototype, "options", void 0), bs = (0, r.gn)([(0, _.M)("gu-checkbox-group")], bs);
    var ys = o(30252);
    let Ns = class extends e.oi {
        constructor() {
            super(...arguments), this.controls = []
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
      }
    `
        }

        connectedCallback() {
            super.connectedCallback(), this.addEventListener("registerFormControl", this.registerControl), this.addEventListener("implicitSubmit", this.handleSubmissionRequest)
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.removeEventListener("registerFormControl", this.registerControl), this.removeEventListener("implicitSubmit", this.handleSubmissionRequest)
        }

        registerControl(c) {
            c.stopPropagation(), this.controls.push(c.detail.control)
        }

        handleSubmissionRequest(c) {
            c.stopPropagation();
            const O = this.findInvalidControl();
            O ? O.activate() : this.submit()
        }

        findInvalidControl() {
            return this.controls.find(c => !c.valid)
        }

        submit() {
            this.dispatchEvent(new CustomEvent("submit", {detail: {values: this.controls.reduce((c, O) => (c[O.name] = O.value, c), {})}}))
        }

        render() {
            return e.dy`<slot></slot>`
        }
    };
    (0, r.gn)([(0, ys.v)("", !0), (0, r.w6)("design:type", Array)], Ns.prototype, "slotted", void 0), Ns = (0, r.gn)([(0, _.M)("gu-form")], Ns);
    let Wt = class extends e.oi {
        constructor() {
            super(...arguments), this.for = "", this.id = `gu-label-${(0, ks.v4)()}`
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        place-content: center flex-start;
        cursor: default;
        pointer-events: all;
      }
    `
        }

        connectedCallback() {
            super.connectedCallback(), this.addEventListener("click", this.onClick), this.associate()
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.removeEventListener("click", this.onClick)
        }

        associate(c) {
            Promise.resolve().then(() => {
                const O = this.findTarget();
                !O || O === this.target || (this.target && this.target.removeAttribute("aria-labelledby"), O.setAttribute("aria-labelledby", this.id), this.target = O)
            })
        }

        findTarget() {
            return this.for ? this.getRootNode().getElementById(this.for) : this.slotted ? this.slotted.find(c => c instanceof _t) : void 0
        }

        onClick(c) {
            const O = this.target;
            O && c.target !== O && O.activate()
        }

        render() {
            return e.dy`<slot @slotchange=${this.associate} class="label__slot"></slot>`
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Wt.prototype, "for", void 0), (0, r.gn)([(0, g.C)({reflect: !0}), (0, r.w6)("design:type", Object)], Wt.prototype, "id", void 0), (0, r.gn)([(0, ys.v)("", !0), (0, r.w6)("design:type", Array)], Wt.prototype, "slotted", void 0), Wt = (0, r.gn)([(0, _.M)("gu-label")], Wt);
    const Zo = {
        email: "email",
        phone: "tel",
        name: "text",
        search: "search",
        text: "text",
        url: "url",
        number: "number"
    }, P = {invalid: "alert_triangle", valid: "checkbox_tick", initial: ""};
    let W = class extends _t {
        constructor() {
            super(...arguments), this.size = "normal", this.type = "text", this.placeholder = "", this.keyHandlers = {
                Escape: () => this.reset(),
                Enter: () => this.dispatchEvent(new CustomEvent("implicitSubmit", {
                    detail: {control: this},
                    bubbles: !0,
                    composed: !0
                }))
            }
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        margin: 8px 0 16px 0;
        position: relative;
      }

      .input__input {
        appearance: none;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        background: transparent;
        display: inline-block;
        height: 26px;
        border-radius: 2px;
        padding: 4px 28px 4px 8px;
        transition: background-color 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        flex: 1 1 auto;
        outline: none;
        color: ${(0, t.asCssProp)(n.colors.light[100])};
        font-size: 16px;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      .input__input::selection {
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .input__input::placeholder {
        color: ${(0, t.asCssProp)(n.colors.light[700])};
      }

      .input__input--status-initial {
        padding-right: 8px;
      }

      .input__icon {
        position: absolute;
        display: flex;
        top: 0;
        right: 0;
        width: 36px;
        height: 36px;
        font-size: 24px;
        place-content: center;
        place-items: center;
        color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        transition: color 0.2s ease;
        pointer-events: none;
      }

      :host(:focus-within) .input__input {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      :host(:focus-within) .input__icon {
        color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .input__icon--status-initial {
        opacity: 0;
      }

      .input__input--status-invalid,
      :host(:focus-within) .input__input--status-invalid {
        border-color: ${(0, t.asCssProp)(n.colors.alert)};
      }

      .input__icon--status-invalid,
      :host(:focus-within) .input__icon--status-invalid {
        color: ${(0, t.asCssProp)(n.colors.alert)};
      }

      :host([size='large']) .input__input {
        height: 30px;
        font-size: 16px;
        padding: 4px 36px 4px 8px;
      }

      :host([size='large']) .input__icon {
        height: 38px;
        width: 38px;
        font-size: 28px;
      }
    `
        }

        onChange() {
            this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        onInput(c) {
            this.value = c.target.value, c.stopPropagation(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
        }

        activate() {
            this.input.focus()
        }

        getInputType() {
            return Zo[this.type]
        }

        renderIcon() {
            return e.dy`
      <gu-icon class="input__icon input__icon--status-${this.status}" iconLigature=${P[this.status]}></gu-icon>
    `
        }

        render() {
            var c;
            return e.dy`
      <input
        type=${this.getInputType()}
        .value=${null !== (c = this.value) && void 0 !== c ? c : ""}
        class="input__input input__input--status-${this.status}"
        @input="${this.onInput}"
        @change=${this.onChange}
        placeholder=${this.placeholder}
        .disabled=${this.disabled}
        data-test-id="input-native-element"
      />
      ${this.renderIcon()}
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], W.prototype, "size", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], W.prototype, "type", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], W.prototype, "placeholder", void 0), (0, r.gn)([(0, S.I)(".input__input"), (0, r.w6)("design:type", HTMLInputElement)], W.prototype, "input", void 0), W = (0, r.gn)([(0, _.M)("gu-input")], W);
    var u = o(61462);
    const a = {hidden: "password", visible: "text"},
        x = {visible: "action_showPassword", hidden: "action_hidePassword"};
    let l = class extends W {
        constructor() {
            super(...arguments), this.mode = "hidden"
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      .input__toggle {
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        width: 36px;
        height: 36px;
        outline: none;
        text-decoration: none;
      }

      .input__toggle:focus {
        box-shadow: 0 0 2px ${(0, t.asCssProp)(n.colors.apocyan[300])}, 0 0 8px ${(0, t.asCssProp)(n.colors.apocyan[300])} inset;
      }

      .input__icon--status-initial {
        opacity: 1;
      }

      :host([disabled]) .input__toggle {
        ${(0, t.asCssProp)((0, u.userSelect)("none"))};
      }
    `
        }

        toggleMode(c) {
            c.stopPropagation(), c.preventDefault(), !this.disabled && (this.mode = "hidden" === this.mode ? "visible" : "hidden", c.detail > 0 && this.input.focus())
        }

        getInputType() {
            return a[this.mode]
        }

        renderIcon() {
            return e.dy`
      <a
        class="input__toggle"
        href="javascript:void(0)"
        @click=${this.toggleMode}
        @keyup=${c => c.stopPropagation()}
        data-test-id="password-input-visibility-toggle"
      >
        <gu-icon
          class="input__icon input__icon--status-${this.status} input__icon--mode-${this.mode}"
          iconLigature=${x[this.mode]}
        ></gu-icon>
      </a>
    `
        }
    };
    (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", String)], l.prototype, "mode", void 0), l = (0, r.gn)([(0, _.M)("gu-password-input")], l);
    let M = class extends _t {
        constructor() {
            super(...arguments), this.options = [], this.size = "normal"
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        place-content: center space-between;
        margin: 8px 0 16px 0;
        gap: 8px;
      }

      .radio-button__input {
        ${(0, t.asCssProp)((0, u.userSelect)("none"))}
        cursor: pointer;
        display: inline-block;
        width: 20px;
        height: 20px;
        appearance: none;
        border-radius: 50%;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        margin: 0 8px 0 0;
        transition: background-size 0.2s ease, border-color 0.2s ease;
        outline: none;
        background: radial-gradient(
            circle at center,
            ${(0, t.asCssProp)(n.colors.apocyan[300])} 50%,
            ${(0, t.asCssProp)(n.colors.gunmetal[900])} 50%
          )
          no-repeat center;
        background-size: 0 0;
      }

      .radio-button__input:focus {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .radio-button__input:checked,
      :host([size='large']) .radio-button__input:checked {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        background-size: 18px 18px;
      }

      :host([size='large']) .radio-button__input {
        width: 24px;
        height: 24px;
      }

      .radio-button__label {
        display: flex;
        place-content: center stretch;
        place-items: center;
        flex: 1 0 auto;
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      :host([layout='vertical']) {
        flex-direction: column;
      }

      .radio-button__input:focus,
      .radio-button__input:focus-within {
        box-shadow: 0 0 6px ${(0, t.asCssProp)(n.colors.apocyan[300])}, 0 0 2px ${(0, t.asCssProp)(n.colors.apocyan[300])} inset;
      }
    `
        }

        getInputHandler(c) {
            return O => {
                O.stopPropagation(), this.value = c, this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
            }
        }

        onChange(c) {
            c.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        activate() {
            let c = this.renderRoot.querySelector("input:checked");
            c || (c = this.renderRoot.querySelector("input")), c.focus()
        }

        unfocus(c) {
            c.x > 0 && c.y > 0 && c.target.blur()
        }

        render() {
            return e.dy`
      ${this.options.map(c => e.dy`
          <label class="radio-button__label">
            <input
              type="radio"
              class="radio-button__input"
              @input=${this.getInputHandler(c.value)}
              @change=${this.onChange}
              @click=${this.unfocus}
              .checked=${this.value == c.value}
              .disabled=${this.disabled}
              data-test-id="radio-button-native-element"
            />
            <gu-body-text size="medium" plain="true">${c.label}</gu-body-text>
          </label>
        `)}
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Array)], M.prototype, "options", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], M.prototype, "size", void 0), M = (0, r.gn)([(0, _.M)("gu-radio-button-group")], M);
    let F = class extends _t {
        constructor() {
            super(...arguments), this.value = 50, this.min = 0, this.max = 100, this.updateHelper = c => {
                requestAnimationFrame(() => requestAnimationFrame(c))
            }
        }

        static get styles() {
            const c = e.iv`linear-gradient(90deg, #AFFAED 0%, #8BE1E0 50.34%, #54BBCD 100%)`, O = e.iv`
      border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      height: 26px;
      width: 8px;
      border-radius: 4px;
      background: ${(0, t.asCssProp)(n.colors.apocyan[100])};
      cursor: pointer;
    `, H = e.iv`
      width: 100%;
      height: 16px;
      cursor: pointer;
      border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      box-shadow: 0 0 6px rgba(0, 0, 0, 0.35);
      border-radius: 4px;
    `, oe = e.iv`
      background: ${c}, ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      background-size: var(--value, 0) 100%;
      background-repeat: no-repeat;
      transition: var(--transition, 'background-size') 0.5s ease;
    `;
            return e.iv`
      ${super.styles}

      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        margin: 8px 0 16px 0;
      }

      .range__input {
        -webkit-appearance: none;
        width: 100%;
        background: transparent;
        outline: none;
      }

      .range__input:focus {
        outline: none;
      }

      .range__input::-webkit-slider-thumb {
        -webkit-appearance: none;
        margin-top: -7px;
        ${O}
      }

      .range__input::-moz-range-thumb {
        ${O}
      }

      .range__input::-ms-thumb {
        ${O}
      }

      .range__input::-webkit-slider-runnable-track {
        ${H}
        ${oe}
      }

      .range__input::-moz-range-track {
        ${H}
        ${oe}
      }

      .range__input::-ms-track {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        ${H}
      }

      .range__input::-ms-fill-lower {
        background: ${c};
        border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      }

      .range__input::-ms-fill-upper {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])}
        border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      }

      .range__input:focus,
      .range__input:focus-within,
      .range__input:focus::-webkit-slider-thumb,
      .range__input:focus-within::-webkit-slider-thumb {
        box-shadow: 0 0 8px ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }
    `
        }

        updateSelectedRangeHighlight() {
            this.style.setProperty("--value", Math.min(100, Math.max(0, (this.value - this.min) / (this.max - this.min) * 100)) + "%")
        }

        onInput(c) {
            c.stopPropagation();
            const O = c.target;
            void 0 !== O.value && (this.value = parseFloat(O.value), this.updateSelectedRangeHighlight(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}})))
        }

        onChange(c) {
            c.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        update(c) {
            super.update(c), c.has("value") && this.updateHelper(this.updateSelectedRangeHighlight.bind(this))
        }

        firstUpdated(c) {
            super.firstUpdated(c), this.style.setProperty("--value", "0%"), this.updateHelper = O => O(), this.style.setProperty("--transition", "background-size"), setTimeout(() => {
                this.style.setProperty("--transition", "none")
            }, 500)
        }

        activate() {
            this.input.focus()
        }

        render() {
            return e.dy`
      <input
        type="range"
        class="range__input"
        .value=${this.value}
        min=${this.min}
        max=${this.max}
        @input=${this.onInput}
        @change=${this.onChange}
        .disabled=${this.disabled}
        data-test-id="range-input-native-element"
      />
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], F.prototype, "value", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], F.prototype, "min", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], F.prototype, "max", void 0), (0, r.gn)([(0, S.I)(".range__input"), (0, r.w6)("design:type", HTMLInputElement)], F.prototype, "input", void 0), F = (0, r.gn)([(0, _.M)("gu-range-input")], F);
    const le = e.iv`
  :host {
    display: flex;
    position: relative;
    height: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
    margin: 8px 0 16px 0;
    z-index: 1;
  }

  :host([theme='gunmetal']) {
    --gu-select-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    --gu-select-border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    --gu-select-menu-webkit-scrollbar-thumb-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    --gu-select-option-hover-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host([theme='white']) {
    --gu-select-background-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-select-border: 2px solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-select-menu-webkit-scrollbar-thumb-background-color: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-select-option-hover-background-color: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host([theme='black']) {
    --gu-select-background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
    --gu-select-border: 2px solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-select-menu-webkit-scrollbar-thumb-background-color: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-select-option-hover-background-color: ${(0, t.asCssProp)(n.colors.dark[700])};
  }

  .select__container {
    position: absolute;
    display: flex;
    flex-direction: column;
    background-color: var(--gu-select-background-color);
    border: var(--gu-select-border);
    border-radius: 2px;
    box-sizing: border-box;
    min-height: 36px;
    cursor: pointer;
  }

  :host([stretch]) .select__container {
    width: 100%;
  }

  .select__heading {
    display: flex;
    justify-content: space-between;
    align-items: center;
    vertical-align: center;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(1.75))};
    height: 20px;
    line-height: 20px;
    outline: none;
    text-decoration: none;
  }

  .select__icon {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }

  .select__menu {
    display: flex;
    flex-direction: column;
    max-height: 200px;
    overflow-y: auto;
    border-top: var(--gu-select-border);
    transition: max-height 0.2s ease;
  }

  .select__menu::-webkit-scrollbar {
    width: 12px;
    border: 2px solid transparent;
  }

  .select__menu::-webkit-scrollbar-thumb {
    background-color: --gu-select-menu-webkit-scrollbar-thumb-background-color;
    border-radius: 6px;
    background-clip: padding-box;
    border: 4px solid rgba(0, 0, 0, 0);
  }

  .select__menu--visibility-hidden {
    border: 0px;
    max-height: 0;
  }

  .select__option {
    width: 100%;
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(2))} ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    box-sizing: border-box;
    text-decoration: none;
  }

  .select__option:hover {
    background-color: var(--gu-select-option-hover-background-color);
  }

  .select__option--selected {
    font-weight: bold;
  }

  :host(:focus-within) .select__container {
    border: var(--gu-select-border);
  }

  :host([disabled]) .select__heading {
    ${(0, t.asCssProp)((0, u.userSelect)("none"))};
  }
`;
    let Ee = class extends _t {
        constructor() {
            super(...arguments), this.placeholder = "", this.options = [], this.stretch = !1, this.open = !1
        }

        static get styles() {
            return le
        }

        update(c) {
            var O;
            if (c.has("disabled") && this.disabled && (this.open = !1), c.has("options")) {
                const H = this.findSelectedOption();
                this.value = null !== (O = null == H ? void 0 : H.value) && void 0 !== O ? O : void 0
            }
            (c.has("value") || c.has("options")) && this.notify(), super.update(c)
        }

        toggleOpen(c) {
            this.open = !this.disabled && (void 0 !== c ? c : !this.open)
        }

        getToggleIcon() {
            return this.open ? "chevron_up" : "chevron_down"
        }

        renderSelectOptions(c) {
            return e.dy`
      ${this.options.map(O => e.dy`<a
            href="javascript:void(0)"
            @click=${() => this.selectOption(O)}
            class=${(0, y.$)({select__option: !0, "select__option--selected": this.value === O.value})}
            ><gu-body-text
              size="medium"
              fillColor=${c}
              fontWeight=${this.value === O.value ? "bold" : "normal"}
              plain="true"
              >${O.label}</gu-body-text
            >
          </a>`)}
    `
        }

        selectOption(c) {
            this.value = c ? c.value : void 0, this.open = !1
        }

        notify() {
            this.dispatchEvent(new CustomEvent("input", {
                composed: !0,
                bubbles: !0,
                detail: {value: this.value}
            })), this.dispatchEvent(new CustomEvent("change", {composed: !0, bubbles: !0, detail: {value: this.value}}))
        }

        activate() {
            this.link.focus()
        }

        handleKeyPress(c) {
            if (!this.disabled) switch (c.code) {
                case"Enter":
                case"Space":
                    this.toggleOpen();
                    break;
                case"Escape":
                    this.toggleOpen(!1)
            }
        }

        findSelectedOption() {
            return this.options.find(c => c.value === this.value)
        }

        getTextColor() {
            let c;
            switch (this.theme) {
                case"gunmetal":
                default:
                    c = "colors.light.300";
                    break;
                case"white":
                    c = "colors.dark.300";
                    break;
                case"black":
                    c = "colors.light.500"
            }
            return c
        }

        render() {
            const c = this.findSelectedOption(), O = this.getTextColor();
            return e.dy`
      <div class="select__container">
        <a
          href="javascript:void(0)"
          @click=${() => this.toggleOpen()}
          @keyup=${this.handleKeyPress}
          data-test-id="select.heading.anchor"
          class="select__heading"
          tabindex="0"
        >
          <gu-body-text
            size="medium"
            data-test-id="select.heading.text"
            fillColor="${O}"
            plain="true"
            fontWeight="bold"
          >
            ${this.value && c ? c.label : this.placeholder}
          </gu-body-text>
          <gu-icon class="select__icon" iconLigature="${this.getToggleIcon()}" fillColor="${O}"></gu-icon>
        </a>
        <div
          class=${(0, y.$)({select__menu: !0, "select__menu--visibility-hidden": !this.open})}
        >
          ${this.renderSelectOptions(O)}
        </div>
      </div>
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], Ee.prototype, "theme", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ee.prototype, "placeholder", void 0), (0, r.gn)([(0, g.C)({type: Array}), (0, r.w6)("design:type", Array)], Ee.prototype, "options", void 0), (0, r.gn)([(0, g.C)({
        type: Boolean,
        reflect: !0
    }), (0, r.w6)("design:type", Object)], Ee.prototype, "stretch", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], Ee.prototype, "open", void 0), (0, r.gn)([(0, S.I)(".select__heading"), (0, r.w6)("design:type", HTMLAnchorElement)], Ee.prototype, "link", void 0), Ee = (0, r.gn)([(0, _.M)("gu-select")], Ee);
    let me = class extends _t {
        constructor() {
            super(...arguments), this.size = "normal", this.placeholder = ""
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        margin: 8px 0 16px 0;
        position: relative;
      }

      .textarea__input {
        appearance: none;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        background: transparent;
        display: inline-block;
        height: 26px;
        border-radius: 2px;
        padding: 4px 8px 4px 8px;
        transition: background-color 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        flex: 1 1 auto;
        outline: none;
        color: ${(0, t.asCssProp)(n.colors.light[100])};
        font-size: 16px;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        min-height: 5em;
      }

      .textarea__input::selection {
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .textarea__input::placeholder {
        color: ${(0, t.asCssProp)(n.colors.light[700])};
      }

      .textarea__input--status-initial {
        padding-right: 8px;
      }

      :host(:focus-within) .textarea__input {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .textarea__input--status-invalid,
      :host(:focus-within) .textarea__input--status-invalid {
        border-color: ${(0, t.asCssProp)(n.colors.alert)};
      }

      :host([size='large']) .textarea__input {
        height: 30px;
        font-size: 16px;
        padding: 4px 36px 4px 8px;
      }
    `
        }

        onChange() {
            this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        onInput(c) {
            this.value = c.target.value, c.stopPropagation(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
        }

        activate() {
            this.input.focus()
        }

        render() {
            var c;
            return e.dy`
      <textarea
        class="textarea__input textarea__input--status-${this.status}"
        @input="${this.onInput}"
        @change=${this.onChange}
        placeholder=${this.placeholder}
        .disabled=${this.disabled}
        data-test-id="textarea-native-element"
        .value=${null !== (c = this.value) && void 0 !== c ? c : ""}
      ></textarea>
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], me.prototype, "size", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], me.prototype, "placeholder", void 0), (0, r.gn)([(0, S.I)(".textarea__input"), (0, r.w6)("design:type", HTMLTextAreaElement)], me.prototype, "input", void 0), me = (0, r.gn)([(0, _.M)("gu-textarea")], me);
    let we = class extends e.oi {
        constructor() {
            super(...arguments), this.errors = [], this.enabled = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        cursor: default;
        pointer-events: all;
        color: ${(0, t.asCssProp)(n.colors.alert)};
        margin: -12px 0 0 0;
        padding: 0 0 16px 0;
      }

      ::slotted(*) {
        display: block;
        max-height: 0;
        opacity: 0;
        transition: max-height 0.2s ease, opacity 0.2s ease;
        overflow: hidden;
      }

      ::slotted(.validation-errors--active) {
        max-height: 1.4em;
        opacity: 1;
      }
    `
        }

        updated(c) {
            super.updated(c), c.has("errors") && this.updateErrors()
        }

        updateErrors() {
            Promise.resolve().then(() => {
                !this.slotted || this.slotted.forEach(c => c.classList.toggle("validation-errors--active", !(!this.enabled || !this.errors.find(O => O === c.getAttribute("key")))))
            })
        }

        render() {
            return e.dy`<slot @slotchange=${this.updateErrors()}></slot>`
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Array)], we.prototype, "errors", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], we.prototype, "enabled", void 0), (0, r.gn)([(0, ys.v)("", !0, "[key]"), (0, r.w6)("design:type", Array)], we.prototype, "slotted", void 0), we = (0, r.gn)([(0, _.M)("gu-validation-errors")], we);
    const De = (0, i.gridUnits)(.5), lt = e.iv`
  :host {
    width: 100%;
    display: flex;
  }

  .innerContainer {
    width: 100%;
    padding-bottom: 140%;
    margin: auto;
    position: relative;
    cursor: pointer;
  }

  .innerContainer__board {
    position: absolute;
    height: 71%;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
  }

  .innerContainer__trinkets {
    padding-top: ${(0, t.asCssProp)(De)};
    position: absolute;
    bottom: 0;
    left: 0;
    height: 28%;
    width: 100%;
    display: flex;
  }

  .innerContainer__trinkets__trinket,
  .innerContainer__trinkets__emptyTrinket {
    flex: 1;
    overflow: hidden;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    position: relative;
  }

  .innerContainer__trinkets__emptyTrinket {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }

  .innerContainer__trinkets__trinket::after,
  .innerContainer__trinkets__emptyTrinket::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 1px rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.white))}, 0.15);
  }

  .innerContainer__trinkets__trinket--left {
    margin-right: ${(0, t.asCssProp)(De)};
    order: -1;
  }

  .innerContainer__trinkets__trinket--right {
    order: 2;
  }

  .innerContainer__trinkets__emptyTrinket:first-of-type:not(:last-of-type) {
    margin-right: ${(0, t.asCssProp)(De)};
  }
`;
    let ct = class extends e.oi {
        static get styles() {
            return lt
        }

        renderIcon() {
            return this.trinkets.length > 0 ? e.dy`` : e.dy`<gu-icon
      iconLigature="empty"
      class="innerContainer__trinkets__emptyTrinket"
      data-test-id="loadout-display-icon"
    ></gu-icon>`
        }

        render() {
            return e.dy`
      <div class="innerContainer">
        <gu-loadout-part
          class="innerContainer__board"
          .board=${this.board}
          ?owned=${!0}
          ?hideCount=${!0}
          ?noAspectRatio=${!0}
          ?hideText=${this.hideText}
          data-test-id="loadout-display-board"
        ></gu-loadout-part>
        <div class="innerContainer__trinkets">
          ${this.trinkets.map(c => e.dy`
              <gu-loadout-part
                class=${(0, y.$)({
                innerContainer__trinkets__trinket: !0,
                "innerContainer__trinkets__trinket--left": 1 === c.slot,
                "innerContainer__trinkets__trinket--right": 2 === c.slot
            })}
                .trinket=${c}
                ?hideText=${!0}
                ?noAspectRatio=${!0}
                ?hideCount=${!0}
                data-test-id="loadout-display-trinket"
              ></gu-loadout-part>
            `)}
          ${this.renderIcon()}
        </div>
      </div>
    `
        }
    };
    (0, r.gn)([(0, g.C)({type: Object}), (0, r.w6)("design:type", Object)], ct.prototype, "board", void 0), (0, r.gn)([(0, g.C)({type: Array}), (0, r.w6)("design:type", Array)], ct.prototype, "trinkets", void 0), (0, r.gn)([(0, g.C)({type: Boolean}), (0, r.w6)("design:type", Boolean)], ct.prototype, "hideText", void 0), ct = (0, r.gn)([(0, _.M)("gu-loadout-display")], ct), o(90004);
    let ue = class extends e.oi {
        constructor() {
            super(...arguments), this.size = 40, this.type = "godsunchained", this.images = {
                godsunchained: "/assets/images/logo--gods-unchained.svg",
                "godsunchained-icon": "/assets/images/internal-logos/logo--gods-unchained-icon.png",
                immutable: "/assets/images/internal-logos/logo--immutable.svg",
                "immutable-icon": "/assets/images/logo--immutable-icon.svg"
            }
        }

        static get properties() {
            return {size: {type: Number}, type: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
      }

      .logo {
        max-width: var(--logoSize, 400px);
        width: 100%;

        /* Allow to make image non-interactable with host styles */
        -webkit-touch-callout: inherit;
        -webkit-user-drag: inherit;
      }

      .logo--icon {
        width: var(--logoSize, 40px);
      }
    `
        }

        render() {
            return this.size && this.style.setProperty("--logoSize", `${this.size}px`), e.dy`
      <img class="${this.size < 100 ? "logo--icon" : "logo"}" alt="Gods Unchained Logo" src="${this.images[this.size < 100 ? `${this.type}-icon` : this.type]}" />
    `
        }
    };
    ue = (0, r.gn)([(0, _.M)("gu-logo")], ue);
    const ut = B => !B || B.length < 11 ? B : `${B.slice(0, 6)}...${B.slice(B.length - 4)}`;
    let Ot = class extends e.oi {
        constructor() {
            super(...arguments), this.walletDropdownMenuOptions = [], this.onGuUnlinkClick = (() => {
                this.dispatchEvent(new CustomEvent("onGuUnlinkClick", {
                    composed: !0,
                    bubbles: !0,
                    detail: {address: this.address}
                }))
            }).bind(this), this.onDropdownSelect = (c => {
                c.stopPropagation(), this.dispatchEvent(new CustomEvent("onDropdownSelect", {
                    composed: !0,
                    bubbles: !0,
                    detail: {address: this.address, menuItem: c.detail}
                }))
            }).bind(this)
        }

        static get styles() {
            return e.iv`
      :host {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
        background-color: ${(0, t.asCssProp)(n.colors.light[100])};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} solid ${(0, t.asCssProp)(n.colors.light[300])};
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(2))};
      }

      .defaultSticker {
        position: absolute;
        top: 0;
        left: 0;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} ${(0, t.asCssProp)((0, i.gridUnits)(1.5))};
        background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
        border-radius: 0 0 ${(0, t.asCssProp)((0, i.gridUnits)(1))} 0;
      }

      .address__text--regular {
        display: none;
      }

      .address__shortener {
        width: ${(0, t.asCssProp)((0, i.gridUnits)(34))};
      }

      .action {
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.dark[300])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
        display: flex;
        justify-content: center;
        cursor: pointer;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(8))};
        width: ${(0, t.asCssProp)((0, i.gridUnits)(8))};
        user-select: none;
      }

      .action:hover {
        background: ${(0, t.asCssProp)(n.colors.dark[300])};
      }

      .action:hover .action__icon {
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .action__icon {
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
      }

      .imxLinked_status {
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: default;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
        margin-left: auto;
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        width: ${(0, t.asCssProp)((0, i.gridUnits)(41.25))};
      }

      .imxLinked_status__tick {
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(6))};
        }
        .address__text--small {
          display: none;
        }
        .address__text--regular {
          display: unset;
        }
        .imxLinked_status {
          margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        }
      }
    `
        }

        render() {
            return e.dy`
      ${this.defaultWalletEnabled && this.defaultWallet ? e.dy` <gu-paragraph-text
            text="Default"
            data-test-id="wallet-display-default-sticker"
            kind="tag"
            class="defaultSticker"
            fillColor="${n.colors.light[100]}"
            align="center"
          >
          </gu-paragraph-text>` : null}

      <gu-paragraph-text
        title=${this.address}
        class="address"
        data-test-id="wallet-display-address"
        fillColor="colors.dark.500"
        kind="small"
        .responsiveKind=${[{breakpoint: "small", kind: "large"}]}
        fontWeight="bold"
        align="left"
      >
        <span class="address__text--regular"> ${this.address} </span>
        <span class="address__text--small"> ${ut(this.address)} </span>
        <span></span>
      </gu-paragraph-text>

      ${this.imxLinked ? e.dy`
            <!-- Can't replace this with gu-standard-button as it's non standard -->
            <gu-plain-square-button
              backgroundFillColor="colors.light.300"
              borderColor="colors.light.300"
              fillColor="colors.dark.300"
              icon="immutableX"
              class="imxLinked_status"
              iconColor="colors.dark.300"
              data-test-id="wallet-display-imx-linked-status"
            >
              <gu-icon
                fillColor="colors.apocyan.500"
                iconLigature="checkbox_tick"
                class="imxLinked_status__tick"
              ></gu-icon>
              Linked to
            </gu-plain-square-button>
          ` : e.dy`
            <!-- Can't replace this with gu-standard-button as it's non standard -->
            <gu-plain-square-button
              backgroundFillColor="colors.light.300"
              borderColor="colors.light.300"
              fillColor="colors.light.500"
              class="imxLinked_status"
              data-test-id="wallet-display-imx-linked-status"
            >
              Unlinked
            </gu-plain-square-button>
          `}
      ${this.defaultWalletEnabled ? e.dy`
            <gu-dropdown-menu @onSelect=${this.onDropdownSelect} .items=${this.walletDropdownMenuOptions}>
              <div class="action" slot="dropdownControl">
                <gu-icon
                  class="action__icon"
                  data-test-id="wallet-display-action-icon"
                  fillColor="colors.dark.300"
                  iconLigature="action_kebabMenu"
                ></gu-icon>
              </div>
            </gu-dropdown-menu>
          ` : e.dy`
            <div class="action">
              <gu-icon
                @click=${this.onGuUnlinkClick}
                class="action__icon"
                data-test-id="wallet-display-action-icon"
                fillColor="colors.dark.300"
                iconLigature="action_trash"
              ></gu-icon>
            </div>
          `}
    `
        }
    };
    (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], Ot.prototype, "address", void 0), (0, r.gn)([(0, g.C)({type: Boolean}), (0, r.w6)("design:type", Boolean)], Ot.prototype, "imxLinked", void 0), (0, r.gn)([(0, g.C)({type: Boolean}), (0, r.w6)("design:type", Boolean)], Ot.prototype, "defaultWalletEnabled", void 0), (0, r.gn)([(0, g.C)({type: Boolean}), (0, r.w6)("design:type", Boolean)], Ot.prototype, "defaultWallet", void 0), (0, r.gn)([(0, g.C)({type: Array}), (0, r.w6)("design:type", Array)], Ot.prototype, "walletDropdownMenuOptions", void 0), Ot = (0, r.gn)([(0, _.M)("gu-wallet-display")], Ot);
    let rt = class extends e.oi {
        constructor() {
            super(...arguments), this.userWallets = [], this.imxLinkLoading = !1, this.connectedWallet = "", this.connectedWalletGuLinked = !1, this.guLinkLoading = !1, this.walletActionLoading = "", this.defaultWalletEnabled = !1, this.walletDropdownMenuOptions = [], this.showEmptyState = !0, this.showImxLink = !1, this.allImxLinked = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
        background-color: ${(0, t.asCssProp)(n.colors.light[100])};
        border: ${(0, t.asCssProp)(n.colors.light[500])} solid ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
        border-top: ${(0, t.asCssProp)(n.colors.gold[500])} solid ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(6))} ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
      }

      .emptyState {
        display: flex;
        flex-direction: column;
        width: 100%;
        justify-content: center;
        align-items: center;
      }

      .emptyState__icon {
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
        margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
      }

      .emptyState__text {
        max-width: 450px;
      }

      .walletsList {
        display: flex;
        flex-direction: column;
        width: 100%;
      }

      .walletsList__header {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }

      .walletsList__header__ctaSection {
        display: flex;
        flex-direction: column;
      }

      .walletsList__header__ctaSection__helpButton {
        width: ${(0, t.asCssProp)((0, i.gridUnits)(34))};
        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
      }

      .walletsList__header__ctaSection__imxLinkButton {
        width: ${(0, t.asCssProp)((0, i.gridUnits)(56))};
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
      }

      .walletsList__header__text {
        margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
      }

      .walletsList__wallet {
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(1.5))} 0;
      }

      .walletsList__helpText {
      }
      .walletList__addWallet {
        display: flex;
        justify-content: center;
        align-items: center;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(15))};
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(1.5))} 0;
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
      }
      .walletList__addWallet--added {
        cursor: default;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          padding: ${(0, t.asCssProp)((0, i.gridUnits)(10))} ${(0, t.asCssProp)((0, i.gridUnits)(12.5))};
        }
        .walletsList__header {
          flex-direction: row;
        }
        .walletsList__header__ctaSection__imxLinkButton {
          margin-left: auto;
        }
        .walletsList__header__ctaSection {
          flex-direction: row;
        }

        .walletsList__header__ctaSection__helpButton {
          margin-top: 0;
        }
        .walletList__addWallet {
          height: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
        }
      }
    `
        }

        update(c) {
            this.showEmptyState = !(this.userWallets && this.userWallets.length || this.connectedWallet && this.connectedWallet.length), this.showImxLink = this.userWallets && this.userWallets.length > 0, this.allImxLinked = this.userWallets && this.userWallets.every(O => O.imx_linked), super.update(c)
        }

        onImxLinkClick() {
            this.dispatchEvent(new CustomEvent("onImxLinkClick", {composed: !0}))
        }

        onImxLinkHelpClick() {
            this.dispatchEvent(new CustomEvent("onImxLinkHelpClick", {composed: !0}))
        }

        onGuLinkClick() {
            this.dispatchEvent(new CustomEvent("onGuLinkClick", {bubbles: !1}))
        }

        renderDisconnected() {
            return e.dy`
      <gu-vertical-space class="emptyState" both="2x-large">
        <gu-icon class="emptyState__icon" fillColor="colors.dark.500" iconLigature="action_wallet"></gu-icon>
        <gu-paragraph-text align="center" class="emptyState__text" fillColor="colors.dark.300">
          No wallet detected. Connect your web wallet to get started.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }

        renderImxLink() {
            return this.showImxLink ? this.allImxLinked ? e.dy`
        <div class="walletsList__header__ctaSection">
          <gu-standard-button
            theme="light"
            icon="immutableX"
            iconPosition="right"
            class="walletsList__header__ctaSection__imxLinkButton"
            type="primary"
            .disabled=${!0}
          >
            All wallets linked to
          </gu-standard-button>
        </div>
      ` : e.dy`
      <div class="walletsList__header__ctaSection">
        <gu-standard-button
          theme="light"
          icon="immutableX"
          iconPosition="right"
          class="walletsList__header__ctaSection__imxLinkButton"
          type="primary"
          @click=${this.onImxLinkClick}
          .loading=${this.imxLinkLoading}
        >
          Link a wallet to
        </gu-standard-button>

        <gu-standard-button
          theme="light"
          class="walletsList__header__ctaSection__helpButton"
          type="secondary"
          @click=${this.onImxLinkHelpClick}
        >
          How to link?
        </gu-standard-button>
      </div>
    ` : e.dy``
        }

        renderWallet() {
            return this.connectedWallet && this.connectedWallet.length ? this.connectedWalletGuLinked ? e.dy`
        <!-- Can't replace this with gu-standard-button as it's non standard -->
        <gu-plain-square-button
          backgroundFillColor="colors.light.100"
          borderColor="colors.light.300"
          fillColor="colors.dark.300"
          iconColor="colors.god.nature.secondary"
          icon="checkbox_tick"
          leftIconPosition="true"
          class="walletList__addWallet walletList__addWallet--added"
        >
          Current wallet added
        </gu-plain-square-button>
      ` : e.dy`
      <!-- Can't replace this with gu-standard-button as it's non standard -->
      <gu-plain-square-button
        backgroundFillColor="colors.light.100"
        borderColor="colors.light.300"
        fillColor="colors.apocyan.500"
        class="walletList__addWallet"
        @click=${this.onGuLinkClick}
        icon="add_item"
        leftIconPosition="true"
        loading=${this.guLinkLoading ? "true" : "false"}
        loadingColor="apocyan"
      >
        Add wallet to GU
      </gu-plain-square-button>
    ` : e.dy``
        }

        render() {
            return this.showEmptyState ? this.renderDisconnected() : e.dy`
      <gu-vertical-space class="walletsList">
        <gu-vertical-space class="walletsList__header" bottom="large">
          <gu-paragraph-text class="walletsList__header__text" fillColor="colors.dark.300">
            Wallets connected to Gods Unchained account
          </gu-paragraph-text>
          ${this.renderImxLink()}
        </gu-vertical-space>
        ${this.userWallets.map(c => this.walletActionLoading === c.address ? e.dy`
              <div class="walletList__addWallet"><gu-rectangular-spinner color="apocyan"></gu-rectangular-spinner></div>
            ` : e.dy` <gu-wallet-display
            address=${c.address}
            .walletDropdownMenuOptions=${this.walletDropdownMenuOptions}
            ?imxLinked="${c.imx_linked}"
            ?defaultWallet="${c.is_default}"
            ?defaultWalletEnabled="${this.defaultWalletEnabled}"
            class="walletsList__wallet"
          ></gu-wallet-display>`)}
        ${this.renderWallet()}
        <gu-vertical-space top="large">
          <gu-paragraph-text align="left" class="walletsList__helpText" fillColor="colors.dark.300">
            If you have any questions, please contact
            <a target="_blank" href="https://support.godsunchained.com">support</a>.
          </gu-paragraph-text>
        </gu-vertical-space>
      </gu-vertical-space>
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Array)], rt.prototype, "userWallets", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], rt.prototype, "imxLinkLoading", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], rt.prototype, "connectedWallet", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], rt.prototype, "connectedWalletGuLinked", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], rt.prototype, "guLinkLoading", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], rt.prototype, "walletActionLoading", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], rt.prototype, "defaultWalletEnabled", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Array)], rt.prototype, "walletDropdownMenuOptions", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], rt.prototype, "showEmptyState", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], rt.prototype, "showImxLink", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], rt.prototype, "allImxLinked", void 0), rt = (0, r.gn)([(0, _.M)("gu-wallets-list")], rt);
    let Ct = class extends e.oi {
        constructor() {
            super(...arguments), this.connectedWallet = "", this.webWalletConnecting = !1
        }

        onConnectBrowserWalletClick() {
            this.dispatchEvent(new CustomEvent("onConnectBrowserWalletClick", {bubbles: !1}))
        }

        onHardwareWalletClick() {
            this.dispatchEvent(new CustomEvent("onHardwareWalletClick", {bubbles: !1}))
        }

        onLearnMoreClick() {
            this.dispatchEvent(new CustomEvent("onLearnMoreClick", {bubbles: !1}))
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: column;
        width: 100%;
        background: ${(0, t.asCssProp)(n.colors.dark[900])};
        border-radius: 4px 4px 0 0;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(10))} ${(0, t.asCssProp)((0, i.gridUnits)(6))};
        justify-content: space-between;
      }
      .leftSection {
        display: flex;
        flex-direction: column;
        margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
      }
      .rightSection {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }
      .rightSection__button {
        min-width: ${(0, t.asCssProp)((0, i.gridUnits)(50))};
      }
      .rightSection__button--connectedWallet {
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        cursor: default;
      }
      .rightSection__button--connectedWallet__connectedDot {
        width: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        border-radius: 50%;
        background: ${(0, t.asCssProp)(n.colors.god.nature.secondary)};
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
      }
      .rightSection__button--walletAdded {
        cursor: default;
      }
      .rightSection__button__address {
        width: ${(0, t.asCssProp)((0, i.gridUnits)(30))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
        .rightSection {
          flex-direction: row;
          align-items: center;
        }
        .rightSection__button--connectedWallet {
          margin-bottom: 0;
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          flex-direction: row;
          padding: ${(0, t.asCssProp)((0, i.gridUnits)(10))} ${(0, t.asCssProp)((0, i.gridUnits)(12.5))};
        }

        .leftSection {
          margin-bottom: 0;
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="leftSection">
        <gu-heading-text fillGradient="gradients.gold.simple" fillGradientTarget="bottom" size="large">
          WALLETS
        </gu-heading-text>

        <gu-vertical-space class="leftSection__infoCtas">
          <gu-simple-text-button @click=${this.onLearnMoreClick}>
            Learn more about wallet linking
          </gu-simple-text-button>
          |
          <gu-simple-text-button @click=${this.onHardwareWalletClick}> Hardware Wallet? </gu-simple-text-button>
        </gu-vertical-space>
      </gu-vertical-space>
      <gu-vertical-space class="rightSection">
        ${this.connectedWallet ? e.dy`
              <!-- We need a dot icon before we can switch to using standard button -->
              <gu-plain-square-button
                backgroundFillColor="colors.dark.700"
                borderColor="colors.dark.700"
                iconColor="colors.god.nature.secondary"
                fillColor="colors.light.700"
                class="rightSection__button rightSection__button--connectedWallet"
                title=${this.connectedWallet}
              >
                <div class="rightSection__button--connectedWallet__connectedDot"></div>
                Current web wallet: ${ut(this.connectedWallet)}
              </gu-plain-square-button>

              <!-- <gu-standard-button
                class="rightSection__button rightSection__button--connectedWallet"
                theme="dark"
                type="subtle"
                title=${this.connectedWallet}
              >
                <div class="rightSection__button--connectedWallet__connectedDot"></div>
                Current web wallet: ${ut(this.connectedWallet)}
              </gu-standard-button> -->
            ` : e.dy`
              <gu-standard-button
                class="rightSection__button rightSection__button--connectedWallet"
                theme="dark"
                icon="action_wallet"
                class="rightSection__button"
                @click=${this.onConnectBrowserWalletClick}
                type="primary"
                .loading=${this.webWalletConnecting}
              >
                Connect Web Wallet
              </gu-standard-button>
            `}
      </gu-vertical-space>
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ct.prototype, "connectedWallet", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ct.prototype, "webWalletConnecting", void 0), Ct = (0, r.gn)([(0, _.M)("gu-wallets-header")], Ct);
    let Xt = class extends e.oi {
        constructor() {
            super(...arguments), this.goldBorder = null
        }

        static get properties() {
            return {goldBorder: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        position: absolute !important;
        height: 100%;
        width: 100%;
        background: ${(0, t.asCssProp)(n.gradients.gunmetal.mirror("left"))};
      }

      .border {
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        height: 100%;
        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
        position: relative;
      }

      .borderGoldTop:before {
        content: '';
        display: block;
        position: absolute;
        width: calc(100% - ${(0, t.asCssProp)((0, i.gridUnits)(1))});
        left: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
        top: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.mirror("right"))};
        border-image-slice: 1;
        border-image-width: ${(0, t.asCssProp)((0, i.gridUnits)(1))} 0 0 0;
      }
    `
        }

        render() {
            return e.dy`<div class="border ${"top" === this.goldBorder ? "borderGoldTop" : ""}"></div>`
        }
    };
    Xt = (0, r.gn)([(0, _.M)("gu-modal-background")], Xt);
    const xt = `\nlinear-gradient(\n  90deg,\n  rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.gunmetal[900]))}, 1) 0%,\n  rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.gunmetal[900]))}, 0.8) 25%,\n  rgba(0, 0, 0, 0) 50%,\n  rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.gunmetal[900]))}, 0.8) 75%,\n  rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.gunmetal[900]))}, 1) 100%\n)`;
    let rs = class extends e.oi {
        static get properties() {
            return {background: {type: String}}
        }

        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        position: relative;
        flex-direction: column;
        justify-content: center;
        width: 1200px;
        height: 800px;
        max-height: 85vh;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};

        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        background-size: cover;
      }

      :host([background='nature']) {
        background-image: ${(0, t.asCssProp)(xt)},
          url('https://images.godsunchained.com/god-art/1024/nature--aeona.webp');
        background-position-y: -238px;
      }

      :host([background='war']) {
        background-image: ${(0, t.asCssProp)(xt)},
          url('https://images.godsunchained.com/god-art/1024/war--auros.webp');
        background-position-y: -195px;
      }

      :host([background='magic']) {
        background-image: ${(0, t.asCssProp)(xt)},
          url('https://images.godsunchained.com/god-art/1024/magic--elyrian.webp');
        background-position-y: -195px;
      }

      :host([background='death']) {
        background-image: ${(0, t.asCssProp)(xt)},
          url('https://images.godsunchained.com/god-art/1024/death--malissus.webp');
        background-position-y: -330px;
      }

      :host([background='light']) {
        background-image: ${(0, t.asCssProp)(xt)},
          url('https://images.godsunchained.com/god-art/1024/light--thaeriel.webp');
        background-position-y: -267px;
      }

      :host([background='deception']) {
        background-image: ${(0, t.asCssProp)(xt)},
          url('https://images.godsunchained.com/god-art/1024/deception--ludia.webp');
        background-position-y: -336px;
      }

      :host([background='neutral']) {
        background-image: ${(0, t.asCssProp)(xt)}, url('/assets/images/misc-art/misc-art--C8-026.webp');
        background-position-y: -18px;
      }

      /* This could be improved by rendering any artId, something to look into later.
        Will be difficult though as each bg image will require a different background-position-y
      */
      :host([background='87055']) {
        background-image: ${(0, t.asCssProp)(xt)}, url('https://images.godsunchained.com/art2/1024/87055.webp');
        background-position-y: -180px;
      }

      .closeIcon {
        position: absolute;
        font-size: 24px;
        top: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        cursor: pointer;
      }
      .topSection {
        position: relative;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
      }

      .topSection__divider {
        position: absolute;
        bottom: 0;
        width: 100%;
      }

      .bottomSection {
        position: relative;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        overflow-y: auto;
        justify-content: center;
      }

      .bottomSection__cta {
        display: flex;
        justify-content: center;
      }

      .bottomSection__content {
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(24))};
        overflow-y: auto;
      }

      .bottomSection__background {
        background: #0f1b27;
        opacity: 0.9;
        width: 100%;
        height: 100%;
        position: absolute;
      }

      slot[name='bottomSectionContent']::slotted(*) {
        position: relative;
      }
    `
        }

        closeModal() {
            this.dispatchEvent(new CustomEvent("onCloseSealedDeckModal", {bubbles: !1}))
        }

        render() {
            return this.setAttribute("background", this.background), e.dy`
      <gu-vertical-space class="topSection">
        <gu-icon
          fillColor="colors.apocyan.300"
          iconLigature="close_x"
          class="closeIcon"
          @click=${this.closeModal}
        ></gu-icon>
        <slot name="topSectionSubtitle"></slot>
        <slot name="topSectionTitle"></slot>
        <slot name="topSectionHelptext"></slot>
        <img
          class="topSection__divider"
          src="/assets/images/ui-embellishments/ui--divider-simple-gradient.svg"
          alt="small divider"
        />
      </gu-vertical-space>
      <gu-vertical-space class="bottomSection">
        <div class="bottomSection__background"></div>
        <div class="bottomSection__content">
          <slot name="bottomSectionContent"></slot>
        </div>
        <gu-vertical-space class="bottomSection__cta" bottom="2x-large" top="large">
          <slot name="bottomSectionCta"></slot>
        </gu-vertical-space>
      </gu-vertical-space>
    `
        }
    };
    rs = (0, r.gn)([(0, _.M)("gu-two-section-modal")], rs);
    let Ft = class extends e.oi {
        constructor() {
            super(...arguments), this.entries = {}, this.active = [], this.visible = !0, this.type = "main"
        }

        static get styles() {
            return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        height: 100%;
        display: flex;
        justify-content: flex-end;
      }

      .navigation {
        width: 0;
        height: 100%;
        display: flex;
        flex-direction: column;
        place-items: flex-end flex-start;
        justify-content: space-between;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        overflow: hidden;
        transition: width ease 0.3s;
        margin-left: -1px;
      }

      .navigation__items {
        width: 100%;
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        padding: 0;
        margin: -1px 0;
        align-items: flex-end;
      }

      .navigation__item {
        width: 100%;
        padding: 0;
        margin: 0;
        cursor: pointer;
        border-bottom: 1px solid black;
        text-transform: uppercase;
        white-space: nowrap;
        overflow: hidden;
      }

      .navigation__item__link {
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        justify-content: center;
        text-decoration: none;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(2))} 0;
        border-left: 2px solid transparent;
        border-right: 2px solid transparent;
        margin: -1px 0;
        box-sizing: border-box;

        -webkit-user-drag: none;
        -webkit-touch-callout: none;
      }

      .navigation--type-main.navigation--visible {
        width: 80px;
      }

      .navigation--type-main .navigation__items {
        width: 80px;
      }

      .navigation--type-main .navigation__item__link {
        color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        min-height: ${(0, t.asCssProp)((0, i.gridUnits)(16))};
        align-items: center;
      }

      .navigation--type-sub.navigation--visible {
        width: 130px;
      }

      .navigation--type-sub .navigation__items {
        width: 130px;
      }

      .navigation--type-sub .navigation__item__link {
        color: white;
        min-height: ${(0, t.asCssProp)((0, i.gridUnits)(10))};
        padding: 0 8px;
      }

      .navigation__item__icon {
        display: block;
        margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(7))};
        line-height: 0;
      }

      .navigation__item__name {
        max-width: 100%;
      }

      .navigation__item--active {
        background: linear-gradient(
          90deg,
          ${(0, t.asCssProp)(n.colors.gunmetal[700] + "00")} 0%,
          ${(0, t.asCssProp)(n.colors.gunmetal[700] + "ff")} 100%
        );
      }

      .navigation__item--active .navigation__item__link {
        border-right: 2px solid #c6a052;
      }

      .navigation__item--active .navigation__item__icon,
      .navigation__item--active .navigation__item__name {
        ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
      }
    `
        }

        onClick(c) {
            this.dispatchEvent(new CustomEvent("navigation", {detail: c, bubbles: !0, composed: !0}))
        }

        renderIcon(c) {
            return c.logo ? e.dy` <gu-logo class="navigation__item__icon" type="${c.logo}" size="28"></gu-logo> ` : c.icon ? e.dy` <gu-icon class="navigation__item__icon" iconLigature=${c.icon}></gu-icon> ` : e.dy``
        }

        renderEntry(c) {
            const O = "main" === this.type ? "micro" : "tag";
            return e.dy`
      <li
        class=${(0, y.$)({
                navigation__item: !0,
                "navigation__item--active": this.active && this.active.indexOf(c.key) > -1
            })}
      >
        <a
          class="navigation__item__link"
          href="javascript:void(0);"
          @click=${() => this.onClick(c)}
          data-test-id="navigation.item.link"
        >
          ${this.renderIcon(c)}

          <gu-simple-text class="navigation__item__name" kind="${O}" fontWeight="bold">
            ${c.name}
          </gu-simple-text>
        </a>
      </li>
    `
        }

        renderGroups(c) {
            return e.dy`
      ${Object.keys(c).map(O => e.dy`
          <ul class="navigation__items navigation__items--${O}">
            ${this.renderEntries(c[O])}
          </ul>
        `)}
    `
        }

        renderEntries(c) {
            return e.dy`
      ${Object.keys(c).map(O => this.renderEntry(Object.assign(Object.assign({}, c[O]), {key: O})))}
    `
        }

        render() {
            return e.dy`
      <nav
        class="${(0, y.$)({navigation: !0, [`navigation--type-${this.type}`]: !0, "navigation--visible": this.visible})}"
      >
        ${this.renderGroups(this.entries)}
        <slot></slot>
      </nav>
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ft.prototype, "entries", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ft.prototype, "active", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ft.prototype, "visible", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], Ft.prototype, "type", void 0), Ft = (0, r.gn)([(0, _.M)("gu-navigation")], Ft);
    let qt = class extends e.oi {
        constructor() {
            super(...arguments), this.highPriority = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        width: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        border-radius: 50%;
        background: ${(0, t.asCssProp)(n.colors.gold[300])};
        box-shadow: 0 0 0 ${(0, t.asCssProp)((0, i.gridUnits)(.5))} ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      :host(.highPriority) {
        background: ${(0, t.asCssProp)(n.colors.god.war.primary)};
      }
    `
        }

        render() {
            return this.highPriority ? this.classList.add("highPriority") : this.classList.remove("highPriority"), e.dy``
        }
    };
    (0, r.gn)([(0, g.C)({type: Boolean}), (0, r.w6)("design:type", Object)], qt.prototype, "highPriority", void 0), qt = (0, r.gn)([(0, _.M)("gu-notification-bubble")], qt);
    const zs = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host([theme='light']) {
    --pageTextColor: ${(0, t.asCssProp)(n.colors.light[900])};
    --activePageTextColor: ${(0, t.asCssProp)(n.colors.light[100])};
    --activePageBackgroundColor: ${(0, t.asCssProp)(n.colors.dark[300])};
  }

  :host([theme='dark']) {
    --pageTextColor: ${(0, t.asCssProp)(n.colors.light[700])};
    --activePageTextColor: ${(0, t.asCssProp)(n.colors.dark[900])};
    --activePageBackgroundColor: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host {
    display: flex;
    font-weight: bold;
    font-size: 20px;
    color: var(--pageTextColor);
  }

  .pagination__chevron,
  .pagination__index {
    cursor: pointer;
    padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(3))};
    margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }

  .pagination__index.pagination__active-index {
    border-radius: 2px;
    color: var(--activePageTextColor);
    background-color: var(--activePageBackgroundColor);
  }
`;
    let is = class extends e.oi {
        constructor() {
            super(...arguments), this.numberOfPages = 3, this.theme = "light"
        }

        previousPage() {
            this.currentPage > 1 && this.goToPage(this.currentPage - 1)
        }

        nextPage() {
            this.currentPage < this.numberOfPages && this.goToPage(this.currentPage + 1)
        }

        goToPage(c) {
            c !== this.currentPage && this.dispatchGoToPageEvent(c)
        }

        dispatchGoToPageEvent(c) {
            const O = new CustomEvent("go-to-page", {detail: {pageNumber: c}});
            this.dispatchEvent(O)
        }

        render() {
            return e.dy`
      <gu-icon class="pagination__chevron" iconLigature="chevron_left" @click=${this.previousPage}></gu-icon>

      ${new Array(this.numberOfPages).fill("").map((c, O) => e.dy`<span
              class="pagination__index ${O + 1 === this.currentPage ? "pagination__active-index" : ""}"
              @click=${() => this.goToPage(O + 1)}
              >${O + 1}</span
            >`)}

      <gu-icon class="pagination__chevron" iconLigature="chevron_right" @click=${this.nextPage}></gu-icon>
    `
        }
    };
    is.styles = zs, (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Number)], is.prototype, "currentPage", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], is.prototype, "numberOfPages", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], is.prototype, "theme", void 0), is = (0, r.gn)([(0, _.M)("gu-pagination")], is);
    let Ws = class extends e.oi {
        constructor() {
            super(...arguments), this.progress = 0, this.coloring = "apocyan"
        }

        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: block;
        background: rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.light[100]))}, 0.15);
        height: 30px;
        padding: 7px 10px;
        position: relative;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(16, 16))};
      }

      :host::before {
        content: '';
        position: absolute;
        top: 1px;
        left: 1.5px;
        height: calc(100% - 2px);
        width: calc(100% - 3px);
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        box-shadow: inset 0 0 8px rgba(0, 0, 0, 1);
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(16, 16))};
      }

      .progress-bar-border {
        position: absolute;
        top: 7px;
        left: 10px;
        bottom: 7px;
        right: 10px;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(10, 10))};
      }

      .progress-bar-border::before {
        content: '';
        display: block;
        height: 100%;
        width: var(--barWidth);
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        ${(0, t.asCssProp)(n.animation.slowTransition("width"))};
      }

      .progress-bar {
        position: absolute;
        top: 1px;
        left: 0;
        bottom: 1px;
        right: 0;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(9, 9, 2))};
      }

      .progress-bar::before {
        content: '';
        display: block;
        height: 100%;
        width: calc(var(--barWidth) - 1px);
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        ${(0, t.asCssProp)(n.animation.slowTransition("width"))};
      }

      :host([coloring='apocyan']) .progress-bar-border::before {
        background: #0293ba;
      }

      :host([coloring='apocyan']) .progress-bar::before {
        background: ${(0, t.asCssProp)(n.gradients.apocyan.simple("left"))};
      }

      :host([coloring='yellow']) .progress-bar-border::before {
        background: ${(0, t.asCssProp)(n.colors.yellow[500])};
      }

      :host([coloring='yellow']) .progress-bar::before {
        background: ${(0, t.asCssProp)(n.gradients.yellow.simple("left"))};
      }

      :host([coloring='gold']) .progress-bar-border::before {
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
      }

      :host([coloring='gold']) .progress-bar::before {
        background: ${(0, t.asCssProp)(n.gradients.gold.simple("left"))};
      }

      :host([size='small']) {
        height: 12px;
        padding: 2px 3px;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(6, 6))};
      }

      :host([size='small'])::before {
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(6, 6))};
      }

      :host([size='small']) .progress-bar-border {
        top: 2px;
        left: 3px;
        bottom: 2px;
        right: 3px;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(4, 4))};
      }

      :host([size='small']) .progress-bar {
        top: 1px;
        left: 0;
        bottom: 1px;
        right: 0;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(3, 3, 2))};
      }

      :host([size='small']) .progress-bar-border::before,
      :host([size='small']) .progress-bar::before {
        border-radius: 1px;
      }
    `
        }

        render() {
            return this.setAttribute("coloring", this.coloring), this.style.setProperty("--barWidth", `${this.progress}%`), e.dy`
      <div class="progress-bar-border">
        <div class="progress-bar" data-progress="${this.progress}" data-test-id="progress-bar"></div>
      </div>
    `
        }
    };
    (0, r.gn)([(0, g.C)({type: Number}), (0, r.w6)("design:type", Object)], Ws.prototype, "progress", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], Ws.prototype, "coloring", void 0), Ws = (0, r.gn)([(0, _.M)("gu-hex-progress-bar")], Ws);
    let ho = class extends e.oi {
        constructor() {
            super(...arguments), this.progress = 0, this.withLogo = !1
        }

        static get properties() {
            return {progress: {type: Number}, withLogo: {type: Boolean}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
        flex: 1 1 auto;
        align-items: center;
      }

      .progress-bar {
        display: flex;
        border-radius: 5px;
        position: relative;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        height: 10px;
        width: 100%;
      }

      .progress-bar__fill {
        border-radius: 4px;
        height: 8px;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        margin: 1px;
        transition: width 500ms linear;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        .box__filling {
          /* Looks better at larger viewports like this. */
          margin: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
          height: calc(100% - ${(0, t.asCssProp)((0, i.gridUnits)(2))});
        }
        .bridge {
          /* width: ${(0, t.asCssProp)((0, i.gridUnits)(4))}; */
        }
      }
    `
        }

        render() {
            return e.dy`
      ${this.withLogo ? e.dy`<gu-logo></gu-logo>` : ""}
      <div class="progress-bar">
        <div class="progress-bar__fill" style="width: ${(0, t.asCssProp)(this.progress.toString() + "%")};"></div>
      </div>
    `
        }
    };
    ho = (0, r.gn)([(0, _.M)("gu-progress-bar")], ho);

    class No extends e.oi {
        constructor() {
            super(...arguments), this.active = !1, this.ready = Promise.resolve()
        }

        static get styles() {
            return e.iv`
      :host(:not([active])) {
        opacity: 0;
        display: none;
      }
    `
        }

        prepare() {
            return (0, r.mG)(this, void 0, void 0, function* () {
            })
        }

        wait(c) {
            return new Promise(O => setTimeout(O, c))
        }

        update(c) {
            c.has("active") && this.active && this.execute(), super.update(c)
        }

        execute() {
            return (0, r.mG)(this, void 0, void 0, function* () {
                yield this.ready, yield this.run(), this.notifyCompletion()
            })
        }

        connectedCallback() {
            this.ready = this.prepare(), super.connectedCallback()
        }

        notifyCompletion() {
            this.dispatchEvent(new CustomEvent("complete", {bubbles: !0, composed: !0}))
        }
    }

    (0, r.gn)([(0, g.C)({
        type: Boolean,
        reflect: !0
    }), (0, r.w6)("design:type", Object)], No.prototype, "active", void 0);
    let Cs = class extends No {
        constructor() {
            super(...arguments), this.progress = 0
        }

        static get styles() {
            return e.iv`
      ${super.styles}
      ${e.iv`
  :host([active]) {
    transform: translateY(60%);

    animation-duration: 0.3s;
    animation-name: scrollIn;
    animation-timing-function: ease-in;
    animation-fill-mode: forwards;
  }

  @keyframes scrollIn {
    from {
      opacity: 0;
      transform: translateY(60%);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
`}

      :host {
        width: 100%;
        display: flex;
        flex-direction: column;
        gap: ${(0, t.asCssProp)((0, i.gridUnits)(3.5))};
      }

      .milestone-progress__rewards {
        display: flex;
        width: 100%;
        justify-content: center;
      }

      .milestone-progress__rewards-progress-text {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }

      .milestone-progress__rewards-titles {
        display: flex;
        width: 100%;
        justify-content: center;

        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(3.5))};
      }

      .milestone-progress__rewards-title {
        width: 20%;
      }

      .milestone-progress__previous-rewards ::slotted(*) {
        transform: translateX(50%);
      }

      .milestone-progress__next-rewards ::slotted(*) {
        transform: translateX(-50%);
      }

      .milestone-progress__rewards-spacer {
        display: flex;
        justify-content: center;
        width: ${(0, t.asCssProp)(this.progressWidth.toString())}%;
      }

      .milestone-progress__progress-bar-container {
        width: 100%;
        height: 16px;
        display: flex;

        box-sizing: border-box;
        padding: 2px 0 2px 0;
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        border: 1px solid ${(0, t.asCssProp)(n.colors.gold[500])};
        border-left: 0;
        border-right: 0;
      }

      .milestone-progress__progress-bar-overlay {
        position: relative;
      }

      .milestone-progress__gradient {
        position: absolute;
        ${(0, t.inset)(0)};
        z-index: 2;
        background: linear-gradient(90deg, #0a0a0add 0%, #00000000 7%, #00000000 93%, #0a0a0add 100%);
      }

      .milestone-progress__extra {
        flex-grow: 1;
      }

      .milestone-progress__extra--first {
        background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
      }

      .milestone-progress__extra--last {
        background-color: ${(0, t.asCssProp)(n.colors.apocyan[100])};
      }

      .milestone-progress__container {
        position: relative;
        width: ${(0, t.asCssProp)(`${this.progressWidth.toString()}%`)};
      }

      .milestone-progress__milestone-gem-outer {
        position: absolute;

        width: 18px;
        height: 18px;

        top: 50%;

        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        border: 2px solid ${(0, t.asCssProp)(n.colors.gold[500])};

        z-index: 2;
      }

      .milestone-progress__milestone-gem-outer::before {
        content: '';
        position: absolute;
        ${(0, t.inset)(2)}
        background-image: ${(0, t.asCssProp)(n.gradients.apocyan.simple())};
      }

      .milestone-progress__milestone-gem-inner {
        position: absolute;

        ${(0, t.inset)(4)}

        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};

        z-index: 3;
      }

      .milestone-progress__milestone-gem-inner::before {
        content: '';
        position: absolute;
        display: block;

        ${(0, t.inset)(2)}

        border: 2px solid ${(0, t.asCssProp)(n.colors.god.light.primary)};
        background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("right"))};
        box-shadow: 0px 0px 3px rgba(175, 250, 237, 0.4);
      }

      .milestone-progress__milestone-gem-outer:first-child {
        left: 0;
        transform: translate(-50%, -50%) rotate(45deg);
      }

      .milestone-progress__milestone-gem-outer:last-child {
        right: 0;
        transform: translate(50%, -50%) rotate(45deg);
      }

      /** Unachineved milestone **/
      .milestone-progress__milestone-gem-outer--unachieved::before {
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        background-image: none;
      }

      .milestone-progress__milestone-gem-outer--unachieved .milestone-progress__milestone-gem-inner::before {
        border: 0;
        background-image: none;
        box-shadow: none;
      }

      .milestone-progress__progress-bar {
        position: absolute;
        ${(0, t.inset)(0)}

        z-index: 1;
      }

      .milestone-progress__progress-bar::before {
        content: '';
        position: absolute;
        ${(0, t.inset)(0)}

        width: var(--barWidth);

        border-radius: 4px;
        background-image: ${(0, t.asCssProp)(n.gradients.apocyan.simple("left"))};

        z-index: 1;
      }
    `
        }

        run() {
            return (0, r.mG)(this, void 0, void 0, function* () {
                const c = this.progress >= 100 ? 100 : Math.min(this.progress, 98);
                this.style.setProperty("--barWidth", `${c}%`), yield this.wait(500)
            })
        }

        render() {
            const c = this.progress >= 100 ? 100 : Math.min(this.progress, 98);
            return this.style.setProperty("--barWidth", `${c}%`), e.dy`
      <div class="milestone-progress__rewards">
        <div class="milestone-progress__previous-rewards">
          <slot name="previous-reward-icon"></slot>
        </div>
        <div class="milestone-progress__rewards-spacer">
          <slot name="next-rewards-text"></slot>
        </div>
        <div class="milestone-progress__next-rewards">
          <slot name="next-reward-icon"></slot>
        </div>
      </div>
      <div class="milestone-progress__progress-bar-overlay">
        <div class="milestone-progress__gradient"></div>
        <div class="milestone-progress__progress-bar-container">
          <div class="milestone-progress__extra milestone-progress__extra--first"></div>
          <div class="milestone-progress__container">
            <div
              data-test-id="milestone-progress-bar.gem-start"
              class=${(0, y.$)({
                "milestone-progress__milestone-gem-outer": !0,
                "milestone-progress__milestone-gem-outer--unachieved": 0 === this.progress
            })}
            >
              <div class="milestone-progress__milestone-gem-inner"></div>
            </div>
            <div class="milestone-progress__progress-bar" progress=${this.progress}></div>
            <div
              data-test-id="milestone-progress-bar.gem-end"
              class=${(0, y.$)({
                "milestone-progress__milestone-gem-outer": !0,
                "milestone-progress__milestone-gem-outer--unachieved": this.progress < 100
            })}
            >
              <div class="milestone-progress__milestone-gem-inner"></div>
            </div>
          </div>
          <div
            data-test-id="milestone-progress-bar.trail"
            class=${(0, y.$)({
                "milestone-progress__extra": !0,
                "milestone-progress__extra--last": this.progress >= 100
            })}
          ></div>
        </div>
      </div>
      <div class="milestone-progress__rewards-titles">
        <div class="milestone-progress__rewards-title milestone-progress__previous-rewards">
          <slot name="previous-reward-title"></slot>
        </div>
        <div class="milestone-progress__rewards-spacer"></div>
        <div class="milestone-progress__rewards-title  milestone-progress__next-rewards">
          <slot name="next-reward-title"></slot>
        </div>
      </div>
    `
        }
    };
    Cs.progressWidth = 60, (0, r.gn)([(0, g.C)({type: Number}), (0, r.w6)("design:type", Object)], Cs.prototype, "progress", void 0), Cs = (0, r.gn)([(0, _.M)("gu-milestone-progress-bar")], Cs);
    let mo = class extends e.oi {
        constructor() {
            super(...arguments), this.totalSteps = 9, this.filledSteps = 2, this.fillGradient = "gradients.apocyan.simple", this.fillGradientTarget = "bottom", this.bridgeColor = "colors.apocyan.300", this.squareSize = `${(0, i.gridUnits)(4)}`, this.squareBridgeRatio = "3/4"
        }

        static get properties() {
            return {
                filledSteps: {type: Number},
                totalSteps: {type: Number},
                squareSize: {type: String},
                fillGradient: {type: String},
                fillGradientTarget: {type: String},
                bridgeColor: {type: String}
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
      }

      .box {
        display: flex;
        position: relative;
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} solid;
        border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        position: relative;
        width: var(--squareSize);
        height: var(--squareSize);
        transform: rotate(45deg);
      }

      .box:last-child {
        margin-right: 0;
      }

      .box--filled {
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} solid;
        border-image-slice: 1;
        border-width: ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
        border-image-source: var(--backgroundFillGradient);
      }

      .box--filled .box__filling {
        display: block;
      }

      .box__filling {
        display: none;
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
        background: var(--backgroundFillGradient);
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(.75))};
        width: 100%;
        height: calc(100% - ${(0, t.asCssProp)((0, i.gridUnits)(1.5))});
      }

      .bridge {
        margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(-3))};
        margin-right: 0px;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(.25))};
        margin-top: auto;
        margin-bottom: auto;
        /* width: ${(0, t.asCssProp)((0, i.gridUnits)(3))}; */
        width: var(--bridgeSize);

        background: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
      }

      .bridge:last-child {
        display: none;
      }

      .bridge--filled {
        background: var(--backgroundFillColor);
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        .box__filling {
          /* Looks better at larger viewports like this. */
          margin: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
          height: calc(100% - ${(0, t.asCssProp)((0, i.gridUnits)(2))});
        }
        .bridge {
          /* width: ${(0, t.asCssProp)((0, i.gridUnits)(4))}; */
        }
      }
    `
        }

        render() {
            return (0, h.setPropertyGradientFromVariable)(this.style, this.fillGradient, "--backgroundFillGradient", this.fillGradientTarget), (0, h.setPropertyColorFromVariable)(this.style, this.bridgeColor, "--backgroundFillColor"), this.style.setProperty("--squareSize", this.squareSize), this.style.setProperty("--bridgeSize", `calc(${this.squareSize} * ${this.squareBridgeRatio})`), e.dy`
      ${new Array(this.totalSteps).fill(0).map((c, O) => {
                const H = O < this.filledSteps;
                return e.dy`
          <div class="box ${H ? "box--filled" : ""}">
            <div class="box__filling"></div>
          </div>
          <div class="bridge ${H ? "bridge--filled" : ""}"></div>
        `
            })}
    `
        }
    };
    mo = (0, r.gn)([(0, _.M)("gu-progress-step-counter")], mo);
    let _o = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-flow: column nowrap;
        position: relative;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(3))} 0 0;
      }

      :host::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: 0;
        left: 0;
        width: 100%;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      :host::after {
        content: '';
        position: absolute;
        z-index: 2;
        top: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        left: 0;
        width: 100%;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
      }

      .sectionBackground,
      .sectionBackground__picture {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }

      .sectionBackground {
        background: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .sectionBackground__picture {
        opacity: 0.12;
        filter: grayscale(1);
      }

      .sectionBackground__picture__img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .ribbons {
        position: absolute;
        top: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        left: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
        width: ${(0, t.asCssProp)((0, i.gridUnits)(55))};
        display: none;
      }

      .ribbons--right {
        left: auto;
        right: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
      }

      .header {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .header__bodyCopy {
        width: 100%;
        margin: 0 auto;
        max-width: 800px;
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(12))};
      }

      .slotContent {
        position: relative;
      }

      @media only screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        .ribbons {
          display: block;
        }
      }
    `
        }

        render() {
            return e.dy`
      <div class="sectionBackground">
        <picture class="sectionBackground__picture">
          <source
            srcset="
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@3x.webp 2250w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@2x.webp 1500w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.webp  750w
            "
            type="image/webp"
          />
          <source
            srcset="
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@3x.jpg 2250w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@2x.jpg 1500w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.jpg  750w
            "
            type="image/jpg"
          />
          <img
            src="/assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.jpg"
            alt=""
            class="sectionBackground__picture__img"
          />
        </picture>
      </div>

      <img class="ribbons" src="/assets/images/ui-embellishments/ui--ribbons.svg" alt="Gold and black UI Ribbons" />

      <img
        class="ribbons ribbons--right"
        src="/assets/images/ui-embellishments/ui--ribbons-alt.svg"
        alt="Gold and black UI Ribbons"
      />

      <header class="header">
        <gu-vertical-space top="5x-large" bottom="medium">
          <gu-heading-text size="large" fillColor=${n.colors.dark[900]} align="center"> PRIZE DRAWS </gu-heading-text>
        </gu-vertical-space>

        <gu-paragraph-text class="header__bodyCopy" align="center" size="large" fillColor=${n.colors.dark[700]}>
          Earn draw tickets by purchasing Trial of the Gods packs for a chance to win some truly divine prizes including
          a one-of-a-kind Mythic Card.
        </gu-paragraph-text>

        <gu-vertical-space top="large">
          <gu-simple-text-button href="https://playgu.co/totg-prizes" target="_blank" fillColor=${n.colors.dark[700]}>
            View Prizes
          </gu-simple-text-button>
        </gu-vertical-space>
      </header>

      <div class="slotContent">
        <slot></slot>
      </div>
    `
        }
    };
    _o = (0, r.gn)([(0, _.M)("gu-raffles-and-prizes-section")], _o), o(28917), o(29939);
    let fo = class extends e.oi {
        static get properties() {
            return {text: {type: String}, iconLigature: {type: String}, imageUrl: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        width: ${(0, t.asCssProp)((0, i.gridUnits)(46))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(80))};
        background: linear-gradient(180deg, rgba(255, 255, 255, 0.1) 0%, rgba(15, 27, 39, 0) 100%);
        border: 1px solid;
        border-color: rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.light[100]))}, 0.1);
      }

      .rewardGraphic {
        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(15))};
      }

      .fancyUnderscore {
        width: ${(0, t.asCssProp)((0, i.gridUnits)(25))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(1))};

        /* Unable to use getColor here - it's colors.quality.diamond */
        box-shadow: 0px 0px 8px rgba(148, 230, 251, 0.5);
        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(8))};
        background: linear-gradient(
          270deg,
          rgba(0, 0, 0, 0) -1.52%,
          ${(0, t.asCssProp)(n.colors.apocyan[500])} 33.58%,
          ${(0, t.asCssProp)(n.colors.apocyan[100])} 48.76%,
          ${(0, t.asCssProp)(n.colors.apocyan[500])} 66.2%,
          rgba(0, 0, 0, 0) 102.27%
        );
      }

      .titleText {
        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(3))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        :host {
          width: ${(0, t.asCssProp)((0, i.gridUnits)(57))};
          height: ${(0, t.asCssProp)((0, i.gridUnits)(100))};
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-reward-graphic
        class="rewardGraphic"
        .imageUrl=${this.imageUrl}
        .iconLigature=${this.iconLigature}
      ></gu-reward-graphic>
      <div class="fancyUnderscore"></div>

      ${this.text ? e.dy`
            <gu-paragraph-text
              class="titleText"
              align="center"
              fillColor="colors.light.100"
              fontWeight="bold"
              kind="large"
              text=${this.text}
            >
            </gu-paragraph-text>
          ` : ""}
    `
        }
    };
    fo = (0, r.gn)([(0, _.M)("gu-reward-display")], fo);
    let Yo = class extends e.oi {
        static get properties() {
            return {iconLigature: {type: String}, imageUrl: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        position: relative;
        justify-content: center;
        align-items: center;
      }

      .outerSquare {
        display: flex;
        width: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
        transform: rotate(45deg);

        border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} solid;
        border-image-slice: 1;
        border-image-source: ${(0, t.asCssProp)(n.gradients.apocyan.simple("top"))};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      .outerSquare__innerSquare {
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        width: 100%;
        background: ${(0, t.asCssProp)(n.colors.dark[900])};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} ${(0, t.asCssProp)(n.colors.apocyan[500])} solid;
      }

      .icon {
        position: absolute;
        margin: auto;
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(15))};
      }

      .rewardImage {
        position: absolute;
        margin: auto;
        width: 130%;
      }

      .rewardImage__img {
        width: 100%;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        .outerSquare {
          width: ${(0, t.asCssProp)((0, i.gridUnits)(30))};
          height: ${(0, t.asCssProp)((0, i.gridUnits)(30))};
        }
        .icon {
          font-size: ${(0, t.asCssProp)((0, i.gridUnits)(20))};
        }
      }
    `
        }

        render() {
            return e.dy`
      <div class="outerSquare">
        <div class="outerSquare__innerSquare"></div>
      </div>
      ${this.iconLigature ? e.dy`
            <gu-icon
              class="icon"
              iconLigature=${this.iconLigature}
              fillGradientTarget="top"
              fillGradient="gradients.apocyan.simple"
            ></gu-icon>
          ` : ""}
      ${this.imageUrl ? e.dy`
            <picture class="rewardImage">
              <source srcset=${this.imageUrl} type="image/png" />
              <source srcset=${this.imageUrl} type="image/png" />
              <img class="rewardImage__img" alt="image of the reward" src=${this.imageUrl} />
            </picture>
          ` : ""}
    `
        }
    };
    Yo = (0, r.gn)([(0, _.M)("gu-reward-graphic")], Yo);
    const vo = (0, t.asCssProp)((0, i.gridUnits)(3));
    let Jo = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: block;
        position: relative;
      }

      .ribbon-banner__left,
      .ribbon-banner__right {
        display: none;
        position: absolute;
        top: -${vo};
        width: calc(${vo} * 2);
        height: 100%;
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
      }

      .ribbon-banner__left::before,
      .ribbon-banner__right::before {
        content: '';
        position: absolute;
        width: ${vo};
        height: ${vo};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        top: 0;
        clip-path: polygon(0 100%, 0 0, 100% 100%);
      }

      .ribbon-banner__left {
        left: 0;
      }

      .ribbon-banner__left::before {
        right: 0;
        transform: rotate(-90deg);
      }

      .ribbon-banner__right::before {
        left: 0;
      }

      .ribbon-banner__right {
        right: 0;
      }

      .ribbon-banner__border {
        position: relative;
        background: ${(0, t.asCssProp)(n.colors.quality.mythic)};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
        border-image-slice: 1;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
      }

      .ribbon-banner__content {
        border: 1px solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
        border-image-slice: 1;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(4))} 0 ${(0, t.asCssProp)((0, i.gridUnits)(5))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
        :host {
          padding: 0 ${vo};
        }

        .ribbon-banner__left,
        .ribbon-banner__right {
          display: block;
        }
      }
    `
        }

        render() {
            return e.dy`
      <i class="ribbon-banner__left"></i>
      <i class="ribbon-banner__right"></i>
      <div class="ribbon-banner__border">
        <div class="ribbon-banner__content" part="innerContainer">
          <slot data-test-id="ribbon-banner-slot"></slot>
        </div>
      </div>
    `
        }
    };
    Jo = (0, r.gn)([(0, _.M)("gu-ribbon-banner")], Jo), o(65694);
    let zo = class extends e.oi {
        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        justify-content: center;
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(11))};
      }

      .socialButton {
        margin-right: 3vw;
        cursor: pointer;
      }

      .socialButton:last-child {
        margin: 0;
      }

      :host([smallIcons='true']) {
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(8))};
      }
    `
        }

        gotoSocialLink(c) {
            window.open(c)
        }

        render() {
            return e.dy`
      ${this.accounts.map(c => e.dy`
          <gu-icon
            class="socialButton"
            iconLigature="social_${c.name}"
            fillGradient=${n.gradients.gold.simple("bottom")}
            @click=${() => this.gotoSocialLink(c.link)}
          ></gu-icon>
        `)}
    `
        }
    };
    (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", Object)], zo.prototype, "accounts", void 0), (0, r.gn)([(0, g.C)(), (0, r.w6)("design:type", String)], zo.prototype, "smallIcons", void 0), zo = (0, r.gn)([(0, _.M)("gu-social-buttons-row")], zo);
    const ln = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    let Xo = class extends e.oi {
        constructor() {
            super(...arguments), this.imageUrl = "", this.name = "", this.price = 0, this.title = "", this.showCountdown = !1
        }

        static get properties() {
            return {
                imageUrl: {type: String},
                name: {type: String},
                title: {type: String},
                price: {type: Number},
                durationType: {type: String},
                endTimestamp: {type: String},
                showCountdown: {type: Boolean}
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-basis: 51%;
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(3.5))};
        flex-direction: column;
        justify-content: center;
        background: ${(0, t.asCssProp)(n.gradients.gunmetal.mirror("left"))};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        align-items: center;
        min-width: ${(0, t.asCssProp)((0, i.gridUnits)(85))};
        width: ${(0, t.asCssProp)((0, i.gridUnits)(85))};
        position: relative;
        padding-top: ${(0, t.asCssProp)((0, i.gridUnits)(8))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping.medium)}) {
        :host {
          flex-basis: 34%;
          min-width: unset;
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping.large)}) {
        :host {
          flex-basis: 21%;
        }
      }

      .divider {
        max-width: 100%;
        margin-top: auto;
      }

      .image {
        max-width: 100%;
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(1))} ${(0, t.asCssProp)((0, i.gridUnits)(4))};
        flex-grow: 1;
      }

      .image__img {
        max-width: 100%;
      }

      .middleSection {
        display: flex;
        flex-direction: column;
        height: ${(0, t.asCssProp)((0, i.gridUnits)(35))};
        align-items: center;
      }

      .middleSection__cta {
        margin-top: auto;
      }

      .middleSection__name {
        padding: 0 ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        text-transform: uppercase;
        margin: auto;
      }

      .middleSection__cta__price {
        color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        display: flex;
        align-items: center;
      }

      .middleSection__cta__icon {
        display: inline-flex;
        font-size: 28px;
      }

      .bottomSection {
        margin-top: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(2))} 0;
      }

      .helpIcon {
        position: absolute;
        top: 0;
        right: 0;
        margin: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        font-size: 20px;
        cursor: pointer;
      }

      .specialBanner {
        position: absolute;
        top: ${(0, t.asCssProp)((0, i.gridUnits)(-2))};
        left: ${(0, t.asCssProp)((0, i.gridUnits)(-2))};
      }
    `
        }

        buyItem() {
            this.dispatchEvent(new CustomEvent("onBuyItem", {composed: !0}))
        }

        moreInfo() {
            this.dispatchEvent(new CustomEvent("onMoreInfo", {composed: !0}))
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.timer && clearInterval(this.timer)
        }

        figureOutTime() {
            this.endTimestampEpoch = Math.round(new Date(this.endTimestamp).getTime() / 1e3), this.endDate = new Date(this.endTimestamp);
            const O = this.endTimestampEpoch - 86400, H = Math.round((new Date).getTime() / 1e3);
            if (H > O) return void (this.showCountdown = !0);
            const oe = O - H;
            this.timer && clearInterval(this.timer), this.timer = window.setInterval(() => {
                this.showCountdown = !0
            }, 1e3 * oe + 1e3)
        }

        render() {
            return this.figureOutTime(), e.dy`
      <gu-icon @click=${this.moreInfo} iconLigature="help" class="helpIcon"></gu-icon>

      <gu-star-store-special-banner
        class="specialBanner"
        durationType=${this.durationType}
      >
      ${this.title}
      </gu-star-store-special-banner>

      <picture class="image">
        <source srcset="${this.imageUrl}" type="image/jpg" />
        <img class="image__img" src="${this.imageUrl}" />
      </picture>

      <img
        src="/assets/images/ui-embellishments/ui--divider-complex-2.svg"
        class="divider"
        alt="extra detailed diamond divider"
      />

      <gu-vertical-space top="large" bottom="x-large" class="middleSection">
        <gu-paragraph-text
          kind="large"
          fontWeight="bold"
          align="center"
          fillColor="colors.light.100"
          class="middleSection__name"
          >${this.name}
        </gu-paragraph-text>

        <gu-primary-hex-button @click=${this.buyItem} class="middleSection__cta" size="large">
          BUY WITH&nbsp;<span class="middleSection__cta__price">
            ${this.price}
            <gu-icon
              class="middleSection__cta__icon"
              iconLigature="collectable_stars"
              fillColor="colors.apocyan.300"
            ></gu-icon
          </span>
        </gu-primary-hex-button>
      </gu-vertical-space>

      ${this.showCountdown ? e.dy`
              <gu-vertical-space class="bottomSection">
                <gu-simple-text kind="tag" align="center" fillColor="colors.light.100" class="name">
                  AVAILABLE FOR &nbsp;
                </gu-simple-text>
                <gu-countdown-timer
                  simpleTextDisplay=${!0}
                  simpleTextKind="tag"
                  .showFields=${["hours", "minutes", "seconds"]}
                  padZeroes=${!0}
                  targetTime=${this.endTimestampEpoch}
                ></gu-countdown-timer>
              </gu-vertical-space>
            ` : e.dy`
              <gu-vertical-space class="bottomSection">
                <gu-simple-text kind="tag" align="center" fillColor="colors.light.100" class="name">
                  AVAILABLE UNTIL ${this.endDate.getDate()} ${ln[this.endDate.getUTCMonth()].slice(0, 3)}
                  ${this.endDate.getUTCFullYear()}
                </gu-simple-text>
              </gu-vertical-space>
            `}
    `
        }
    };
    Xo = (0, r.gn)([(0, _.M)("gu-star-store-sale-item")], Xo);
    let qo = class extends e.oi {
        constructor() {
            super(...arguments), this.durationType = "daily"
        }

        static get properties() {
            return {durationType: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        background: linear-gradient(
          90deg,
          ${(0, t.asCssProp)(n.colors.gunmetal[300])} 0.91%,
          ${(0, t.asCssProp)(n.colors.gunmetal[700])} 100%
        );
        width: ${(0, t.asCssProp)((0, i.gridUnits)(56))};
        filter: drop-shadow(4px 4px 8px rgba(0, 0, 0, 0.5));
      }

      :host([durationType='monthly']) {
        background: ${(0, t.asCssProp)(n.gradients.gold.simple("right"))};
        border-color: ${(0, t.asCssProp)(n.colors.gold[100])};
      }

      gu-vertical-space {
        position: relative;
      }

      gu-paragraph-text {
        padding-left: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        text-transform: uppercase;
      }

      .border {
        height: 100%;
        width: 100%;
        margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(-.25))};
        position: absolute;
      }

      .border:before {
        content: '';
        display: block;
        position: absolute;
        height: calc(100% + ${(0, t.asCssProp)((0, i.gridUnits)(.5))});
        width: calc(100% - ${(0, t.asCssProp)((0, i.gridUnits)(1))});
        left: calc(${(0, t.asCssProp)((0, i.gridUnits)(-1.5))} - 1px);
        top: ${(0, t.asCssProp)((0, i.gridUnits)(-1))};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.mirror("top"))};
        border-image-slice: 1;
        border-image-width: 0 0 0 ${(0, t.asCssProp)((0, i.gridUnits)(1))};
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space both="x-small">
        <div class="border"></div>
        <gu-paragraph-text
          kind="large"
          fontWeight="bold"
          fillColor=${"monthly" === this.durationType ? "colors.gunmetal.900" : "colors:light:100"}
        >
          <slot></slot>
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    qo = (0, r.gn)([(0, _.M)("gu-star-store-special-banner")], qo);
    let en = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: block;
        position: relative;
      }

      .stats-banner__content {
        max-width: 140px;
      }

      .stats-banner__middle {
        max-width: 360px;
      }

      .stats-banner__spacer {
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        box-shadow: inset 0 0 0 1.5px ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
        display: flex;
        transform: rotate(-45deg);
      }

      .stats-banner__spacer::before {
        content: '';
        width: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
      }

      .stats-banner__middle,
      .stats-banner__spacer--middle {
        display: none;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        .stats-banner__middle {
          display: block;
        }
        .stats-banner__spacer--middle {
          display: flex;
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-ribbon-banner>
        <div class="stats-banner__content">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "large"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            $52M+
          </gu-heading-text>
          <gu-paragraph-text kind="small" align="center" fillColor="colors.dark.500">
            Worth of cards exchanged
          </gu-paragraph-text>
        </div>

        <i class="stats-banner__spacer stats-banner__spacer--middle"></i>

        <div class="stat stats-banner__middle">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "small"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            <h2>Led by Chris Clay</h2>
          </gu-heading-text>
          <gu-paragraph-text
            kind="small"
            .responsiveKind=${[{breakpoint: "medium", kind: "large"}]}
            align="center"
            fillColor="colors.dark.500"
          >
            Former Game Director of Magic:<br />The Gathering Arena
          </gu-paragraph-text>
        </div>

        <i class="stats-banner__spacer"></i>

        <div class="stat">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "large"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            $570k
          </gu-heading-text>
          <gu-paragraph-text kind="small" align="center" fillColor="colors.dark.500">
            Tournament prize pool
          </gu-paragraph-text>
        </div>
      </gu-ribbon-banner>
    `
        }
    };
    en = (0, r.gn)([(0, _.M)("gu-stats-banner")], en);
    let Wo = class extends e.oi {
        constructor() {
            super(...arguments), this.selectedOptionIndex = 0
        }

        static get styles() {
            return e.iv`
      .two-value-switch__toggle {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        user-select: none;
      }
    `
        }

        onClick() {
            this.dispatchEvent(new CustomEvent("switched", {
                composed: !0,
                detail: {selectedOption: this.selectedOption}
            })), this.selectedOptionIndex = 0 === this.selectedOptionIndex ? 1 : 0
        }

        get selectedOption() {
            return this.options[this.selectedOptionIndex]
        }

        render() {
            return this.options && 2 === this.options.length ? e.dy`
      <a
        role="button"
        class="two-value-switch__toggle"
        @click=${() => this.onClick()}
        data-test-id="two-value-switch-toggle"
      >
        <gu-icon iconLigature="action_switch" fillColor="colors.light.500"></gu-icon>
        <gu-paragraph-text align="center" kind="tag" fillColor="colors.light.500" .text=${this.selectedOption.value}>
        </gu-paragraph-text>
      </a>
    ` : e.dy``
        }
    };
    (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Array
    }), (0, r.w6)("design:type", Array)], Wo.prototype, "options", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Number
    }), (0, r.w6)("design:type", Number)], Wo.prototype, "selectedOptionIndex", void 0), Wo = (0, r.gn)([(0, _.M)("gu-two-value-switch")], Wo);
    let bo = class extends e.oi {
        constructor() {
            super(...arguments), this.values = [], this.selectedIndex = 0, this.idPrefix = "", this.onClick = (c, O) => {
                this.selectedIndex = O, this.dispatchEvent(new CustomEvent("onItemClicked", {
                    composed: !0,
                    detail: {index: O, value: c}
                }))
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: row;
      }
      gu-square-selection-row-item:not(:last-child) {
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
      }
    `
        }

        render() {
            return this.values ? e.dy`
          ${this.values.map((c, O) => e.dy`<gu-square-selection-row-item
              .selected=${O === this.selectedIndex}
              .value="${c}"
              @click=${() => this.onClick(c, O)}
              id=${`${this.idPrefix}item-${c}`}
            >
            </gu-square-selection-row-item>`)}
        ` : null
        }
    };
    (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Array
    }), (0, r.w6)("design:type", Array)], bo.prototype, "values", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Number
    }), (0, r.w6)("design:type", Object)], bo.prototype, "selectedIndex", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: String
    }), (0, r.w6)("design:type", Object)], bo.prototype, "idPrefix", void 0), bo = (0, r.gn)([(0, _.M)("gu-square-selection-row")], bo);
    let Ho = class extends e.oi {
        constructor() {
            super(...arguments), this.value = "", this.selected = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        width: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(9))};
        border: ${(0, t.asCssProp)((0, i.gridUnits)(.25))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
      }

      :host(:hover) {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        color: ${(0, t.asCssProp)(n.colors.light[300])};
      }

      :host([selected='true']) {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        color: ${(0, t.asCssProp)(n.colors.light[300])};
        border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
      }
    `
        }

        render() {
            return e.dy` <gu-paragraph-text id=${this.id} kind="small" fontWeight="bold" .text=${this.value}>
    </gu-paragraph-text>`
        }
    };
    (0, r.gn)([(0, g.C)({reflect: !0}), (0, r.w6)("design:type", Object)], Ho.prototype, "value", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], Ho.prototype, "selected", void 0), Ho = (0, r.gn)([(0, _.M)("gu-square-selection-row-item")], Ho);
    var cn = o(39017);
    const tn = B => new RegExp(`^.{${B},}$`), yo = {
        email: new RegExp(/(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/),
        phoneNumber: new RegExp(/\d+/),
        name: new RegExp(/^\D+$/),
        password: tn(8),
        minLength: B => tn(B),
        maxLength: B => (B => new RegExp(`^.{${B},${B + 1}}$`))(B),
        deckCode: B => (0, cn.Gu)(B)
    };
    let sn = class extends e.oi {
        constructor() {
            super(...arguments), this.labelText = "", this.initialHelpText = "", this.placeholderText = "", this.successHelpText = "", this.errorHelpText = "", this.align = "left", this.currentStatus = {
                status: "initial",
                helpText: this.initialHelpText
            }, this.inputValue = "", this.validateToPattern = [], this.obfuscateInputText = !1, this.updateValue = c => {
                this.inputValue = c, this.dispatchEvent(new CustomEvent("onValueChange", {
                    detail: {
                        newValue: c,
                        valid: this.validateValue(c)
                    }
                }))
            }, this.onInputChange = c => {
                this.updateValue(c.target.value)
            }, this.onInputType = c => {
                const O = c.target, {value: H} = O;
                this.updateValue(H), this.validateValue(H) && "error" === this.currentStatus.status && this.setCurrentStatus({
                    status: "initial",
                    helpText: this.initialHelpText
                })
            }, this.onInputBlur = c => {
                const O = c.target, {value: H} = O;
                return this.validateValue(H) ? this.setCurrentStatus({
                    status: "success",
                    helpText: this.successHelpText
                }) : this.setCurrentStatus({status: "error", helpText: this.errorHelpText})
            }
        }

        static get properties() {
            return {
                labelText: {type: String},
                placeholderText: {type: String},
                validateToPattern: {type: Array},
                initialHelpText: {type: String},
                successHelpText: {type: String},
                errorHelpText: {type: String},
                disabled: {type: String},
                obfuscateInputText: {type: Boolean},
                initialValue: {type: String},
                align: {type: String}
            }
        }

        createRenderRoot() {
            return this
        }

        firstUpdated() {
            this.initialValue && (this.inputValue = this.initialValue, this.requestUpdate())
        }

        updated(c) {
            super.updated(c), "error" === this.currentStatus.status ? (this.classList.add("error"), this.classList.remove("success", "initial")) : "success" === this.currentStatus.status ? (this.classList.remove("error", "initial"), this.classList.add("success")) : (this.classList.remove("error", "success"), this.classList.add("initial"))
        }

        setCurrentStatus(c) {
            const {status: O, helpText: H} = c;
            this.currentStatus = {status: O, helpText: H}, this.requestUpdate()
        }

        resetCurrentStatus() {
            this.setCurrentStatus({status: "initial", helpText: this.initialHelpText})
        }

        get currentIcon() {
            switch (this.currentStatus.status) {
                case"error":
                    return "alert_triangle";
                case"success":
                    return "checkbox_tick";
                default:
                    return "help"
            }
        }

        validateValue(c) {
            let O = !0;
            return this.validateToPattern.map(H => {
                if (!O) return !1;
                if (H instanceof RegExp) O = H.test(c); else if (-1 !== H.indexOf("not-")) {
                    const oe = H.split("not-").pop();
                    O = !yo[oe].test(c)
                } else O = yo[H] && "function" == typeof yo[H] ? yo[H](c) : yo[H].test(c)
            }), O
        }

        render() {
            return e.dy`
      <style>
        gu-text-input {
          display: flex;
          flex-direction: column;
        }

        .labelText {
          color: ${(0, t.asCssProp)(n.colors.light[100])};
        }

        .inputArea {
          position: relative;
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;
        }

        .inputArea__input {
          width: 100%;
          background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
          border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
          padding: ${(0, t.asCssProp)((0, i.gridUnits)(3))} ${(0, t.asCssProp)((0, i.gridUnits)(4))};
          ${(0, t.asCssProp)(po.baseSimpleTextStyles)};
          font-size: ${(0, t.asCssProp)(n.typography.simpleTextSizeMapping.small)};
          color: ${(0, t.asCssProp)(n.colors.light[100])};
          box-sizing: border-box;
        }

        .inputArea__input::placeholder {
          color: ${(0, t.asCssProp)(n.colors.light[700])} !important;
        }

        .inputArea__icon {
          height: 100%;
          font-size: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
          margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        }

        .helpText {
          margin-top: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
        }

        /* ALIGN */
        gu-text-input[align='center'] .inputArea__input {
          text-align: center;
        }
        /* ERROR STATE COLORING */
        gu-text-input.error .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.god.war.primary)};
        }
        gu-text-input.error .inputArea__icon,
        gu-text-input.error .helpText {
          color: ${(0, t.asCssProp)(n.colors.god.war.primary)};
          padding: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        }

        /* SUCCESS STATE COLORING */
        gu-text-input.success .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        }
        gu-text-input.success .inputArea__icon,
        gu-text-input.success .helpText {
          color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        }

        /* INITIAL STATE COLORING */
        gu-text-input.initial .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        }
        gu-text-input.initial .inputArea__icon,
        gu-text-input.initial .helpText {
          color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        }

        /* DISABLED STATE COLORING */
        gu-text-input[disabled='true'] .labelText,
        gu-text-input[disabled='true'] .inputArea__icon,
        gu-text-input[disabled='true'] .helpText {
          color: ${(0, t.asCssProp)(n.colors.light[700])};
        }
        gu-text-input[disabled='true'] .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.light[700])};
        }
      </style>

      ${this.labelText ? e.dy` <gu-simple-text class="labelText" fontWeight="bold" kind="small"> ${this.labelText} </gu-simple-text> ` : null}
      <div class=${(0, y.$)({inputArea: !0})}>
        <input
          placeholder=${this.placeholderText ? this.placeholderText : ""}
          type=${this.obfuscateInputText ? "password" : "text"}
          class="inputArea__input"
          value=${this.inputValue}
          @blur=${this.onInputBlur}
          @input=${this.onInputType}
          part="textInput"
        />
        ${"help" !== this.currentIcon ? e.dy` <gu-icon iconLigature=${this.currentIcon} class="inputArea__icon"></gu-icon> ` : null}
      </div>
      ${this.currentStatus.helpText ? e.dy`
            <gu-paragraph-text class="helpText" kind="help" part="helpText">
              ${this.currentStatus.helpText}
            </gu-paragraph-text>
          ` : null}
    `
        }
    };
    sn = (0, r.gn)([(0, _.M)("gu-text-input")], sn);
    let on = class extends e.oi {
        constructor() {
            super(...arguments), this.headerSize = "x-small", this.headerColor = n.colors.dark[900], this.headerAlign = "center", this.textKind = "small", this.textColor = n.colors.dark[500], this.textAlign = "center"
        }

        static get properties() {
            return {
                image: {type: String},
                header: {type: String},
                headerSize: {type: String},
                headerColor: {type: String},
                headerAlign: {type: String},
                text: {type: String},
                textKind: {type: String},
                textColor: {type: String},
                textAlign: {type: String}
            }
        }

        static get styles() {
            return e.iv`
      .tile {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
      }

      .tile-img {
        width: auto;
        height: 100px;
        margin-bottom: 40px;
      }

      .tile-header {
        margin-bottom: 30px;
      }
    `
        }

        render() {
            return e.dy`
      <div class="tile-img-header-text tile">
        <img class="tile-img tile-img" src="${this.image}" />
        <gu-heading-text
          align="${this.headerAlign}"
          fillcolor="${this.headerColor}"
          size="${this.headerSize}"
          class="tile-header"
        >
          ${this.header}
        </gu-heading-text>
        <gu-paragraph-text align="${this.textAlign}" fillcolor="${this.textColor}" kind="${this.textKind}">
          ${this.text}
        </gu-paragraph-text>
      </div>
    `
        }
    };
    on = (0, r.gn)([(0, _.M)("gu-tile-img-header-text")], on);
    let nn = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: block;
        position: relative;
      }

      gu-ribbon-banner::part(innerContainer) {
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(7))} 0 ${(0, t.asCssProp)((0, i.gridUnits)(10))};
      }

      .will-you-survive-banner__spacer {
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
        box-shadow: inset 0 0 0 1.5px ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
        transform: rotate(-45deg);
        display: none;
      }

      .will-you-survive-banner__spacer::before {
        content: '';
        width: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        height: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, i.gridUnits)(.5))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
        .statSpacer {
          display: flex;
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-ribbon-banner>
        <i class="will-you-survive-banner__spacer"></i>

        <gu-heading-text
          size="2x-small"
          .responsiveSize=${[{breakpoint: "small", size: "x-small"}]}
          fillColor="colors.dark.900"
          align="center"
        >
          WILL YOU SURVIVE THE TRIAL OF THE GODS?
        </gu-heading-text>

        <i class="will-you-survive-banner__spacer"></i>

        <slot></slot>
      </gu-ribbon-banner>
    `
        }
    };
    nn = (0, r.gn)([(0, _.M)("gu-will-you-survive-banner")], nn);
    let jo = class extends e.oi {
        constructor() {
            super(...arguments), this.values = [], this.selectedIndex = 0, this.itemClicked = (c, O) => {
                this.selectedIndex = O, this.dispatchEvent(new CustomEvent("onItemClicked", {
                    composed: !0,
                    detail: {index: O, value: c}
                }))
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: row;
        border-bottom: 3px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        padding-right: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
      }

      gu-tabs-collection-item:not(:last-child) {
        margin-right: ${(0, t.asCssProp)((0, i.gridUnits)(1))};
      }
    `
        }

        render() {
            return this.values ? e.dy`
          ${this.values.map((c, O) => e.dy`<gu-tabs-collection-item
              .selected=${O === this.selectedIndex}
              .firstItem=${0 === O}
              .value="${c}"
              @click=${() => this.itemClicked(c, O)}
            >
            </gu-tabs-collection-item>`)}
        ` : null
        }
    };
    (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Array
    }), (0, r.w6)("design:type", Array)], jo.prototype, "values", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Number
    }), (0, r.w6)("design:type", Object)], jo.prototype, "selectedIndex", void 0), jo = (0, r.gn)([(0, _.M)("gu-tabs-collection")], jo);
    let Co = class extends e.oi {
        constructor() {
            super(...arguments), this.value = "", this.selected = !1, this.firstItem = !1
        }

        static get styles() {
            return e.iv`
  :host {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: ${(0, t.asCssProp)((0, i.gridUnits)(32.5))};
    height: ${(0, t.asCssProp)((0, i.gridUnits)(12.5))};
  }

  :host::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    z-index: -1;
    transform: skew(15deg);
  }

  :host([selected='true'])::after {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }
  :host([firstItem='true']) {
    margin-left: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
  }
  :host([firstItem='true'])::before {
    content: '';
    position: absolute;
    width: 50%;
    height: 100%;
    top: 0;
    left: -6%;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    border-bottom: 3px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    z-index: -1;
  }

  :host([selected='true'])::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }
`
        }

        render() {
            return e.dy`
      ${this.selected ? e.dy`<gu-heading-text align="center" size="x-small" fillColor=${n.colors.light[100]}>
            ${this.value}
          </gu-heading-text>` : e.dy`<gu-heading-text align="center" size="x-small" fillColor=${n.colors.gunmetal[500]}>
            ${this.value}
          </gu-heading-text>`}
    `
        }
    };
    (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: String
    }), (0, r.w6)("design:type", Object)], Co.prototype, "value", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], Co.prototype, "selected", void 0), (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: Boolean,
        converter: z.b
    }), (0, r.w6)("design:type", Object)], Co.prototype, "firstItem", void 0), Co = (0, r.gn)([(0, _.M)("gu-tabs-collection-item")], Co);
    let xo = class extends e.oi {
        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      img {
        border: 2px solid rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.light[100]))}, 0.2);
        height: ${(0, t.asCssProp)((0, i.gridUnits)(50))};
        object-fit: cover;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping.small)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, i.gridUnits)(58))};
        }

        .description {
          min-height: ${(0, t.asCssProp)((0, i.gridUnits)(42))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping.medium)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, i.gridUnits)(75))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping.large)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, i.gridUnits)(92))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(k.breakpointSizeMapping["x-large"])}) {
        img {
          max-width: ${(0, t.asCssProp)((0, i.gridUnits)(100))};
        }
      }

      .card {
        border: 1px solid ${(0, t.asCssProp)(n.colors.dark[900])};
        display: flex;
        flex-direction: column;
        & > div {
          display: inline-block;
        }
        max-width: ${(0, t.asCssProp)((0, i.gridUnits)(100))};
      }

      .description {
        background-color: ${(0, t.asCssProp)(n.colors.light[100])};
        color: ${(0, t.asCssProp)(n.colors.dark[900])};
        padding: ${(0, t.asCssProp)((0, i.gridUnits)(3))};
        max-width: ${(0, t.asCssProp)((0, i.gridUnits)(100))};
      }

      .divider {
        height: 5px;
        background: ${(0, t.asCssProp)(n.gradients.gold.horizontal())};
        border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.dark[900])};
        border-top: 1px solid ${(0, t.asCssProp)(n.colors.dark[900])};
      }
    `
        }

        render() {
            return e.dy`
    <div class="card">
      <img class="image" src="${this.imageSrc}" data-test-id="ascension-card-image"></img>
      <div class="divider"></div>
      <div class="description">
        <gu-heading-text
          align="center"
          fillColor="colors.dark.900"
          size="2x-small"
          data-test-id="ascension-card-title"
        >
          ${this.title}
        </gu-heading-text>
        <gu-vertical-space top="medium">
          <gu-paragraph-text align="center" kind="small" fillColor="colors.dark.500" data-test-id="ascension-card-description">
            ${this.description}
          </gu-paragraph-text>
        </gu-vertical-space>
      </div>
    </div>
  `
        }
    };
    (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], xo.prototype, "description", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], xo.prototype, "imageSrc", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], xo.prototype, "title", void 0), xo = (0, r.gn)([(0, _.M)("gu-x2-ascension-card")], xo);
    let rn = class extends e.oi {
        static get properties() {
            return {heading: {type: String}, iconLigature: {type: String}, subheading: {type: String}}
        }

        static get styles() {
            return e.iv`
      gu-icon {
        font-size: ${(0, t.asCssProp)((0, i.gridUnits)(27))};
        margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
      }

      header {
        display: flex;
        align-items: center;
        flex-direction: column;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        gu-icon {
          margin-bottom: ${(0, t.asCssProp)((0, i.gridUnits)(8))};
        }
      }
    `
        }

        render() {
            return e.dy`
      <header>
        ${this.iconLigature ? e.dy` <gu-icon
              fillGradient="gradients.gold.simple"
              fillGradientTarget="bottom"
              iconLigature="${this.iconLigature}"
            ></gu-icon>` : null}
        <gu-heading-text
          align="center"
          fillGradient="gradients.gold.simple"
          size="small"
          .responsiveSize=${[{breakpoint: "small", size: "large"}, {
                breakpoint: "medium",
                size: "x-large"
            }, {breakpoint: "large", size: "2x-large"}]}
        >
          ${this.heading}
        </gu-heading-text>

        ${this.subheading ? e.dy`
      <gu-heading-text
        align="center"
        size="2x-small"
        .responsiveSize=${[{breakpoint: "small", size: "x-small"}]}
        >
          ${this.subheading}
        </gu-heading-text>
      </div>` : null}
      </header>
    `
        }
    };
    rn = (0, r.gn)([(0, _.M)("gu-x2-section-header")], rn);
    let an = class extends e.oi {
        constructor() {
            super(...arguments), this.size = "large", this.spinners = {
                small: "/assets/images/loading-spinner/spin-1s-70px.svg",
                medium: "/assets/images/loading-spinner/spin-1s-110px.svg",
                large: "/assets/images/loading-spinner/spin-1s-135px.svg"
            }
        }

        static get properties() {
            return {size: {type: String}}
        }

        render() {
            return e.dy` <img alt="Loading..." src="${this.spinners[this.size]}" /> `
        }
    };
    an = (0, r.gn)([(0, _.M)("gu-loading-spinner")], an);
    let js = class extends e.oi {
        constructor() {
            super(...arguments), this.items = [], this.open = !1
        }

        connectedCallback() {
            super.connectedCallback(), window.addEventListener("click", c => this.onClick(c)), window.addEventListener("scroll", () => this.onScroll())
        }

        disconnectedCallback() {
            window.removeEventListener("click", c => this.onClick(c)), window.removeEventListener("scroll", () => this.onScroll()), super.disconnectedCallback()
        }

        static get styles() {
            return e.iv`
  :host {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .dropdown-menu--hidden {
    display: none;
  }

  .dropdown-menu-content {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    right: ${(0, t.asCssProp)((0, i.gridUnits)(5))};
    top: ${(0, t.asCssProp)((0, i.gridUnits)(4))};
    outline: 2px solid ${(0, t.asCssProp)(n.colors.dark[300])};
    border-radius: 2px;
    box-shadow: ${(0, t.asCssProp)((0, i.gridUnits)(.5))} ${(0, t.asCssProp)((0, i.gridUnits)(.5))} ${(0, t.asCssProp)((0, i.gridUnits)(2))}
      rgba(${(0, t.asCssProp)((0, h.hexToCssRgbString)(n.colors.black))}, 25%);
    padding: 0;
    margin: 0;
    z-index: ${qe.modalLayerZLevel};
  }
`
        }

        selectDropDownItem(c) {
            this.current = c, this.open = !1, this.dispatchEvent(new CustomEvent("onSelect", {
                composed: !0,
                bubbles: !0,
                detail: Object.assign({}, this.current)
            }))
        }

        toggleOpen() {
            setTimeout(() => {
                this.open = !this.open
            })
        }

        onClick(c) {
            !c.composedPath().includes(this) && this.open && (this.open = !1)
        }

        onScroll() {
            this.open && (this.open = !1)
        }

        render() {
            return e.dy`
      <slot name="dropdownControl" data-test-id="dropdown-control" @click=${this.toggleOpen}></slot>
      <ul
        class=${(0, y.$)({"dropdown-menu--hidden": !this.open, "dropdown-menu-content": this.open})}
      >
        ${this.items.map((c, O, H) => e.dy`
              <gu-dropdown-menu-item
                .align=${this.align}
                .item=${c}
                .last=${H.length - 1 === O}
                @click=${() => this.selectDropDownItem(c)}
              ></gu-dropdown-menu-item>
            `)}
      </ul>
    `
        }
    };
    (0, r.gn)([(0, g.C)({type: Array}), (0, r.w6)("design:type", Array)], js.prototype, "items", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], js.prototype, "align", void 0), (0, r.gn)([(0, mt.S)(), (0, r.w6)("design:type", Object)], js.prototype, "open", void 0), (0, r.gn)([(0, mt.S)({hasChanged: (B, c) => (null == B ? void 0 : B.value) !== (null == c ? void 0 : c.value)}), (0, r.w6)("design:type", Object)], js.prototype, "current", void 0), js = (0, r.gn)([(0, _.M)("gu-dropdown-menu")], js);
    let So = class extends e.oi {
        constructor() {
            super(...arguments), this.item = {id: "", value: ""}, this.last = !1
        }

        static get styles() {
            return e.iv`
  :host {
    background: ${(0, t.asCssProp)(n.colors.light[100])};
  }

  .dropdown-menu-item:hover {
    background: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  .dropdown-menu-item {
    display: flex;
    flex-direction: column;
  }

  .dropdown-menu-item__text {
    min-height: ${(0, t.asCssProp)((0, i.gridUnits)(6))};
    min-width: ${(0, t.asCssProp)((0, i.gridUnits)(44))};
    padding: ${(0, t.asCssProp)((0, i.gridUnits)(2))};
    display: block;
  }

  hr.solid {
    width: 100%;
    display: block;
    border: 0;
    border-top: 1px solid ${(0, t.asCssProp)(n.colors.light[300])};
    margin: 0;
    padding: 0;
    transform: scaleX(0.88);
    position: absolute;
  }

  .dropdown-menu-item:hover {
    background: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  .dropdown-menu-item:hover + hr {
    display: none;
  }

  a {
    text-decoration: none;
  }
`
        }

        render() {
            return (0, h.updateColoringVariables)({component: this, fillColorHover: "colors.light.100"}), e.dy`
      <li class="dropdown-menu-item" role="dropdown-menu-item">
        <a href="javascript:void(0)">
          <gu-body-text
            class="dropdown-menu-item__text"
            align=${this.align}
            size="medium"
            fillColor=${n.colors.dark[500]}
          >
            ${this.item.value}
          </gu-body-text>
        </a>
      </li>

      ${this.last ? null : e.dy`<hr class="solid" />`}
    `
        }
    };
    (0, r.gn)([(0, g.C)({
        reflect: !0,
        type: String
    }), (0, r.w6)("design:type", Object)], So.prototype, "item", void 0), (0, r.gn)([(0, g.C)({type: String}), (0, r.w6)("design:type", String)], So.prototype, "align", void 0), (0, r.gn)([(0, g.C)({
        type: Boolean,
        reflect: !0
    }), (0, r.w6)("design:type", Object)], So.prototype, "last", void 0), So = (0, r.gn)([(0, _.M)("gu-dropdown-menu-item")], So)
}, 14879
:
(te, U, o) => {
    "use strict";
    o.d(U, {o: () => h});
    var p = o(70655), f = (o(1949), o(32830)), e = o(56418), _ = o(98539), g = o(26711);

    class h extends f.oi {
        constructor() {
            super(...arguments), this.loading = !1, this.disabled = !1, this.expand = !1, this.iconPosition = "right", this.type = "secondary"
        }

        renderIcon(t) {
            return t ? f.dy`<gu-icon iconLigature=${t} class="button__icon"></gu-icon>` : f.dy``
        }

        renderText() {
            return f.dy`<slot class="button__text"></slot>`
        }

        renderContent(t, n) {
            return t ? f.dy`<gu-rectangular-spinner class="button__spinner" color="grey"></gu-rectangular-spinner>` : f.dy` ${this.renderIcon(n)} ${this.renderText()} `
        }

        getClassMap() {
            return {
                button__content: !0,
                [`button__content--icon-${this.iconPosition}`]: !0,
                [`button__content--type-${this.type}`]: !0
            }
        }

        render() {
            return f.dy` <div class=${(0, _.$)(this.getClassMap())}> ${this.renderContent(this.loading, this.icon)} </div> `
        }
    }

    (0, p.gn)([(0, e.C)({
        reflect: !0,
        type: Boolean,
        converter: g.b
    }), (0, p.w6)("design:type", Object)], h.prototype, "loading", void 0), (0, p.gn)([(0, e.C)({
        reflect: !0,
        type: Boolean,
        converter: g.b
    }), (0, p.w6)("design:type", Object)], h.prototype, "disabled", void 0), (0, p.gn)([(0, e.C)({
        reflect: !0,
        type: Boolean,
        converter: g.b
    }), (0, p.w6)("design:type", Object)], h.prototype, "expand", void 0), (0, p.gn)([(0, e.C)(), (0, p.w6)("design:type", String)], h.prototype, "icon", void 0), (0, p.gn)([(0, e.C)(), (0, p.w6)("design:type", String)], h.prototype, "iconPosition", void 0), (0, p.gn)([(0, e.C)({reflect: !0}), (0, p.w6)("design:type", Object)], h.prototype, "type", void 0)
}, 43977
:
(te, U, o) => {
    "use strict";
    var p = o(70655), f = (o(61517), o(32830)), e = o(86041), _ = o(80102), g = o(26532), h = o(65281);
    let i = class extends f.oi {
        static get styles() {
            return f.iv`
      :host {
        display: block;
        width: ${(0, g.asCssProp)((0, _.gridUnits)(7))};
        cursor: pointer;
        height: ${(0, g.asCssProp)((0, _.gridUnits)(7))};
        background: ${(0, g.asCssProp)(h.gradients.apocyan.simple("bottom"))};
        position: relative;
        border-radius: 50%;
      }

      .circular-close-button__background {
        position: absolute;
        left: ${(0, g.asCssProp)((0, _.gridUnits)(.5))};
        right: ${(0, g.asCssProp)((0, _.gridUnits)(.5))};
        top: ${(0, g.asCssProp)((0, _.gridUnits)(.5))};
        bottom: ${(0, g.asCssProp)((0, _.gridUnits)(.5))};
        background: ${(0, g.asCssProp)(h.colors.gunmetal[900])};
        border-radius: 50%;
        display: flex;
      }

      .circular-close-button__icon {
        margin: auto;
        font-size: ${(0, g.asCssProp)((0, _.gridUnits)(4))};
      }
    `
        }

        render() {
            return f.dy`
      <div class="circular-close-button__background">
        <gu-icon
          class="circular-close-button__icon"
          iconLigature="close_x"
          fillGradient=${h.gradients.apocyan.simple("bottom")}
        ></gu-icon>
      </div>
    `
        }
    };
    i = (0, p.gn)([(0, e.M)("gu-circular-close-button")], i)
}, 89534
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(56418), e = o(72650), _ = o(93270), g = o(14879), h = o(80102), i = o(26532),
        t = o(65281), n = o(40010);
    const D = r.iv`
  ${n.W2}

  .button__icon {
    font-size: ${(0, i.asCssProp)((0, h.gridUnits)(4))};
  }

  .button__text {
    color: inherit;
    text-shadow: 0 calc(var(--vh) * 0.2) calc(var(--vh) * 0.2) rgba(${(0, i.asCssProp)(t.colors.dark[900])}, 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    align-content: center;
    order: 1;
    gap: 8px;
  }

  /*  MOUSE-DOWN FX
    ----------------------------------------------------------------------------------- */
  :host(:active)::after {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, i.asCssProp)(t.gradients.apocyan.simple())};
    opacity: 0.2;
    ${(0, i.asCssProp)((0, i.drawHexShapePolygonMask)(11, 11))};
  }

  /* Primary */

  :host([type='primary']) {
    background: ${(0, i.asCssProp)(t.gradients.apocyan.simple("bottom"))};
  }

  .button__artwork {
    ${(0, i.asCssProp)(t.uifx.userSelect("none"))};
    position: absolute;
    z-index: 2;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    ${(0, i.asCssProp)((0, i.drawHexShapePolygonMask)(11, 11))};
  }

  .button__artwork__side {
    position: absolute;
    left: 50%;
  }

  .button__artwork__side img {
    display: block;
    height: 100%;
  }

  .button__artwork__side--top {
    height: calc(${(0, i.asCssProp)("32px")} * 1.4);
    bottom: 36%;
    transform: translateX(-42%);
  }

  .button__artwork__side--bottom {
    height: calc(${(0, i.asCssProp)("32px")} * 2);
    top: 32%;
    transform: translateX(-58%);
  }

  :host([size='large']) .button__artwork__side--top {
    height: calc(${(0, i.asCssProp)("48px")} * 1.4);
  }

  :host([size='large']) .button__artwork__side--bottom {
    height: calc(${(0, i.asCssProp)("48px")} * 2);
  }

  :host([type='primary']:hover) {
    color: ${(0, i.asCssProp)(t.colors.light[100])};
  }

  :host([type='primary']:hover)::before {
    background: ${(0, i.asCssProp)(t.colors.gunmetal[700])};
  }

  :host([type='primary']:hover) .artwork__side {
    opacity: 0.8;
  }

  /* Secondary */

  :host([type='secondary']) {
    background: ${(0, i.asCssProp)(t.colors.gunmetal[100])};
  }

  :host([type='secondary'])::before {
    background: ${(0, i.asCssProp)(t.colors.gunmetal[900])};
  }

  :host([type='secondary']:hover)::before {
    background: ${(0, i.asCssProp)(t.colors.gunmetal[700])};
  }

  /* Subtle */

  :host([type='subtle']) {
    background: ${(0, i.asCssProp)(t.colors.gunmetal[900])};
    text-transform: uppercase;
  }

  :host([type='subtle'])::before {
    display: none;
  }

  :host([type='subtle']) .button__text,
  :host([type='subtle']) .button__icon {
    color: ${(0, i.asCssProp)(t.colors.apocyan[100])};
  }

  :host([type='subtle']:hover) {
    background: ${(0, i.asCssProp)(t.colors.gunmetal[700])};
  }
`;

    class m extends g.o {
        constructor() {
            super(...arguments), this.type = "secondary"
        }

        static get styles() {
            return D
        }

        renderArtwork() {
            return "primary" !== this.type ? r.dy`` : r.dy`
      <div class="button__artwork">
        <picture class="button__artwork__side button__artwork__side--top">
          <source srcset="/assets/images/hex-button/hex-button--top-wave-art.webp" type="image/webp" />
          <source srcset="/assets/images/hex-button/hex-button--top-wave-art.png" type="image/png" />
          <img src="/assets/images/hex-button/hex-button--top-wave-art.png" />
        </picture>

        <picture class="button__artwork__side button__artwork__side--bottom">
          <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.webp" type="image/webp" />
          <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.png" type="image/png" />
          <img src="/assets/images/hex-button/hex-button--bottom-wave-art.png" />
        </picture>
      </div>
    `
        }

        renderText() {
            return r.dy`
      <gu-heading-text class="button__text" size="${"large" === this.size ? "2x-small" : "3x-small"}">
        <slot></slot>
      </gu-heading-text>
    `
        }

        render() {
            return r.dy`${this.renderArtwork()} ${super.render()}`
        }
    }

    (0, p.gn)([(0, f.C)({reflect: !0}), (0, p.w6)("design:type", String)], m.prototype, "type", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], m.prototype, "size", void 0), customElements.define("gu-hex-button", (0, e.b)((0, _.Z)(m)))
}, 40010
:
(te, U, o) => {
    "use strict";
    o.d(U, {W2: () => n});
    var p = o(32830), r = o(80102), f = o(26532), e = o(65281);
    const _ = p.iv`
  :host {
    cursor: pointer;
    display: inline-flex;
    justify-self: center;
    justify-content: center;
    flex-grow: 0;
    color: ${(0, f.asCssProp)(e.colors.gunmetal[100])};
    border-radius: ${(0, f.asCssProp)((0, r.gridUnits)(1))};
    padding: 1px;
    overflow: hidden;
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .button__content {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: ${(0, f.asCssProp)((0, r.gridUnits)(1.5))} ${(0, f.asCssProp)((0, r.gridUnits)(3.5))};
    flex: 1;
    gap: 8px;
  }

  .button__icon {
    position: relative;
    z-index: 2;
    order: 2;
    font-size: ${(0, f.asCssProp)((0, r.gridUnits)(6))};
  }

  .button__text {
    position: relative;
    z-index: 2;
    text-decoration: none;
    order: 1;
    line-height: 20px;
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([expand='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .button__content--icon-left .button__icon {
    order: 0;
  }

  /* Button content when layout is square
  ----------------------------------------------------------------------------------- */
  .button__content--layout-square {
    padding: ${(0, f.asCssProp)((0, r.gridUnits)(1.5))};
  }

  /* Button content when layout is vertical
    ----------------------------------------------------------------------------------- */
  .button__content--layout-vertical {
    flex-direction: column;
    align-items: center;
    min-width: 70px;
    max-width: 80px;
    padding: ${(0, f.asCssProp)((0, r.gridUnits)(3))} ${(0, f.asCssProp)((0, r.gridUnits)(3))};
    gap: 0px;
  }

  .button__content--layout-vertical .button__icon {
    order: 0;
    margin: 0;
    font-size: ${(0, f.asCssProp)((0, r.gridUnits)(6))};
  }

  .button__content--layout-vertical .button__text {
    text-align: center;
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, f.asCssProp)(e.uifx.userSelect("none"))};
  }

  :host([disabled='true']) {
    filter: grayscale(100%);
  }
`, n = p.iv`
  ${_}

  :host {
    position: relative;
    white-space: nowrap;
    color: ${(0, f.asCssProp)(e.colors.light[100])};
    ${(0, f.asCssProp)((0, f.drawHexShapePolygonMask)(12, 12))};
    ${(0, f.asCssProp)(e.animation.standardTransition("all"))};

    /* NORMAL SIZING BY DEFAULT */
    min-width: 140px;
    height: ${(0, f.asCssProp)("32px")};
    line-height: ${(0, f.asCssProp)("32px")};
  }

  /* The background "fill" color of the button */
  :host::before {
    content: '';
    position: absolute;
    ${(0, f.inset)(2, 3)}
    z-index: 0;
    background: ${(0, f.asCssProp)(e.colors.gunmetal[900])};
    ${(0, f.asCssProp)((0, f.drawHexShapePolygonMask)(11, 11))};
    ${(0, f.asCssProp)(e.animation.standardTransition("all"))};
  }

  .button__content {
    padding: 0 ${(0, f.asCssProp)("20px")};
  }

  /* large size */

  :host([size='large']) {
    height: ${(0, f.asCssProp)("48px")};
    line-height: ${(0, f.asCssProp)("48px")};
    ${(0, f.asCssProp)((0, f.drawHexShapePolygonMask)(18, 18))};
  }

  :host([size='large']) .button__content {
    padding: 0 ${(0, f.asCssProp)("26px")};
  }

  :host([size='large'])::before {
    ${(0, f.asCssProp)((0, f.drawHexShapePolygonMask)(17, 17))};
  }

  :host([size='large']) .buttonContent__icon {
    font-size: ${(0, f.asCssProp)((0, r.gridUnits)(5.5))};
  }
`
}, 62701
:
(te, U, o) => {
    "use strict";
    o.d(U, {w: () => k});
    var p = o(70655), r = o(92436), f = o(87435), e = o(32830), _ = o(86041), g = o(5284), h = o(26532), i = o(65281);
    const t = new r.do(w => {
        w.forEach(D => {
            D.target.handleResize()
        })
    }), n = new CustomEvent("onVideoEnd"), k = w => new Promise(D => {
        setTimeout(() => D(), w)
    });
    let $ = class extends e.oi {
        constructor() {
            super(...arguments), this.muted = !1, this.autoPlay = !1, this.loopVideo = !1, this.showControls = !1, this.pauseOnEndFrame = !1, this.startPausedOnFirstFrame = !1, this.volume = 1, this.dimensions = {
                width: 0,
                height: 0
            }, this.hasSignalledEnd = !1, this.onVideoLoaded = () => {
                console.log("VIDEO IS LOADED (not necessarily fully buffered though)", this.videoId);
                const D = () => {
                    this.bindPlayListeners(), this.delayedEmitVideoReady(), this.setVolume()
                };
                this.startPausedOnFirstFrame ? this.gotoTimeAndPause(.02).then(() => D()) : D()
            }, this.onVideoUpdate = D => {
                const {percent: m} = D;
                this.dispatchEvent(new CustomEvent("onVideoProgress", {detail: {percent: m}})), this.pauseOnEndFrame && m >= .88 && (this.pauseVideo(), this.hasSignalledEnd || (this.hasSignalledEnd = !0, this.dispatchEvent(n)))
            }, this.delayedEmitVideoReady = () => setTimeout(() => {
                this.hasSignalledEnd = !1, this.classList.remove("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoReady"))
            }, 350)
        }

        static get styles() {
            return e.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        ${(0, h.asCssProp)(i.animation.standardTransition("opacity"))};
      }

      :host ::slotted(iframe) {
        width: 100%;
        height: 100%;
        display: block;
      }

      gu-rectangular-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
      }

      :host(.hideVideo) gu-rectangular-spinner {
        display: flex;
      }
    `
        }

        static get properties() {
            return {
                videoId: {type: Number},
                loopVideo: {type: Boolean},
                autoPlay: {type: Boolean},
                pauseOnEndFrame: {type: Boolean},
                startPausedOnFirstFrame: {type: Boolean},
                showControls: {type: Boolean},
                volume: {type: Number},
                muted: {type: Boolean}
            }
        }

        firstUpdated() {
            this.handleResize(), t.observe(this)
        }

        updated(D) {
            super.updated(D), D.has("videoId") && this.videoId ? this.handleVideoIdUpdated() : D.has("volume") && this.setVolume()
        }

        disconnectedCallback() {
            t.unobserve(this), this.vimeoControl && this.vimeoControl.destroy()
        }

        handleVideoIdUpdated() {
            return (0, p.mG)(this, void 0, void 0, function* () {
                if (this.vimeoControl) {
                    const D = yield this.vimeoControl.getVideoId();
                    return console.log("@@@@@@@@@@@@", D, this.videoId), this.videoId === D ? this.reInitCurrentVideo() : this.loadNewVideoId()
                }
                this.initVideo()
            })
        }

        unBindEventsAndReset() {
            this.classList.add("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoLoading")), this.vimeoControl.off("timeupdate", this.onVideoUpdate), this.vimeoControl.off("loaded", this.onVideoLoaded)
        }

        reInitCurrentVideo() {
            console.log("@@@@@ RE-INIT CURRENT VIDEO @@@@@@"), this.unBindEventsAndReset(), this.onVideoLoaded()
        }

        loadNewVideoId() {
            console.log("@@@@@ LOAD NEW VIDEO ID @@@@@@"), this.unBindEventsAndReset(), this.vimeoControl.loadVideo(this.videoId).then(() => this.onVideoLoaded()).catch(D => console.log(D))
        }

        initVideo() {
            const D = {
                title: !1,
                byline: !1,
                portrait: !1,
                controls: this.showControls,
                playsinline: !0,
                autopause: !1,
                muted: !0,
                id: this.videoId,
                loop: this.loopVideo,
                autoplay: this.autoPlay
            };
            this.classList.add("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoLoading")), this.vimeoControl = new f.Z(this, D), this.vimeoControl.on("loaded", this.onVideoLoaded)
        }

        setVolume() {
            return !!this.vimeoControl && (this.muted ? this.vimeoControl.setMuted(!0) : this.vimeoControl.setVolume(this.volume))
        }

        bindPlayListeners() {
            this.vimeoControl.on("ended", () => {
                this.dispatchEvent(n)
            }), this.vimeoControl.on("timeupdate", this.onVideoUpdate)
        }

        gotoTimeAndPause(D) {
            return (0, p.mG)(this, void 0, void 0, function* () {
                try {
                    return console.log("gotoTimeAndPause(time)", D, this.videoId), yield this.vimeoControl.setMuted(!0), console.log("gotoTimeAndPause > this.vimeoControl.setMuted(true) resolved", this.videoId, D), yield this.vimeoControl.play(), console.log("gotoTimeAndPause > this.vimeoControl.play() resolved", this.videoId, D), g.I5.isSafari() && (yield k(350), console.log("gotoTimeAndPause > artificialDelay() resolved", this.videoId, D)), yield this.vimeoControl.pause(), console.log("gotoTimeAndPause > this.vimeoControl.pause() resolved", this.videoId, D), yield this.vimeoControl.setCurrentTime(D), console.log("gotoTimeAndPause > this.vimeoControl.setCurrentTime(time) resolved", this.videoId, D), this.setVolume(), console.log("gotoTimeAndPause > ALL STEPS resolved")
                } catch (m) {
                    console.error("gotoTimeAndPause ERROR:", m)
                }
            })
        }

        playVideo(D) {
            console.log("playVideo(time)", D);
            const m = () => {
                this.hasSignalledEnd = !1, this.vimeoControl.play()
            };
            return void 0 !== D ? this.gotoTimeAndPause(D).then(() => m()) : m()
        }

        pauseVideo() {
            this.vimeoControl.pause()
        }

        handleResize() {
            this.dimensions = {width: this.offsetWidth, height: this.offsetHeight}
        }

        destroyVideo() {
            this.vimeoControl.destroy()
        }

        render() {
            return e.dy`
      <slot></slot>
      <gu-rectangular-spinner></gu-rectangular-spinner>
    `
        }
    };
    $ = (0, p.gn)([(0, _.M)("gu-controllable-vimeo-embed")], $)
}, 99454
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(86041), e = o(26532), _ = o(61462);
    let g = class extends r.oi {
        static get properties() {
            return {}
        }

        static get styles() {
            return r.iv`
      ${(0, e.asCssProp)((0, e.setBoxSizing)())}

      :host {
        display: block;
        position: relative;
      }

      /* @NOTE: The hidden submit button cannot be display: none,
      as this breaks the go-button / enter functionality in Safari */
      .formControl__hiddenSubmitInput {
        position: absolute;
        opacity: 0;
        top: 0;
        left: 0;
        ${(0, e.asCssProp)((0, _.userSelect)("none"))};
      }

      .formControl__fakeSlot {
        display: flex;
        flex-direction: column;
      }
    `
        }

        firstUpdated() {
            this.formDom = this.shadowRoot.querySelector(".formControl"), this.formDom.addEventListener("submit", this.formSubmitHandler)
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.formDom.removeEventListener("submit", this.formSubmitHandler)
        }

        formSubmitHandler(i) {
            i.preventDefault(), this.dispatchEvent(new CustomEvent("onFormSubmit", {bubbles: !0, composed: !0}))
        }

        onSlotChange() {
            const i = this.shadowRoot.querySelector(".formSlot"),
                t = this.shadowRoot.querySelector(".formControl__fakeSlot");
            i.assignedElements().forEach(n => t.appendChild(n))
        }

        render() {
            return r.dy`
      <form class="formControl" action="">
        <input type="submit" class="formControl__hiddenSubmitInput" @click=${this.formSubmitHandler} />
        <div class="formControl__fakeSlot"></div>
      </form>
      <slot class="formSlot" @slotchange=${this.onSlotChange}></slot>
    `
        }
    };
    g = (0, p.gn)([(0, f.M)("gu-form-context")], g)
}, 4390
:
(te, U, o) => {
    "use strict";

    function p(g, h, i) {
        h.runTask(() => g.navigate([i]))
    }

    function r(g) {
        window.open(g.url, g._target)
    }

    function e(g, h) {
        return Object.keys(g).reduce((i, t) => -1 !== h.indexOf(g[t].path) || i, !1)
    }

    o.d(U, {pR: () => p, rb: () => r, M0: () => e, Cs: () => _});
    const _ = g => new CustomEvent("onExternalNavItemClick", {detail: {navItem: g}, bubbles: !0, composed: !0})
}, 61517
:
(te, U, o) => {
    "use strict";
    var p = o(32830), r = o(5284), f = o(65171), e = o(26532), _ = o(65281), g = o(91418);
    customElements.define("gu-icon", class extends p.oi {
        constructor() {
            super(...arguments), this.iconLigature = "", this.fillGradientTarget = "top"
        }

        static get properties() {
            return {
                iconLigature: {type: String},
                fillColor: {type: String},
                fillGradient: {type: String},
                fillGradientTarget: {type: String}
            }
        }

        static get styles() {
            return p.iv`
      :host {
        display: inline-flex;
        font-weight: 400 !important;
        ${(0, e.asCssProp)(r.uA.enhancedTextRenderingStyles)};
        /*
          Adding fill coloring rules for textFillColor here.
          ${(0, e.asCssProp)(g.fillColoringRules)} didn't allow for the case
          where a fillColor wasn't passed a component input, but was
          controlled by a parent component via css variables.
        */
        color: var(--textFillColor);
        border-color: var(--textFillColor);
      }

      .icon {
        -webkit-user-select: none;
        user-select: none;

        margin: auto;
        ${(0, e.asCssProp)(_.typography.iconTextStyles)};
      }

      :host([fillGradient]) {
        display: inline;
        line-height: 0;
      }

      ${(0, e.asCssProp)(g.fillColoringRules)}
    `
        }

        render() {
            return (0, f.updateColoringVariables)({
                component: this,
                fillColor: this.fillColor,
                fillGradient: this.fillGradient,
                fillGradientTarget: this.fillGradientTarget
            }), p.dy`<i class="icon">${this.iconLigature}</i>`
        }
    })
}, 1949
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(56418), e = o(86041), _ = o(80102), g = o(26532), h = o(65281);
    let i = class extends r.oi {
        constructor() {
            super(...arguments), this.color = "grey"
        }

        static get styles() {
            return r.iv`
      :host {
        height: ${(0, g.asCssProp)((0, _.gridUnits)(6))};
        display: flex;
        background: none;
        position: relative;
        transform: translateZ(0) scale(1);
        backface-visibility: hidden;
        transform-origin: 0 0;
      }
      .rect {
        box-sizing: content-box;
        width: ${(0, g.asCssProp)((0, _.gridUnits)(1.5))};
        height: 100%;
        animation: opacityFade 1s cubic-bezier(0.5, 0, 0.5, 1) infinite;
      }
      .rect:not(:first-child) {
        margin-left: ${(0, g.asCssProp)((0, _.gridUnits)(1.5))};
      }
      .rect--1 {
        animation-delay: -0.6s;
      }
      .rect--2 {
        animation-delay: -0.4s;
      }
      .rect--3 {
        animation-delay: -0.2s;
      }
      .rect--4 {
        animation-delay: -1s;
      }
      .grey.rect--1 {
        background: #fafafa;
      }
      .grey.rect--2 {
        background: #f2f2f2;
      }
      .grey.rect--3 {
        background: #e5e5e5;
      }
      .grey.rect--4 {
        background: ${(0, g.asCssProp)(h.colors.light[300])};
      }
      .apocyan.rect--1 {
        background: ${(0, g.asCssProp)(h.colors.apocyan[300])};
      }
      .apocyan.rect--2 {
        background: #6edbdb;
      }
      .apocyan.rect--3 {
        background: #67d9e0;
      }
      .apocyan.rect--4 {
        background: ${(0, g.asCssProp)(h.colors.apocyan[500])};
      }
      @keyframes opacityFade {
        0% {
          opacity: 1;
        }
        50% {
          opacity: 0.5;
        }
        100% {
          opacity: 1;
        }
      }
    `
        }

        render() {
            return r.dy`
      <div class="rect rect--1 ${this.color}"></div>
      <div class="rect rect--2 ${this.color}"></div>
      <div class="rect rect--3 ${this.color}"></div>
      <div class="rect rect--4 ${this.color}"></div>
    `
        }
    };
    (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", Object)], i.prototype, "color", void 0), i = (0, p.gn)([(0, e.M)("gu-rectangular-spinner")], i)
}, 90004
:
(te, U, o) => {
    "use strict";
    var p = o(70655), e = (o(51256), o(52102), o(32830)), _ = o(56418), g = o(86041), h = o(65281), i = o(65171),
        t = o(80102), n = o(26532);
    const C = (0, n.asCssProp)((0, t.gridUnits)(11)), k = e.iv`
  ${(0, n.asCssProp)((0, n.setBoxSizing)())}

  :host {
    display: flex;
    width: 100%;
    cursor: pointer;
    padding: ${(0, n.asCssProp)((0, t.gridUnits)(5))} 0 0;
  }

  .innerContainer {
    margin: auto;
    width: 100%;
    padding-bottom: 140%;
    position: relative;
  }

  .itemImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .itemImage--cryptoKittyHead,
  .itemImage--cryptoKitty {
    width: 80%;
    height: 80%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .itemImage--cryptoKitty {
    width: 85%;
    height: 85%;
  }

  .colorStrip {
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2.5%;
    background: ${(0, n.asCssProp)(h.colors.quality.plain)};
    box-shadow: 0px 1px 2px rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.dark[900]))}, 0.5);
  }

  .gradientSkrim {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 1px rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.light[100]))}, 0.3);
    background: linear-gradient(
      to top,
      rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.dark[900]))}, 1) 0%,
      rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.dark[900]))}, 0) 70%
    );
  }

  .countDisplay {
    position: absolute;
    z-index: 2;
    left: 50%;
    top: ${(0, n.asCssProp)((0, t.gridUnits)(-5))};
    transform: translate(-50%, 0);
    width: ${C};
    height: ${C};
    line-height: ${C};
    background: url('/assets/images/ui-embellishments/ui--count-background-diamonds.svg') center no-repeat;
    background-size: contain;
  }

  .countDisplay__x {
    font-weight: normal;
    text-transform: none;
  }

  .textFields {
    position: absolute;
    bottom: ${(0, n.asCssProp)((0, t.gridUnits)(5))};
    left: 0;
    width: 100%;
    text-align: center;
    padding: 0 ${(0, n.asCssProp)((0, t.gridUnits)(4))};
  }

  .textFields__qualityName {
    text-shadow: 0px ${(0, n.asCssProp)((0, t.gridUnits)(1))} ${(0, n.asCssProp)((0, t.gridUnits)(1))}
      rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.dark[900]))}, 0.5);
  }

  .textFields__qualityName,
  .textFields__itemName {
    display: block;
  }

  .textFields__qualityName {
    margin-bottom: ${(0, n.asCssProp)((0, t.gridUnits)(1))};
  }

  /*
    @NOTE: style for various UI states ...
  */
  :host(.hideCount) {
    padding: 0;
  }

  :host(:hover) .gradientSkrim {
    box-shadow: inset 0 0 0 ${(0, n.asCssProp)((0, t.gridUnits)(.25))} rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.apocyan[300]))}, 1);
  }

  :host(.noAspectRatio) {
    height: 100%;
  }

  :host(.noAspectRatio) .innerContainer {
    padding-bottom: 0%;
    height: 100%;
  }

  :host(.notOwned) .itemImage,
  :host([count='0']) .itemImage {
    opacity: 0.3;
  }

  :host(.equipped) .gradientSkrim {
    box-shadow: inset 0 0 0 ${(0, n.asCssProp)((0, t.gridUnits)(.5))} rgba(${(0, n.asCssProp)((0, i.hexToCssRgbString)(h.colors.apocyan[300]))}, 1);
  }

  :host(.hideBorder) .gradientSkrim {
    box-shadow: none;
  }
`;
    o(29939), o(28917);
    let S = class extends e.oi {
        static get styles() {
            return k
        }

        renderText() {
            var I, s, b, E;
            if (this.hideText) return e.dy``;
            const R = (null === (s = null === (I = this.board) || void 0 === I ? void 0 : I.class_properties) || void 0 === s ? void 0 : s.quality) || (null === (E = null === (b = this.board) || void 0 === b ? void 0 : b.class_properties) || void 0 === E ? void 0 : E.effort),
                X = this.trinket ? this.trinket.name : this.board ? this.board.name : "";
            return e.dy`
      <i class="gradientSkrim"></i>
      <div class="textFields">
        <gu-simple-text class="textFields__qualityName" kind="tag" fillColor=${h.colors.light[100]}>
          ${R}
        </gu-simple-text>
        <gu-heading-text class="textFields__itemName" size="2x-small" fillGradient=${h.gradients.gold.simple()}>
          ${X}
        </gu-heading-text>
      </div>
    `
        }

        renderCount() {
            var I, s;
            let b;
            return !this.hideCount && void 0 !== this.count && (b = (null === (I = this.trinket) || void 0 === I ? void 0 : I.owned) || (null === (s = this.board) || void 0 === s ? void 0 : s.owned) ? this.count : 0), this.hideCount || void 0 === b ? e.dy`` : e.dy`
        <gu-simple-text class="countDisplay" align="center" kind="micro" data-test-id="loadout-part-count">
          x<strong>${Math.min(b, 99)}</strong>${b > 99 ? "+" : null}
        </gu-simple-text>
      `
        }

        render() {
            var I, s, y;
            return this.noAspectRatio ? this.classList.add("noAspectRatio") : this.classList.remove("noAspectRatio"), (null === (I = this.trinket) || void 0 === I ? void 0 : I.owned) || (null === (s = this.board) || void 0 === s ? void 0 : s.owned) ? this.classList.remove("notOwned") : this.classList.add("notOwned"), this.equipped ? this.classList.add("equipped") : this.classList.remove("equipped"), this.hideText ? this.classList.add("hideText") : this.classList.remove("hideText"), this.hideCount ? this.classList.add("hideCount") : this.classList.remove("hideCount"), this.hideBorder ? this.classList.add("hideBorder") : this.classList.remove("hideBorder"), e.dy`
      <div class="innerContainer">
        ${this.trinket ? ((y, I) => "Good Kitty Statue" === y.name ? ((y, I) => {
                var s;
                let b = "#6B6B70", E = "#B1AEB9", R = "#E1E1E1";
                return (null === (s = null == y ? void 0 : y.properties) || void 0 === s ? void 0 : s.fur_color) && (b = y.properties.fur_color, E = y.properties.belly_color, R = y.properties.eyes_color), I ? e.dy`
      <gu-regular-crypto-kitty-head
        class="itemImage itemImage--trinket itemImage--cryptoKittyHead"
        .furColor=${b}
        .bellyColor=${E}
        .eyeColor=${R}
        data-test-id="loadout-part-trinket"
      ></gu-regular-crypto-kitty-head>
    ` : e.dy`
    <gu-regular-crypto-kitty
      class="itemImage itemImage--trinket itemImage--cryptoKitty"
      .furColor=${b}
      .bellyColor=${E}
      .eyeColor=${R}
      data-test-id="loadout-part-trinket"
    ></gu-regular-crypto-kitty>
  `
            })(y, I) : e.dy`<img
    class="itemImage itemImage--trinket"
    src="https://images.godsunchained.com/collectables/trinkets/${y.proto}--preview.webp"
    alt=""
    data-test-id="loadout-part-trinket"
  />`)(this.trinket, this.noAspectRatio) : null}
        ${this.board ? (y = this.board.proto, e.dy`
  <img
    class="itemImage itemImage--board"
    src="https://images.godsunchained.com/collectables/boards/${y}--thumb.webp"
    alt=""
    data-test-id="loadout-part-board"
  />
  <i class="colorStrip"></i>
`) : null} ${this.renderCount()} ${this.renderText()}
      </div>
    `
        }
    };
    (0, p.gn)([(0, _.C)({
        type: Number,
        reflect: !0
    }), (0, p.w6)("design:type", Number)], S.prototype, "count", void 0), (0, p.gn)([(0, _.C)({type: Object}), (0, p.w6)("design:type", Object)], S.prototype, "board", void 0), (0, p.gn)([(0, _.C)({type: Object}), (0, p.w6)("design:type", Object)], S.prototype, "trinket", void 0), (0, p.gn)([(0, _.C)({type: Boolean}), (0, p.w6)("design:type", Boolean)], S.prototype, "equipped", void 0), (0, p.gn)([(0, _.C)({type: Boolean}), (0, p.w6)("design:type", Boolean)], S.prototype, "noAspectRatio", void 0), (0, p.gn)([(0, _.C)({type: Boolean}), (0, p.w6)("design:type", Boolean)], S.prototype, "hideText", void 0), (0, p.gn)([(0, _.C)({type: Boolean}), (0, p.w6)("design:type", Boolean)], S.prototype, "hideCount", void 0), (0, p.gn)([(0, _.C)({type: Boolean}), (0, p.w6)("design:type", Boolean)], S.prototype, "hideBorder", void 0), S = (0, p.gn)([(0, g.M)("gu-loadout-part")], S)
}, 29939
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(56418), e = o(86041), _ = o(26532), g = o(65281);
    let h = class extends r.oi {
        static get styles() {
            return r.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
      }

      svg {
        flex: 1;
        max-height: 100%;
        max-width: 100%;
      }
    `
        }

        render() {
            return r.YP`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 204 240">
        <defs>
          <style>
            .furColor {
              fill: ${this.furColor};
            }

            .eyeColor {
              fill: ${this.eyeColor};
            }

            .bellyColor {
              fill: ${this.bellyColor};
            }

            .outlineColor {
              fill: ${(0, _.asCssProp)(g.colors.black)};
              fill-rule: evenodd;
            }
          </style>
        </defs>
        <path
          class="furColor"
          d="M143,209.9c71.5-8.69,66.29-85.92,29.35-129.73,1.14-5-.43-8.14-2.22-12.21-8.7-19.79-9.33-42.93-9.33-60.12a2.57,2.57,0,0,0-3.59-2.53c-13.6,6.29-34.1,29-36.52,44.34-1.45-.11-2.92-.17-4.39-.17-10.13,0-22.78.14-35.51,2.72-9.71-13.55-36.7-39.3-54.08-46a2.78,2.78,0,0,0-3.67,2.88c.34,11.36-1.94,22.37-4.2,33.35-4.29,20.78-8.55,41.43,5,64a5.64,5.64,0,0,0,.62.85A137.93,137.93,0,0,0,21.32,138,80.06,80.06,0,0,0,23,154.35C28.8,193.72,21.32,221.87,13,240H138.1C138.47,227.09,140.14,216.55,143,209.9Z"
        />
        <path class="eyeColor" d="M159.46,111.74l4.6,23.06,18.66-7.22,5.26-19L180.5,90.33l-13.31,6Z" />
        <path class="eyeColor" d="M76.19,133.35l-19.26-23L88.85,98.88l26.66,11.45L126,139.14l-24.1,3Z" />
        <path class="eyeColor" d="M140.43,150.43,142,154.9l11.69,8.49,3.47-.52s5.34-9.08,7.52-13.16l-2.09-3.27Z" />
        <path
          class="bellyColor"
          d="M153.8,60c-2.17-7.88-3.08-23.49,6.54-30.12,1.07,0,1.53,4.45,2,8.75.17,1.56.32,3.1.51,4.4.08.59.16,1.21.24,1.88a60.86,60.86,0,0,0,1.09,6.71A8.17,8.17,0,0,1,173,54a8.75,8.75,0,0,0-4.83,2.94,9.1,9.1,0,0,1-1.67,1.56c2.47-.77,5.31-.14,7.5,4a4,4,0,0,0-2.78,1.09,2.84,2.84,0,0,1-2.67.79c2.45.62,3.61,2.19,3.45,3.12a2.22,2.22,0,0,0-1.89.4c.41.87.85,1.77,1.31,2.69,1.83,3.66,1.69,5.17,1.29,6.78C166.65,70.36,160.05,64.17,153.8,60Z"
        />
        <path
          class="bellyColor"
          d="M42,51c-3.63-7.23-7.36-14.66-11.8-17.73a1,1,0,0,0-1.49.78c-.37,3.48-2,7.21-3.83,11.42C22.6,50.77,20,56.8,19.05,64.06A22.54,22.54,0,0,0,10.5,66.5a27.43,27.43,0,0,1,3.67,3.11,28.69,28.69,0,0,0,4.71,3.87c0,.19,0,.38.05.57-2.71.25-5.55,1.59-6.43,6.45a9.61,9.61,0,0,1,4.69.14,12,12,0,0,0,3,.34c.06.24.12.48.19.72-2.65,2.31-3.3,5-2.88,5.8a5.25,5.25,0,0,1,4.68-.31A75.85,75.85,0,0,0,28,99c1.91-4.67,11.17-21.5,24.25-29.94a1.34,1.34,0,0,0,0-2.1C48.6,64.16,45.35,57.69,42,51Z"
        />
        <path
          class="outlineColor"
          d="M101.91,142.1l-25.72-8.75-19.26-23L88.85,98.88l26.66,11.45L126,139.14Zm-22.2-13.89L67.05,113.07l21.6-7.75,22.11,9.5,7,19.29L102.54,136Z"
        />
        <path
          class="outlineColor"
          d="M163.78,143.69l3.79,5.91-.69,1.29c-1.11,2.09-3,5.41-4.62,8.18l-2.08,3.58-.64,1.08-.84,1.43-.91.14.25,10.17,10.56,6.71a1.87,1.87,0,0,1,.49,2.62,1.93,1.93,0,0,1-2.64.75l-9.85-6.26-13.29,11.78a1.94,1.94,0,0,1-2.66-.39,1.85,1.85,0,0,1,0-2.6l13.41-11.88-.25-10.3L153,166l-13.15-9.55-2.79-8Zm-7.92,16.43-.26.45-1.28.19-10.23-7.42-.33-1,17.62-3.18.39.62c-1.07,2-2.54,4.5-3.84,6.75C157.13,158,156.4,159.21,155.86,160.12Z"
        />
        <path
          class="outlineColor"
          d="M146.64,214.45c-1.69,5.11-4,17.05-3.14,25.55H136c-.5-6.5.66-14.46,1.55-19.26-21.53,2.62-58.9-8.61-71.69-15.82q-4-1.57-7.73-3.44l1.33.42h0c7.27,2.35,33.35,10.77,71.56,7.1q5.43-.36,11.08-1l.58-.06c1.1-.14,2.17-.28,3.23-.45C157.3,205.7,166.45,202,173.66,197a49.09,49.09,0,0,0,11.72-11.44,50,50,0,0,0,3.83-6.14l.07-.14.05-.1,0-.06c.65-1.25,1.25-2.52,1.8-3.82a62.17,62.17,0,0,0,4.36-16.93c0-.4.1-.79.14-1.2q.24-2.4.33-4.86a96,96,0,0,0-3.86-29.69c-1-3.6-2.24-7.19-3.64-10.72-.28-.7-.56-1.41-.86-2.11l-4.91,17.78-18.66,7.22-4.6-23.06,7.73-15.45L178,91.44q-2.13-3.33-4.49-6.5c-1.32-1.77-2.69-3.51-4.11-5.18l-.06-.08c-1.56-1.85-3.18-3.63-4.84-5.34-12.86-13.2-28.62-22-45.55-22.79-.88,0-1.76-.07-2.65-.07a199.22,199.22,0,0,0-29.21,1.65q-2.94.43-5.9,1l-1.27.25-.76-1C74.45,46.75,65.39,37,55.32,28.13S34.35,11.28,26,8.07a.57.57,0,0,0-.59.1,1.07,1.07,0,0,0-.36.86c.34,11.59-2,22.8-4.22,33.7l0,.11a215.77,215.77,0,0,0-3.68,21.45,19.89,19.89,0,0,0-2.05.45,20.52,20.52,0,0,0-2,.63l-.09,0a27.16,27.16,0,0,0-2.52,1.1,21.89,21.89,0,0,1,3.44,2.88l.76.73,0,0c.65.6,1.31,1.2,2,1.75,0,.89,0,1.79,0,2.68a6.06,6.06,0,0,0-3,2.63A8.45,8.45,0,0,0,13,78.64a2.47,2.47,0,0,0-.1.29,10.92,10.92,0,0,0-.39,1.57A6.84,6.84,0,0,1,15,80.29a18.87,18.87,0,0,1,2,.32q.26,2.31.69,4.62a3.12,3.12,0,0,0-.25,2.27,6.31,6.31,0,0,1,.66-.29,61.43,61.43,0,0,0,7.38,18.25,4.52,4.52,0,0,0,.4.56l.67.76-.22,1a130,130,0,0,0-3,25c0,1.69-.08,3.42-.08,5.18,0,2.12.08,4.2.23,6.22a74.67,74.67,0,0,0,1.36,9.74V154h0q.38,1.73.81,3.39c.13,2.13.26,4.13.38,6C28.65,187.86,28,217,17.5,240H8c8.5-14.5,15.68-46.52,10-84.77A84.8,84.8,0,0,1,16.32,138a146.59,146.59,0,0,1,2.8-29.74,68,68,0,0,1-8.29-22.06L6.14,87.52l1.44-7.91a14.77,14.77,0,0,1,2.09-5.48c0-.64,0-1.27,0-1.91a11.73,11.73,0,0,0-1.82-1.48L.29,66l8-4c.74-.37,1.47-.7,2.21-1,.82-6.64,2.17-13.16,3.47-19.48l0-.12c2.29-11.07,4.42-21.52,4.1-32.19-.14-4.79,4.51-10,10.46-7.7C38.09,5.23,49.75,13.85,60,22.88a193.53,193.53,0,0,1,23,23.83c12.19-2.12,24-2.23,33.38-2.23h.49c2.46-7.91,8-16.4,14.16-23.63C138.32,12.2,147.4,4.34,155.13.77a7.35,7.35,0,0,1,7.46.69,7.91,7.91,0,0,1,3.22,6.21c0,.38,0,1.16,0,2.26-.1,5.88-.36,21.08,2.49,36.58.35,0,.7.09,1.06.16a12.57,12.57,0,0,1,7.42,4l5.12,5.84L177.07,58a17.92,17.92,0,0,1,1.35,2.16l3.75,7.09-5.15.16a6.52,6.52,0,0,1-.1,1l-.3,1.69a20.37,20.37,0,0,1,1,8.71c17.69,22.75,28,53.44,24.88,80.16-1.59,13.8-6.76,26.71-16.52,36.76C176.75,205.22,163.72,211.85,146.64,214.45Zm26.07-137a15.73,15.73,0,0,0-.52-4.86,1.55,1.55,0,0,0-.07-.23,10.73,10.73,0,0,0-.61-1.6l-.09-.17c-.22-.44-.43-.88-.64-1.31s-.45-.92-.67-1.38a1.81,1.81,0,0,1,.87-.41,3.18,3.18,0,0,1,1,0v0h0a1.61,1.61,0,0,0,0-.43,3.83,3.83,0,0,0-2.28-2.25l-.2-.08a6.22,6.22,0,0,0-.95-.31,4.69,4.69,0,0,0,.8.05,2.8,2.8,0,0,0,1.87-.84,4.11,4.11,0,0,1,1.51-.89,4.76,4.76,0,0,1,1.27-.2,12,12,0,0,0-1-1.65,8.65,8.65,0,0,0-.77-.89,5.81,5.81,0,0,0-2.3-1.48h0a5.42,5.42,0,0,0-3.38,0,9.1,9.1,0,0,0,1.67-1.56l.2-.22a8.41,8.41,0,0,1,4.15-2.57L173,54a8.36,8.36,0,0,0-6.19-2.58,13.34,13.34,0,0,0-2.61.18,149,149,0,0,1-2.85-19.92c-.2-1.32-.47-4.74-.77-8.59h0c-.55-6.93-1.21-15.25-1.76-15.26a.83.83,0,0,0-.31-.68.48.48,0,0,0-.19-.08.59.59,0,0,0-.25,0c-6.43,3-14.73,10-21.77,18.27a89.1,89.1,0,0,0-7.09,9.51c-2.08,4.07-2,13.09-.58,13.89,14.51,3.1,27.76,11.47,38.75,22.76Q170.14,74.37,172.71,77.45Zm5,45.62-9.19,3.56-2.8-14,5.85-11.7,5.7-2.55,4.35,10.6Z"
        />
      </svg>
    `
        }
    };
    (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], h.prototype, "furColor", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], h.prototype, "bellyColor", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], h.prototype, "eyeColor", void 0), h = (0, p.gn)([(0, e.M)("gu-regular-crypto-kitty-head")], h)
}, 28917
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(56418), e = o(86041), _ = o(26532), g = o(65281);
    let h = class extends r.oi {
        static get styles() {
            return r.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: flex-start;
      }

      svg {
        flex: 1;
        max-height: 100%;
        max-width: 100%;
      }
    `
        }

        render() {
            return r.YP`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 299.94 497.53">
        <defs>
          <style>
            .furColor {
              fill: ${this.furColor};
            }

            .eyeColor {
              fill: ${this.eyeColor};
            }

            .bellyColor {
              fill: ${this.bellyColor};
            }

            .outlineColor {
              fill: ${(0, _.asCssProp)(g.colors.black)};
              fill-rule: evenodd;
            }
          </style>
        </defs>
        <path
          class="furColor"
          d="M253.37,80.11c36.94,43.81,42.15,121-29.35,129.73-5.11,11.79-6.39,35.79-3.45,63.61,1.68-11.47,3.46-22.64,11.69-28.58,18.77-13.57,47.23,2.88,48.4,23.84,1.5,27-24.38,20.89-28,19.59,9.82,41.51,2.15,83.51-18,90.64a8.61,8.61,0,0,1-5.17.17,115.46,115.46,0,0,1-5.68,15.95c9.76-1,17.9-1.49,23.62-1.12,10,.64,17.87,4.13,23.58,9.12,16.23-.65,18.25,14.75,19,20.7a10.07,10.07,0,0,0,.39,2.18c-2.24-.6-4.34-1.37-6.35-2.11h0l-2.29-.83a29.09,29.09,0,0,1,.24,3.49c7.65,14-.78,19.81-7.88,24.66-2.81,1.93-5.4,3.71-6.71,5.8a24.06,24.06,0,0,1-1.15-6.51l-.68.27c-14,12.27-34.76,5.12-36.67-8.76,7.65.59,11.67.83,15.21-1.83,7.74-6.29,8.31-21.09-7.21-24.67-5.8-1.34-15.22.9-27.31,4.72-.69.78-1.39,1.52-2.06,2.25-3.32,3.57-6.2,6.67-5.81,11,13,0,23.5,8.33,21,26.5-4.12,3.92-12.76,6.17-22.36,7a37.44,37.44,0,0,1-3.27,11.29c-23,9.8-67.55,8.24-65.87-11.26.48-5.53.22-13.8-.68-23.78-2.7.5-5.41,1-8.15,1.38,10,14.32,3.52,26.26-1.17,29.9-6.23,4.85-51,7-60.13-4.16.8-8.91-1.27-17.87-4.61-26.56C18.74,435.91,5,415.3,5,395.94c0-13.64,7-22.16,14.27-31.09C24,359,28.91,353.06,32.11,345.39a85.83,85.83,0,0,1,3-11.38c8.59-25.37,18.11-36.79,29-49.8a234.53,234.53,0,0,0,19.26-25.65v-.14c.43-.67.88-1.35,1.33-2.07,3.2-5.18,6.51-11.07,9.92-17.92,8.32-18.14,15.23-44.77,9.39-84.15a79.51,79.51,0,0,1-1.64-16.36,137.9,137.9,0,0,1,3.12-30.65,6.36,6.36,0,0,1-.62-.85c-13.51-22.61-9.25-43.26-5-64.05,2.26-11,4.54-22,4.2-33.34a2.78,2.78,0,0,1,3.67-2.88c17.38,6.69,44.37,32.43,54.08,46,12.73-2.57,25.38-2.71,35.51-2.71,1.47,0,2.94.06,4.39.17,2.42-15.32,22.92-38.06,36.52-44.34a2.56,2.56,0,0,1,3.38,1.33,2.48,2.48,0,0,1,.21,1.2c0,17.19.63,40.33,9.33,60.12C252.94,72,254.51,75.08,253.37,80.11Z"
        />
        <path class="eyeColor" d="M240.46,111.68l4.6,23.06,18.66-7.22,5.26-19L261.5,90.27l-13.31,6Z" />
        <path class="eyeColor" d="M157.19,133.29l-19.26-23,31.92-11.44,26.66,11.44L207,139.08l-24.1,3Z" />
        <path class="eyeColor" d="M221.43,150.37l1.56,4.47,11.69,8.49,3.47-.53s5.34-9.07,7.52-13.15l-2.09-3.27Z" />
        <path
          class="bellyColor"
          d="M234.8,59.92c-2.17-7.87-3.08-23.48,6.54-30.11,1.07,0,1.53,4.45,2,8.74.17,1.56.32,3.1.51,4.4.08.6.16,1.22.24,1.88a61.07,61.07,0,0,0,1.09,6.72A8.16,8.16,0,0,1,254,53.94a8.75,8.75,0,0,0-4.83,2.94,9.15,9.15,0,0,1-1.67,1.56c2.47-.77,5.31-.14,7.5,4a4,4,0,0,0-2.78,1.09,2.81,2.81,0,0,1-2.67.78c2.45.63,3.61,2.2,3.45,3.13a2.17,2.17,0,0,0-1.89.4c.41.87.85,1.76,1.31,2.69,1.83,3.65,1.69,5.17,1.29,6.78C247.65,70.3,241.05,64.1,234.8,59.92Z"
        />
        <path
          class="bellyColor"
          d="M123,51c-3.63-7.23-7.36-14.66-11.8-17.74a1,1,0,0,0-1.36.38.83.83,0,0,0-.13.41c-.37,3.48-2,7.21-3.83,11.42C103.6,50.71,101,56.73,100,64a22.61,22.61,0,0,0-8.54,2.44,27.39,27.39,0,0,1,3.68,3.11,29.06,29.06,0,0,0,4.7,3.87,2.12,2.12,0,0,0,0,.56c-2.71.25-5.55,1.6-6.43,6.46a9.43,9.43,0,0,1,4.69.14,12.12,12.12,0,0,0,3,.34c.06.24.12.48.19.72-2.65,2.3-3.3,5-2.88,5.8a5.25,5.25,0,0,1,4.68-.31A76.35,76.35,0,0,0,109,98.94c1.91-4.67,11.17-21.5,24.25-29.94a1.34,1.34,0,0,0,.22-1.88,1.52,1.52,0,0,0-.22-.22C129.6,64.1,126.35,57.62,123,51Z"
        />
        <path
          class="bellyColor"
          d="M228.32,335.92c5.89,46.14-19.2,96.25-50.26,95.09-7.54-21-11.13-53.22-10-70.21s4-38.63,2.95-59.32c5.4-27.6,12.12-46.36,26.79-48.06C210.26,252,222.32,288.92,228.32,335.92Z"
        />
        <path
          class="outlineColor"
          d="M182.91,142l-25.72-8.75-19.26-23,31.92-11.44,26.66,11.44L207,139.08Zm-22.2-13.89L148.05,113l21.6-7.75,22.11,9.49,7,19.3-15.25,1.87Z"
        />
        <path
          class="outlineColor"
          d="M244.78,143.62l3.79,5.92-.69,1.29c-1.11,2.08-3,5.41-4.62,8.18l-2.08,3.57-.64,1.09-.84,1.43-.91.13.25,10.18,10.56,6.71a1.86,1.86,0,0,1,.51,2.58l0,0a1.92,1.92,0,0,1-2.6.78l0,0-9.85-6.26L224.31,191a1.94,1.94,0,0,1-2.66-.39,1.85,1.85,0,0,1,0-2.6l13.41-11.89-.25-10.29L234,166l-13.15-9.55-2.79-8Zm-7.92,16.44-.26.45-1.28.19-10.23-7.42-.33-1,17.62-3.17.39.62c-1.07,2-2.54,4.5-3.84,6.74C238.13,157.89,237.4,159.15,236.86,160.06Z"
        />
        <path
          class="outlineColor"
          d="M27.31,343.92c-2.89,6.68-7.21,12-11.91,17.76l-.27.34C8,370.77,0,380.51,0,395.94a45.28,45.28,0,0,0,13,31.67A60.46,60.46,0,0,0,26.9,438.3C11.8,444.35,3,451.64,3,459.47c0,21,63.28,38.06,141.34,38.06s141.34-17,141.34-38.06a13,13,0,0,0-3.26-8.16,23.55,23.55,0,0,0,5.67-6.7,18,18,0,0,0,1.19-13.82l10.66,2.84-4.73-9.45v-.76l-.07-.48c-.38-3-1.19-9.14-4.33-14.53a20.56,20.56,0,0,0-7.41-7.55A21.66,21.66,0,0,0,273,398.05,44.78,44.78,0,0,0,247.82,389a121,121,0,0,0-16.27.38c.59-1.63,1.15-3.28,1.68-5a12.77,12.77,0,0,0,3.17-.71c6.43-2.28,11.49-7.21,15.28-13.45s6.5-14.06,8.18-22.74c3-15.33,2.85-34-.7-52.82a32.34,32.34,0,0,0,10.65-.69,20,20,0,0,0,11.7-7.73c3.1-4.38,4.56-10.28,4.14-17.79-.7-12.66-9.53-23.38-20.27-29s-24.74-6.78-36,1.4a24.21,24.21,0,0,0-5.31,5.24q0-5.34.25-10.16c.49-9.1,1.68-16.4,3.37-21.51,17.08-2.61,30.11-9.23,39.35-18.76,9.76-10,14.93-23,16.52-36.76,3.07-26.72-7.19-57.41-24.88-80.16a20.45,20.45,0,0,0-1-8.71l.3-1.69a6.64,6.64,0,0,0,.1-1l5.15-.16-3.75-7.09a18.69,18.69,0,0,0-1.35-2.17l4.81-1.44-5.12-5.84a12.56,12.56,0,0,0-7.42-4l-1.06-.15c-2.85-15.5-2.59-30.7-2.49-36.58V7.64a7.89,7.89,0,0,0-3.22-6.2,7.32,7.32,0,0,0-7.46-.69c-7.77,3.53-16.85,11.39-24.17,20-6.14,7.22-11.7,15.72-14.16,23.63h-.49c-9.34,0-21.19.11-33.38,2.23a193.27,193.27,0,0,0-23-23.83c-10.22-9-21.87-17.66-31.44-21.34-6-2.29-10.6,2.91-10.46,7.7.32,10.67-1.81,21.11-4.1,32.18v.13C93.64,47.8,92.29,54.33,91.47,61c-.74.3-1.47.63-2.21,1l-8,4,7.56,4.73a10.81,10.81,0,0,1,1.82,1.48v1.91a14.53,14.53,0,0,0-2.09,5.47L87.11,87.5l4.69-1.33a68.13,68.13,0,0,0,8.29,22,147.08,147.08,0,0,0-2.8,29.75A84.57,84.57,0,0,0,99,155.16c5.65,38.25-1.06,63.85-9,81.11-3.33,6.67-6.54,12.4-9.65,17.42-.44.7-.87,1.37-1.29,2l-.23.37-.07.14A229,229,0,0,1,60.17,281l-.12.14c-10.94,13.13-20.87,25.12-29.72,51.25A89.64,89.64,0,0,0,27.31,343.92Zm216.5,88.52a9,9,0,0,0,.59-4.85c-.45-2.67-2.45-5.88-8.52-7.28-1.87-.43-4.85-.37-9.25.47a132.52,132.52,0,0,0-14.14,3.74l-1.18,1.27h0l-.11.13A286.78,286.78,0,0,1,243.81,432.44ZM94,65.34a25.61,25.61,0,0,0-2.52,1.1,21.53,21.53,0,0,1,3.44,2.88l.77.73h0c.65.61,1.31,1.21,2,1.76v2.68a6,6,0,0,0-3,2.63A7.8,7.8,0,0,0,94,78.58a2.47,2.47,0,0,0-.1.29,10.59,10.59,0,0,0-.39,1.57A7.2,7.2,0,0,1,96,80.22a17,17,0,0,1,2,.33q.25,2.31.69,4.62a3.09,3.09,0,0,0-.25,2.27q.33-.16.66-.3a61.15,61.15,0,0,0,7.38,18.25,3.78,3.78,0,0,0,.4.56l.67.77-.22,1a129.87,129.87,0,0,0-3,25c0,1.69-.08,3.42-.08,5.18q0,3.18.23,6.22a74.19,74.19,0,0,0,1.36,9.73v.06h0c.24,1.14.51,2.28.8,3.39q.19,3.19.38,6c2.54,24.51,0,43.8-4.4,59a122.71,122.71,0,0,1-6,16.18v.16c-.25.54-.5,1.07-.76,1.61-1.64,3.49-3.33,6.66-5,9.54l.21-.61c-1.6,2.8-3.3,5.66-5.13,8.71h0c-7.35,11.82-14.17,20-20.49,27.59l-2.38,2.87C53.4,300.15,44.8,311.47,37,334.65c-3.36,9.91-5,22.28-4.83,34.5s2.23,24.12,6.11,33.09c2,4.55,4.62,9.49,7.5,14.79l.62,1.15c2.68,4.93,5.51,10.15,8.07,15.52,5.37,11.28,9.67,23.53,8.82,35.86,2,2,5.72,3.63,10.76,4.79a86.36,86.36,0,0,0,15.78,1.92c1.43-3.66,3.07-11.07-1-18.07,6.76,3,8.51,13.23,6.56,18.17a119.33,119.33,0,0,0,15-1c.74-.11,1.46-.21,2.14-.33,1.58-3.71,4.55-12.06-.27-19.36,6.24,3.72,7.57,13,5.89,18.06a7.46,7.46,0,0,0,2-.94c2.61-2,6.22-7.5,5.59-14.83s-5.42-16.72-20.44-26.68l-1-.62.08-1.69c.36-7.53,1.12-23.44-1.31-40.62-2.5-17.67-8.65-35.89-21.4-48.21C77.3,336,75.16,330,74,323.74a55.16,55.16,0,0,0,12.26,16.45C100,353.44,104.48,369.87,107,387.84a216,216,0,0,1,1.42,39.79,102,102,0,0,0,14.9,3.69l-.09-.07c2.57-6.79-4.88-47.67-8.8-68.16-2.5-9.81-5.25-19.26-8.19-27.85h0c5.39,3.53,8,12.31,10,19.61h.06c4,14.59,7.42,30.23,10.15,45.21,5.13,28.16,7.81,54.3,6.72,66.92-.34,3.93,1.56,7,5.43,9.51s9.73,4.17,16.49,4.95A82.32,82.32,0,0,0,164,482c1.61-4,4.25-12.94-.41-20,6.43,3.84,7.31,14.86,5.34,19.91a94,94,0,0,0,16.61-2.23c1.27-9.21,1.56-14.34-3.52-22,6.48,3.87,9.52,10.49,8,20.89,2-.59,3.86-1.24,5.61-1.95,2.36-5.29,3.66-12,2.62-17.74a15.35,15.35,0,0,0-3.56-7.71,15.11,15.11,0,0,0-8.36-4.52,12.45,12.45,0,0,1-6.88-4.7,36.19,36.19,0,0,1-5-8.94c-2.89-7-5.07-16.11-6.67-25.47-3.18-18.7-4.73-40.34-3.89-48.4.33-4.92.74-10,1.16-15.06h0c2-25.12,4.23-52-2.08-75.58,7.28,7.59,7.83,27.15,8.15,38.31,0,.88,0,1.71.08,2.48.42,12.83-.79,24.76-1.87,35.37h0c-.52,5.15-1,10-1.27,14.48-.78,13.7.52,29.22,3.67,47.73,1.55,9.1,3.63,17.74,6.3,24.33h.27c18.8-.09,34.67-17.29,43.45-40.57.63-1.58,1.22-3.21,1.79-4.88,9-26.51,9.88-62.84-2.65-104.35v-.26q-4.16-26-3.83-44a99.83,99.83,0,0,1,1.48-16.46c-21.53,2.63-58.9-8.6-71.69-15.81-2.67-1.05-5.24-2.2-7.73-3.44l1.33.42h0c7.27,2.35,33.35,10.77,71.56,7.1q5.43-.36,11.08-1l.58-.07c1.1-.13,2.17-.28,3.23-.44,11.39-1.78,20.54-5.45,27.75-10.47a49.16,49.16,0,0,0,11.72-11.44,50.55,50.55,0,0,0,3.83-6.15l.07-.13.05-.1v-.06c.65-1.25,1.25-2.52,1.8-3.83a62.28,62.28,0,0,0,4.36-16.92c.05-.4.1-.8.14-1.2q.24-2.4.33-4.86a96.14,96.14,0,0,0-3.86-29.69,106.54,106.54,0,0,0-3.64-10.72c-.28-.7-.56-1.41-.85-2.11l-4.92,17.78L245,134.72l-4.6-23.06,7.73-15.45L259,91.38q-2.13-3.33-4.49-6.5-2-2.67-4.11-5.19l-.06-.07c-1.56-1.85-3.18-3.63-4.84-5.34-12.86-13.21-28.62-22-45.55-22.8-.88,0-1.76-.06-2.65-.06a198.1,198.1,0,0,0-29.21,1.65q-2.94.43-5.9,1l-1.27.26-.76-1C155.43,46.67,146.37,37,136.3,28s-21-16.82-29.3-20a.54.54,0,0,0-.59.1,1,1,0,0,0-.36.86c.34,11.59-2,22.8-4.22,33.7v.11a215.94,215.94,0,0,0-3.68,21.45,18.7,18.7,0,0,0-2,.44c-.64.18-1.31.39-2,.64Zm159.69,12a15.7,15.7,0,0,0-.52-4.87.31.31,0,0,0-.07-.23,11.33,11.33,0,0,0-.61-1.59l-.09-.17c-.22-.44-.43-.88-.64-1.31l-.67-1.38a1.89,1.89,0,0,1,.87-.41,3.35,3.35,0,0,1,1,0h0a1.55,1.55,0,0,0,0-.43,3.81,3.81,0,0,0-2.28-2.25l-.2-.08a8.16,8.16,0,0,0-.95-.32,3.55,3.55,0,0,0,.8.06,2.75,2.75,0,0,0,1.87-.84,4.3,4.3,0,0,1,1.51-.9,4.94,4.94,0,0,1,1.27-.19,11.5,11.5,0,0,0-1-1.65,11.06,11.06,0,0,0-.77-.9,6,6,0,0,0-2.3-1.48h0a5.42,5.42,0,0,0-3.38,0,9.15,9.15,0,0,0,1.67-1.56l.2-.22a8.41,8.41,0,0,1,4.15-2.57l.48-.15a8.35,8.35,0,0,0-6.19-2.58,12.69,12.69,0,0,0-2.61.18,148.75,148.75,0,0,1-2.85-19.93c-.2-1.31-.47-4.73-.77-8.58h0c-.55-6.92-1.21-15.24-1.76-15.25a.82.82,0,0,0-.31-.68.46.46,0,0,0-.19-.08.53.53,0,0,0-.25,0c-6.43,3-14.73,10-21.77,18.27a90,90,0,0,0-7.09,9.51c-2.08,4.07-2,13.09-.58,13.89,14.51,3.1,27.76,11.47,38.75,22.75,1.82,1.95,3.59,3.94,5.3,6ZM20.9,366c1.46-1.79,3-3.61,4.41-5.51,2.38.09,2.54,3.37,2.65,5.75a11.21,11.21,0,0,0,.16,1.83h0v1.14c.2,12.56,2.28,25,6.44,34.62,2,4.74,4.79,9.83,7.65,15.11l.61,1.13c1.9,3.49,3.85,7.07,5.71,10.73a1,1,0,0,0,0,.16h0c.49,1.52,1.64,5.07-2.08,8.12A74.57,74.57,0,0,1,25.28,429C12.18,419.68,7,407.53,7,395.94c0-12.84,6.49-20.86,13.82-29.83Zm198.47,49.24-1.82.49a39.66,39.66,0,0,0,3.12-4.68c2.89-4.77,6.79-11.2,13.19-14.87a106.87,106.87,0,0,1,13.51-.26c9.58.62,17,3.95,22.39,8.64l.6.52h.8a15.52,15.52,0,0,1,8.63,1.85,13.65,13.65,0,0,1,4.87,5c2.17,3.72,2.92,8.11,3.34,11.14-1.06-.36-2.11-.74-3.16-1.13h0l-2.31-.84-3.07-1.1.41,3.21a27.15,27.15,0,0,1,.22,3.25v.5l.24.44c3.6,6.6,3.22,10.82,1.59,13.87-1.77,3.29-5.19,5.69-8.84,8.18h0c-1.37.94-2.78,1.91-4,2.91l-.45.38c-.12-.82-.2-1.64-.24-2.47l-.12-2.84-2.64,1.08c-.2.09-.42.17-.63.25l-.33.13-.27.24a22.65,22.65,0,0,1-21,5c-5.67-1.58-10.09-5.29-11.75-10.06,5.93.41,10.11.36,13.83-2.43h0a16.52,16.52,0,0,0,5.83-15.24c-1-5.84-5.41-11-13.85-12.94-4.58-1-10.83-.08-18.09,1.79Zm-8,47.89a64.41,64.41,0,0,1-8.72,1.53,29.3,29.3,0,0,0-.39-6.48,19.41,19.41,0,0,0-4.52-9.67,19.13,19.13,0,0,0-10.51-5.77,8.5,8.5,0,0,1-4.6-3.29,25.37,25.37,0,0,1-2.7-4.24c2.41.76,15.08-.86,19.88-4.44a13.67,13.67,0,0,0,0,2.86l.2,1.78h1.78c6.1,0,11.37,1.95,14.83,5.78s5.27,9.45,4.29,17.72a19.9,19.9,0,0,1-6,3.17c1-2.84,1-8.32-5.31-11.54,4.75,5.21,3.15,9.75,2.1,12.51l-.18.05ZM251.94,353c-3.57,10.58-13.47,16.36-19.87,15.6,4.38-24.74,2.78-54.93-7.24-88.21q-.92-5.76-1.6-11.09a83.06,83.06,0,0,1,2-9.5c1.62-5.67,4-10.26,8.22-13.28,8.61-6.23,19.58-5.66,28.7-.87s16,13.6,16.53,23.2a32.11,32.11,0,0,1-.11,5.46,12.36,12.36,0,0,0-4.68-6.16A18.74,18.74,0,0,1,276.62,281q-.33.58-.69,1.11a11.88,11.88,0,0,1-5.25,4.23c-.05-.43-.1-.84-.15-1.25-.77-6.33-1.32-10.92-8-15.49a31.73,31.73,0,0,1,3.93,18l-.95.14c-1.48.14-3.57.24-5.87.27h-1.15a17.32,17.32,0,0,0-8.17-15.25c.32.79.69,1.57,1.07,2.38A24.94,24.94,0,0,1,254.31,288a42,42,0,0,1-8.14-1c-5.62-1.5-10.15-4.46-10.94-5.79a11,11,0,0,0,3.7,6.24c3.4,3.92,10.25,9.26,14.08,9.2,3.58,18.4,3.51,36.19.47,50.46C253,349.09,252.51,351.07,251.94,353Zm6.8-230-9.19,3.56-2.8-14,5.85-11.7,5.7-2.55,4.35,10.6Z"
        />
      </svg>
    `
        }
    };
    (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], h.prototype, "furColor", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], h.prototype, "bellyColor", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], h.prototype, "eyeColor", void 0), h = (0, p.gn)([(0, e.M)("gu-regular-crypto-kitty")], h)
}, 65694
:
(te, U, o) => {
    "use strict";
    var p = o(70655), h = (o(90004), o(51256), o(11015), o(61517), o(43977), o(32830)), i = o(56418), t = o(7302),
        n = o(86041), C = o(98539), k = o(65281), $ = o(65171), w = o(80102), D = o(26532);
    const m = h.iv`
  :host {
    display: block;
    width: 100%;
  }

  .innerContainer {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
  }

  .gradientSkrim {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: linear-gradient(
      to top,
      rgba(${(0, D.asCssProp)((0, $.hexToCssRgbString)(k.colors.dark[900]))}, 1) 0%,
      rgba(${(0, D.asCssProp)((0, $.hexToCssRgbString)(k.colors.dark[900]))}, 0) 70%
    );
  }

  .trinket {
    width: 100%;
    height: 100%;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 50%;
    border: ${(0, D.asCssProp)((0, w.gridUnits)(.5))} solid ${(0, D.asCssProp)(k.colors.gunmetal[500])};
    background: ${(0, D.asCssProp)(k.colors.gunmetal[900])};
    overflow: hidden;
    box-shadow: 0px 0px ${(0, D.asCssProp)((0, w.gridUnits)(2))} rgba(${(0, D.asCssProp)((0, $.hexToCssRgbString)(k.colors.dark[900]))}, 0.65);
  }

  .trinketName {
    position: absolute;
    bottom: 13%;
    left: 50%;
    width: 70%;
    transform: translateX(-50%);
  }

  .clearButton {
    position: absolute;
    top: 6%;
    right: 6%;
    cursor: pointer;
  }

  .uiTextArea {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    color: ${(0, D.asCssProp)(k.colors.gunmetal[500])};
  }

  .uiTextArea__icon {
    font-size: ${(0, D.asCssProp)((0, w.gridUnits)(7))};
    margin-bottom: ${(0, D.asCssProp)((0, w.gridUnits)(1))};
  }

  .uiTextArea__text--choose {
  }

  .uiTextArea__text--replace {
    display: none;
  }

  /*

    @NOTE: Handle various UI states:

  */

  /*
    HIGHLIGHT STATES:
  */
  .innerContainer--highlight {
    cursor: pointer;
  }

  .innerContainer--highlight .trinket {
    border-color: ${(0, D.asCssProp)(k.colors.gold[300])};
  }

  .innerContainer--highlight:hover .trinket {
    border-color: ${(0, D.asCssProp)(k.colors.apocyan[300])};
  }

  .innerContainer--highlight .uiTextArea {
    color: ${(0, D.asCssProp)(k.colors.light[100])};
  }

  /*
    EQUIPPED STATES:
  */
  .innerContainer--equipped .uiTextArea__icon,
  .innerContainer--equipped .uiTextArea__text--choose,
  .innerContainer--equipped .uiTextArea__text--replace {
    display: none;
  }
  .innerContainer--equipped:hover .uiTextArea__icon {
    display: inline-flex;
  }
  .innerContainer--equipped:hover .uiTextArea__text--replace {
    display: block;
  }
`;
    let A = class extends h.oi {
        constructor() {
            super(...arguments), this.highlight = !1, this.hideNameText = !1
        }

        static get styles() {
            return m
        }

        update(y) {
            y.has("highlight") && !y.get("highlight") && (this.hideNameText = !1), super.update(y)
        }

        renderTrinketName() {
            return this.hideNameText ? h.dy`` : h.dy`
      <gu-heading-text
        fillGradient=${k.gradients.gold.simple()}
        class="trinketName"
        align="center"
        size="2x-small"
        data-test-id="selected-trinket-name"
      >
        ${this.trinket.name}
      </gu-heading-text>
    `
        }

        renderTrinket() {
            return this.trinket ? h.dy`
      <div class="gradientSkrim"></div>
      ${this.renderTrinketName()}
      <gu-circular-close-button
        class="clearButton"
        @click=${() => this.dispatchEvent(new CustomEvent("xButtonClick", {bubbles: !0, composed: !0}))}
        data-test-id="selected-trinket-close-button"
      ></gu-circular-close-button>
    ` : h.dy``
        }

        renderInstructions() {
            return this.highlight ? h.dy`
        <gu-icon class="uiTextArea__icon" iconLigature="add_item"></gu-icon>
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--choose" kind="tag" align="center">
          choose slot
        </gu-paragraph-text>
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--replace" kind="tag" align="center">
          replace
        </gu-paragraph-text>
      ` : this.trinket ? h.dy`` : h.dy`
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--empty" kind="tag" align="center">
          select a trinket
        </gu-paragraph-text>
      `
        }

        onClick() {
            this.dispatchEvent(new CustomEvent("trinketClick", {bubbles: !0, composed: !0}))
        }

        onMouseEnter() {
            this.trinket && this.highlight && (this.hideNameText = !0)
        }

        onMouseLeave() {
            this.trinket && this.highlight && (this.hideNameText = !1)
        }

        render() {
            return h.dy`
      <div
        class=${(0, C.$)({
                innerContainer: !0,
                "innerContainer--highlight": this.highlight,
                "innerContainer--equipped": !!this.trinket
            })}
        @click=${this.onClick}
        @mouseenter=${this.onMouseEnter}
        @mouseleave=${this.onMouseLeave}
        data-test-id="selected-trinket-container"
      >
        <gu-loadout-part
          class="trinket"
          .trinket=${this.trinket}
          ?noAspectRatio=${!0}
          ?hideCount=${!0}
          ?hideBorder=${!0}
          ?hideText=${!0}
        ></gu-loadout-part>
        ${this.renderTrinket()}
        <div class="uiTextArea">${this.renderInstructions()}</div>
      </div>
    `
        }
    };
    (0, p.gn)([(0, i.C)({type: Object}), (0, p.w6)("design:type", Object)], A.prototype, "trinket", void 0), (0, p.gn)([(0, i.C)({type: Boolean}), (0, p.w6)("design:type", Object)], A.prototype, "highlight", void 0), (0, p.gn)([(0, t.S)(), (0, p.w6)("design:type", Object)], A.prototype, "hideNameText", void 0), A = (0, p.gn)([(0, n.M)("gu-selected-trinket")], A)
}, 69039
:
(te, U, o) => {
    "use strict";
    o.d(U, {Q: () => f});
    var p = o(30109);
    const f = (0, p.XM)(class extends p.Xe {
        constructor(_) {
            super(_)
        }

        update(_, [g]) {
            g.current = _.element
        }

        render(_) {
        }
    })
}, 25297
:
(te, U, o) => {
    "use strict";
    o.d(U, {J: () => _});
    var p = o(84876), r = o(69800), f = o(32830);
    const e = Promise.resolve().then.bind(Promise.resolve());
    window.fakeComponentToFoolBuildOptimizer = (0, r.z)(() => {
    });

    class _ extends f.oi {
        constructor() {
            super(), this.haunted = new p.ZM(() => this.requestUpdate(), this)
        }

        update(h) {
            this.haunted.run(() => {
                super.update(h)
            })
        }

        updated(h) {
            super.updated(h), this.haunted.runLayoutEffects(), e(() => this.haunted.runEffects())
        }

        disconnectedCallback() {
            this.haunted.teardown(), super.disconnectedCallback()
        }
    }
}, 65171
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        componentToHex: () => r,
        loopForVariable: () => f,
        rgbToHex: () => e,
        hexToRgb: () => _,
        hexToCssRgbString: () => g,
        setPropertyGradientFromVariable: () => h,
        setPropertyGradient: () => i,
        setPropertyColorFromVariable: () => t,
        setPropertyColor: () => n,
        setBorderColorHoverFromVariable: () => C,
        setBorderColorHover: () => k,
        setBackgroundFillHoverFromVariable: () => $,
        setBackgroundFillHover: () => w,
        updateColoringVariables: () => D
    });
    var p = o(65281);
    const r = m => {
        const A = m.toString(16);
        return 1 === A.length ? "0" + A : A
    }, f = m => {
        const A = m.split(".");
        let S = p;
        for (let y = 0; y < A.length; y++) S = S[A[y]];
        return S
    }, e = (m, A, S) => `#${r(m)}${r(A)}${r(S)}`, _ = m => {
        const A = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(m);
        return A ? {r: parseInt(A[1], 16), g: parseInt(A[2], 16), b: parseInt(A[3], 16)} : void 0
    }, g = m => {
        const A = _(m);
        return A ? `${A.r}, ${A.g}, ${A.b}` : m
    }, h = (m, A, S, y) => {
        const s = f(A)(y).replace(/;/gm, "");
        m.setProperty(S, s)
    }, i = (m, A, S) => {
        m.setProperty(S, A.replace(/;/gm, ""))
    }, t = (m, A, S) => {
        const y = f(A);
        m.setProperty(S, y)
    }, n = (m, A, S) => {
        m.setProperty(S, A)
    }, C = (m, A) => {
        const S = f(A);
        m.setProperty("--borderColorHover", S)
    }, k = (m, A) => {
        m.setProperty("--borderColorHover", A)
    }, $ = (m, A) => {
        const S = f(A);
        m.setProperty("--backgroundFillColorHover", S)
    }, w = (m, A) => {
        m.setProperty("--backgroundFillColorHover", A)
    }, D = ({
                component: m,
                fillColor: A,
                fillColorHover: S,
                fillGradient: y,
                fillGradientTarget: I,
                borderColor: s,
                borderColorHover: b,
                backgroundFillColor: E,
                backgroundFillColorHover: R,
                backgroundFillGradient: X,
                backgroundFillGradientTarget: pe,
                iconColor: re
            }) => {
        A && (m.setAttribute("fillColor", A), /colors\./.test(A) ? t(m.style, A, "--textFillColor") : n(m.style, A, "--textFillColor")), S && (m.setAttribute("fillColorHover", S), /colors\./.test(S) ? t(m.style, S, "--textFillColorHover") : n(m.style, S, "--textFillColorHover")), s && (m.setAttribute("borderColor", s), /colors\./.test(s) ? t(m.style, s, "--borderColor") : n(m.style, s, "--borderColor")), b && (m.setAttribute("borderColorHover", b), /colors\./.test(b) ? t(m.style, b, "--borderColorHover") : n(m.style, b, "--borderColorHover")), b && (m.setAttribute("borderColorHover", b), /colors\./.test(b) ? C(m.style, b) : k(m.style, b)), E && (m.setAttribute("backgroundFillColor", E), /colors\./.test(E) ? t(m.style, E, "--backgroundFillColor") : n(m.style, E, "--backgroundFillColor")), R && (m.setAttribute("backgroundFillColorHover", R), /colors\./.test(R) ? t(m.style, R, "--backgroundFillColorHover") : n(m.style, R, "--backgroundFillColorHover")), re && (m.setAttribute("iconColor", re), /colors\./.test(re) ? t(m.style, re, "--iconColor") : n(m.style, re, "--iconColor")), R && (m.setAttribute("backgroundFillColorHover", R), /colors\./.test(R) ? $(m.style, R) : w(m.style, R)), X && (m.setAttribute("backgroundFillGradient", X), /gradients\./.test(X) ? h(m.style, X, "--backgroundFillGradient", pe) : i(m.style, X, "--backgroundFillGradient")), y && (m.setAttribute("fillGradient", y), /gradients\./.test(y) ? h(m.style, y, "--textFillGradient", I) : i(m.style, y, "--textFillGradient"))
    }
}, 5284
:
(te, U, o) => {
    "use strict";
    o.d(U, {gt: () => f, I5: () => p, dz: () => g, ZB: () => i, uA: () => r});
    var p = {};
    o.r(p), o.d(p, {isIos: () => e, isSafari: () => _});
    var r = {};
    o.r(r), o.d(r, {enhancedTextRenderingStyles: () => k, stringContainsEmoji: () => C, uppercaseWord: () => $});
    var f = o(65171);

    function e() {
        return ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document
    }

    const _ = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    var g = o(80102), i = (o(26711), o(26532)), t = o(89747), n = o.n(t);
    const C = w => n()().test(w),
        k = "\n  /* Get fonts to look slightly nicer where possible */\n  -webkit-font-smoothing: subpixel-antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility\n",
        $ = w => w.charAt(0).toUpperCase() + w.slice(1)
}, 80102
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        gridUnits: () => p,
        checkOutOfBounds: () => r,
        getOuterHeight: () => f,
        waitForImageToLoad: () => e
    });
    const p = _ => 4 * _ + "px", r = ({
                                          x: _,
                                          y: g,
                                          left: h,
                                          top: i,
                                          width: t,
                                          height: n,
                                          tolerance: C = 2
                                      }) => (window.scrollY >= i && (i -= window.scrollY, n += window.scrollY), g >= Math.floor(n + i - C) || g <= i + C || _ >= Math.floor(t + h - C) || _ <= h + C),
        f = _ => {
            const g = window.getComputedStyle(_), h = parseInt(g.getPropertyValue("margin-top")),
                i = parseInt(g.getPropertyValue("margin-bottom"));
            return _.offsetHeight + h + i
        }, e = _ => new Promise((g, h) => {
            const i = () => {
                _.removeEventListener("load", n), _.removeEventListener("error", t)
            }, t = C => {
                console.error("Awww snap! <img> or <picture> LOAD ERROR:", C, _.src), i(), h()
            }, n = () => {
                i(), g()
            };
            _.complete ? g() : (_.addEventListener("load", n), _.addEventListener("error", t))
        })
}, 26711
:
(te, U, o) => {
    "use strict";
    o.d(U, {b: () => p});
    const p = {fromAttribute: r => r && "false" !== r, toAttribute: r => r ? "true" : "false"}
}, 26532
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        asCssProp: () => f,
        drawHexShapePolygonMask: () => e,
        drawBottomHexShapePolygonMask: () => _,
        setBoxSizing: () => g,
        fadeReveal: () => h,
        listReveal: () => i,
        styleScrollbars: () => t,
        inset: () => n
    });
    var p = o(32830), r = o(65281);
    const f = C => p.iv`${(0, p.$m)(C)}`,
        e = (C, k, $ = 0) => `\n  clip-path: polygon(\n    ${C + $}px 0%,\n    calc(100% - ${k + $}px) 0%,\n    100% 50%,\n    calc(100% - ${k + $}px) 100%,\n    ${C + $}px 100%,\n    0% 50%\n  );\n  -webkit-clip-path: polygon(\n    ${C + $}px 0%,\n    calc(100% - ${k + $}px) 0%,\n    calc(100% - ${$}px) 50%,\n    calc(100% - ${k + $}px) 100%,\n    ${C + $}px 100%,\n    ${$}px 50%\n  );\n`,
        _ = C => `\n  clip-path: polygon(\n    0% 0%,\n    100% 0%,\n    100% calc(100% - ${C}),\n    50% 100%,\n    0% calc(100% - ${C}),\n    0% 0%\n  );\n  -webkit-clip-path: polygon(\n    0% 0%,\n    100% 0%,\n    100% calc(100% - ${C}),\n    50% 100%,\n    0% calc(100% - ${C}),\n    0% 0%\n  );\n`,
        g = (C = "border-box") => `\n  :host,\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: ${C};\n  }\n`,
        h = (C, k, $ = "initial", w = .3, D = 0) => `\n  ${C} {\n    opacity: 0;\n    height: 0;\n    transition: opacity ${w}s ease, height 0s ${w}s, transform ${w}s ease;\n    ${D ? `transform: translateY(${D}px);` : ""}\n  }\n  ${k} {\n    opacity: 1;\n    height: ${$};\n    transition: opacity ${w}s ease, height 0s 0s, transform ${w}s ease;\n    ${D ? "transform: translateY(0);" : ""}\n  }\n`,
        i = (C, k = .3, $ = 10) => `\n  ${C} {\n    animation: listReveal ${k}s ease-out backwards;\n    animation-delay: ${.1 * $}s;\n  }\n\n  ${[...Array($).keys()].map(w => `\n      ${C}:nth-of-type(${w}) {\n        animation-delay: ${.1 * w}s;\n      }\n    `).join("\n")}\n\n  @keyframes listReveal {\n    from {\n      transform: translateY(12px);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n`,
        t = (C = "") => `\n  ${C}::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ${C}::-webkit-scrollbar-thumb {\n    width: 4px;\n    background: ${r.colors.gunmetal[500]};\n    border-radius: 2px;\n  }\n`,
        n = (C, k = C, $ = C, w = k) => p.iv`
  top: ${C}px;
  right: ${k}px;
  bottom: ${$}px;
  left: ${w}px;
`
}, 39029
:
(te, U, o) => {
    "use strict";
    o.d(U, {x1: () => r.x, I0: () => _, v9: () => e, Rl: () => h}), o(25297);
    var r = o(58672), f = o(84876);
    const e = ({store: n, selector: C}) => {
        const [k, $] = (0, f.eJ)(C(n.getState()));
        return (0, f.d4)(() => n.subscribe(() => {
            const w = C(n.getState());
            $(w)
        }), [C]), k
    }, _ = n => C => n.dispatch(C);
    o(5284);
    var h = o(65281);
    o(72985), o(69039)
}, 72650
:
(te, U, o) => {
    "use strict";
    o.d(U, {b: () => h});
    var p = o(70655), r = o(46461), e = o(56418);
    const _ = {
        default: {
            ogg: "/assets/audio/buttons/hover--primary.ogg",
            mp3: "/assets/audio/buttons/hover--primary.mp3"
        }
    }, g = {
        primary: {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        secondary: {
            ogg: "/assets/audio/buttons/click--secondary.ogg",
            mp3: "/assets/audio/buttons/click--secondary.mp3"
        }
    }, h = i => {
        class t extends i {
            constructor() {
                super(...arguments), this.audibleHover = "", this.audibleClick = "", this.howl = r.Howl
            }

            updated(C) {
                super.updated(C), this.updateHoverSound(), this.updateClickSound()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.disconnectHover(), this.disconnectClick()
            }

            handleHover(C) {
                C.preventDefault(), this.hoverControl.play()
            }

            handleClick(C) {
                C.preventDefault(), this.clickControl.play()
            }

            updateHoverSound() {
                this.audibleHover && !this.hoverControl ? this.connectHover() : !this.audibleHover && this.hoverControl && this.disconnectHover()
            }

            updateClickSound() {
                this.audibleClick ? this.connectClick() : !this.audibleClick && this.clickControl && this.disconnectClick()
            }

            connectHover() {
                this.hoverControl = new this.howl({src: [_[this.audibleHover].ogg, _[this.audibleHover].mp3]}), this.addEventListener("mouseover", this.handleHover)
            }

            connectClick() {
                this.clickControl && this.disconnectClick(), this.clickControl = new this.howl({src: [g[this.audibleClick].ogg, g[this.audibleClick].mp3]}), this.addEventListener("mousedown", this.handleClick), this.addEventListener("touchstart", this.handleClick)
            }

            disconnectHover() {
                !this.hoverControl || (this.hoverControl.unload(), this.hoverControl = void 0, this.removeEventListener("mouseover", this.handleHover))
            }

            disconnectClick() {
                !this.clickControl || (this.clickControl.unload(), this.clickControl = void 0, this.removeEventListener("mousedown", this.handleClick), this.removeEventListener("touchstart", this.handleClick))
            }
        }

        return (0, p.gn)([(0, e.C)({type: String}), (0, p.w6)("design:type", Object)], t.prototype, "audibleHover", void 0), (0, p.gn)([(0, e.C)({type: String}), (0, p.w6)("design:type", Object)], t.prototype, "audibleClick", void 0), t
    }
}, 72985
:
(te, U, o) => {
    "use strict";
    o.d(U, {Am: () => _, lH: () => h, Xg: () => r, s: () => p});
    const p = t => class extends t {
        update(n) {
            this.setAttribute("disabled", `${this.disabled}`), this.setAttribute("loading", `${this.loading}`), this.setAttribute("horizontalStretch", `${this.horizontalStretch}`), super.update(n)
        }
    }, r = t => class extends t {
        constructor() {
            super(...arguments), this.clickLinkListenerBound = !1
        }

        update(n) {
            this.href && !this.clickLinkListenerBound ? (this.addEventListener("click", this.clickLinkHandler), this.clickLinkListenerBound = !0) : !this.href && this.clickLinkListenerBound && (this.removeEventListener("click", this.clickLinkHandler), this.clickLinkListenerBound = !1), super.update(n)
        }

        disconnectedCallback() {
            this.removeEventListener("click", this.clickLinkHandler)
        }

        clickLinkHandler() {
            const {target: n, href: C} = this;
            n ? window.open(C, n) : window.location.href = C
        }
    };
    var f = o(46461);
    const e = {
        "GU-SPECIAL-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        "GU-SPECIAL-HEX-FLAT-BUTTON": {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        "GU-PRIMARY-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        "GU-SECONDARY-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--secondary.ogg",
            mp3: "/assets/audio/buttons/click--secondary.mp3"
        },
        "GU-SUBTLE-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--secondary.ogg",
            mp3: "/assets/audio/buttons/click--secondary.mp3"
        }
    }, _ = t => class extends t {
        constructor() {
            super(...arguments), this.clickSoundListenerBound = !1
        }

        updated(n) {
            super.updated(n), this.checkToEnableClickSound()
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.destroyClickSound(), this.destroyClickEvents()
        }

        clickSoundHandler(n) {
            n.preventDefault(), this.clickSoundControl.play()
        }

        checkToEnableClickSound() {
            this.enableSounds && !this.clickSoundListenerBound ? (this.initClickEvents(), this.initClickSound()) : !this.enableSounds && this.clickSoundListenerBound && (this.destroyClickSound(), this.destroyClickEvents())
        }

        initClickSound() {
            this.clickSoundControl = new f.Howl({src: [e[this.nodeName].ogg, e[this.nodeName].mp3]})
        }

        initClickEvents() {
            this.addEventListener("mousedown", this.clickSoundHandler), this.addEventListener("touchstart", this.clickSoundHandler), this.clickSoundListenerBound = !0
        }

        destroyClickSound() {
            this.clickSoundControl && this.clickSoundControl.unload()
        }

        destroyClickEvents() {
            this.removeEventListener("mousedown", this.clickSoundHandler), this.removeEventListener("touchstart", this.clickSoundHandler), this.clickSoundListenerBound = !1
        }
    }, h = t => class extends t {
        constructor() {
            super(...arguments), this.hoverSoundListenerBound = !1
        }

        updated(n) {
            super.updated(n), this.checkToEnableHoverSound()
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.destroyHoverSound(), this.removeEventListener("mouseover", this.hoverSoundHandler)
        }

        hoverSoundHandler(n) {
            n.preventDefault(), this.hoverSoundControl.play()
        }

        checkToEnableHoverSound() {
            this.enableSounds && !this.hoverSoundListenerBound ? (this.addEventListener("mouseover", this.hoverSoundHandler), this.hoverSoundListenerBound = !0, this.initHoverSound()) : !this.enableSounds && this.hoverSoundListenerBound && (this.removeEventListener("mouseover", this.hoverSoundHandler), this.hoverSoundListenerBound = !1, this.destroyHoverSound())
        }

        initHoverSound() {
            this.hoverSoundControl = new f.Howl({src: ["/assets/audio/buttons/hover--primary.ogg", "/assets/audio/buttons/hover--primary.mp3"]})
        }

        destroyHoverSound() {
            this.hoverSoundControl && this.hoverSoundControl.unload()
        }
    };
    o(72650)
}, 93270
:
(te, U, o) => {
    "use strict";
    o.d(U, {Z: () => f});
    var p = o(70655), r = o(56418);
    const f = e => {
        class _ extends e {
            constructor() {
                super(...arguments), this.href = "", this.target = "", this.bound = !1, this.window = window
            }

            updated(h) {
                super.updated(h), this.href && !this.bound ? (this.addEventListener("click", this.handleClick), this.bound = !0) : !this.href && this.bound && this.removeListener()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.removeListener()
            }

            removeListener() {
                this.bound && this.removeEventListener("click", this.handleClick)
            }

            handleClick() {
                const {target: h, href: i} = this;
                h ? this.window.open(i, h) : this.window.location.href = i
            }
        }

        return (0, p.gn)([(0, r.C)({type: String}), (0, p.w6)("design:type", Object)], _.prototype, "href", void 0), (0, p.gn)([(0, r.C)({type: String}), (0, p.w6)("design:type", Object)], _.prototype, "target", void 0), _
    }
}, 47925
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {breakpointSizeMapping: () => p});
    const p = {
        "2x-small": "360px",
        "x-small": "512px",
        small: "768px",
        medium: "960px",
        large: "1200px",
        "x-large": "1400px",
        "2x-large": "1600px"
    }
}, 91418
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        gunmetal: () => p,
        light: () => r,
        white: () => f,
        black: () => e,
        dark: () => _,
        apocyan: () => g,
        yellow: () => h,
        gold: () => i,
        aqua: () => t,
        card: () => n,
        alert: () => C,
        quality: () => k,
        rarity: () => $,
        god: () => w,
        fillColoringRules: () => D
    });
    const p = {100: "#7192B0", 300: "#527493", 500: "#3D5A74", 700: "#1D2F41", 900: "#0F1B27"},
        r = {100: "#F6F6F6", 300: "#D7D7D7", 500: "#B6B6B6", 700: "#979797", 900: "#7F7F7F"}, f = "#ffffff",
        e = "#000000", _ = {100: "#7F7F7F", 300: "#646464", 500: "#464646", 700: "#272727", 900: "#0A0A0A"},
        g = {100: "#AFFAED", 300: "#8BE1E0", 500: "#54BBCD"}, h = {100: "#FCF7D4", 300: "#F7EA9B", 500: "#F2DC63"},
        i = {100: "#FFF2D8", 300: "#EBC98B", 500: "#C6A052"}, t = {200: "#affaed", 300: "#8be1e0", 500: "#54bbcd"},
        n = {creature: "#ebd08a", spell: "#76b5ad", weapon: "#7a608c"}, C = "#FF8B01", k = {
            plain: "#8295A2",
            bronze: "#6A8B35",
            iron: "#3D91B9",
            meteorite: "#84343E",
            shadow: "#B461C5",
            gold: "#E5D93C",
            diamond: "#94E6FB",
            mythic: "#ffffff"
        }, $ = {common: "#6D6C6D", rare: "#3C8ED2", epic: "#6D1FC4", legendary: "#D8A638", mythic: "#D02C3A"}, w = {
            deception: {primary: "#FA77FC", secondary: "#CA3FD8", tertiary: "#8F189B"},
            war: {primary: "#FF8B01", secondary: "#D73333", tertiary: "#99011A"},
            death: {primary: "#9C4EF9", secondary: "#35145B", tertiary: "#35145B"},
            magic: {primary: "#50BCFF", secondary: "#3884DE", tertiary: "#1752BA"},
            nature: {primary: "#9DE764", secondary: "#5AC33F", tertiary: "#4C772F"},
            light: {primary: "#FBE29F", secondary: "#FFD76E", tertiary: "#FAB248"}
        },
        D = "\n  /* Styles to use when there is a gradientFill set ... */\n  :host([fillGradient]),\n  :host([fillGradient]) ::slotted(*) {\n    background: var(--textFillGradient);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  /* Styles to use when there is a simple fill color set ... */\n  :host([fillColor]),\n  :host([fillColor]) ::slotted(*) {\n    color: var(--textFillColor);\n\n    /* Use the text coloring for border color, and allow it to be over-written */\n    border-color: var(--textFillColor);\n  }\n\n  /* Styles to use when there is a simple fill color hover set ... */\n  :host([fillColorHover]:hover),\n  :host([fillColorHover]:hover) ::slotted(*) {\n    color: var(--textFillColorHover);\n\n    /* Use the text coloring for border color, and allow it to be over-written */\n    border-color: var(--textFillColorHover);\n  }\n\n  /* Styles to use when there is a simple border color set ... */\n  :host([borderColor]),\n  :host([borderColor]) ::slotted(*) {\n    border-color: var(--borderColor);\n  }\n\n  /* Styles to use when there is a simple border color hover set ... */\n  :host([borderColorHover]:hover),\n  :host([borderColorHover]:hover) ::slotted(*) {\n    border-color: var(--borderColorHover);\n  }\n\n  /* Styles to use when there is a simple background color fill set ... */\n  :host([backgroundFillColor]),\n  :host([backgroundFillColor]) ::slotted(*) {\n    background-color: var(--backgroundFillColor);\n  }\n\n  /* Styles to use when there is a simple background color fill hover set ... */\n  :host([backgroundFillColorHover]:hover),\n  :host([backgroundFillColorHover]:hover) ::slotted(*) {\n    background-color: var(--backgroundFillColorHover);\n  }\n"
}, 65281
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        animation: () => p,
        breakpoints: () => i,
        colors: () => t,
        gradients: () => r,
        measurements: () => S,
        typography: () => y,
        uifx: () => I
    });
    var p = {};
    o.r(p), o.d(p, {
        slowTransition: () => h,
        slowTransitionDuration: () => _,
        standardTransition: () => g,
        standardTransitionDuration: () => f,
        standardTransitionEasing: () => e
    });
    var r = {};
    o.r(r), o.d(r, {
        apocyan: () => $,
        dark: () => w,
        god: () => m,
        gold: () => n,
        gunmetal: () => C,
        light: () => D,
        textFill: () => A,
        yellow: () => k
    });
    const f = "150ms", e = "ease-in-out", _ = "300ms", g = s => `\n  transition: ${s} ${f}\n  ${e};\n`,
        h = s => `\n  transition: ${s} ${_}\n  ${e};\n`;
    var i = o(47925), t = o(91418);
    const n = {
            simple: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[100]} 0%,\n    ${t.gold[500]} 100%\n  );\n`,
            mirror: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[500]} 0%,\n    ${t.gold[100]} 50%,\n    ${t.gold[500]} 100%\n  );\n`,
            complex: (s = "top") => `\n  linear-gradient(\n    to ${s},\n    #FFFDF0 0%,\n    #FBEBC1 14%,\n    #E6C675 25%,\n    #F6DF6E 40%,\n    #B27E18 60%,\n    #DEAB61 73%,\n    #A67B4B 85%,\n    #664320 100%\n  );\n`,
            horizontal: (s = "right") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[500]} 3%,\n    ${t.gold[300]} 25%,\n    ${t.gold[100]} 50%,\n    ${t.gold[300]} 75%,\n    ${t.gold[500]} 97%\n  );\n`
        }, C = {
            simple: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gunmetal[900]} 0%,\n    ${t.gunmetal[700]} 100%\n  );`,
            mirror: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gunmetal[900]} 0%,\n    ${t.gunmetal[700]} 50%,\n    ${t.gunmetal[900]} 100%\n  );\n`
        },
        k = {simple: (s = "top") => `\n  linear-gradient(\n    to ${s},\n    ${t.yellow[100]} 0%,\n    ${t.yellow[300]} 50%,\n    ${t.yellow[500]} 100%\n  );\n`},
        $ = {
            simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.apocyan[100]} 0%,\n    ${t.apocyan[500]} 100%\n  );`,
            mirror: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.apocyan[500]} 0%,\n    ${t.apocyan[100]} 50%,\n    ${t.apocyan[500]} 100%\n  );`
        },
        w = {simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.dark[500]} 100%,\n    ${t.dark[900]} 100%\n  );`},
        D = {simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.light[100]} 100%,\n    ${t.light[300]} 100%\n  );`},
        m = {
            deception: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.deception.primary} 0%,\n      ${t.god.deception.secondary} 50%,\n      ${t.god.deception.tertiary} 100%\n    )`,
            war: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.war.primary} 0%,\n      ${t.god.war.secondary} 50%,\n      ${t.god.war.tertiary} 100%\n    )`,
            death: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.death.primary} 0%,\n      ${t.god.death.secondary} 50%,\n      ${t.god.death.tertiary} 100%\n    )`,
            magic: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.magic.primary} 0%,\n      ${t.god.magic.secondary} 50%,\n      ${t.god.magic.tertiary} 100%\n    )`,
            nature: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.nature.primary} 0%,\n      ${t.god.nature.secondary} 50%,\n      ${t.god.nature.tertiary} 100%\n    )`,
            light: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.light.primary} 0%,\n      ${t.god.light.secondary} 50%,\n      ${t.god.light.tertiary} 100%\n    )`
        },
        A = s => `background: ${s};\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;`;
    var S = o(49219), y = o(66974), I = o(61462)
}, 49219
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        spacingAmountMapping: () => r,
        standardTransitionDuration: () => f,
        standardTransitionEasing: () => e,
        standardBorderSize: () => _,
        draggableTitleBarHeight: () => g,
        standardHeaderHeight: () => h,
        standardHeaderHeightInCss: () => i,
        standardHeaderAlertBarHeight: () => t,
        headerBarZLevel: () => n,
        electronMenuBarZLevel: () => C,
        modalLayerZLevel: () => k,
        electronTitleBarHeight: () => $,
        imageQualities: () => w
    });
    var p = o(80102);
    const r = {
            "2x-small": "2px",
            "x-small": "4px",
            small: "8px",
            medium: "12px",
            large: "16px",
            "x-large": "24px",
            "2x-large": "32px",
            "3x-large": "40px",
            "4x-large": "56px",
            "5x-large": "72px",
            "6x-large": "96px",
            "7x-large": "128px",
            "8x-large": "192px",
            "9x-large": "320px"
        }, f = "150ms", e = "ease-in-out", _ = "1px", g = (0, p.gridUnits)(7), h = 80, i = "80px", t = 50, n = 22, C = 23,
        k = 22, $ = (0, p.gridUnits)(7), w = {small: 128, normal: 256, high: 512, xHigh: 720, best: 1024}
}, 66974
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {
        iconTextStyles: () => p,
        headingFont: () => r,
        simpleFont: () => f,
        textAlignRules: () => e,
        headingSizeMapping: () => _,
        simpleTextSizeMapping: () => g,
        baseSimpleTextStyles: () => h
    });
    const p = "\n  font-family: 'gu-cons';\n  font-feature-settings: 'liga' 1;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  vertical-align: middle;\n  letter-spacing: 0;\n  line-height: 1;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n",
        r = "\n  font-family: 'Unchained', serif;\n", f = "\n  font-family: 'Open Sans', sans-serif;\n",
        e = "\n  :host([align='center']),\n  :host([align='center']) ::slotted(*) {\n    text-align: center;\n  }\n\n  :host([align='left']),\n  :host([align='left']) ::slotted(*) {\n    text-align: left;\n  }\n\n  :host([align='right']),\n  :host([align='right']) ::slotted(*) {\n    text-align: right;\n  }\n",
        _ = {
            "3x-small": "14px",
            "2x-small": "18px",
            "x-small": "24px",
            small: "32px",
            large: "40px",
            "x-large": "48px",
            "2x-large": "72px"
        }, g = {large: "20px", small: "16px", help: "14px", tag: "12px", micro: "10px"},
        h = `\n  ${f}\n  line-height: 1.1;\n`
}, 61462
:
(te, U, o) => {
    "use strict";
    o.r(U), o.d(U, {userSelect: () => p});
    const p = r => `\n    -webkit-user-select: ${r};\n    user-select: ${r};\n    pointer-events: ${r};\n  `
}, 58672
:
(te, U, o) => {
    "use strict";
    o.d(U, {x: () => r});
    var p = o(25297);

    function r({renderer: f, baseClass: e = p.J, props: _ = {}}) {
        const g = class extends e {
            render() {
                return f.call(this, this)
            }
        };
        return Object.entries(_).forEach(([h, i]) => g[h] = i), g
    }
}, 51256
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(56418), e = o(86041), _ = o(5284), g = o(65171), h = o(26532), i = o(65281),
        t = o(47925), n = o(91418);
    let C = class extends r.oi {
        constructor() {
            super(...arguments), this.size = "small", this.align = "center", this.responsiveSize = []
        }

        static get styles() {
            return r.iv`
      :host {
        display: block;
        ${(0, h.asCssProp)(_.uA.enhancedTextRenderingStyles)};
      }

      :host,
      ::slotted(*) {
        ${(0, h.asCssProp)(i.typography.headingFont)};
        color: ${(0, h.asCssProp)(i.colors.light[100])};
        line-height: 1.2;
        font-weight: 700;
        text-transform: uppercase;
        margin: 0;
      }

      ${(0, h.asCssProp)(i.typography.textAlignRules)}

      :host([size='2x-large']),
      :host([size='2x-large']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping["2x-large"])} !important;
      }

      :host([size='x-large']),
      :host([size='x-large']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping["x-large"])} !important;
      }

      :host([size='large']),
      :host([size='large']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping.large)} !important;
      }

      /* 'Small' size is the default size... */
      :host,
      :host ::slotted(*),
      :host([size='small']),
      :host([size='small']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping.small)} !important;
      }

      :host([size='x-small']),
      :host([size='x-small']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping["x-small"])} !important;
      }

      :host([size='2x-small']),
      :host([size='2x-small']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping["2x-small"])} !important;
      }

      :host([size='3x-small']),
      :host([size='3x-small']) ::slotted(*) {
        font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping["3x-small"])} !important;
      }

      ${(0, h.asCssProp)(n.fillColoringRules)}
    `
        }

        generateMediaQueries() {
            return this.responsiveSize.length ? r.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveSize.map(({breakpoint: $, size: w}) => r.iv`
                @media screen and (min-width: ${(0, h.asCssProp)(t.breakpointSizeMapping[$])}) {
                  :host(.overWrite[size='${(0, h.asCssProp)(this.size)}']),
                  :host(.overWrite[size='${(0, h.asCssProp)(this.size)}']) ::slotted(*) {
                    font-size: ${(0, h.asCssProp)(i.typography.headingSizeMapping[w])} !important;
                  }
                }
              `)}
          </style>
        ` : null
        }

        render() {
            const {fillColor: $, fillGradient: w, fillGradientTarget: D} = this;
            return (0, g.updateColoringVariables)({
                component: this,
                fillColor: $,
                fillGradient: w,
                fillGradientTarget: D
            }), this.setAttribute("size", this.size), this.responsiveSize.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), r.dy`
      ${this.generateMediaQueries()}
      <slot></slot>
    `
        }
    };
    (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], C.prototype, "size", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], C.prototype, "align", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], C.prototype, "fillColor", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], C.prototype, "fillGradient", void 0), (0, p.gn)([(0, f.C)({type: String}), (0, p.w6)("design:type", String)], C.prototype, "fillGradientTarget", void 0), (0, p.gn)([(0, f.C)({type: Array}), (0, p.w6)("design:type", Array)], C.prototype, "responsiveSize", void 0), C = (0, p.gn)([(0, e.M)("gu-heading-text")], C)
}, 11015
:
(te, U, o) => {
    "use strict";
    var p = o(70655), r = o(32830), f = o(86041), e = o(52102);
    let _ = class extends e._ {
        static get styles() {
            return r.iv`
      ${super.styles}

      :host {
        display: block;
      }

      :host,
      :host ::slotted(*) {
        line-height: 1.375;
      }

      :host([kind='large']) ::slotted(*) {
        line-height: 1.4;
      }

      :host([kind='small']) ::slotted(*) {
        line-height: 1.5;
      }

      :host([kind='help']) ::slotted(*) {
        line-height: 1.43;
      }

      :host([kind='tag']) ::slotted(*) {
        line-height: 1.67;
      }
    `
        }
    };
    _ = (0, p.gn)([(0, f.M)("gu-paragraph-text")], _)
}, 52102
:
(te, U, o) => {
    "use strict";
    o.d(U, {_: () => $});
    var p = o(70655), r = o(32830), f = o(56418), e = o(86041), _ = o(5284), g = o(65281), h = o(26532), i = o(91418),
        t = o(66974), n = o(61462);
    const C = `\n  font-size: ${(0, h.asCssProp)(g.typography.simpleTextSizeMapping.tag)};\n  font-weight: 700;\n  text-transform: uppercase;\n`;
    let $ = class extends r.oi {
        constructor() {
            super(...arguments), this.align = "center", this.fontStyle = "regular", this.responsiveKind = []
        }

        static get styles() {
            return r.iv`
  ${(0, h.asCssProp)((0, h.setBoxSizing)())}

  :host,
    :host ::slotted(*) {
    ${(0, h.asCssProp)(_.uA.enhancedTextRenderingStyles)};
    ${(0, h.asCssProp)(t.baseSimpleTextStyles)};
    font-size: ${(0, h.asCssProp)(g.typography.simpleTextSizeMapping.small)};

    ${(0, h.asCssProp)((0, n.userSelect)("inherit"))};
  }

  :host([kind='large']),
  :host([kind='large']) ::slotted(*) {
    font-size: ${(0, h.asCssProp)(g.typography.simpleTextSizeMapping.large)};
  }

  :host([kind='small']),
  :host([kind='small']) ::slotted(*) {
    font-size: ${(0, h.asCssProp)(g.typography.simpleTextSizeMapping.small)};
  }

  :host([kind='micro']),
  :host([kind='micro']) ::slotted(*) {
    font-size: ${(0, h.asCssProp)(g.typography.simpleTextSizeMapping.micro)};
  }

  :host([kind='help']),
  :host([kind='help']) ::slotted(*) {
    font-style: italic;
    font-size: ${(0, h.asCssProp)(g.typography.simpleTextSizeMapping.help)};
  }

  :host([kind='tag']),
  :host([kind='tag']) ::slotted(*) {
    ${(0, h.asCssProp)(C)};
  }

  :host([fontStyle='italic']),
  :host([fontStyle='italic']) ::slotted(*) {
    font-style: italic;
  }

  :host([fontWeight='bold']),
  :host([fontWeight='bold']) ::slotted(*) {
    font-weight: 700;
  }

  ${(0, h.asCssProp)(g.typography.textAlignRules)}
  ${(0, h.asCssProp)(i.fillColoringRules)}
`
        }

        generateMediaQueries() {
            const {breakpointSizeMapping: D} = g.breakpoints, {asCssProp: m} = _.ZB, {simpleTextSizeMapping: A} = g.typography;
            return this.responsiveKind.length ? r.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveKind.map(({breakpoint: S, kind: y = "small"}) => r.iv`
                @media screen and (min-width: ${m(D[S])}) {
                  :host(.overWrite[kind='${m(this.kind)}']),
                  :host(.overWrite[kind='${m(this.kind)}']) ::slotted(*) {
                    font-size: ${m(A[y])} !important;
                    ${m("tag" !== y ? "bold" === this.fontWeight ? "font-weight: 700" : "font-weight: 400" : "")};
                    ${m("tag" === y ? C : "")};
                    ${m("help" === y ? "font-style: italic" : "")};
                  }
                }
              `)}
          </style>
        ` : null
        }

        render() {
            const {updateColoringVariables: D} = _.gt, {
                fillColor: m,
                fillGradient: A,
                fillGradientTarget: S,
                borderColor: y,
                fillColorHover: I
            } = this;
            return D({
                component: this,
                fillColor: m,
                fillColorHover: I,
                fillGradient: A,
                fillGradientTarget: S,
                borderColor: y
            }), this.setAttribute("kind", this.kind), this.responsiveKind.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), r.dy`
      ${this.generateMediaQueries()} ${this.text ? this.text : ""}
      <slot></slot>
    `
        }
    };
    (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "kind", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "align", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "fontStyle", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "fontWeight", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "text", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "fillColor", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "fillColorHover", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "borderColor", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "fillGradient", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", String)], $.prototype, "fillGradientTarget", void 0), (0, p.gn)([(0, f.C)(), (0, p.w6)("design:type", Array)], $.prototype, "responsiveKind", void 0), $ = (0, p.gn)([(0, e.M)("gu-simple-text")], $)
}, 56302
:
(te, U, o) => {
    "use strict";
    o.d(U, {X8: () => p, IU: () => _, Qo: () => i});
    var p = (() => {
        return (t = p || (p = {})).FETCH_USER_WALLET = "[Account] Fetch User Wallet", t.FETCH_USER_WALLET_SUCCESS = "[Account] Fetch User Wallet Success", t.FETCH_USER_WALLET_ERROR = "[Account] Fetch User Wallet Error", t.UPDATE_USER_ETH_BALANCE = "[Account] Update User Eth Balance", t.FETCH_USER_ACCOUNT = "[Account] Fetch User Account", t.FETCH_USER_ACCOUNT_SUCCESS = "[Account] Fetch User Account Success", t.FETCH_USER_ACCOUNT_ERROR = "[Account] Fetch User Account Error", p;
        var t
    })();

    class _ {
        constructor() {
            this.type = p.FETCH_USER_WALLET
        }
    }

    class i {
        constructor(n) {
            this.payload = n, this.type = p.UPDATE_USER_ETH_BALANCE
        }
    }
}, 43991
:
(te, U, o) => {
    "use strict";
    o.d(U, {z: () => $});
    var p = o(40520), r = o(73307), f = o(55778), e = o(52909), _ = o(591), g = o(30567), h = o(72986), i = o(24850),
        t = (() => {
            return (w = t || (t = {})).CARD = "card", w.DECK = "deck", w.PACKAGE = "package", w.TOME = "tome", w.CARD_BACK = "cardback", w.BOARD = "board", w.TRINKET = "trinket", w.EMOTE = "emote", w.ICON = "icon", t;
            var w
        })(), k = o(5e3);
    let $ = (() => {
        class w {
            constructor(m, A, S, y) {
                this.authService = m, this.marketplaceApiService = A, this.authHostService = S, this.guApiService = y, this.dataStore = {
                    usersSoldCards: [],
                    userHasNewSoldCards: !1
                }, this._usersSoldCards = new _.X([]), this._userHasNewSoldCards = new _.X(!1), console.log("@Cerberus/AssetsService constructor")
            }

            get usersSoldCards$() {
                return this._usersSoldCards.asObservable()
            }

            get userHasNewSoldCards$() {
                return this._userHasNewSoldCards.asObservable()
            }

            getBoardsAndTrinkets() {
                const m = this.authService.getUserId();
                return this.marketplaceApiService.get(`/user/${m}/asset?type=board&type=trinket`)
            }

            getAssetFilters(m) {
                return this.marketplaceApiService.get("/property", {params: this.appendFilterParams(m)})
            }

            getAssetGroups(m, A) {
                return this.marketplaceApiService.get("/assetgroup", {params: this.appendSearchParams(m, A)})
            }

            appendSearchParams(m, A) {
                let S = new p.LE;
                if (A.sortBy && (S = S.append("sort", A.sortBy)), A.orderBy && (S = S.append("order", A.orderBy)), A.groupBy) {
                    switch (S = S.append("group", A.groupBy), A.assetType) {
                        case t.CARD:
                            S = S.append("group", "quality_name"), S = S.append("group", "quality");
                            break;
                        case t.BOARD:
                            S = S.append("group", "level");
                            break;
                        case t.TRINKET:
                            S = S.append("group", "heads");
                            break;
                        default:
                            S = S.append("group", "quality_name"), S = S.append("group", "quality")
                    }
                    S = S.append("group", "proto")
                }
                return A.splitBy && (S = S.append("split", A.splitBy)), A.currentPage && (S = S.append("page", A.currentPage.toString())), A.perPage && (S = S.append("perPage", A.perPage.toString())), A.assetType && (S = S.append("asset_type", A.assetType)), m.owner && (S = S.append("owner", m.owner)), m.token_id && (S = S.append("token_id", m.token_id)), m.contract && (S = S.append("contract", m.contract)), m.properties && m.properties.length > 0 && (S = S.append("properties", this.stringifyMetaDataFilters(m.properties))), m.class_properties && m.class_properties.length > 0 && (S = S.append("class_properties", this.stringifyMetaDataFilters(m.class_properties))), S
            }

            appendFilterParams(m) {
                let A = new p.LE;
                return m.owner && (A = A.append("owner", m.owner)), m.asset_type && (A = A.append("asset_type", m.asset_type)), m.token_id && (A = A.append("token_id", m.token_id)), m.contract && (A = A.append("contract", m.contract)), m.properties && m.properties.length > 0 && (console.log("properties", this.stringifyMetaDataFilters(m.properties)), A = A.append("properties", this.stringifyMetaDataFilters(m.properties))), m.class_properties && m.class_properties.length > 0 && (A = A.append("class_properties", this.stringifyMetaDataFilters(m.class_properties))), A
            }

            stringifyMetaDataFilters(m) {
                const A = JSON.stringify(m);
                return encodeURI(A)
            }

            getSoldAssets({userId: m = this.authService.getUserId(), showNotifications: A = !0} = {}) {
                console.log("@Cerberus/AssetsService.getSoldAssets({ userId, showNotifications })", m, A), this.marketplaceApiService.get(`/user/${m}/sold`).pipe((0, h.q)(1)).subscribe(S => {
                    A && this.checkForNewCards(S) && (this.dataStore.userHasNewSoldCards = !0, this._userHasNewSoldCards.next(this.dataStore.userHasNewSoldCards)), this.dataStore.usersSoldCards = S, this._usersSoldCards.next([...this.dataStore.usersSoldCards])
                })
            }

            checkForNewCards(m) {
                return !(!m[0] || this.dataStore.usersSoldCards[0] && this.cardsAreTheSame(m[0], this.dataStore.usersSoldCards[0]))
            }

            cardsAreTheSame(m, A) {
                return m.address === A.address && m.token_id === A.token_id
            }

            getProtoDetails(m) {
                return this.guApiService.get(`/proto/${m}`)
            }

            clearNewSoldCards() {
                this.dataStore.userHasNewSoldCards = !1, this._userHasNewSoldCards.next(this.dataStore.userHasNewSoldCards)
            }

            getSellingAssets$(m = 1, A = 31, S = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${S}/selling?page=${m}&perPage=${A}`)
            }

            getUsernamesFromAddresses(m) {
                const A = [];
                for (let S = 0; S < m.length; S++) A.push(this.getUsernameFromAddress(m[S].owner).pipe((0, i.U)(y => y)));
                return (0, g.D)(A)
            }

            getUsernameFromAddress(m) {
                return this.authHostService.get(`/account/${m}/username`)
            }

            mapPriceHistory(m) {
                return m ? m.map(A => {
                    const y = new Date(0).setUTCSeconds(A.block_timestamp), I = e.O$.from(10).pow(18);
                    return {price: e.O$.from(A.taker_asset_amount).div(I).toNumber(), timestamp: y}
                }) : []
            }

            getAssetGroupPriceHistory(m, A, S, y) {
                console.log(A, S);
                let I = {};
                switch (y) {
                    case t.CARD:
                        I = JSON.stringify({proto: parseInt(A, 10), quality: parseInt(S, 10)});
                        break;
                    case t.TRINKET:
                        I = void 0 !== S && "undefined" !== S ? JSON.stringify({heads: parseInt(S, 10)}) : JSON.stringify({});
                        break;
                    case t.BOARD:
                        I = JSON.stringify({level: parseInt(S, 10)});
                        break;
                    default:
                        I = JSON.stringify({})
                }
                return this.marketplaceApiService.get(`/asset/${m}/price`, {
                    params: {
                        type: y,
                        asset_group: I
                    }
                }).pipe((0, i.U)(s => this.mapPriceHistory(s)))
            }

            getAssetPriceHistory(m, A) {
                return this.marketplaceApiService.get(`/asset/${m}/${A}/price`).pipe((0, i.U)(S => this.mapPriceHistory(S)))
            }

            getOwnedAssets$(m = 1, A = 31, S = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${S}/asset/ethereumgroup?page=${m}&perPage=${A}`)
            }

            getOwnedAssets(m, A, S = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${S}/asset/ethereumgroup`, {params: this.appendSearchParams(m, A)})
            }

            getOwnedAssetFilters(m, A = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${A}/asset/ethereum/property`, {params: this.appendFilterParams(m)})
            }
        }

        return w.\u0275fac = function (m) {
            return new (m || w)(k.LFG(r.mI), k.LFG(f._q), k.LFG(r.LI), k.LFG(f.Ho))
        }, w.\u0275prov = k.Yz7({token: w, factory: w.\u0275fac}), w
    })()
}, 40886
:
(te, U, o) => {
    "use strict";
    o.d(U, {Y: () => p, t: () => r});
    const p = 3, r = 1
}, 72224
:
(te, U, o) => {
    "use strict";
    o.d(U, {v: () => p});
    const p = 2147483647
}, 69181
:
(te, U, o) => {
    "use strict";
    o.d(U, {$: () => p});
    const p = [{name: "twitter", link: "https://twitter.com/GodsUnchained"}, {
        name: "reddit",
        link: "https://www.reddit.com/r/GodsUnchained/"
    }, {name: "facebook", link: "https://www.facebook.com/godsunchained/"}, {
        name: "instagram",
        link: "https://www.instagram.com/godsunchained/?hl=en"
    }, {name: "discord", link: "https://discordapp.com/invite/godsunchained"}, {
        name: "youtube",
        link: "https://www.youtube.com/channel/UCGQ1oWpKFfjsLYiTYALAlSA"
    }, {name: "twitch", link: "https://www.twitch.tv/godsunchained/videos"}]
}, 94057
:
(te, U, o) => {
    "use strict";
    o.d(U, {gv: () => f, zy: () => p, CF: () => r});
    var p = {};
    o.r(p), o.d(p, {Y: () => e});
    var r = {};
    o.r(r), o.d(r, {J: () => $e, Y: () => Be});
    var f = {};
    o.r(f), o.d(f, {routeContent: () => We, userMenuItemsContent: () => gt});
    const e = [{
        name: "lysander",
        title: "Lysander: Champion of Light",
        description: "Lysander of Parthon was a respected Olympian military leader, a father, and a man of faith. All that changed the day he was confronted by an overwhelming enemy force led by a daemonic entity.",
        byline: "Wield the might of Lysander's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/01/29/chapter-2-lysanders-origin-broken/",
        protoId: 824
    }, {
        name: "neferu",
        title: "Neferu: Champion of Death",
        description: "Neferu served with distinction in the Anubian army, fighting to reclaim ancestral land from the hated Olympians. She thought she was the embodiment of death herself, until she met her fate on the Mukhnod fields.",
        byline: "Unearth the fury of Neferu's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/02/04/chapter-3-neferus-origin-blessed-rest/",
        protoId: 828
    }, {
        name: "pallas",
        title: "Pallas: Champion of Magic",
        description: "Growing up in a commune of mages, Pallas always seemed to defy categorization: style of magic, philosophy, even gender. This made Evaluation at the Academy of Mystical Arts more complicated than even they expected.",
        byline: "Channel the power of Pallas' cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/02/13/chapter-4-pallas-origin-all-is-magic/",
        protoId: 825
    }, {
        name: "orfeo",
        title: "Orfeo: Champion of Deception",
        description: "Orphaned at a young age, Orfeo quickly learned that one face wasn't enough to survive on the streets of Ronella. But managing multiple lives was never going to be easy, especially when it\u2019s uncertain who is really pulling the strings.",
        byline: "Unveil the skill behind Orfeo's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/03/05/chapter-5-orfeos-origin-masks/",
        protoId: 829
    }, {
        name: "selena",
        title: "Selena: Champion of Nature",
        description: "As a child, many of the Amazons of Agrodor saw Selena a frail young boy... but she knew better. She was a warrior at heart and \u2013 even though she was less athletic than her peers \u2013 she was determined to prove her skills.",
        byline: "Discover the strength of Selena's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/03/19/chapter-6-selenas-origin-truth-is-told-by-moonlight/",
        protoId: 826
    }, {
        name: "valka",
        title: "Valka: Champion of War",
        description: "Battle-hardened and proud, Valka endured devastating adversity before she was selected by Auros to become the Champion of War.",
        byline: "Unleash the wrath of Valka's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/04/02/chapter-7-valkas-origin-a-traitors-blood/",
        protoId: 827
    }];
    o(69181), o(94417), o(40520), o(591), o(8929), o(36053), o(21086), o(61737), o(24850), o(2994), o(72986), o(61709), o(27221), o(55778);
    var y = o(73175);
    o(73307), o(5e3), new y.N0, o(40886), o(52909), o(67806), o(26959), o(74323), o(47760), o(18499), o(45425), o(5254), o(68896), o(56498), o(92198), o(56302), o(96727), o(11735), o(43991);
    var Se = o(1025);
    const $e = {
        home: {
            shortName: "home",
            path: "",
            icon: "nav_arena",
            pageTitle: "Gods Unchained",
            keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game,CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn",
            description: "The ultimate digital trading card game that gives players true ownership of their collection. Play for free, play for keeps, or trade on open marketplaces. Download now. "
        },
        expansions: {
            shortName: "expansions",
            path: "expansions",
            icon: "set_order",
            children: {
                trial: {
                    shortName: "trial of the gods",
                    path: "expansions/trial-of-the-gods",
                    pageTitle: "Trial of the Gods"
                }, divineOrder: {shortName: "divine order", path: "expansions/divine-order", pageTitle: "Divine Order"}
            }
        },
        buyPacks: {shortName: "buy packs", path: "buy-packs", icon: "trader_package", pageTitle: "Buy new card packs"},
        market: {
            shortName: "market",
            path: "market_trader",
            icon: "nav_market",
            children: {
                imxMarketplace: {
                    shortName: "Buy & Sell",
                    url: "https://market.ropsten.x.immutable.com/assets?collection=0xc6185055ea9891d5d9020c927ff65229baebdef2",
                    _target: "_blank"
                }, starStore: {shortName: "star store", path: "star-store", pageTitle: "Star Store"}
            }
        },
        learn: {
            shortName: "learn", path: "learn", icon: "nav_library", children: {
                cards: {
                    shortName: "cards",
                    path: "learn/cards",
                    angularRouterPath: "cards",
                    pageTitle: "Learn: Explore the cards",
                    keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, gu cards, gods unchained cards, card info",
                    description: "A complete list of collectable cards in Gods Unchained. Build your deck, trade and play using core and Genesis cards."
                },
                faq: {
                    shortName: "faq",
                    url: "//support.godsunchained.com/hc/en-us/sections/1500001033441-Gods-Unchained-FAQ",
                    _target: "_blank"
                },
                lore: {shortName: "lore", url: "//blog.godsunchained.com/category/lore", _target: "_blank"},
                blog: {shortName: "blog", url: "//blog.godsunchained.com", _target: "_blank"},
                guide: {shortName: "guide", url: "//blog.godsunchained.com/learn-to-play", _target: "_blank"},
                spgp: {
                    shortName: "Stay. Play. Get Paid.",
                    path: "learn/spgp",
                    angularRouterPath: "spgp",
                    pageTitle: "Learn: Stay Play Get Paid",
                    keywords: "",
                    description: "",
                    featureFlag: Se.v.spgpEnabled
                },
                referrals: {
                    shortName: "Referrals",
                    path: "learn/referrals",
                    angularRouterPath: "referrals",
                    pageTitle: "Learn: Referrals",
                    keywords: "",
                    description: "",
                    featureFlag: Se.v.referralsEnabled
                }
            }
        },
        collections: {
            shortName: "collections",
            path: "collections",
            icon: "nav_inventory",
            pageTitle: "Collections: Your collections",
            keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, gu inventory, gods unchained inventory",
            description: "View your Gods Unchained collection."
        },
        openPacks: {
            shortName: "open packs",
            path: "open-packs",
            icon: "nav_temple",
            pageTitle: "Open Gods Unchained card packs you've purchased.",
            keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, temple, gods unchained temple, gu card packs, open card packs, gu temple",
            description: "Open Gods Unchained card packs you've purchased."
        },
        token: {
            shortName: "$GODS token",
            path: "token",
            icon: "GUToken",
            children: {
                about: {
                    shortName: "About",
                    path: "token/about",
                    pageTitle: "Learn about GODS token",
                    featureFlag: Se.v.tokenEnabled
                },
                airdrop: {
                    shortName: "Claim",
                    path: "token/claim",
                    pageTitle: "Claim GODS token",
                    featureFlag: Se.v.claimAirdropEnabled
                },
                staking: {
                    shortName: "Staking",
                    path: "token/staking",
                    pageTitle: "Staking $GODS token",
                    featureFlag: Se.v.stakingEnabled
                }
            }
        }
    }, Be = {
        manageWallets: {
            shortName: "Manage Wallets",
            path: "manage-wallets",
            pageTitle: "Connect a wallet to your GodsUnchained user account",
            visible: !0
        }, logOut: {shortName: "Log Out", visible: !0}
    }, We = Pe => ({
        home: {shortName: "arena", path: "game/gu/game-modes", icon: "nav_arena", pageTitle: "Gods Unchained homepage"},
        market: {
            shortName: "market",
            path: "market_trader",
            icon: "nav_market",
            children: {
                imxMarketplace: {
                    shortName: "Buy & Sell",
                    url: `${Pe.immutableXMarketplaceUrlGUCollection}`,
                    _target: "_blank"
                }, starStore: {shortName: "star store", path: "game/gu/star-store", pageTitle: "Star Store"}
            }
        },
        collections: {
            shortName: "collections",
            path: "game/gu/inventory",
            icon: "nav_inventory",
            pageTitle: "Collections: Your collections"
        },
        workshop: {shortName: "workshop", path: "game/gu/my-decks", icon: "nav_workshop"},
        forge: {path: "game/gu/forge", icon: "nav_forge", shortName: "forge", featureFlag: Se.v.forgeEnabled},
        openPacks: {shortName: "open packs", path: "game/gu/temple", icon: "nav_temple"},
        learn: {
            shortName: "learn",
            icon: "nav_library",
            path: "learn",
            children: {
                cards: {shortName: "cards", url: `${Pe.guWebsite}/${$e.learn.children.cards.path}`},
                faq: {
                    shortName: "faq",
                    url: "//support.godsunchained.com/hc/en-us/sections/1500001033441-Gods-Unchained-FAQ"
                },
                lore: {shortName: "lore", url: "//blog.godsunchained.com/category/lore"},
                blog: {shortName: "blog", url: "//blog.godsunchained.com"},
                guide: {shortName: "guide", url: "//blog.godsunchained.com/learn-to-play"},
                spgp: {shortName: "Stay. Play. Get Paid.", path: "game/gu/spgp"},
                referrals: {shortName: "Referrals", path: "game/gu/referrals"}
            }
        },
        buyPacks: {
            shortName: "buy packs",
            icon: "trader_package",
            url: `${Pe.guWebsite}/${$e.buyPacks.path}`,
            external: !0
        }
    }), gt = Pe => ({
        playToEarn: {
            shortName: "Play to Earn",
            path: "game/gu/play-to-earn",
            featureFlag: Se.v.playToEarnEnabled,
            visible: !0
        },
        manageWallets: {
            shortName: "Manage Wallets",
            url: `${Pe.guWebsite}/${Be.manageWallets.path}`,
            pageTitle: "Connect a wallet to your GodsUnchained user account",
            visible: !0
        },
        logOut: {shortName: "Log Out", visible: !0}
    })
}, 52886
:
(te, U, o) => {
    "use strict";
    o.d(U, {Zb: () => f, nE: () => k, nJ: () => p, Xl: () => r, PE: () => $});
    var p = (() => {
        return (S = p || (p = {}))[S.DIAMOND = 1] = "DIAMOND", S[S.GOLD = 2] = "GOLD", S[S.SHADOW = 3] = "SHADOW", S[S.METEORITE = 4] = "METEORITE", S[S.PLAIN = 5] = "PLAIN", p;
        var S
    })();
    const r = {
        [p.DIAMOND]: "diamond",
        [p.GOLD]: "gold",
        [p.SHADOW]: "shadow",
        [p.METEORITE]: "meteorite",
        [p.PLAIN]: "plain"
    };

    class f {
        constructor(y, I, s, b, E) {
            this.id = y, this.proto = I, this.quality = s, this.protoCard = b, this.status = E
        }
    }

    var k = (() => {
        return (S = k || (k = {}))[S.All = -1] = "All", S[S.Owned = 0] = "Owned", S[S.Unowned = 1] = "Unowned", S[S.Processing = 2] = "Processing", k;
        var S
    })(), $ = (() => {
        return (S = $ || ($ = {}))[S.AscID = 0] = "AscID", S[S.DescID = 1] = "DescID", S[S.AscQuality = 2] = "AscQuality", S[S.DescQuality = 3] = "DescQuality", S[S.AscMana = 4] = "AscMana", S[S.DescMana = 5] = "DescMana", S[S.AscScarcity = 6] = "AscScarcity", S[S.AscHealth = 7] = "AscHealth", S[S.DescHealth = 8] = "DescHealth", S[S.AscAttack = 9] = "AscAttack", S[S.DescAttack = 10] = "DescAttack", S[S.AscTribe = 11] = "AscTribe", S[S.DescTribe = 12] = "DescTribe", S[S.AscRarity = 13] = "AscRarity", S[S.DescRarity = 14] = "DescRarity", S[S.AscType = 15] = "AscType", S[S.DescType = 16] = "DescType", S[S.AscGod = 17] = "AscGod", S[S.DescGod = 18] = "DescGod", S[S.AscSet = 19] = "AscSet", S[S.DescSet = 20] = "DescSet", $;
        var S
    })()
}, 28510
:
(te, U, o) => {
    "use strict";
    o.d(U, {mX: () => f.mX, Qz: () => p.Q, Zd: () => e});
    var p = o(55943), r = o(5e3), f = o(46688);
    let e = (() => {
        class _ {
        }

        return _.\u0275fac = function (h) {
            return new (h || _)
        }, _.\u0275mod = r.oAB({type: _}), _.\u0275inj = r.cJS({providers: [p.Q]}), _
    })()
}, 46688
:
(te, U, o) => {
    "use strict";
    o.d(U, {m3: () => p, mX: () => r, x0: () => f});

    class p {
        constructor(_, g, h) {
            this.nodes = _, this.viewRef = g, this.componentRef = h
        }
    }

    class r {
        close(_) {
        }

        dismiss(_) {
        }
    }

    class f {
        constructor(_, g, h, i) {
            this.windowComponentRef = _, this.contentRef = g, this.backdropComponentRef = h, this._beforeDismiss = i, _.instance.dismissEvent.subscribe(t => {
                this.dismiss(t)
            }), this.result = new Promise((t, n) => {
                this.resolve = t, this.reject = n
            }), this.result.then(null, () => {
            })
        }

        get componentInstance() {
            if (this.contentRef && this.contentRef.componentRef) return this.contentRef.componentRef.instance
        }

        close(_) {
            this.windowComponentRef && (this.resolve(_), this.removeModalElements())
        }

        dismissModal(_) {
            this.reject(_), this.removeModalElements()
        }

        dismiss(_) {
            if (this.windowComponentRef) if (this._beforeDismiss) {
                const g = this._beforeDismiss();
                g && g.then ? g.then(h => {
                    !1 !== h && this.dismissModal(_)
                }, () => {
                }) : !1 !== g && this.dismissModal(_)
            } else this.dismissModal(_)
        }

        removeModalElements() {
            const _ = this.windowComponentRef.location.nativeElement;
            if (_.parentNode.removeChild(_), this.windowComponentRef.destroy(), this.backdropComponentRef) {
                const g = this.backdropComponentRef.location.nativeElement;
                g.parentNode.removeChild(g), this.backdropComponentRef.destroy()
            }
            this.contentRef && this.contentRef.viewRef && this.contentRef.viewRef.destroy(), this.windowComponentRef = null, this.backdropComponentRef = null, this.contentRef = null
        }
    }
}, 55943
:
(te, U, o) => {
    "use strict";
    o.d(U, {Q: () => Re});
    var p = o(69808), r = o(5e3), f = o(8929), e = o(23753), _ = o(7625), g = o(24850), h = o(92198), i = o(87168),
        t = (() => {
            return (z = t || (t = {}))[z.Tab = 9] = "Tab", z[z.Enter = 13] = "Enter", z[z.Escape = 27] = "Escape", z[z.Space = 32] = "Space", z[z.PageUp = 33] = "PageUp", z[z.PageDown = 34] = "PageDown", z[z.End = 35] = "End", z[z.Home = 36] = "Home", z[z.ArrowLeft = 37] = "ArrowLeft", z[z.ArrowUp = 38] = "ArrowUp", z[z.ArrowRight = 39] = "ArrowRight", z[z.ArrowDown = 40] = "ArrowDown", t;
            var z
        })();
    const n = ["a[href]", "button:not([disabled])", 'input:not([disabled]):not([type="hidden"])', "select:not([disabled])", "textarea:not([disabled])", "[contenteditable]", '[tabindex]:not([tabindex="-1"])'].join(", ");

    function C(z) {
        const he = Array.from(z.querySelectorAll(n)).filter(K => -1 !== K.tabIndex);
        return [he[0], he[he.length - 1]]
    }

    var $ = o(46688);

    function I(z) {
        return null != z
    }

    "undefined" != typeof Element && !Element.prototype.closest && (Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest = function (z) {
        let he = this;
        if (!document.documentElement.contains(he)) return null;
        do {
            if (he.matches(z)) return he;
            he = he.parentElement || he.parentNode
        } while (null !== he && 1 === he.nodeType);
        return null
    });
    var X = o(73307);
    let pe = (() => {
        class z {
            constructor(K) {
                this._environment = K
            }

            ngOnInit() {
                this.modalEnviornment = this._environment.clientType
            }
        }

        return z.\u0275fac = function (K) {
            return new (K || z)(r.Y36(X.Ho))
        }, z.\u0275cmp = r.Xpm({
            type: z,
            selectors: [["cerberus-modal-backdrop"]],
            hostVars: 2,
            hostBindings: function (K, q) {
                2 & K && r.Tol("cerberusModal__backdrop" + (q.backdropClass ? " " + q.backdropClass : ""))
            },
            inputs: {backdropClass: "backdropClass"},
            decls: 0,
            vars: 0,
            template: function (K, q) {
            },
            encapsulation: 2
        }), z
    })();
    var re = o(2994), Ce = o(87545), Z = o(72986), V = (() => {
        return (z = V || (V = {}))[z.BACKDROP_CLICK = 0] = "BACKDROP_CLICK", z[z.ESC = 1] = "ESC", V;
        var z
    })();
    const ie = ["dialog"], Q = ["*"];
    let be = (() => {
        class z {
            constructor(K, q, ge, ce) {
                this.environment = K, this.document = q, this.elRef = ge, this.zone = ce, this.closed$ = new f.xQ, this.backdrop = !0, this.keyboard = !0, this.defaultStylings = !0, this.dismissEvent = new r.vpe
            }

            dismiss(K) {
                this.dismissEvent.emit(K)
            }

            ngOnInit() {
                this.elWithFocus = this.document.activeElement, this.modalEnviornment = this.environment.clientType
            }

            ngAfterViewInit() {
                const {nativeElement: K} = this.elRef;
                if (this.zone.runOutsideAngular(() => {
                    (0, e.R)(K, "keydown").pipe((0, _.R)(this.closed$), (0, h.h)(ge => ge.which === t.Escape && this.keyboard)).subscribe(ge => requestAnimationFrame(() => {
                        ge.defaultPrevented || this.zone.run(() => this.dismiss(V.ESC))
                    }));
                    let q = !1;
                    (0, e.R)(this._dialogEl.nativeElement, "mousedown").pipe((0, _.R)(this.closed$), (0, re.b)(() => q = !1), (0, Ce.w)(() => (0, e.R)(K, "mouseup").pipe((0, _.R)(this.closed$), (0, Z.q)(1))), (0, h.h)(({target: ge}) => K === ge)).subscribe(() => {
                        q = !0
                    }), (0, e.R)(K, "click").pipe((0, _.R)(this.closed$)).subscribe(({target: ge}) => {
                        !0 === this.backdrop && K === ge && !q && this.zone.run(() => this.dismiss(V.BACKDROP_CLICK)), q = !1
                    })
                }), !K.contains(document.activeElement)) {
                    const q = K.querySelector("[ngbAutofocus]"), ge = C(K)[0];
                    (q || ge || K).focus()
                }
            }

            ngOnDestroy() {
                const K = this.document.body, q = this.elWithFocus;
                let ge;
                ge = q && q.focus && K.contains(q) ? q : K, this.zone.runOutsideAngular(() => {
                    setTimeout(() => ge.focus()), this.elWithFocus = null
                }), this.closed$.next()
            }
        }

        return z.\u0275fac = function (K) {
            return new (K || z)(r.Y36(X.Ho), r.Y36(p.K0), r.Y36(r.SBq), r.Y36(r.R0b))
        }, z.\u0275cmp = r.Xpm({
            type: z,
            selectors: [["cerberus-modal-window"]],
            viewQuery: function (K, q) {
                if (1 & K && r.Gf(ie, 7), 2 & K) {
                    let ge;
                    r.iGM(ge = r.CRH()) && (q._dialogEl = ge.first)
                }
            },
            hostAttrs: ["role", "dialog", "tabindex", "-1"],
            hostVars: 4,
            hostBindings: function (K, q) {
                2 & K && (r.uIk("aria-modal", !0)("aria-labelledby", q.ariaLabelledBy), r.Tol("cerberusModal" + (q.windowClass ? " " + q.windowClass : "")))
            },
            inputs: {
                ariaLabelledBy: "ariaLabelledBy",
                backdrop: "backdrop",
                centered: "centered",
                keyboard: "keyboard",
                scrollable: "scrollable",
                size: "size",
                windowClass: "windowClass",
                defaultStylings: "defaultStylings"
            },
            outputs: {dismissEvent: "dismiss"},
            ngContentSelectors: Q,
            decls: 4,
            vars: 4,
            consts: [["role", "document"], ["dialog", ""]],
            template: function (K, q) {
                1 & K && (r.F$t(), r.TgZ(0, "div", 0, 1), r.TgZ(2, "div"), r.Hsn(3), r.qZA(), r.qZA()), 2 & K && (r.Tol("cerberusModal__dialog" + (q.size ? " cerberus-modal-" + q.size : "") + (q.defaultStylings ? " cerberusModal__dialog--defaultStylings" : "") + (q.centered ? " cerberusModal__dialog--centered" : "") + (q.scrollable ? " cerberusModal__dialog--scrollable" : "") + (q.modalEnviornment ? " cerberusModal__dialog--" + q.modalEnviornment : "")), r.xp6(2), r.Tol("cerberusModal__content" + (q.defaultStylings ? " cerberusModal__content--defaultStylings" : "")))
            },
            styles: ['.cerberusModal__open{overflow:hidden;height:100vh;width:100vw;user-select:none;pointer-events:none}.cerberusModal__open .cerberusModal{overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch;user-select:auto;pointer-events:auto}.cerberusModal{position:fixed;top:0;left:0;z-index:22;width:100%;height:100%;overflow:hidden;outline:0;display:flex;justify-content:center;align-items:flex-start}.cerberusModal__dialog{position:relative;width:auto;pointer-events:none;justify-content:center;display:flex}.cerberusModal__dialog--scrollable{display:flex;max-height:calc(100% - 16px)}.cerberusModal__dialog--scrollable .cerberusModal__content{max-height:calc(100vh - 16px);overflow:hidden}.cerberusModal__dialog--scrollable .cerberusModal__header .cerberusModal__footer{flex-shrink:0}.cerberusModal__dialog--scrollable .cerberusModal__body{overflow-y:auto}.cerberusModal__dialog--defaultStylings{margin:8px}.cerberusModal__dialog--centered{display:flex;align-items:center;min-height:calc(100% - 16px);align-self:center}.cerberusModal__dialog--centered:before{display:block;height:calc(100vh - 16px);height:min-content;content:""}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable{flex-direction:column;justify-content:center;height:100%}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable .cerberusModal__content{max-height:none}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable:before{content:none}.cerberusModal__content{position:relative;flex-direction:column;display:flex;width:100%;pointer-events:auto;background-clip:padding-box;outline:0}.cerberusModal__content--defaultStylings{border:2px solid white;border:1px solid rgba(0,0,0,.2);background-color:#fff}.cerberusModal__backdrop{position:fixed;top:0;left:0;z-index:22;width:100vw;height:100vh;background-color:#000;opacity:.5}.cerberusModal__header{display:flex;align-items:flex-start;justify-content:space-between;padding:16px;border-bottom:1px solid #dee2e6}.cerberusModal__header .close{padding:16px;margin:-16px -16px -16px auto}.cerberusModal__title{margin-bottom:0;line-height:1.5}.cerberusModal__body{position:relative;flex:1 1 auto;padding:16px}.cerberusModal__footer{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-end;padding:12px;border-top:1px solid #dee2e6}.cerberusModal__footer>*{margin:4px}.cerberusModal__scrollbarMeasure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}\n', "cerberus-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}.cerberusModal__dialog--defaultStylings.cerberusModal__dialog--website{top:96px}.cerberusModal__dialog--defaultStylings.cerberusModal__dialog--desktop{top:calc(var(--vh) * 9)}\n"],
            encapsulation: 2
        }), z
    })();
    const G = () => {
    };
    let ae = (() => {
        class z {
            constructor(K) {
                this._document = K
            }

            compensate() {
                const K = this._getWidth();
                return this._isPresent(K) ? this._adjustBody(K) : G
            }

            _adjustBody(K) {
                const q = this._document.body, ge = q.style.paddingRight,
                    ce = parseFloat(window.getComputedStyle(q)["padding-right"]);
                return q.style["padding-right"] = `${ce + K}px`, () => q.style["padding-right"] = ge
            }

            _isPresent(K) {
                const q = this._document.body.getBoundingClientRect();
                return window.innerWidth - (q.left + q.right) >= K - .1 * K
            }

            _getWidth() {
                const K = this._document.createElement("div");
                K.className = "cerberusModal__scrollbarMeasure";
                const q = this._document.body;
                q.appendChild(K);
                const ge = K.getBoundingClientRect().width - K.clientWidth;
                return q.removeChild(K), ge
            }
        }

        return z.\u0275fac = function (K) {
            return new (K || z)(r.LFG(p.K0))
        }, z.\u0275prov = r.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })(), ve = (() => {
        class z {
            constructor(K, q, ge, ce, Se, $e) {
                this.applicationRef = K, this.injector = q, this.document = ge, this.scrollBar = ce, this.rendererFactory = Se, this.ngZone = $e, this.activeWindowComponentHasChanged = new f.xQ, this.ariaHiddenValues = new Map, this.backdropAttributes = ["backdropClass"], this.modalRefs = [], this.windowAttributes = ["ariaLabelledBy", "backdrop", "centered", "keyboard", "scrollable", "size", "windowClass", "defaultStylings"], this.windowComponents = [], this.activeWindowComponentHasChanged.subscribe(() => {
                    if (this.windowComponents.length) {
                        const Be = this.windowComponents[this.windowComponents.length - 1];
                        ((z, he, K, q = !1) => {
                            this.ngZone.runOutsideAngular(() => {
                                const ge = (0, e.R)(he, "focusin").pipe((0, _.R)(K), (0, g.U)(ce => ce.target));
                                (0, e.R)(he, "keydown").pipe((0, _.R)(K), (0, h.h)(ce => ce.which === t.Tab), (0, i.M)(ge)).subscribe(([ce, Se]) => {
                                    const [$e, Be] = C(he);
                                    (Se === $e || Se === he) && ce.shiftKey && (Be.focus(), ce.preventDefault()), Se === Be && !ce.shiftKey && ($e.focus(), ce.preventDefault())
                                }), q && (0, e.R)(he, "click").pipe((0, _.R)(K), (0, i.M)(ge), (0, g.U)(ce => ce[1])).subscribe(ce => ce.focus())
                            })
                        })(0, Be.location.nativeElement, this.activeWindowComponentHasChanged), this.revertAriaHidden(), this.setAriaHidden(Be.location.nativeElement)
                    }
                })
            }

            open(K, q, ge, ce) {
                const Se = ce.container instanceof HTMLElement ? ce.container : I(ce.container) ? this.document.querySelector(ce.container) : this.document.body,
                    $e = this.rendererFactory.createRenderer(null, null), Be = this.scrollBar.compensate(), We = () => {
                        this.modalRefs.length || ($e.removeClass(this.document.querySelector("html"), "cerberusModal__open"), this.revertAriaHidden())
                    };
                if (!Se) throw new Error(`The specified modal container "${ce.container || "body"}" was not found in the DOM.`);
                const gt = new $.mX, it = this.getContentRef(K, ce.injector || q, ge, gt, ce);
                let Pe = !1 !== ce.backdrop ? this.attachBackdrop(K, Se) : null,
                    tt = this.attachWindowComponent(K, Se, it), T = new $.x0(tt, it, Pe, ce.beforeDismiss);
                return this.registerModalRef(T), this.registerWindowComponent(tt), T.result.then(Be, Be), T.result.then(We, We), gt.close = Y => {
                    T.close(Y)
                }, gt.dismiss = Y => {
                    T.dismiss(Y)
                }, this.applyWindowOptions(tt.instance, ce), 1 === this.modalRefs.length && $e.addClass(this.document.querySelector("html"), "cerberusModal__open"), Pe && Pe.instance && this.applyBackdropOptions(Pe.instance, ce), T
            }

            dismissAll(K) {
                this.modalRefs.forEach(q => q.dismiss(K))
            }

            hasOpenModals() {
                return this.modalRefs.length > 0
            }

            attachBackdrop(K, q) {
                let ce = K.resolveComponentFactory(pe).create(this.injector);
                return this.applicationRef.attachView(ce.hostView), q.appendChild(ce.location.nativeElement), ce
            }

            attachWindowComponent(K, q, ge) {
                let Se = K.resolveComponentFactory(be).create(this.injector, ge.nodes);
                return this.applicationRef.attachView(Se.hostView), q.appendChild(Se.location.nativeElement), Se
            }

            applyWindowOptions(K, q) {
                this.windowAttributes.forEach(ge => {
                    I(q[ge]) && (K[ge] = q[ge])
                })
            }

            applyBackdropOptions(K, q) {
                this.backdropAttributes.forEach(ge => {
                    I(q[ge]) && (K[ge] = q[ge])
                })
            }

            getContentRef(K, q, ge, ce, Se) {
                return ge ? ge instanceof r.Rgc ? this.createFromTemplateRef(ge, ce) : function (z) {
                    return "string" == typeof z
                }(ge) ? this.createFromString(ge) : this.createFromComponent(K, q, ge, ce, Se) : new $.m3([])
            }

            createFromTemplateRef(K, q) {
                const ce = K.createEmbeddedView({
                    $implicit: q, close(Se) {
                        q.close(Se)
                    }, dismiss(Se) {
                        q.dismiss(Se)
                    }
                });
                return this.applicationRef.attachView(ce), new $.m3([ce.rootNodes], ce)
            }

            createFromString(K) {
                const q = this.document.createTextNode(`${K}`);
                return new $.m3([[q]])
            }

            createFromComponent(K, q, ge, ce, Se) {
                const $e = K.resolveComponentFactory(ge),
                    Be = r.zs3.create({providers: [{provide: $.mX, useValue: ce}], parent: q}), We = $e.create(Be),
                    gt = We.location.nativeElement;
                return Se.scrollable && gt.classList.add("component-host-scrollable"), this.applicationRef.attachView(We.hostView), new $.m3([[gt]], We.hostView, We)
            }

            setAriaHidden(K) {
                const q = K.parentElement;
                q && K !== this.document.body && (Array.from(q.children).forEach(ge => {
                    ge !== K && "SCRIPT" !== ge.nodeName && (this.ariaHiddenValues.set(ge, ge.getAttribute("aria-hidden")), ge.setAttribute("aria-hidden", "true"))
                }), this.setAriaHidden(q))
            }

            revertAriaHidden() {
                this.ariaHiddenValues.forEach((K, q) => {
                    K ? q.setAttribute("aria-hidden", K) : q.removeAttribute("aria-hidden")
                }), this.ariaHiddenValues.clear()
            }

            registerModalRef(K) {
                const q = () => {
                    const ge = this.modalRefs.indexOf(K);
                    ge > -1 && this.modalRefs.splice(ge, 1)
                };
                this.modalRefs.push(K), K.result.then(q, q)
            }

            registerWindowComponent(K) {
                this.windowComponents.push(K), this.activeWindowComponentHasChanged.next(), K.onDestroy(() => {
                    const q = this.windowComponents.indexOf(K);
                    q > -1 && (this.windowComponents.splice(q, 1), this.activeWindowComponentHasChanged.next())
                })
            }
        }

        return z.\u0275fac = function (K) {
            return new (K || z)(r.LFG(r.z2F), r.LFG(r.zs3), r.LFG(p.K0), r.LFG(ae), r.LFG(r.FYo), r.LFG(r.R0b))
        }, z.\u0275prov = r.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })(), Te = (() => {
        class z {
            constructor() {
                this.backdrop = !0, this.keyboard = !0
            }
        }

        return z.\u0275fac = function (K) {
            return new (K || z)
        }, z.\u0275prov = r.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })(), Re = (() => {
        class z {
            constructor(K, q, ge, ce) {
                this.moduleCFR = K, this.injector = q, this.modalStack = ge, this.config = ce
            }

            open(K, q = {}) {
                const ge = Object.assign({}, this.config, q);
                return this.modalStack.open(this.moduleCFR, this.injector, K, ge)
            }

            dismissAll(K) {
                this.modalStack.dismissAll(K)
            }

            hasOpenModals() {
                return this.modalStack.hasOpenModals()
            }
        }

        return z.\u0275fac = function (K) {
            return new (K || z)(r.LFG(r._Vd), r.LFG(r.zs3), r.LFG(ve), r.LFG(Te))
        }, z.\u0275prov = r.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })()
}, 51395
:
(te, U, o) => {
    "use strict";
    o.d(U, {W: () => pe, F: () => w});
    var p = o(73307), r = o(55778), f = o(591), e = o(21086), _ = o(36053), g = o(72986), h = o(24850), i = o(2994),
        t = o(87545), n = o(92198), C = o(61709), k = o(27221), $ = o(5e3);
    let w = (() => {
        class re {
            constructor(Z, V, ie, Q, be, G) {
                this.authService = Z, this.gameApi = V, this.guApi = ie, this.ethService = Q, this.cardsService = be, this.filterService = G, this._unopenedPacks$ = new f.X([]), this._currentRaffleTicketTotal$ = new f.X(0), this.dataStore = {
                    unopenedPacks: [],
                    currentRaffleTicketTotal: 0
                }
            }

            get unopenedPacks$() {
                return this._unopenedPacks$.asObservable()
            }

            get currentRaffleTicketTotal$() {
                return this._currentRaffleTicketTotal$.asObservable()
            }

            fetchUnopenedPacks() {
                this.fetchUnopenedPacksById().pipe((0, g.q)(1)).subscribe()
            }

            fetchUnopenedPacksById() {
                const Z = this.authService.getUserId();
                return Z ? this.gameApi.get(`/user/${Z}/allpacks`).pipe((0, g.q)(1), (0, h.U)(V => this.formatPacks(V, !0)), (0, h.U)(V => this.fixGodAlignments(V)), (0, i.b)(V => {
                    this.dataStore.unopenedPacks = V, this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                })) : (0, e.of)([])
            }

            fetchUnopenedPacksByAddress() {
                return this.ethService.getAccount().pipe((0, t.w)(Z => this.guApi.get(`/user/${Z}/allpacks`)), (0, g.q)(1), (0, h.U)(Z => this.formatPacks(Z, !1)), (0, i.b)(Z => {
                    this.dataStore.unopenedPacks = Z, this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                }))
            }

            fetchCurrentTotalRaffleTickets({userId: Z, wallet: V}) {
                return Z || V ? this.gameApi.get(`/user/${Z || V}/tickets`).pipe((0, g.q)(1)).subscribe(ie => {
                    this.dataStore.currentRaffleTicketTotal = ie, this._currentRaffleTicketTotal$.next(ie)
                }) : console.error("no wallet or userId supplied")
            }

            formatPacks(Z, V = !1) {
                return Z.map(ie => Object.assign(Object.assign({}, ie), {
                    rarity: this.updateRarity(ie),
                    raffleTickets: this.updatePackRaffleTickets(ie),
                    requiresAuthentication: V
                }))
            }

            updateScarcityAndRarity$(Z) {
                return (0, _.aj)([this.cardsService.protoCards$, this.cardsService.qualityCounts$]).pipe((0, n.h)(([V, ie]) => V && V.size > 0 && ie && ie.size > 0), (0, g.q)(1), (0, h.U)(([V, ie]) => Z.map(Q => Object.assign(Object.assign({}, Q), {cards: this.updateScarcityAndRarity(Q.cards, V, ie)}))))
            }

            fixGodAlignments(Z) {
                return Z.map(V => Object.assign(Object.assign({}, V), {god: "all" === V.god || "core" === V.god ? "neutral" : V.god}))
            }

            updatePackRaffleTickets(Z) {
                if (Z && Z.extra) {
                    const V = Z.extra.find(ie => "tickets" === ie.name);
                    return V ? V.value : void 0
                }
            }

            updateRarity(Z) {
                return "shiny" === Z.rarity ? "shiny-legendary" : Z.rarity
            }

            updateScarcityAndRarity(Z, V, ie) {
                const Q = ["epic", "legendary", "mythic"];
                return Z.map(be => {
                    const G = V.get(be.proto);
                    return !G || (be.rarity = G.rarity, "core" === G.set) || ("mythic" === be.rarity ? be.scarcity = 1 : (Q.includes(be.rarity) || be.quality < 5) && (be.scarcity = this.filterService.calcScarcity(be.proto, be.quality, ie))), be
                })
            }

            openPackAuthenticated$(Z, V = !0) {
                const ie = this.authService.getUserId();
                return this.authService.fetchSession().pipe((0, g.q)(1), (0, C.VS)(Q => this.gameApi.put(`/user/${ie}/allpacks?session=${Q}`, Z)), (0, i.b)(Q => {
                    this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(G => G.pack_id !== Z.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks]);
                    const be = this.packToInventoryCardsMap(Z);
                    this.cardsService.addCardsToInventory(be)
                }), (0, k.K)(Q => 401 === Q.status && V ? this.authService.refreshToken().pipe((0, C.VS)(be => this.openPackAuthenticated$(Z, !1))) : (0, e.of)(Q)))
            }

            dummyOpenPack(Z) {
                return this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(V => V.pack_id !== Z.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks]), (0, e.of)(!0)
            }

            openPackUnauthenticated$(Z) {
                return this.ethService.getAccount().pipe((0, g.q)(1), (0, t.w)(V => this.gameApi.put(`/user/${V}/allpacks`, Z)), (0, i.b)(V => {
                    this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(ie => ie.pack_id !== Z.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                }))
            }

            openPack$(Z) {
                return Z.requiresAuthentication ? this.openPackAuthenticated$(Z) : this.openPackUnauthenticated$(Z)
            }

            packToInventoryCardsMap(Z) {
                const V = {};
                return Z.cards.forEach(ie => {
                    const Q = {q: ie.quality, id: ie.id};
                    V[ie.proto] ? V[ie.proto].push(Q) : V[ie.proto] = [Q]
                }), V
            }

            generateRandomDummyPacks(Z) {
                return Array.from({length: Z}, (V, ie) => ({
                    cards: this.generateRandomDummyCards(5),
                    god: this.chooseRandomGod(),
                    set: "core",
                    rarity: "rare",
                    pack_id: 234423 + ie,
                    pack_source: "reward",
                    raffleTickets: Math.abs(Math.floor(5e4 * Math.random()))
                }))
            }

            generateRandomDummyCards(Z) {
                return Array.from({length: Z}, (V, ie) => ({
                    proto: this.generateCardProto(),
                    id: ie + 1,
                    rarity: this.chooseRandomCardRarity(),
                    quality: Math.ceil(5 * Math.random()),
                    scarcity: Math.ceil(2e3 * Math.random())
                }))
            }

            chooseRandomPackRarity() {
                const Z = ["rare", "legendary"];
                return Z[Math.ceil(Math.random() * Z.length - 1)]
            }

            chooseRandomCardRarity() {
                const Z = ["common", "rare", "epic", "legendary"];
                return Z[Math.ceil(Math.random() * Z.length - 1)]
            }

            chooseRandomGod() {
                const Z = ["nature", "death", "nature", "war", "neutral", "deception", "light", "magic"];
                return Z[Math.ceil(Math.random() * Z.length - 1)]
            }

            generateCardProto() {
                const Z = Math.ceil(384 * Math.random());
                return [382, 383, 384, 378, 379].includes(Z) ? this.generateCardProto() : Z
            }
        }

        return re.\u0275fac = function (Z) {
            return new (Z || re)($.LFG(p.mI), $.LFG(r.Ft), $.LFG(r.Ho), $.LFG(p.ux), $.LFG(r.dK), $.LFG(r.iZ))
        }, re.\u0275prov = $.Yz7({token: re, factory: re.\u0275fac, providedIn: "root"}), re
    })();
    var D = o(40886), m = (() => {
        return (re = m || (m = {}))[re.RARE_GENESIS = 0] = "RARE_GENESIS", re[re.RARE_TRIAL = 1] = "RARE_TRIAL", re[re.LEGENDARY_GENESIS = 2] = "LEGENDARY_GENESIS", re[re.LEGENDARY_TRIAL = 3] = "LEGENDARY_TRIAL", m;
        var re
    })(), A = o(52909), S = o(18499), y = o(13989), I = o(45425), s = o(5254), b = o(61737), E = o(77518);
    const R = o(45861), X = o(92916);
    let pe = (() => {
        class re {
            constructor(Z, V) {
                if (this.environment = Z, this.ethService = V, this._chests$ = new f.X([]), console.log("ChestService->constructor()"), "desktop" !== this.environment.clientType) {
                    try {
                        this.setupGenesis()
                    } catch (ie) {
                        console.log("ChestService->constructor() error setting up genesis chests", ie)
                    }
                    try {
                        this.setupTrial()
                    } catch (ie) {
                        console.log("ChestService->constructor() error setting up trial chests", ie)
                    }
                    this.dataStore = {chests: this.chestData()}, this._chests$.next([...this.dataStore.chests])
                }
            }

            get chests$() {
                return this._chests$.asObservable()
            }

            setupGenesis() {
                this.RareGenesis = this.ethService.artifactsToContract(R, "0xEE85966b4974d3C6F71A2779cC3B6F53aFbc2B68"), this.LegendaryGenesis = this.ethService.artifactsToContract(R, "0x20D4Cec36528e1C4563c1BFbE3De06aBa70b22B4"), this.Vault = this.ethService.artifactsToContract(X, X.networks[1]), this.VaultInfura = this.ethService.infuraContract(X, X.networks[1]), this.LegendaryGenesisInfura = this.ethService.infuraContract(R, "0x20D4Cec36528e1C4563c1BFbE3De06aBa70b22B4")
            }

            setupTrial() {
                const Z = this.environment.production ? E.np.Production : E.np.Staging,
                    V = this.environment.production ? "https://eth-mainnet.alchemyapi.io/v2/ICJe8nw_i-gl_3E6V6I942RRJ3PMs5vB" : "https://eth-ropsten.alchemyapi.io/v2/ICJe8nw_i-gl_3E6V6I942RRJ3PMs5vB",
                    ie = this.environment.production ? D.t : D.Y, Q = (0, S.getGodsUnchainedAddresses)(ie, Z),
                    G = ((0, S.getGodsUnchainedAddresses)(ie, Z), (0, S.getGodsUnchainedAddresses)(ie, Z).seasonOne.capAddress);
                if (window.ethereum) {
                    const ve = new y.Qg(window.ethereum).getSigner();
                    console.log("ChestService->setup() signer", ve), this.RareTrial = S.Chest.at(ve, Q.seasonOne.rareChestAddress), console.log("ChestService->setup() RareTrial", this.RareTrial), this.LegendaryTrial = S.Chest.at(ve, Q.seasonOne.legendaryChestAddress), console.log("ChestService->setup() LegendaryTrial", this.LegendaryTrial), this.S1Cap = S.S1Cap.at(ve, G), console.log("ChestService->setup() S1Cap", this.S1Cap)
                }
                const ae = new y.r6(V, ie);
                this.RareTrialAlchemy = S.Chest.at(ae, Q.seasonOne.rareChestAddress), this.LegendaryTrialAlchemy = S.Chest.at(ae, Q.seasonOne.legendaryChestAddress), this.S1CapAlchemy = S.S1Cap.at(ae, G)
            }

            s1CapCap() {
                return (0, s.D)(this.S1Cap.cap()).pipe((0, k.K)(Z => (0, s.D)(this.S1CapAlchemy.cap())))
            }

            s1CapCurrent() {
                return (0, s.D)(this.S1Cap.current()).pipe((0, k.K)(Z => (0, s.D)(this.S1CapAlchemy.current())))
            }

            s1CapProgressPercentage() {
                return (0, _.aj)([this.s1CapCurrent(), this.s1CapCap()]).pipe((0, g.q)(1), (0, h.U)(([Z, V]) => {
                    try {
                        const ie = Z.toNumber(), Q = V.toNumber();
                        return (Q - ie) / Q * 100
                    } catch (ie) {
                        return 100
                    }
                }))
            }

            soldTrial(Z) {
                return (0, s.D)(this.getContractTrial(Z).sold()).pipe((0, k.K)(V => (0, s.D)(this.getContractTrialAlchemy(Z).sold())))
            }

            capTrial(Z) {
                return (0, s.D)(this.getContractTrial(Z).productCap()).pipe((0, k.K)(V => (0, s.D)(this.getContractTrialAlchemy(Z).productCap())))
            }

            balanceOfTrial(Z, V) {
                const ie = this.getContractTrial(Z);
                return (0, _.aj)([ie.balanceOf(V), (0, s.D)(ie.decimals())]).pipe((0, h.U)(([Q, be]) => {
                    const G = new I.ethers.utils.BigNumber(10).pow(be);
                    return Q.div(G)
                }))
            }

            getContractTrial(Z) {
                switch (Z) {
                    case m.RARE_TRIAL:
                        return this.RareTrial;
                    case m.LEGENDARY_TRIAL:
                        return this.LegendaryTrial
                }
            }

            getContractTrialAlchemy(Z) {
                switch (Z) {
                    case m.RARE_TRIAL:
                        return this.RareTrialAlchemy;
                    case m.LEGENDARY_TRIAL:
                        return this.LegendaryTrialAlchemy
                }
            }

            fetchChests() {
                this.ethService.getAccount().pipe((0, g.q)(1), (0, C.VS)(Z => (0, _.aj)([this.balanceOf(m.RARE_GENESIS, Z), this.balanceOf(m.LEGENDARY_GENESIS, Z), this.balanceOfTrial(m.RARE_TRIAL, Z), this.balanceOfTrial(m.LEGENDARY_TRIAL, Z)]))).subscribe(([Z, V, ie, Q]) => {
                    console.log("fetched Num Bundles rare leg", Z, V), this.dataStore.chests = this.chestData(Z.toNumber(), V.toNumber(), Math.floor(ie.toNumber()), Math.floor(Q.toNumber())), this._chests$.next([...this.dataStore.chests])
                })
            }

            percentageSold(Z) {
                return (0, _.aj)([this.soldTrial(Z), this.capTrial(Z)]).pipe((0, h.U)(([V, ie]) => this.progressPercentage(V, ie)))
            }

            progressPercentage(Z, V) {
                try {
                    const ie = Z.toNumber(), Q = V.toNumber();
                    return (Q - ie) / Q * 100
                } catch (ie) {
                    return 100
                }
            }

            balanceOf(Z, V) {
                return this.getContract(Z).pipe((0, C.VS)(ie => ie.balanceOf(V)), (0, h.U)(ie => ie), (0, i.b)(ie => {
                    console.log("ChestService->balanceOf() BALANCE", Z, ie)
                }), (0, k.K)(ie => (console.log("error getting balanceOf ", Z, ie), (0, e.of)(A.O$.from(0)))))
            }

            open(Z, V) {
                return this.getContract(Z).pipe((0, C.VS)(ie => ie.open(V)), (0, i.b)(ie => {
                    this.dataStore.chests.find(be => be.type === Z).amount -= V, this._chests$.next([...this.dataStore.chests])
                }))
            }

            cap(Z) {
                return this.getContract(Z).pipe((0, C.VS)(V => V.productCap()), (0, h.U)(V => V))
            }

            sold(Z) {
                return this.getContract(Z).pipe((0, C.VS)(V => V.sold()), (0, h.U)(V => V), (0, k.K)(V => this.soldInfura(Z)))
            }

            soldInfura(Z) {
                return this.getContractInfura(Z).pipe((0, C.VS)(V => V.sold()), (0, h.U)(V => V))
            }

            vaultBalance() {
                return (0, s.D)(this.Vault.deployed()).pipe((0, C.VS)(Z => Z.total()), (0, h.U)(Z => Z), (0, k.K)(Z => this.vaultBalanceInfura()))
            }

            vaultBalanceInfura() {
                return (0, s.D)(this.VaultInfura.deployed()).pipe((0, C.VS)(Z => Z.total()), (0, h.U)(Z => Z))
            }

            vaultCap() {
                return (0, e.of)(A.O$.from("33333000000000000000000"))
            }

            getContract(Z) {
                switch (Z) {
                    case m.RARE_GENESIS:
                        return (0, s.D)(this.RareGenesis.deployed());
                    case m.LEGENDARY_GENESIS:
                        return (0, s.D)(this.LegendaryGenesis.deployed());
                    case m.RARE_TRIAL:
                        return (0, e.of)(this.RareTrial);
                    case m.LEGENDARY_TRIAL:
                        return (0, e.of)(this.LegendaryTrial)
                }
                return (0, b._)("invalid bundle pack type")
            }

            getContractInfura(Z) {
                return Z === m.LEGENDARY_GENESIS ? (0, s.D)(this.LegendaryGenesisInfura.deployed()) : (0, b._)("invalid bundle pack type")
            }

            chestData(Z = 0, V = 0, ie = 0, Q = 0) {
                return [{type: m.RARE_GENESIS, set: "genesis", rarity: "rare", amount: Z}, {
                    type: m.LEGENDARY_GENESIS,
                    set: "genesis",
                    rarity: "legendary",
                    amount: V
                }, {type: m.RARE_TRIAL, set: "trial", rarity: "rare", amount: ie}, {
                    type: m.LEGENDARY_TRIAL,
                    set: "trial",
                    rarity: "legendary",
                    amount: Q
                }]
            }
        }

        return re.\u0275fac = function (Z) {
            return new (Z || re)($.LFG(p.Ho), $.LFG(p.ux))
        }, re.\u0275prov = $.Yz7({token: re, factory: re.\u0275fac, providedIn: "root"}), re
    })()
}, 55778
:
(te, U, o) => {
    "use strict";
    o.d(U, {
        jt: () => re,
        yD: () => Q,
        QF: () => K,
        f1: () => gt,
        dK: () => it.d,
        tX: () => Pe,
        ai: () => Be.a,
        iZ: () => T,
        vU: () => Be.v,
        TJ: () => Me,
        pH: () => at,
        Ho: () => Ge,
        Of: () => be,
        Ft: () => J.F,
        n2: () => he,
        _q: () => Ne._,
        LE: () => We.L,
        fY: () => Ue.f,
        C_: () => st,
        xd: () => xe,
        $c: () => ye,
        cM: () => ee,
        $: () => Qe.$
    }), o(52408);
    var r = o(21086), f = o(52886), e = o(77518);
    const g = {
        request_id: "request_id",
        catalog_item: "forge-common",
        user_id: 1077441,
        address: "address",
        flux_amount: 10,
        token_amount: "200000000000000000",
        status: e.Og.FLUX_PAID,
        source_assets: [{
            id: 1688181,
            proto: 1e3,
            quality: f.nJ.SHADOW,
            owner: "1124932",
            rarity: "rare",
            set: "core",
            name: "Dryder Sailweaver"
        }, {
            id: 1688182,
            proto: 1e3,
            quality: f.nJ.SHADOW,
            owner: "1124932",
            rarity: "rare",
            set: "core",
            name: "Dryder Sailweaver"
        }],
        target_assets: [{
            id: 0,
            proto: 1e3,
            quality: f.nJ.METEORITE,
            owner: "0x06debe71584bcdc776bace99abc87b48db4f29d8",
            rarity: "rare",
            set: "core",
            name: "Dryder Sailweaver"
        }],
        created_at: "2021-10-10T00:00:00Z",
        modified_at: "2021-10-10T00:00:00Z",
        imx_tx_id: 0,
        token_contract: "token_contract",
        token_payment_address: "token_payment_address"
    };
    Object.assign(Object.assign({}, g), {imx_tx_id: 123, status: e.Og.TOKENS_PAID});
    Object.assign(Object.assign({}, g), {
        imx_tx_id: 125,
        status: e.Og.COMPLETED
    }), Object.assign(Object.assign({}, g), {
        imx_tx_id: 125,
        status: e.Og.COMPLETED
    }), Object.assign(Object.assign({}, g), {imx_tx_id: 0, status: e.Og.CARDS_DELETED});
    var A = o(85111), S = o(69808), y = o(5e3), I = o(73307), b = o(60870);
    let re = (() => {
        class N {
            constructor(d, v, L, se) {
                this.deviceDetectorService = d, this.environment = v, this.authService = L, this.storage = se, this.brand = "godsunchained", this.appVersion = "0.13.3", this.initAnalyticsProperties(), this.initDeviceProperties(), this.initSessionProperties(), this.initUserProperties()
            }

            initAnalyticsProperties() {
                this.appName = "website" === this.environment.clientType ? "com.immutable.guweb" : "com.immutable.gudesktop", this.appPlatform = this.environment.clientType, "desktop" === this.environment.clientType && (this.branch = this.storage.get(["game", "1", "branch"]) || "beta")
            }

            initDeviceProperties() {
                const v = this.getDeviceId();
                this.deviceProperties = {
                    device_id: v && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(v) ? v : o(66926)(),
                    os_name: this.deviceDetectorService.os,
                    os_version: this.deviceDetectorService.os_version,
                    app_platform: window.navigator.platform
                }, this.storage.set(["device_id"], v)
            }

            getDeviceId() {
                return this.storage.get(["device_id"])
            }

            initSessionProperties() {
                this.sessionProperties = {session_id: +new Date}
            }

            initUserProperties() {
                this.userId = this.authService.getUserId(), this.isUserSignedIn = !!this.userId, this.authService.account$.subscribe(d => {
                    this.isUserSignedIn = !!d, this.userId = this.isUserSignedIn ? `${this.authService.getUserId()}` : ""
                })
            }

            get producer() {
                return "website" === this.environment.clientType ? "web" : "client"
            }

            sendEvent(d) {
                try {
                    window.akuma(d)
                } catch (v) {
                    console.error(v)
                }
            }

            postScreenEvent(d, v, L, se, _e, ot) {
                const Ut = this.buildEvent("Screen", `${d}${v}${L}_${se}`, this.isUserSignedIn ? `${this.userId}` : `${ot}`, _e);
                this.sendEvent(Ut)
            }

            postControlEvent(d, v, L, se, _e, ot, Ye, vt) {
                const es = this.buildEvent("Control", `${d}${v}${L}_${se}${_e}_${ot}`, this.isUserSignedIn ? `${this.userId}` : `${vt}`, Ye);
                this.sendEvent(es)
            }

            postFlowEvent(d, v, L, se) {
                const Ye = this.buildEvent("Flow", `_${d}_${v}`, this.isUserSignedIn ? `${this.userId}` : `${se}`, L);
                this.sendEvent(Ye)
            }

            buildEvent(d, v, L, se) {
                return {
                    appBrand: this.brand,
                    appName: this.appName,
                    appPlatform: this.appPlatform,
                    appVersion: this.appVersion,
                    deviceProperties: this.deviceProperties,
                    eventProperties: se,
                    eventName: v,
                    eventType: d,
                    sessionProperties: this.sessionProperties,
                    userId: L,
                    userProperties: this.userProperties,
                    realm: this.branch
                }
            }

            postEvent(d, v, L, se) {
                const ot = this.buildEvent(d, v, this.isUserSignedIn ? `${this.userId}` : `${se}`, L);
                this.sendEvent(ot)
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(b.x0), y.LFG(I.Ho), y.LFG(I.mI), y.LFG(I.qy))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var Ce = o(40520), Z = o(59633);
    const V = "website";
    let Q = (() => {
        class N {
            constructor(d, v, L, se) {
                this.deviceDetectorService = d, this.httpClient = v, this.environment = L, this.storage = se, this.headers = new Ce.WM({"X-Chaff": this.environment.production ? "" : "test"});
                const _e = this.getDeviceId();
                this.brand = "gods_unchained", this.device_id = _e && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(_e) ? _e : o(66926)(), this.event_id = 0, this.native = this.environment.clientType !== V, this.platform = window.navigator.platform, this.producer = this.deviceDetectorService.isDesktop() ? "desktop" : "mobile", this.os_name = this.deviceDetectorService.os, this.os_version = this.deviceDetectorService.os_version, this.service = this.environment.clientType === V ? V : "launcher", this.session_id = this.generateSessionId(), this.storage.set(["device_id"], this.device_id)
            }

            generateSessionId() {
                return +new Date
            }

            getUserId() {
                return this.storage.get(["user_id"])
            }

            getUTM() {
                return {
                    ad_id: this.storage.get(["ad_id"]),
                    utm_campaign: this.storage.get(["utm_campaign"]),
                    utm_content: this.storage.get(["utm_content"]),
                    utm_hash: this.storage.get(["utm_hash"]),
                    utm_medium: this.storage.get(["utm_medium"]),
                    utm_source: this.storage.get(["utm_source"])
                }
            }

            getDeviceId() {
                return this.storage.get(["device_id"])
            }

            postEvent(d, v) {
                const se = new Z.Event({
                    brand: this.brand,
                    device_id: this.device_id,
                    event_id: this.event_id = this.event_id + 1,
                    event_properties: d,
                    native: this.native,
                    os_name: this.os_name,
                    os_version: this.os_version,
                    platform: this.platform,
                    producer: this.producer,
                    service: this.service,
                    session_id: this.session_id,
                    user_id: parseInt(this.getUserId(), 10),
                    user_properties: v
                }).toObject();
                return Object.assign(se.event_properties, this.getUTM()), this.httpClient.post(this.environment.analyticsHost, JSON.stringify(se), {headers: this.headers}).toPromise()
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(b.x0), y.LFG(Ce.eN), y.LFG(I.Ho), y.LFG(I.qy))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac, providedIn: "root"}), N
    })(), be = (() => {
        class N {
            constructor() {
            }

            setCurrentProvider(d) {
                try {
                    ga("set", "dimension1", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setAccount(d) {
                try {
                    ga("set", "dimension2", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setReferrer(d) {
                try {
                    ga("set", "dimension3", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setClientId(d) {
                try {
                    ga("set", "dimension4", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setSessionId(d) {
                try {
                    ga("set", "dimension5", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setUserId(d) {
                try {
                    ga("set", "dimension6", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setHitTimestamp(d) {
                try {
                    ga("set", "dimension7", d)
                } catch (v) {
                    console.log(v)
                }
            }

            setAbVersion(d) {
                try {
                    ga("set", "dimension8", d)
                } catch (v) {
                    console.log(v)
                }
            }

            triggerOutboundLinkEvent(d, v) {
                try {
                    let L = "";
                    L = L.split("?")[0], ga("send", "event", "Outbound Link", "click", L, d)
                } catch (L) {
                    console.log("could not track ga", L)
                }
            }

            triggerButtonClickEvent(d, v) {
                try {
                    let L = "";
                    L = L.split("?")[0], ga("send", "event", "Button", "click", L, d)
                } catch (L) {
                    console.log("could not track ga", L)
                }
            }

            triggerPageDeferLoadEvent(d, v) {
                try {
                    let L = "";
                    L = L.split("?")[0], ga("send", "event", "Page", "defer load", L, d)
                } catch (L) {
                    console.log("could not track ga", L)
                }
            }

            sendEvent(d, v, L, se, _e) {
                try {
                    console.log(`GA Event: send, event, ${d}, ${v}, ${L}, ${se}, ${_e}`), ga("send", "event", d, v, L, se, _e)
                } catch (ot) {
                    console.log("Error tracking GA", ot)
                }
            }

            buyPackBanneCountry() {
                this.sendEvent("buy", "pack", "banned_country")
            }

            buyPackType(d) {
                this.sendEvent("buy", "pack_type", d)
            }

            buyPackTypeNumber(d, v, L) {
                this.sendEvent("buy", `${d}_number`, v, L)
            }

            buyPurchase(d, v) {
                this.sendEvent("buy", "purchase", d, v)
            }

            buyConfirmation(d, v) {
                this.sendEvent("buy", "confirmation", d, v)
            }

            buyStatus(d) {
                this.sendEvent("buy", "status", d)
            }

            templeOpenPacks() {
                this.sendEvent("temple", "open_packs")
            }

            templePurchase(d, v) {
                this.sendEvent("temple", "purchase", d, v)
            }

            templeShareDiscord() {
                this.sendEvent("temple", "share", "discord")
            }

            inventoryInventoryType(d) {
                this.sendEvent("inventory", "inventory_type", d)
            }

            inventory(d, v, L) {
                this.sendEvent("inventory", d, v, L)
            }

            inventorySearchStart() {
                this.sendEvent("inventory", "search_start")
            }

            inventorySearchEnd(d, v) {
                this.sendEvent("inventory", "search_end", d, v)
            }

            inventoryPageUp(d, v) {
                this.sendEvent("inventory", "page_up", d, v)
            }

            inventoryPageDown(d, v) {
                this.sendEvent("inventory", "page_down", d, v)
            }

            inventoryPageSelect(d, v) {
                this.sendEvent("inventory", "page_select", d, v)
            }

            inventoryViewCard(d, v) {
                this.sendEvent("inventory", "view_card", d + "", v)
            }

            inventoryViewCollectable(d, v) {
                this.sendEvent("inventory", "view_collectable", d, v)
            }

            navigateHeader(d) {
                this.sendEvent("navigate", "header", d)
            }

            navigate(d, v) {
                this.sendEvent("navigate", d, v)
            }

            outbound(d, v) {
                this.sendEvent("outbound", d, v)
            }

            navigateExit(d) {
                this.sendEvent("navigate", "exit", d)
            }

            helpOpenHelp() {
                this.sendEvent("help", "open_help")
            }

            helpEndHelp() {
                this.sendEvent("help", "end_help")
            }

            helpSearchStart() {
                this.sendEvent("help", "search_start")
            }

            helpSearchEnd(d) {
                this.sendEvent("help", "search_end", d)
            }

            helpSelectFaq(d) {
                this.sendEvent("help", "select_faq", d)
            }

            cryptokittiesPurchaseRareRandom() {
                this.sendEvent("cryptokitties", "purchase", "rare_random")
            }

            cryptokittiesPurchaseRare(d) {
                this.sendEvent("cryptokitties", "purchase", "rare", d)
            }

            cryptokittiesInventoryType(d) {
                this.sendEvent("cryptokitties", "inventory_type", d)
            }

            cryptokittiesSearchStartStart() {
                this.sendEvent("cryptokitties", "search_start", "start")
            }

            cryptokittiesSearchEnd(d) {
                this.sendEvent("cryptokitties", "search_end", d)
            }

            cryptokittiesPageUp(d) {
                this.sendEvent("cryptokitties", "page_up", d)
            }

            cryptokittiesPageDown(d) {
                this.sendEvent("cryptokitties", "page_down", d)
            }

            cryptokittiesPageSelect(d) {
                this.sendEvent("cryptokitties", "page_select", d)
            }

            cryptokittiesSelect(d) {
                this.sendEvent("cryptokitties", "select", d)
            }

            cryptokittiesDeselect(d) {
                this.sendEvent("etherbots", "deselect", d)
            }

            etherbotsPurchaseRareRandom() {
                this.sendEvent("etherbots", "purchase", "rare_random")
            }

            etherbotsPurchaseRare(d) {
                this.sendEvent("etherbots", "purchase", "rare", d)
            }

            etherbotsInventoryType(d) {
                this.sendEvent("etherbots", "inventory_type", d)
            }

            etherbotsSearchStartStart() {
                this.sendEvent("etherbots", "search_start", "start")
            }

            etherbotsSearchEnd(d) {
                this.sendEvent("etherbots", "search_end", d)
            }

            etherbotsPageUp(d) {
                this.sendEvent("etherbots", "page_up", d)
            }

            etherbotsPageDown(d) {
                this.sendEvent("etherbots", "page_down", d)
            }

            etherbotsPageSelect(d) {
                this.sendEvent("etherbots", "page_select", d)
            }

            etherbotsSelect(d) {
                this.sendEvent("etherbots", "select", d)
            }

            etherbotsDeselect(d) {
                this.sendEvent("etherbots", "deselect", d)
            }

            inventoryViewStatue(d) {
                this.sendEvent("inventory", "view_statue", d)
            }

            walletConnect(d, v) {
                this.sendEvent("wallet", "connect", d, v)
            }

            videoPlay(d) {
                this.sendEvent("video", "play", d)
            }

            videoPause(d, v) {
                this.sendEvent("video", "pause", d, v)
            }

            videoComplete25(d) {
                this.sendEvent("video", "complete_25", d)
            }

            videoComplete50(d) {
                this.sendEvent("video", "complete_50", d)
            }

            videoComplete75(d) {
                this.sendEvent("video", "complete_75", d)
            }

            videoComplete100(d) {
                this.sendEvent("video", "complete_100", d)
            }

            videoWatchLater(d) {
                this.sendEvent("video", "watch_later", d)
            }

            videoShare(d, v) {
                this.sendEvent("video", `share_${d}`, v)
            }

            apolloRegisterBegin(d) {
                this.sendEvent("apollo_register", `${d}_onboard`)
            }

            apolloRegisterFieldStart(d) {
                this.sendEvent("apollo_register", `${d}_start`)
            }

            apolloRegisterFieldComplete(d, v) {
                this.sendEvent("apollo_register", `${d}_complete`, void 0, v)
            }

            apolloRegisterStagesTime(d, v) {
                this.sendEvent("apollo_register", `${d}_time`, void 0, v)
            }

            apolloRegisterComplete() {
                this.sendEvent("apollo_register", "register", "register_complete")
            }

            apolloLoginComplete() {
                this.sendEvent("apollo_register", "login", "login_complete")
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })(), G = (() => {
        class N {
            constructor(d) {
                this.window = d
            }

            canActivate(d, v) {
                return d.data.externalUrl ? this.window.location.href = d.data.externalUrl : console.warn("*** externalUrl param not provided inside data for redirection"), !1
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(Window))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var ae = o(61737), ve = o(27221);
    let Te = (() => {
        class N {
            constructor() {
            }

            autoRetryApiOnFail(d, v = 1) {
                return d.pipe((0, ve.K)(L => v > 0 && L.status >= 400 && L.status < 600 ? this.autoRetryApiOnFail(d, v - 1) : (0, ae._)(L)))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var Re = o(46461), z = o(591);
    let he = (() => {
        class N {
            constructor() {
                this._storage = window.localStorage
            }

            set(d, v) {
                return this._storage.setItem(d.join("."), v)
            }

            get(d) {
                return this._storage.getItem(d.join("."))
            }

            delete(d) {
                return this._storage.removeItem(d.join("."))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })(), K = (() => {
        class N {
            constructor(d) {
                this.storage = d, this.arenaCancel = this.loadHowl("desktop/Launcher_Arena_Cancel.ogg"), this.arenaClickStart = this.loadHowl("desktop/Launcher_Arena_Click_Start.ogg"), this.arenaCycleMode = this.loadHowl("desktop/Launcher_Arena_CycleMode.ogg"), this.arenaHoverStart = this.loadHowl("desktop/Launcher_Arena_Hover_Start.ogg"), this.returnToLauncher = this.loadHowl("desktop/Launcher_Return.ogg"), this.loginToLauncher = this.loadHowl("desktop/Launcher_Login.ogg"), this.clickItemV1 = this.loadHowl("desktop/Launcher_Click_Item_V1.ogg"), this.clickItemV2 = this.loadHowl("desktop/Launcher_Click_Item_V2.ogg"), this.clickMediumV1 = this.loadHowl("desktop/Launcher_Click_Medium_V1.ogg"), this.clickMediumV2 = this.loadHowl("desktop/Launcher_Click_Medium_V2.ogg"), this.clickTinyV1 = this.loadHowl("desktop/Launcher_Click_Tiny_V1.ogg"), this.clickTinyV2 = this.loadHowl("desktop/Launcher_Click_Tiny_V2.ogg"), this.hoverHex = this.loadHowl("desktop/Launcher_Hover_Hexagon.ogg"), this.hoverItem = this.loadHowl("desktop/Launcher_Hover_Item.ogg"), this.transitionWorkshop = this.loadHowl("desktop/Launcher_Transition_Workshop.ogg"), this.workshopCustomize = this.loadHowl("desktop/Launcher_Workshop_Customize.ogg"), this.workshopDelete = this.loadHowl("desktop/Launcher_Workshop_Delete.ogg"), this.forgeAmbience = this.loadHowl("desktop/Launcher_Forge_Ambience.ogg", {loop: !0}), this.forgeHeatingUp = this.loadHowl("desktop/Launcher_Forge_HeatingUp.ogg"), this.forgeSelectCard = this.loadHowl("desktop/Launcher_Forge_SelectCard.ogg"), this.ForgeFuseAnvil1 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_1.ogg"), this.ForgeFuseAnvil2 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_2.ogg"), this.ForgeFuseAnvil3 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_3.ogg"), this.ForgeFuseAnvil4 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_4.ogg"), this.ForgeFuseAnvil5 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_5.ogg"), this.ForgeFuseShimmer = this.loadHowl("desktop/Launcher_Forge_Fuse_Shimmer.ogg"), this.ForgeFuseContinue = this.loadHowl("desktop/Launcher_Forge_Fuse_Continue.ogg"), this._currentVolume$ = new z.X(null), this.setInitialVolume()
            }

            get currentVolume$() {
                return this._currentVolume$.asObservable()
            }

            setGlobalVolume(d) {
                Re.Howler.volume(d), this._currentVolume$.next(d), this.storage.set(["gu-audioVolume"], d)
            }

            setInitialVolume() {
                this.initialVolume = parseFloat(this.storage.get(["gu-audioVolume"])), isNaN(this.initialVolume) && (this.initialVolume = .9), this.setGlobalVolume(this.initialVolume)
            }

            loadHowl(d, v) {
                return v || (v = {}), v.src = `/assets/audio/${d}`, new Re.Howl(v)
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(he))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var q = o(8929), ge = o(87168), ce = o(24850), Se = o(7625), $e = o(87545), Be = o(1025), We = o(77535);
    let gt = (() => {
        class N {
            constructor(d, v, L) {
                this.http = d, this.destroyed$ = new q.xQ, this.apolloEndpoint$ = v.loadConfigurations().pipe((0, ge.M)(L.get(Be.v.newEnvironmentAuthLegacyApi)), (0, ce.U)(([se, _e]) => _e ? se.legacyAuthHost : se.authHost), (0, Se.R)(this.destroyed$))
            }

            get(d, v, L) {
                return this.apolloEndpoint$.pipe((0, $e.w)(se => this.http.get(se + d, {headers: L, params: v})))
            }

            put(d, v, L, se) {
                return this.apolloEndpoint$.pipe((0, $e.w)(_e => this.http.put(_e + d, v, {headers: se, params: L})))
            }

            post(d, v, L) {
                return this.apolloEndpoint$.pipe((0, $e.w)(se => this.http.post(se + d, v, {headers: L})))
            }

            delete(d) {
                return this.apolloEndpoint$.pipe((0, $e.w)(v => this.http.delete(v + d)))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(Ce.eN), y.LFG(We.L), y.LFG(Be.a))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var it = o(69439);
    let Pe = (() => {
        class N {
            constructor() {
            }

            copyText(d) {
                const v = document.createElement("input");
                document.body.appendChild(v), v.value = d, v.select(), document.execCommand("copy"), document.body.removeChild(v)
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac, providedIn: "root"}), N
    })();
    var tt = o(61709);

    class T {
        constructor(j) {
            this.cardsService = j, this.typeOrder = ["spell", "creature", "weapon"], this.godOrder = ["death", "deception", "light", "magic", "nature", "war", "neutral"], this.rarityOrder = ["legendary", "epic", "rare", "common", "mythic"]
        }

        static displayable(...j) {
            return j.map(d => {
                const v = "All" === d ? "" : d.toLowerCase();
                return {display: d, value: v}
            })
        }

        static enumerated(...j) {
            return j.map((d, v) => ({display: d, value: v - 1}))
        }

        static standardProtoFilters(j, d, v) {
            return {mana: -1, rarity: "", tribe: "", god: "", name: "", sort: d, ownership: j, type: "", set: v}
        }

        static standardCardFilters(j, d, v, L = "") {
            return {
                mana: -1,
                rarity: "",
                tribe: "",
                god: L,
                name: "",
                sort: d,
                ownership: j,
                type: "",
                set: v,
                quality: ""
            }
        }

        calcScarcity(j, d, v) {
            let L = 1;
            try {
                const se = v.get(j)[d];
                L = void 0 === se ? 1 : Number(se)
            } catch (se) {
            }
            return L
        }

        getSort(j, d) {
            switch (j) {
                case f.PE.AscID:
                    return (v, L) => v.proto - L.proto;
                case f.PE.DescID:
                    return (v, L) => L.proto - v.proto;
                case f.PE.AscQuality:
                    return (v, L) => v.quality - L.quality;
                case f.PE.DescQuality:
                    return (v, L) => L.quality - v.quality;
                case f.PE.AscMana:
                    return (v, L) => Number(v.protoCard.mana) - Number(L.protoCard.mana);
                case f.PE.DescMana:
                    return (v, L) => Number(L.protoCard.mana) - Number(v.protoCard.mana);
                case f.PE.AscHealth:
                    return (v, L) => Number(v.protoCard.health) - Number(L.protoCard.health);
                case f.PE.DescHealth:
                    return (v, L) => Number(L.protoCard.health) - Number(v.protoCard.health);
                case f.PE.AscAttack:
                    return (v, L) => Number(v.protoCard.attack) - Number(L.protoCard.attack);
                case f.PE.DescAttack:
                    return (v, L) => Number(L.protoCard.attack) - Number(v.protoCard.attack);
                case f.PE.AscTribe:
                    return (v, L) => v.protoCard.tribe < L.protoCard.tribe ? -1 : 1;
                case f.PE.DescTribe:
                    return (v, L) => v.protoCard.tribe > L.protoCard.tribe ? -1 : 1;
                case f.PE.AscRarity:
                    return (v, L) => this.getRarityId(v.rarity) < this.getRarityId(L.rarity) ? -1 : 1;
                case f.PE.DescRarity:
                    return (v, L) => this.getRarityId(v.rarity) > this.getRarityId(L.rarity) ? -1 : 1;
                case f.PE.AscScarcity:
                    return (v, L) => {
                        if (!d) throw new Error("qualityCounts required for scarcity search");
                        const ot = this.calcScarcity(v.proto, v.quality, d) - this.calcScarcity(L.proto, L.quality, d);
                        return 0 === ot ? L.quality - v.quality : ot
                    }
            }
            return (v, L) => 0
        }

        sortLegacy(j, d, v) {
            return j ? j.sort(this.getSort(d, v)) : []
        }

        sort(j, d, v) {
            return j ? j.sort(this.tiebreak(this.getSort(d, v))) : []
        }

        tiebreak(j) {
            return (d, v) => {
                const L = j(d, v);
                return 0 === L ? this.tiebreakProtoType(d.protoCard, v.protoCard) : L
            }
        }

        getSortProtos(j, d) {
            switch (j) {
                case f.PE.AscID:
                    return (v, L) => v.proto - L.proto;
                case f.PE.DescID:
                    return (v, L) => L.proto - v.proto;
                case f.PE.AscQuality:
                    return (v, L) => v.quality - L.quality;
                case f.PE.DescQuality:
                    return (v, L) => L.quality - v.quality;
                case f.PE.AscMana:
                    return (v, L) => Number(v.mana) - Number(L.mana);
                case f.PE.DescMana:
                    return (v, L) => Number(L.mana) - Number(v.mana);
                case f.PE.AscHealth:
                    return (v, L) => Number(v.health) - Number(L.health);
                case f.PE.DescHealth:
                    return (v, L) => Number(L.health) - Number(v.health);
                case f.PE.AscAttack:
                    return (v, L) => Number(v.attack) - Number(L.attack);
                case f.PE.DescAttack:
                    return (v, L) => Number(L.attack) - Number(v.attack);
                case f.PE.AscTribe:
                    return (v, L) => v.tribe < L.tribe ? -1 : 1;
                case f.PE.DescTribe:
                    return (v, L) => v.tribe > L.tribe ? -1 : 1;
                case f.PE.AscRarity:
                    return (v, L) => this.getRarityId(v.rarity) < this.getRarityId(L.rarity) ? -1 : 1;
                case f.PE.DescRarity:
                    return (v, L) => this.getRarityId(v.rarity) > this.getRarityId(L.rarity) ? -1 : 1;
                case f.PE.AscType:
                    return (v, L) => v.type < L.type ? -1 : 1;
                case f.PE.DescType:
                    return (v, L) => v.type > L.type ? -1 : 1;
                case f.PE.AscGod:
                    return (v, L) => v.god < L.god ? -1 : 1;
                case f.PE.DescGod:
                    return (v, L) => v.god > L.god ? -1 : 1;
                case f.PE.AscSet:
                    return (v, L) => v.set < L.set ? -1 : 1;
                case f.PE.DescSet:
                    return (v, L) => v.set > L.set ? -1 : 1
            }
            return (v, L) => 0
        }

        sortProtos(j, d, v) {
            return j ? j.sort(this.tiebreakProto(this.getSortProtos(d, v))) : []
        }

        tiebreakProto(j) {
            return (d, v) => {
                const L = j(d, v);
                return 0 === L ? this.tiebreakProtoType(d, v) : L
            }
        }

        tiebreakProtoType(j, d) {
            const v = this.typeOrder.indexOf(j.type) - this.typeOrder.indexOf(d.type);
            return 0 === v ? this.tiebreakProtoGod(j, d) : v
        }

        tiebreakProtoGod(j, d) {
            const v = this.godOrder.indexOf(j.god) - this.godOrder.indexOf(d.god);
            return 0 === v ? this.tiebreakProtoRarity(j, d) : v
        }

        tiebreakProtoRarity(j, d) {
            const v = this.rarityOrder.indexOf(j.rarity) - this.rarityOrder.indexOf(d.rarity);
            return 0 === v ? this.tiebreakProtoHealth(j, d) : v
        }

        tiebreakProtoHealth(j, d) {
            const v = Number(j.health) - Number(d.health);
            return 0 === v ? this.tiebreakProtoAttack(j, d) : v
        }

        tiebreakProtoAttack(j, d) {
            const v = Number(j.attack) - Number(d.attack);
            return 0 === v ? this.tiebreakProtoName(j, d) : v
        }

        tiebreakProtoName(j, d) {
            return j.name < d.name ? -1 : 1
        }

        filter(j, d) {
            return j ? j.filter(v => this.matches(d, v)) : []
        }

        matches(j, d) {
            if (null == j) return !0;
            if (null == d || "" !== j.rarity && j.rarity !== d.rarity || "" !== j.set && j.set !== d.set || "" !== j.god && j.god !== d.god || "" !== j.tribe && ("none" === j.tribe && d.tribe || "none" !== j.tribe && j.tribe !== d.tribe)) return !1;
            if (-1 != +j.mana) if (10 == +j.mana) {
                if (d.mana < 10) return !1
            } else if (+j.mana !== d.mana) return !1;
            if (j.name.length > 0) {
                const v = j.name.toLowerCase().trim();
                if (-1 === d.name.toLowerCase().indexOf(v)) return !1
            }
            return !0
        }

        isMythic(j) {
            return 378 === j || 379 === j || 383 === j
        }

        getRarityId(j) {
            switch (j) {
                case"common":
                default:
                    return 0;
                case"rare":
                    return 1;
                case"epic":
                    return 2;
                case"legendary":
                    return 3;
                case"mythic":
                    return 4
            }
        }

        cardsMatch(j, d, v) {
            return null == j || !(this.filterQualities(v.qualities, j.quality) || +j.ownership === f.nE.Owned && !v.owned || +j.ownership === f.nE.Unowned && v.owned || +j.ownership === f.nE.Processing && "escrow" !== v.status || !this.matches(j, d))
        }

        filterCards(j, d) {
            return null == j ? (0, r.of)(null) : this.cardsService.protoCards$.pipe((0, tt.VS)(v => {
                const L = j.filter(se => this.cardsMatch(d, v.get(se.proto), se));
                return (0, r.of)(L)
            }))
        }

        filterQualities(j, d) {
            const v = this.getQualityByName(d);
            return -1 !== v && 0 === j[v]
        }

        getQualityByName(j) {
            switch (j.toLowerCase()) {
                case"plain":
                    return f.nJ.PLAIN;
                case"meteorite":
                    return f.nJ.METEORITE;
                case"shadow":
                    return f.nJ.SHADOW;
                case"gold":
                    return f.nJ.GOLD;
                case"diamond":
                    return f.nJ.DIAMOND;
                default:
                    return -1
            }
        }
    }

    T.rarityOptions = T.displayable("All", "Common", "Rare", "Epic", "Legendary", "Mythic"), T.qualityOptions = T.displayable("All", "Plain", "Meteorite", "Shadow", "Gold", "Diamond"), T.godOptions = T.displayable("All", "Neutral", "Nature", "War", "Death", "Light", "Magic", "Deception"), T.manaOptions = T.enumerated("All", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10+"), T.tribeOptions = T.displayable("All", "None", "Viking", "Amazon", "Anubian", "Aether", "Nether", "Atlantean", "Olympian", "Dragon", "Guild", "Mystic", "Structure", "Wild"), T.ownershipOptions = T.enumerated("All", "Owned", "Not Owned", "Processing"), T.setOptions = T.displayable("All", "Genesis", "Core", "Etherbots", "Promo", "Mythic", "Trial", "Welcome", "Order"), T.defaultFilters = [{
        name: "Ownership",
        options: T.ownershipOptions
    }, {name: "Quality", options: T.qualityOptions}, {name: "Rarity", options: T.rarityOptions}, {
        name: "Tribe",
        options: T.tribeOptions
    }, {name: "Mana", options: T.manaOptions}, {name: "God", options: T.godOptions}, {
        name: "Set",
        options: T.setOptions
    }], T.\u0275fac = function (j) {
        return new (j || T)(y.LFG(it.d))
    }, T.\u0275prov = y.Yz7({token: T, factory: T.\u0275fac, providedIn: "root"});
    var Y = o(72986), J = o(43834);
    let Me = (() => {
        class N {
            constructor(d, v) {
                this.gameApi = d, this.authService = v, this.unsubscribe = new q.xQ, this.dataStore = {fluxInfo: null}, this._fluxInfo$ = new z.X(null)
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get fluxInfo$() {
                return this._fluxInfo$.asObservable()
            }

            fetchFluxInfo() {
                const d = this.authService.getUserId();
                d ? this.gameApi.get(`/user/${d}/flux`).pipe((0, Y.q)(1)).subscribe(v => {
                    this.emitFluxInfo(v)
                }, v => {
                    this.emitFluxInfo()
                }) : this.emitFluxInfo()
            }

            emitFluxInfo(d = {flux_available: 0, flux_spent: 0, locked: !1}) {
                this.dataStore.fluxInfo = d, this._fluxInfo$.next(Object.assign({}, this.dataStore.fluxInfo))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(J.F), y.LFG(I.mI))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })(), at = (() => {
        class N {
            constructor(d, v) {
                this.moduleConfigService = d, this.http = v, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
            }

            getFusingRequest(d) {
                return this.moduleConfig$.pipe((0, $e.w)(({fusingHost: v}) => this.http.get(`${v}/forge`, {params: {request_id: d}})))
            }

            getFusingLatestsRequests(d) {
                return this.moduleConfig$.pipe((0, $e.w)(({fusingHost: v}) => this.http.get(`${v}/forge/latest`, {params: {user_id: d}})))
            }

            fusingValidator(d) {
                return this.moduleConfig$.pipe((0, $e.w)(({fusingHost: v}) => this.http.post(`${v}/forge/validation`, d)))
            }

            fusingInitiator(d) {
                return this.moduleConfig$.pipe((0, $e.w)(({fusingHost: v}) => this.http.post(`${v}/forge`, d)))
            }

            fusingTokensPaid(d) {
                return this.moduleConfig$.pipe((0, $e.w)(({fusingHost: v}) => this.http.post(`${v}/forge/paid`, d)))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(We.L), y.LFG(Ce.eN))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })(), Ge = (() => {
        class N {
            constructor(d, v) {
                this.http = d, this.moduleConfigService = v, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
            }

            get(d, v) {
                return this.moduleConfig$.pipe((0, $e.w)(L => this.http.get(`${L.guHost}${d}`, v)))
            }

            put(d, v) {
                return this.moduleConfig$.pipe((0, $e.w)(L => this.http.put(`${L.guHost}${d}`, v)))
            }

            post(d, v) {
                return this.moduleConfig$.pipe((0, $e.w)(L => this.http.post(`${L.guHost}${d}`, v)))
            }

            delete(d) {
                return this.moduleConfig$.pipe((0, $e.w)(v => this.http.delete(`${v.guHost}${d}`)))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(Ce.eN), y.LFG(We.L))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var Qe = o(90868);
    let He = (() => {
        class N {
            constructor(d, v, L) {
                this.httpClient = d, this.moduleConfigService = v, this.tokenRefreshService = L
            }

            get(d, v, L) {
                return this.moduleConfigService.loadConfigurations().pipe((0, $e.w)(se => this.tokenRefreshService.autoRefreshToken(this.httpClient.get(`${se.guAuthHost}${d}`, {
                    headers: L,
                    params: v
                }))))
            }

            put(d, v, L, se) {
                return this.moduleConfigService.loadConfigurations().pipe((0, $e.w)(_e => this.tokenRefreshService.autoRefreshToken(this.httpClient.put(`${_e.guAuthHost}${d}`, v, {
                    headers: se,
                    params: L
                }))))
            }

            post(d, v, L) {
                return this.moduleConfigService.loadConfigurations().pipe((0, $e.w)(se => this.tokenRefreshService.autoRefreshToken(this.httpClient.post(`${se.guAuthHost}${d}`, v, {headers: L}))))
            }

            delete(d) {
                return this.moduleConfigService.loadConfigurations().pipe((0, $e.w)(v => this.tokenRefreshService.autoRefreshToken(this.httpClient.delete(`${v.guAuthHost}${d}`))))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(Ce.eN), y.LFG(We.L), y.LFG(Qe.$))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac, providedIn: "root"}), N
    })(), Ze = (() => {
        class N {
            constructor(d, v, L) {
                this.http = d, this.dds = v, this.authService = L, this._downloadUrl$ = new z.X(null)
            }

            get downloadUrl$() {
                return this._downloadUrl$.asObservable()
            }

            fetchLauncherURL() {
                return this.fetchLauncherURLAsync().pipe((0, Y.q)(1)).subscribe(d => {
                    this.downloadUrl = d, this._downloadUrl$.next(d)
                })
            }

            fetchLauncherURLAsync() {
                const d = this.dds.getDeviceInfo(), v = this.authService.getUserId();
                return "mac" !== d.os.toLowerCase() && "windows" !== d.os.toLowerCase() ? (0, ae._)("linux") : this.http.get(`https://util.apollo.gg/launcher?os=${d.os}&user_id=${v}`)
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(Ce.eN), y.LFG(b.x0), y.LFG(I.mI))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    var Ne = o(29840), Ue = o(78812);
    let st = (() => {
        class N {
            constructor(d) {
                this.authHost = d
            }

            getUserReferralsStatus(d) {
                return this.authHost.get(`/campaign/${d}/referral`)
            }

            getReferralCode(d) {
                return this.authHost.get(`/account/${d}/code/referral`)
            }

            createReferralCode(d) {
                return this.authHost.post(`/account/${d}/code/referral`, {}).pipe((0, $e.w)(v => this.getReferralCode(d)), (0, ve.K)(v => {
                    if ("already created" === v.error.error) return this.getReferralCode(d)
                }))
            }

            updatePayoutAddress(d, v) {
                return this.authHost.put(`/account/${d}/code/referral`, {referral_payout_address: v})
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(gt))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac, providedIn: "root"}), N
    })();
    var Ht = o(19444);
    let ye = (() => {
        class N {
            constructor(d, v, L) {
                this.environment = d, this.authService = v, this.moduleConfigService = L, this.RETRY_SECONDS = 4e3, this.PING_PONG_INTERVAL_DURATION = 6e3, this.MAX_UNANSWERED_PING_COUNT = 2, this.unsubscribe = new q.xQ, this.connections = {}, this._connectionEstablished$ = new q.xQ, this.moduleConfigService.loadConfigurations().subscribe(se => {
                    this.socketEndpoints = {
                        marketplaceCart: _e => `${se.marketplaceSocketBaseURL}/${_e}/socket`,
                        chatAndFriends: _e => `${se.chatAndFriendsSocketBaseUrl}/${_e}/chat`,
                        forge: _e => `${se.marketplaceSocketBaseURL}/${_e}/socket`
                    }
                })
            }

            get connectionEstablished$() {
                return this._connectionEstablished$.asObservable()
            }

            connect({socketName: d, url: v}) {
                return new Promise((L, se) => {
                    console.log("SOCKET CONNECTING: ", d), this.connections[d] = this.createConnection(v), this.connectListeners(d, L, se)
                })
            }

            getOpenedConnection(d) {
                if (this.connections[d] && this.connections[d].isAlive) return this.connections[d]
            }

            ngOnDestroy() {
                this.disconnectAllSockets(), this.unsubscribe.next(), this.unsubscribe.complete()
            }

            onConnect(d, v) {
                console.log("SOCKET CONNECTED:", v), this.connections[v].isAlive = !0, this.checkToStartPingPongInterval(), this.killReconnectTimer(v)
            }

            onClose(d, v) {
                console.log("SOCKET CLOSED:", v, d), this.connections[v].isAlive = !1, d.wasClean || this.reconnectSocket(v)
            }

            onError(d, v) {
                console.log("SOCKET ERRORED:", v, d), this.connections[v].isAlive = !1, console.log("tokenIsExpired: ", this.authService.tokenIsExpired()), this.authService.tokenIsExpired() ? this.authService.refreshToken().pipe((0, Y.q)(1)).subscribe(() => this.reconnectSocket(v)) : this.reconnectSocket(v)
            }

            onMessage(d, v) {
                const L = JSON.parse(d.data);
                console.log("socket onMessage!", v, L), "HEARTBEAT_PONG" === L.text ? this.onPongMessage(v, L) : this.connections[v].messages.next(L)
            }

            connectListeners(d, v, L) {
                const se = this.connections[d];
                se.eventHandlers.open = _e => {
                    this.onConnect(_e, d), v && v(se.messages)
                }, se.eventHandlers.error = _e => {
                    this.onError(_e, d), L && L(se.messages)
                }, se.eventHandlers.close = _e => {
                    this.onClose(_e, d)
                }, se.eventHandlers.message = _e => {
                    this.onMessage(_e, d)
                }, se.socket.addEventListener("open", se.eventHandlers.open), se.socket.addEventListener("close", se.eventHandlers.close), se.socket.addEventListener("error", se.eventHandlers.error), se.socket.addEventListener("message", se.eventHandlers.message)
            }

            disconnectListeners(d) {
                const v = this.connections[d];
                v.socket.removeEventListener("open", v.eventHandlers.open), v.socket.removeEventListener("close", v.eventHandlers.close), v.socket.removeEventListener("error", v.eventHandlers.error), v.socket.removeEventListener("message", v.eventHandlers.message)
            }

            checkToStartPingPongInterval() {
                this.pingPongInterval || (this.pingPongInterval = window.setInterval(() => {
                    console.log("PING PONG INTERVAL FIRING"), Object.keys(this.connections).forEach(d => this.checkPingList(d))
                }, this.PING_PONG_INTERVAL_DURATION))
            }

            killPingPongInterval() {
                clearInterval(this.pingPongInterval), this.pingPongInterval = null
            }

            killReconnectTimer(d) {
                clearTimeout(this.connections[d].reconnectTimer), this.connections[d].reconnectTimer = null
            }

            killAllReconnectTimers() {
                Object.keys(this.connections).forEach(d => this.killReconnectTimer(d))
            }

            checkToKillPingPongInterval() {
                0 === Object.keys(this.connections).length ? this.killPingPongInterval() : Object.keys(this.connections).find(v => this.connections[v].isAlive) || this.killPingPongInterval()
            }

            createConnection(d) {
                const v = "desktop" === this.environment.clientType ? window.bridge.authAccess : this.authService.getAuthToken().access;
                return {
                    url: d,
                    messages: new q.xQ,
                    socket: new WebSocket(`${d}?token=${v}`),
                    pingList: [],
                    isAlive: !1,
                    reconnectTimer: null,
                    disconnectPromise: null,
                    eventHandlers: {
                        open: () => {
                        }, close: () => {
                        }, error: () => {
                        }, message: () => {
                        }
                    }
                }
            }

            reconnectSocket(d) {
                const v = this.connections[d], L = () => {
                    const se = this.createConnection(v.url);
                    this.connections[d].isAlive = se.isAlive, this.connections[d].pingList = se.pingList, this.connections[d].socket = se.socket, this.connections[d].url = se.url, this.connections[d].eventHandlers = se.eventHandlers, this.connectListeners(d)
                };
                switch (this.killReconnectTimer(d), this.checkToKillPingPongInterval(), v.socket.readyState) {
                    case WebSocket.CONNECTING:
                    case WebSocket.CLOSING:
                        console.log("SKIPPING RECONNECT TIMER:", d, "connection ready state:", v.socket.readyState);
                        break;
                    case WebSocket.OPEN:
                        v.disconnectPromise = this.disconnect({
                            socketName: d,
                            cleanup: !1
                        }), v.reconnectTimer = window.setTimeout(() => {
                            v.disconnectPromise.then(() => {
                                console.log("SOCKET DISCONNECTED, NOW RECONNECTING SOCKET"), L()
                            })
                        }, this.RETRY_SECONDS);
                        break;
                    case WebSocket.CLOSED:
                        v.reconnectTimer = window.setTimeout(() => {
                            L()
                        }, this.RETRY_SECONDS)
                }
            }

            sendMessage(d, v) {
                this.connections[d] && this.connections[d].socket.send(JSON.stringify(v))
            }

            sendPing(d) {
                console.log("SOCKET PING:", d);
                const v = {text: "HEARTBEAT_PING", user_id: this.authService.getUserId(), msg_id: (0, Ht.v4)()};
                this.connections[d].pingList.push(v), this.sendMessage(d, v)
            }

            onPongMessage(d, v) {
                console.log("SOCKET PONG:", d);
                const L = this.connections[d], se = L.pingList.findIndex(_e => _e.msg_id === v.msg_id);
                -1 !== se && L.pingList.splice(se, 1)
            }

            checkPingList(d) {
                this.connections[d].pingList.length >= this.MAX_UNANSWERED_PING_COUNT ? this.reconnectSocket(d) : this.sendPing(d)
            }

            disconnect({socketName: d, cleanup: v = !0}) {
                const L = this.connections[d], se = () => {
                    L && this.disconnectListeners(d), v && delete this.connections[d]
                };
                return new Promise(_e => {
                    if (!L) return this.checkToKillPingPongInterval(), se(), _e();
                    this.killReconnectTimer(d), L.isAlive ? (L.socket.addEventListener("close", () => {
                        se(), this.checkToKillPingPongInterval(), _e()
                    }), L.socket.close()) : (console.log("SOCKET IS IN A TRANSITION STATE, BUT TRY AND CLOSE ANYWAY"), L.socket && L.socket.close(), se(), _e())
                })
            }

            disconnectAllSockets() {
                return this.killAllReconnectTimers(), Promise.all(Object.keys(this.connections).map(d => this.disconnect({socketName: d})))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(I.Ho), y.LFG(I.mI), y.LFG(We.L))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac, providedIn: "root"}), N
    })();
    var Pt = o(2994);
    let ee = (() => {
        class N {
            constructor(d, v, L, se) {
                this.gameApiService = d, this.authService = v, this.cardsService = L, this.environment = se, this.storeItems = [], this.dataStore = {userStarsTotal: 0}, this._userStarTotal$ = new z.X(0), console.log("@cerberus/StarService constructor")
            }

            get userStarTotal$() {
                return this._userStarTotal$.asObservable()
            }

            fetchUserStarsRewards(d) {
                return this.gameApiService.get(`/game/${d}/rewards/${this.authService.getUserId()}`)
            }

            fetchUserStarsTotal() {
                const d = this.authService.getUserId();
                !d || this.gameApiService.get(`/user/${d}/stars`).pipe((0, Y.q)(1)).subscribe(v => {
                    this.dataStore.userStarsTotal = v, this._userStarTotal$.next(this.dataStore.userStarsTotal)
                }, v => {
                    this.dataStore.userStarsTotal = 0, this._userStarTotal$.next(this.dataStore.userStarsTotal)
                })
            }

            purchaseItem$(d, v, L = !0) {
                return this.authService.fetchSession().pipe((0, Y.q)(1), (0, tt.VS)(se => this.gameApiService.post(`/user/${this.authService.getUserId()}/shop?session=${se}`, {asset_group: d})), (0, ve.K)(se => 401 === se.status && L ? this.authService.refreshToken().pipe((0, tt.VS)(_e => this.purchaseItem$(d, v, !1))) : (0, r.of)(se)), (0, Pt.b)(se => {
                    (!se || !se.error) && this.handlePurchaseSuccess()
                }))
            }

            handlePurchaseSuccess() {
                this.fetchUserStarsTotal(), "desktop" === this.environment.clientType && this.cardsService.fetchInventory()
            }

            addEpochTimestamp(d) {
                return Object.assign(Object.assign({}, d), {
                    start_timestamp_epoch: new Date(d.start_timestamp).getTime(),
                    end_timestamp_epoch: new Date(d.end_timestamp).getTime()
                })
            }

            getScreenOrder(d) {
                const L = this.storeItems.filter(se => this.isCurrentItem(se)).indexOf(d);
                return Object.assign(Object.assign({}, d), {screen_order: L})
            }

            isCurrentItem(d) {
                const v = (new Date).getTime();
                return d.end_timestamp_epoch > v && d.start_timestamp_epoch < v
            }

            fetchStarStoreItems$() {
                return this.gameApiService.get(`/user/${this.authService.getUserId()}/shop`).pipe((0, Y.q)(1), (0, ce.U)(d => d.map(v => this.addEpochTimestamp(v))), (0, Pt.b)(d => this.storeItems = d))
            }
        }

        return N.\u0275fac = function (d) {
            return new (d || N)(y.LFG(J.F), y.LFG(I.mI), y.LFG(it.d), y.LFG(I.Ho))
        }, N.\u0275prov = y.Yz7({token: N, factory: N.\u0275fac}), N
    })();
    const ne = (N, j) => () => Promise.all([N.loadConfigurations().toPromise(), j.waitUntilReady()]);
    let xe = (() => {
        class N {
        }

        return N.\u0275fac = function (d) {
            return new (d || N)
        }, N.\u0275mod = y.oAB({type: N}), N.\u0275inj = y.cJS({
            providers: [We.L, {
                provide: I.Hd,
                deps: [I.Ho],
                useFactory: j => (0, A.j2)(j.launchDarklyKey, {anonymous: !0, key: "anonymous"})
            }, {
                provide: y.ip1,
                useFactory: ne,
                multi: !0,
                deps: [We.L, I.Hd]
            }, re, Te, gt, Be.a, Me, at, be, Ge, He, Ze, he, Ne._, ye, ee, Qe.$, G], imports: [[S.ez]]
        }), N
    })()
}, 69439
:
(te, U, o) => {
    "use strict";
    o.d(U, {d: () => y});
    var p = o(8929), r = o(591), f = o(36053), e = o(7625), _ = o(92198), g = o(75613), h = o(24850), i = o(87545),
        t = o(72986), n = o(2994), C = o(27221), k = o(73307), $ = o(52886), w = o(1025), D = o(43834), m = o(29840),
        A = o(90868), S = o(5e3);
    let y = (() => {
        class I {
            constructor(b, E, R, X, pe, re) {
                this.environment = b, this.authService = E, this.gameApiService = R, this.marketplaceApiService = X, this.tokenRefreshService = pe, this.featureFlagsService = re, this.unsubscribe = new p.xQ, this.dataStore = {
                    protoCards: new Map,
                    inventory: {},
                    inventoryCards: [],
                    qualityCounts: new Map,
                    newInventoryCardCount: 0
                }, this._protoCards = new r.X(new Map), this._inventory = new r.X({}), this._qualityCounts = new r.X(new Map), this._inventoryCards = new r.X([]), this._newInventoryCardCount = new r.X(0), this.watchForLogout()
            }

            watchForLogout() {
                "desktop" === this.environment.clientType && this.authService.account$.pipe((0, e.R)(this.unsubscribe), (0, _.h)(b => null === b)).subscribe(b => {
                    this.dataStore.inventory = {}, this._inventory.next(Object.assign({}, this.dataStore).inventory), this.dataStore.qualityCounts = new Map, this._qualityCounts.next(Object.assign({}, this.dataStore).qualityCounts), this.dataStore.inventoryCards = [], this._inventoryCards.next(Object.assign({}, this.dataStore).inventoryCards), this.dataStore.newInventoryCardCount = 0, this._newInventoryCardCount.next(Object.assign({}, this.dataStore).newInventoryCardCount)
                })
            }

            get protoCards$() {
                return this._protoCards.asObservable()
            }

            get inventory$() {
                return this._inventory.asObservable()
            }

            get qualityCounts$() {
                return this._qualityCounts.asObservable()
            }

            get inventoryCards$() {
                return this._inventoryCards.asObservable()
            }

            get newInventoryCardCount$() {
                return this._newInventoryCardCount.asObservable()
            }

            getProtoCard(b) {
                return this.protoCards$.pipe((0, g.sE)(E => E.has(b)), (0, h.U)(E => E.get(b)))
            }

            fetchProtoCardsApi() {
                const b = this.authService.getUserId();
                return this.authService.fetchSession().pipe((0, i.w)(E => this.gameApiService.get(`/user/${b || 1}/proto?format=flat${E ? `&session=${E}` : ""}`)), (0, t.q)(1), (0, h.U)(E => this.dictionaryToMap(E)), (0, h.U)(E => (E.forEach((R, X) => {
                    R.proto = X
                }), E)))
            }

            getProtoCards$() {
                return this.tokenRefreshService.autoRefreshToken(this.fetchProtoCardsApi())
            }

            fetchProtoCards() {
                this.getProtoCards$().subscribe(b => {
                    this.handleProtoCardsSuccess(b)
                })
            }

            handleProtoCardsSuccess(b) {
                this.dataStore.protoCards = b, this._protoCards.next(Object.assign({}, this.dataStore).protoCards)
            }

            fetchInventory() {
                const b = this.authService.getUserId();
                return this.fetchInventoryCardsMap(b).pipe((0, t.q)(1), (0, n.b)(E => {
                    this.dataStore.inventory = E, this._inventory.next(Object.assign({}, this.dataStore).inventory)
                })).subscribe()
            }

            addCardsToInventory(b) {
                let E = 0;
                Object.entries(b).forEach(([R, X]) => {
                    if (this.dataStore.inventory[R]) {
                        const pe = X.filter(re => !this.dataStore.inventory[R].some(Ce => Ce.id === re.id));
                        this.dataStore.inventory[R] = [...this.dataStore.inventory[R], ...pe], E += pe.length
                    } else this.dataStore.inventory[R] = X, E += X.length
                }), this._inventory.next(Object.assign({}, this.dataStore.inventory)), this.dataStore.newInventoryCardCount = E, this._newInventoryCardCount.next(E)
            }

            fetchQualityCount() {
                return this.gameApiService.get("/quality_count").pipe((0, t.q)(1), (0, n.b)(b => {
                    this.dataStore.qualityCounts = this.dictionaryToMap(b), this._qualityCounts.next(Object.assign({}, this.dataStore).qualityCounts)
                }), (0, C.K)(b => b)).subscribe()
            }

            loadInventoryCards() {
                return (0, f.aj)([this.protoCards$, this.inventory$]).pipe((0, n.b)(([b, E]) => {
                    this.dataStore.inventoryCards = this.convertToCards(b, E), this._inventoryCards.next(Object.assign({}, this.dataStore).inventoryCards)
                }))
            }

            convertToCards(b, E) {
                const R = [];
                return b.forEach((X, pe) => {
                    if (E[pe]) for (const re of E[pe]) {
                        const Ce = new $.Zb(re.id, pe, re.q, X, re.status);
                        R.push(Ce)
                    }
                }), R
            }

            forgeUpdate(b, E, R) {
                this.forgeRemoveIds(b, E), this._inventory.next(Object.assign({}, this.dataStore.inventory)), this.dataStore.newInventoryCardCount = 1, this._newInventoryCardCount.next(1)
            }

            forgeRemoveIds(b, E) {
                this.dataStore.inventory[E] = this.dataStore.inventory[E].filter(R => !b.some(X => R.id === X))
            }

            setNewInventoryCardCount(b) {
                this.dataStore.newInventoryCardCount = b, this._newInventoryCardCount.next(b)
            }

            dictionaryToMap(b) {
                return Object.entries(b).map(([E, R]) => ({
                    key: E,
                    val: R
                })).reduce((E, R) => E.set(Number(R.key), R.val), new Map)
            }

            fetchInventoryCardsMapV2(b, E) {
                const R = E ? `&owner=${E}` : "";
                return this.marketplaceApiService.get(`/v2/asset?type=card${R}${R ? "" : `&user_id=${b}`}`)
            }

            inventoryCardsMapV2ToV1(b) {
                const E = {};
                return Object.entries(b.protos).forEach(([R, X]) => {
                    const pe = X.assets.map(re => ({id: re.id, q: re.properties.quality, status: re.minting_status}));
                    E[R] = pe
                }), E
            }

            fetchInventoryCardsMap(b) {
                return this.gameApiService.get(`/user/${b}/card?caller=${"desktop" === this.environment.clientType ? "client" : "website"}`)
            }

            checkToRefreshInventory() {
                this.featureFlagsService.get(w.v.refetchInventoryEnabled).pipe((0, t.q)(1)).subscribe(b => {
                    b && this.fetchInventory()
                })
            }
        }

        return I.\u0275fac = function (b) {
            return new (b || I)(S.LFG(k.Ho), S.LFG(k.mI), S.LFG(D.F), S.LFG(m._), S.LFG(A.$), S.LFG(w.a))
        }, I.\u0275prov = S.Yz7({token: I, factory: I.\u0275fac, providedIn: "root"}), I
    })()
}, 1025
:
(te, U, o) => {
    "use strict";
    o.d(U, {v: () => h, a: () => t});
    var p = o(36053), r = o(21086), f = o(591), e = o(87545), _ = o(73307), g = o(5e3), h = (() => {
        return (n = h || (h = {})).buyPagePaused = "buy-page-paused", n.claimAirdropButtonEnabled = "temp-claim-airdrop-button-enabled", n.claimAirdropEnabled = "temp-claim-airdrop-enabled", n.claimFluxEnabled = "temp-claim-flux-enabled", n.coinbasePaused = "temp-coinbase-paused", n.controllableBannerData = "controllable-banner-data", n.deckCodesEnabled = "temp-deck-codes-enabled", n.defaultWalletEnabled = "temp-default-wallet-enabled", n.forgeEnabled = "temp-forge-enabled", n.fusingNextStepEnabled = "temp-fusing-next-step-enabled", n.godsTokenBlocked = "gods-token-blocked", n.outageBannerEnabled = "temp-outage-banner-enabled", n.rankedWeekendCancelledBannerEnabled = "temp-ranked-weekend-cancelled-banner-enabled", n.referralsEnabled = "temp-referrals-enabled", n.refetchInventoryEnabled = "refetch-inventory-enabled", n.showControllableBanner = "show-controllable-banner", n.spgpEnabled = "temp-spgp-enabled", n.spgpPaused = "temp-spgp-paused", n.stakingEnabled = "temp-staking-enabled", n.tokenEnabled = "temp-token-enabled", n.x2BuyPageEnabled = "temp-x-2-buy-page-enabled", n.newEnvironmentMarketplaceLegacyApi = "temp-new-env-marketplace-legacy-api-enabled", n.newEnvironmentGameLegacyApi = "temp-new-env-game-legacy-api-enabled", n.newEnvironmentAuthLegacyApi = "temp-new-env-auth-legacy-api-enabled", n.noWalletWarningRankedGame = "temp-no-wallet-warning-ranked-game", n.playToEarnEnabled = "temp-play-to-earn-enabled", n.buyPageRevampEnabled = "buy-page-revamp-enabled", n.weekendRankedEnabled = "temp-weekend-ranked-claim-enabled", h;
        var n
    })();
    const i = Object.seal({
        [h.buyPagePaused]: !1,
        [h.claimAirdropButtonEnabled]: !1,
        [h.claimAirdropEnabled]: !1,
        [h.claimFluxEnabled]: !1,
        [h.coinbasePaused]: !1,
        [h.controllableBannerData]: {},
        [h.deckCodesEnabled]: !1,
        [h.defaultWalletEnabled]: !1,
        [h.fusingNextStepEnabled]: !1,
        [h.godsTokenBlocked]: !0,
        [h.outageBannerEnabled]: !1,
        [h.rankedWeekendCancelledBannerEnabled]: !1,
        [h.referralsEnabled]: !1,
        [h.refetchInventoryEnabled]: !1,
        [h.showControllableBanner]: !1,
        [h.spgpEnabled]: !1,
        [h.spgpPaused]: !1,
        [h.stakingEnabled]: !1,
        [h.tokenEnabled]: !1,
        [h.x2BuyPageEnabled]: !1,
        [h.newEnvironmentMarketplaceLegacyApi]: !1,
        [h.newEnvironmentGameLegacyApi]: !1,
        [h.newEnvironmentAuthLegacyApi]: !1,
        [h.noWalletWarningRankedGame]: !1,
        [h.playToEarnEnabled]: !1,
        [h.buyPageRevampEnabled]: !1,
        [h.weekendRankedEnabled]: !1
    });
    let t = (() => {
        class n {
            constructor(k, $) {
                this.ldClient = k, this.environment = $, this.flags = {}, this.flagChange = {}, this.flags = Object.assign({}, i), this.ldClient.on("change", w => {
                    for (const D in w) this.set(D, w[D].current)
                }), this.ldClient.waitUntilReady().then(() => {
                    const w = this.ldClient.allFlags();
                    for (const D in w) this.set(D, w[D])
                })
            }

            getMany(k) {
                const $ = [];
                return k.forEach(w => {
                    $.push(this.get(w))
                }), (0, p.aj)($).pipe((0, e.w)(w => {
                    const D = {};
                    return k.forEach((m, A) => {
                        D[m] = w[A]
                    }), (0, r.of)(D)
                }))
            }

            get(k) {
                return this.flagChange[k] = this.flagChange[k] || new f.X(this.flags[k]), this.flagChange[k].asObservable()
            }

            setContext(k) {
                this.ldClient.identify({
                    key: !0 === k.anonymous ? "anonymous" : k.userID,
                    email: k.email,
                    name: k.name,
                    anonymous: k.anonymous,
                    country: k.country,
                    custom: {clientType: this.environment.clientType}
                })
            }

            set(k, $) {
                this.flags[k] = $, this.flagChange[k] && this.flagChange[k].next($)
            }
        }

        return n.\u0275fac = function (k) {
            return new (k || n)(g.LFG(_.Hd), g.LFG(_.Ho))
        }, n.\u0275prov = g.Yz7({token: n, factory: n.\u0275fac}), n
    })()
}, 43834
:
(te, U, o) => {
    "use strict";
    o.d(U, {F: () => n});
    var p = o(8929), r = o(87168), f = o(24850), e = o(7625), _ = o(87545), g = o(1025), h = o(77535), i = o(5e3),
        t = o(40520);
    let n = (() => {
        class C {
            constructor($, w, D) {
                this.http = $, this.moduleConfigService = w, this.featureFlagService = D, this.destroyed$ = new p.xQ, this.gameEndpoint$ = this.moduleConfigService.loadConfigurations().pipe((0, r.M)(this.featureFlagService.get(g.v.newEnvironmentGameLegacyApi)), (0, f.U)(([m, A]) => A ? m.legacyGameHost : m.gameHost), (0, e.R)(this.destroyed$))
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            get($, w) {
                return this.gameEndpoint$.pipe((0, _.w)(D => this.http.get(D + $, w)))
            }

            put($, w) {
                return this.gameEndpoint$.pipe((0, _.w)(D => this.http.put(D + $, w)))
            }

            post($, w) {
                return this.gameEndpoint$.pipe((0, _.w)(D => this.http.post(D + $, w)))
            }

            delete($) {
                return this.gameEndpoint$.pipe((0, _.w)(w => this.http.delete(w + $)))
            }
        }

        return C.\u0275fac = function ($) {
            return new ($ || C)(i.LFG(t.eN), i.LFG(h.L), i.LFG(g.a))
        }, C.\u0275prov = i.Yz7({token: C, factory: C.\u0275fac, providedIn: "root"}), C
    })()
}, 29840
:
(te, U, o) => {
    "use strict";
    o.d(U, {_: () => n});
    var p = o(8929), r = o(87168), f = o(24850), e = o(7625), _ = o(87545), g = o(1025), h = o(77535), i = o(5e3),
        t = o(40520);
    let n = (() => {
        class C {
            constructor($, w, D) {
                this.http = $, this.moduleConfigService = w, this.featureFlagService = D, this.destroyed$ = new p.xQ, this.marketplaceEndpoint$ = this.moduleConfigService.loadConfigurations().pipe((0, r.M)(this.featureFlagService.get(g.v.newEnvironmentMarketplaceLegacyApi)), (0, f.U)(([m, A]) => A ? m.legacyMarketplaceHost : m.marketplaceHost), (0, e.R)(this.destroyed$))
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            get($, w) {
                return this.marketplaceEndpoint$.pipe((0, _.w)(D => this.http.get(`${D}${$}`, w)))
            }

            put($, w) {
                return this.marketplaceEndpoint$.pipe((0, _.w)(D => this.http.put(`${D}${$}`, w)))
            }

            post($, w) {
                return this.marketplaceEndpoint$.pipe((0, _.w)(D => this.http.post(`${D}${$}`, w)))
            }

            delete($) {
                return this.marketplaceEndpoint$.pipe((0, _.w)(w => this.http.delete(`${w}${$}`)))
            }
        }

        return C.\u0275fac = function ($) {
            return new ($ || C)(i.LFG(t.eN), i.LFG(h.L), i.LFG(g.a))
        }, C.\u0275prov = i.Yz7({token: C, factory: C.\u0275fac}), C
    })()
}, 77535
:
(te, U, o) => {
    "use strict";
    o.d(U, {L: () => g});
    var p = o(2994), r = o(5154), f = o(73307), e = o(5e3), _ = o(40520);
    let g = (() => {
        class h {
            constructor(t, n, C) {
                this.http = t, this.environment = n, this.storageService = C, this.configURL = this.environment.appConfig, "desktop" === this.environment.clientType && this.useDevApis() && (this.configURL = this.environment.appConfigDev)
            }

            useDevApis() {
                const t = this.storageService.get(["game", "1", "branch"]), n = RegExp(/beta/);
                return t && !n.test(t)
            }

            loadConfigurations() {
                return this.configuration$ || (this.configuration$ = this.http.get(`${this.configURL}`, {headers: {"cache-control": ["no-cache", "no-store"]}}).pipe((0, p.b)(t => this.configData = t), (0, r.d)(1))), this.configuration$
            }

            getConfig() {
                return this.configData ? this.configData : null
            }
        }

        return h.\u0275fac = function (t) {
            return new (t || h)(e.LFG(_.eN), e.LFG(f.Ho), e.LFG(f.qy))
        }, h.\u0275prov = e.Yz7({token: h, factory: h.\u0275fac}), h
    })()
}, 78812
:
(te, U, o) => {
    "use strict";
    o.d(U, {f: () => _});
    var p = o(8929), r = o(591), f = o(49219), e = o(5e3);
    let _ = (() => {
        class g {
            constructor() {
                this.dataStore = {
                    navigationItems: null,
                    userMenuItems: null,
                    userEthAccount: null,
                    activeHeaderAlertBar: null,
                    headerAreaHeight: f.standardHeaderHeight
                }, this.unsubscribe = new p.xQ, this._navigationItems$ = new r.X(null), this._userMenuItems$ = new r.X(null), this._activeHeaderAlertBar$ = new r.X(null)
            }

            get navigationItems$() {
                return this._navigationItems$.asObservable()
            }

            get userMenuItems$() {
                return this._userMenuItems$.asObservable()
            }

            get activeHeaderAlertBar$() {
                return this._activeHeaderAlertBar$.asObservable()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            storeNavigationItems(i) {
                this.dataStore.navigationItems = i, this.emitNavItems(this.dataStore.navigationItems)
            }

            storeUserMenuItems(i) {
                this.dataStore.userMenuItems = i, this.emitUserMenuItems(this.dataStore.userMenuItems)
            }

            emitNavItems(i) {
                this._navigationItems$.next(Object.assign({}, i))
            }

            emitUserMenuItems(i) {
                this._userMenuItems$.next(Object.assign({}, i))
            }

            toggleNotifyCollections(i) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.collections.showNotificationBubble = !!i, this.emitNavItems(t)
            }

            toggleNotifyOpenPacks(i) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.openPacks.showNotificationBubble = !!i, this.emitNavItems(t)
            }

            toggleNotifyMarketSell(i) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.market.children.sell.showNotificationBubble = !!i, this.emitNavItems(t)
            }

            toggleNotifyMarketBuy(i) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.market.children.buy.showNotificationBubble = !!i, this.emitNavItems(t)
            }

            connectedWalletState() {
                const i = this.dataStore.userMenuItems;
                i.connectWallet.visible = !1, i.disconnectWallet.visible = !0, this.emitUserMenuItems(i)
            }

            disconnectedWalletState() {
                const i = this.dataStore.userMenuItems;
                i.connectWallet.visible = !0, i.disconnectWallet.visible = !1, this.emitUserMenuItems(i)
            }
        }

        return g.\u0275fac = function (i) {
            return new (i || g)
        }, g.\u0275prov = e.Yz7({token: g, factory: g.\u0275fac, providedIn: "root"}), g
    })()
}, 90868
:
(te, U, o) => {
    "use strict";
    o.d(U, {$: () => h});
    var p = o(73307), r = o(61737), f = o(27221), e = o(72986), _ = o(61709), g = o(5e3);
    let h = (() => {
        class i {
            constructor(n) {
                this.authService = n
            }

            autoRefreshToken(n, C = 1) {
                return n.pipe((0, f.K)(k => 401 === k.status && C > 0 ? this.authService.refreshToken().pipe((0, e.q)(1), (0, _.zg)(() => this.autoRefreshToken(n, C - 1))) : (0, r._)(k)))
            }
        }

        return i.\u0275fac = function (n) {
            return new (n || i)(g.LFG(p.mI))
        }, i.\u0275prov = g.Yz7({token: i, factory: i.\u0275fac}), i
    })()
}, 77518
:
(te, U, o) => {
    "use strict";
    o.d(U, {np: () => g, Og: () => e, oS: () => _, PW: () => f});
    const f = ["diamond", "gold", "shadow", "meteorite", "plain"];
    var e = (() => {
        return (h = e || (e = {})).INITIATED = "initiated", h.FLUX_PAID = "flux_paid", h.CARDS_DELETED = "cards_deleted", h.TOKENS_PAID = "tokens_paid", h.VALIDATING_PAYMENT = "validating_payment", h.COMPLETED = "completed", e;
        var h
    })();
    const _ = {
        [e.INITIATED]: "Pending",
        [e.FLUX_PAID]: "Pending",
        [e.CARDS_DELETED]: "Pending",
        [e.TOKENS_PAID]: "Pending",
        [e.VALIDATING_PAYMENT]: "Validating",
        [e.COMPLETED]: "completed"
    };
    var g = (() => {
        return (h = g || (g = {})).Development = "development", h.Staging = "staging", h.Production = "production", g;
        var h
    })()
}, 98590
:
(te, U, o) => {
    "use strict";
    o.d(U, {I: () => i});
    var p = o(67876), r = o(28510), f = o(5e3), e = o(69808), _ = o(87745);

    function g(t, n) {
        if (1 & t && (f.TgZ(0, "gu-vertical-space", 7), f._UZ(1, "gu-icon", 8), f.qZA()), 2 & t) {
            const C = f.oxw();
            f.xp6(1), f.Q6J("fillColor", C.iconFillColor)("iconLigature", C.iconLigature)
        }
    }

    function h(t, n) {
        if (1 & t) {
            const C = f.EpF();
            f.ynx(0), f.TgZ(1, "gu-secondary-hex-button", 9), f.NdJ("click", function () {
                return f.CHM(C), f.oxw().ctaClick()
            }), f.qZA(), f.BQk()
        }
        if (2 & t) {
            const C = f.oxw();
            f.xp6(1), f.Q6J("text", C.ctaText)
        }
    }

    let i = (() => {
        class t {
            constructor(C) {
                this.activeModal = C, this.onCtaClick = p.Z
            }

            ctaClick() {
                this.onCtaClick(), this.activeModal.close()
            }
        }

        return t.\u0275fac = function (C) {
            return new (C || t)(f.Y36(r.mX))
        }, t.\u0275cmp = f.Xpm({
            type: t,
            selectors: [["cerberus-alert-modal"]],
            inputs: {
                title: "title",
                text: "text",
                iconLigature: "iconLigature",
                iconFillColor: "iconFillColor",
                ctaText: "ctaText",
                onCtaClick: "onCtaClick"
            },
            decls: 10,
            vars: 7,
            consts: [["goldBorder", "top"], ["top", "4x-large", 4, "ngIf"], ["top", "large"], ["align", "center", "kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100", 1, "heading"], ["align", "center", "kind", "large", "fillColor", "colors.light.100", 1, "text", 3, "innerHTML"], ["top", "2x-large", "bottom", "4x-large"], [4, "ngIf"], ["top", "4x-large"], [1, "alertIcon", 3, "fillColor", "iconLigature"], ["size", "large", 1, "cta", 3, "text", "click"]],
            template: function (C, k) {
                1 & C && (f._UZ(0, "gu-modal-background", 0), f.YNc(1, g, 2, 2, "gu-vertical-space", 1), f.TgZ(2, "gu-vertical-space", 2), f.TgZ(3, "gu-paragraph-text", 3), f._uU(4), f.qZA(), f.qZA(), f.TgZ(5, "gu-vertical-space", 2), f._UZ(6, "gu-paragraph-text", 4), f.ALo(7, "safe"), f.qZA(), f.TgZ(8, "gu-vertical-space", 5), f.YNc(9, h, 2, 1, "ng-container", 6), f.qZA()), 2 & C && (f.xp6(1), f.Q6J("ngIf", k.iconLigature), f.xp6(3), f.hij(" ", k.title, " "), f.xp6(2), f.Q6J("innerHTML", f.xi3(7, 4, k.text, "html"), f.oJD), f.xp6(3), f.Q6J("ngIf", k.ctaText))
            },
            directives: [e.O5],
            pipes: [_.y],
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:640px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.alertIcon[_ngcontent-%COMP%]{font-size:80px}.heading[_ngcontent-%COMP%]{text-transform:uppercase}"]
        }), t
    })()
}, 53161
:
(te, U, o) => {
    "use strict";
    o.d(U, {j: () => r});
    var p = o(5e3);
    let r = (() => {
        class f {
        }

        return f.\u0275fac = function (_) {
            return new (_ || f)
        }, f.\u0275mod = p.oAB({type: f}), f.\u0275inj = p.cJS({}), f
    })()
}, 39765
:
(te, U, o) => {
    "use strict";
    o.d(U, {w: () => h}), o(55778);
    var r = o(8929), f = o(7625), e = o(24850), _ = o(73307), g = o(5e3);
    let h = (() => {
        class i {
            constructor(n, C, k) {
                this.templateRef = n, this.viewContainer = C, this.featureFlagsService = k, this.unsubscribe = new r.xQ
            }

            set featureFlagIf(n) {
                this.featureFlagsService.get(n).pipe((0, f.R)(this.unsubscribe), (0, e.U)(C => !!C)).subscribe(C => {
                    C ? this.viewContainer.createEmbeddedView(this.templateRef) : this.viewContainer.clear()
                })
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }
        }

        return i.\u0275fac = function (n) {
            return new (n || i)(g.Y36(g.Rgc), g.Y36(g.s_b), g.Y36(_.B3))
        }, i.\u0275dir = g.lG2({
            type: i,
            selectors: [["", "featureFlagIf", ""]],
            inputs: {featureFlagIf: "featureFlagIf"}
        }), i
    })()
}, 37371
:
(te, U, o) => {
    "use strict";
    o.d(U, {M: () => y});
    var p = o(28510), f = (o(89534), o(70655)), e = o(32830), _ = o(56418), g = o(38872), h = o(86041), i = o(80102),
        t = o(26532), n = o(65281);
    let C = class extends e.oi {
        constructor() {
            super(...arguments), this.type = "none", this.promise = new Promise(s => {
                this.finished = s
            })
        }

        static get styles() {
            return e.iv`
      :host {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        box-shadow: 0px 2px 16px rgba(0, 0, 0, 0.5);
      }

      .modal-dialog__panel {
        min-height: 240px;
        height: 100%;
        width: 520px;
        background: ${(0, t.asCssProp)(n.gradients.gunmetal.mirror("left"))};
        border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        display: flex;
        flex-direction: column;
        place-content: stretch center;
        place-items: center;
        padding: 40px;
        box-sizing: border-box;
      }

      ${(0, t.asCssProp)((0, t.fadeReveal)(":host .modal-dialog__panel", ":host(.open) .modal-dialog__panel", "100%", .3, 16))}

      .modal-dialog__border {
        height: 4px;
        display: block;
        position: absolute;
        width: calc(100% + 4px);
        left: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
        top: ${(0, t.asCssProp)((0, i.gridUnits)(-.5))};
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        background: ${(0, t.asCssProp)(n.gradients.gold.mirror("right"))};
      }

      .modal-dialog__border--type-info {
        background: ${(0, t.asCssProp)(n.gradients.gold.mirror("right"))};
      }

      .modal-dialog__border--type-error {
        background: linear-gradient(270deg, #d73333 0%, #ff8b01 50%, #d73333 100%);
      }

      .modal-dialog__border--type-success {
        background: ${(0, t.asCssProp)(n.gradients.apocyan.mirror("right"))};
      }

      .modal-dialog__icon {
        position: absolute;
        left: 50%;
        top: 0;
        color: white;
        width: 72px;
        height: 64px;
        transform: translate(-50%, -50%);
      }
    `
        }

        notifyState(s) {
            const b = {modal: this, closed: this.promise};
            "modalOpened" === s && (b.close = () => this.close()), this.dispatchEvent(new CustomEvent(s, {
                detail: b,
                bubbles: !0,
                composed: !1
            }))
        }

        close() {
            return requestAnimationFrame(() => requestAnimationFrame(() => {
                this.panel.addEventListener("transitionend", () => {
                    this.notifyState("modalClosed"), this.finished()
                }), this.classList.remove("open")
            })), this.promise
        }

        firstUpdated(s) {
            super.firstUpdated(s), this.notifyState("modalOpened"), requestAnimationFrame(() => requestAnimationFrame(() => this.classList.add("open")))
        }

        renderIcon() {
            const s = {
                info: e.YP`<path d="M53.4917 55.817C52.4717 55.613 51.8087 55.4218 51.5027 55.2433C51.0947 55.0138 50.8907 54.797 50.8907 54.593V39.5H49.125H46.875C46.875 39.5 44.316 39.4235 43.5 39.5L43.4702 41.3203C44.3117 41.4478 44.8217 41.5498 45.0002 41.6263C45.3317 41.6518 45.6122 41.8175 45.8417 42.1235C45.9692 42.3275 46.033 42.6462 46.033 43.0798V54.593C46.033 54.848 45.829 55.0648 45.421 55.2433C44.9365 55.4473 44.2862 55.6385 43.4702 55.817V57.5H53.4917V55.817ZM51.235 32.408C51.235 32.051 51.184 31.7578 51.082 31.5283C50.98 31.2988 50.776 31.082 50.47 30.878C50.2405 30.725 49.96 30.6103 49.6285 30.5337C49.297 30.4573 48.94 30.4063 48.5575 30.3807C48.0475 30.3552 47.6267 30.4062 47.2952 30.5337C47.0147 30.6357 46.6705 30.8398 46.2625 31.1458C45.9055 31.5028 45.6887 31.7833 45.6122 31.9872C45.4847 32.3442 45.3955 32.714 45.3445 33.0965C45.319 33.4025 45.3955 33.7085 45.574 34.0145C45.7015 34.244 45.9055 34.4608 46.186 34.6648C46.4665 34.8688 46.7597 34.9963 47.0657 35.0473C47.4737 35.1237 47.8052 35.1492 48.0602 35.1237C48.5192 35.1237 48.9272 35.06 49.2842 34.9325C49.6667 34.805 50.011 34.6265 50.317 34.397C50.6485 34.142 50.8907 33.8615 51.0437 33.5555C51.1712 33.275 51.235 32.8925 51.235 32.408Z" fill="#EBC98B"></path>`,
                error: e.YP`<path fill-rule="evenodd" clip-rule="evenodd" d="M46.375 49.4999L43 31.4999H52L48.625 49.4999H46.375ZM45.1212 57.5037C45.7854 58.1679 46.5783 58.4999 47.5 58.4999C48.4217 58.4999 49.2146 58.1679 49.8788 57.5037C50.5429 56.8395 50.875 56.0466 50.875 55.1249C50.875 54.2032 50.5429 53.4103 49.8788 52.7462C49.2146 52.082 48.4217 51.7499 47.5 51.7499C46.5783 51.7499 45.7854 52.082 45.1212 52.7462C44.4571 53.4103 44.125 54.2032 44.125 55.1249C44.125 56.0466 44.4571 56.8395 45.1212 57.5037Z" fill="#FF8B01"></path>`,
                success: e.YP`<path d="M43.3389 49.5082L37.1517 43.3211L34.5001 45.9727L43.3389 54.8115L59.2488 38.9016L56.5971 36.25L43.3389 49.5082Z" fill="#8BE1E0"></path>`
            };
            return s[this.type] ? e.YP`
      <svg width="95" height="80" viewBox="0 0 95 80" fill="none" xmlns="http://www.w3.org/2000/svg" class="modal-dialog__icon">
        <path d="M47.5 10.7472L82.3727 66H12.6273L47.5 10.7472Z" stroke="url(#${this.type}_gradient)" stroke-width="4" style="stroke-linecap: round; stroke-linejoin: round;" fill="#1D2F41" filter="url(#drop_shadow)"></path>
        ${s[this.type]}
        <defs>
          <filter id="drop_shadow" x="0.624023" y="0.747192" width="93.7518" height="79.2528" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
            <feOffset dy="2"></feOffset>
            <feGaussianBlur stdDeviation="5"></feGaussianBlur>
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.85 0"></feColorMatrix>
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
          </filter>
          <linearGradient id="info_gradient" x1="9" y1="7" x2="9" y2="68" gradientUnits="userSpaceOnUse">
            <stop stop-color="#FFF2D8"></stop>
            <stop offset="0.5034" stop-color="#EBC98B"></stop>
            <stop offset="1" stop-color="#C6A052"></stop>
          </linearGradient>
          <linearGradient id="error_gradient" x1="47.6608" y1="90.0638" x2="47.6617" y2="7.01299" gradientUnits="userSpaceOnUse">
            <stop stop-color="#D73333"></stop>
            <stop offset="1" stop-color="#FF8B01"></stop>
          </linearGradient>
          <linearGradient id="success_gradient" x1="9" y1="7" x2="9" y2="68" gradientUnits="userSpaceOnUse">
            <stop stop-color="#AFFAED"></stop>
            <stop offset="0.5034" stop-color="#8BE1E0"></stop>
            <stop offset="1" stop-color="#54BBCD"></stop>
          </linearGradient>
        </defs>
      </svg>
    ` : e.dy``
        }

        render() {
            return e.dy`
      <div class="modal-dialog__panel" data-test-id="modal-dialog-panel">
        <div class="modal-dialog__border modal-dialog__border--type-${this.type}"></div>
        ${this.renderIcon()}
        <slot></slot>
      </div>
    `
        }
    };
    (0, f.gn)([(0, _.C)(), (0, f.w6)("design:type", Object)], C.prototype, "type", void 0), (0, f.gn)([(0, g.I)(".modal-dialog__panel"), (0, f.w6)("design:type", HTMLElement)], C.prototype, "panel", void 0), C = (0, f.gn)([(0, h.M)("gu-modal-dialog")], C), o(51256), o(11015);
    var w = o(5e3), D = o(69808), m = o(87745);

    function A(I, s) {
        if (1 & I) {
            const b = w.EpF();
            w.TgZ(0, "gu-hex-button", 8), w.NdJ("click", function () {
                w.CHM(b);
                const R = w.oxw();
                return R.buttonClick(R.secondaryButton)
            }), w._uU(1), w.qZA()
        }
        if (2 & I) {
            const b = w.oxw();
            w.xp6(1), w.hij(" ", b.secondaryButton.text, " ")
        }
    }

    function S(I, s) {
        if (1 & I) {
            const b = w.EpF();
            w.TgZ(0, "gu-hex-button", 9), w.NdJ("click", function () {
                w.CHM(b);
                const R = w.oxw();
                return R.buttonClick(R.primaryButton)
            }), w.ALo(1, "safe"), w.qZA()
        }
        if (2 & I) {
            const b = w.oxw();
            w.Q6J("innerHTML", w.xi3(1, 1, b.primaryButton.text, "html"), w.oJD)
        }
    }

    let y = (() => {
        class I {
            constructor(b) {
                this.activeModal = b
            }

            buttonClick(b) {
                b.onClick && "function" == typeof b.onClick && b.onClick(), b.closeOnClick && this.activeModal.close()
            }
        }

        return I.\u0275fac = function (b) {
            return new (b || I)(w.Y36(p.mX))
        }, I.\u0275cmp = w.Xpm({
            type: I,
            selectors: [["cerberus-modal-dialog-control"]],
            inputs: {
                title: "title",
                content: "content",
                type: "type",
                secondaryButton: "secondaryButton",
                primaryButton: "primaryButton"
            },
            decls: 10,
            vars: 8,
            consts: [[3, "type"], [1, "modalDialogContent"], ["data-test-id", "modal-dialog-control-title", "kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100", "align", "center"], ["top", "small", "bottom", "x-large"], ["data-test-id", "modal-dialog-control-content", "fillColor", "colors.light.100", "align", "center", 3, "innerHTML"], [1, "modalDialogContent__buttons"], ["type", "secondary", "size", "large", "data-test-id", "modal-dialog-control-secondary-button", 3, "click", 4, "ngIf"], ["type", "primary", "size", "large", "data-test-id", "modal-dialog-control-primary-button", 3, "innerHTML", "click", 4, "ngIf"], ["type", "secondary", "size", "large", "data-test-id", "modal-dialog-control-secondary-button", 3, "click"], ["type", "primary", "size", "large", "data-test-id", "modal-dialog-control-primary-button", 3, "innerHTML", "click"]],
            template: function (b, E) {
                1 & b && (w.TgZ(0, "gu-modal-dialog", 0), w.TgZ(1, "div", 1), w.TgZ(2, "gu-paragraph-text", 2), w._uU(3), w.qZA(), w.TgZ(4, "gu-vertical-space", 3), w._UZ(5, "gu-paragraph-text", 4), w.ALo(6, "safe"), w.qZA(), w.TgZ(7, "gu-vertical-space", 5), w.YNc(8, A, 2, 1, "gu-hex-button", 6), w.YNc(9, S, 2, 4, "gu-hex-button", 7), w.qZA(), w.qZA(), w.qZA()), 2 & b && (w.Q6J("type", E.type), w.xp6(3), w.Oqu(E.title), w.xp6(2), w.Q6J("innerHTML", w.xi3(6, 5, E.content, "html"), w.oJD), w.xp6(3), w.Q6J("ngIf", E.secondaryButton), w.xp6(1), w.Q6J("ngIf", E.primaryButton))
            },
            directives: [D.O5],
            pipes: [m.y],
            styles: [".modalDialogContent[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 8px;align-items:center;max-width:100vw}.modalDialogContent[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.modalDialogContent__buttons[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:center}.modalDialogContent__buttons[_ngcontent-%COMP%]   gu-hex-button[_ngcontent-%COMP%]{max-width:50%;flex:1 1 0px}.modalDialogContent__buttons[_ngcontent-%COMP%]   gu-hex-button[_ngcontent-%COMP%]:not(:last-child){margin-right:16px}"]
        }), I
    })()
}, 87745
:
(te, U, o) => {
    "use strict";
    o.d(U, {y: () => f});
    var p = o(5e3), r = o(22313);
    let f = (() => {
        class e {
            constructor(g) {
                this.sanitizer = g
            }

            transform(g, h) {
                switch (h) {
                    case"html":
                        return this.sanitizer.bypassSecurityTrustHtml(g);
                    case"style":
                        return this.sanitizer.bypassSecurityTrustStyle(g);
                    case"script":
                        return this.sanitizer.bypassSecurityTrustScript(g);
                    case"url":
                        return this.sanitizer.bypassSecurityTrustUrl(g);
                    case"resourceUrl":
                        return this.sanitizer.bypassSecurityTrustResourceUrl(g);
                    default:
                        throw new Error(`Invalid safe type specified: ${h}`)
                }
            }
        }

        return e.\u0275fac = function (g) {
            return new (g || e)(p.Y36(r.H7, 16))
        }, e.\u0275pipe = p.Yjl({name: "safe", type: e, pure: !0}), e
    })()
}, 17268
:
(te, U, o) => {
    "use strict";
    o.d(U, {K: () => _});
    var p = o(5e3), r = o(69808);
    const f = function (g, h, i, t, n) {
        return {
            "tooltipBubble--top": g,
            "tooltipBubble--left": h,
            "tooltipBubble--right": i,
            "tooltipBubble--bottom": t,
            "tooltipBubble--large": n
        }
    }, e = ["*"];
    let _ = (() => {
        class g {
            constructor() {
                this.position = "top", this.size = "small", this.autoClose = !0
            }

            get getClass() {
                return !this.autoClose
            }

            ngOnInit() {
            }
        }

        return g.\u0275fac = function (i) {
            return new (i || g)
        }, g.\u0275cmp = p.Xpm({
            type: g,
            selectors: [["app-tooltip"]],
            hostVars: 2,
            hostBindings: function (i, t) {
                2 & i && p.ekj("openTooltip", t.getClass)
            },
            inputs: {title: "title", position: "position", size: "size", autoClose: "autoClose"},
            ngContentSelectors: e,
            decls: 3,
            vars: 9,
            consts: [["fillColor", "colors.gunmetal.300", 1, "tooltipBubble", 3, "kind", "ngClass", "innerHTML"], ["tooltipBubble", ""]],
            template: function (i, t) {
                1 & i && (p.F$t(), p.Hsn(0), p._UZ(1, "gu-paragraph-text", 0, 1)), 2 & i && (p.xp6(1), p.Q6J("kind", "large" === t.size ? "small" : "x-small")("ngClass", p.qbA(3, f, "top" === t.position, "left" === t.position, "right" === t.position, "bottom" === t.position, "large" === t.size))("innerHTML", t.title, p.oJD))
            },
            directives: [r.mk],
            styles: ['.tooltipBubble[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{display:block;position:relative}[_nghost-%COMP%]:hover   .tooltipBubble[_ngcontent-%COMP%]{opacity:1}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--top[_ngcontent-%COMP%]{transform:translate(-50%,calc(-100% + (calc(var(--vh) * 1.7) * .5)))}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--bottom[_ngcontent-%COMP%]{transform:translate(-50%,calc(100% - (calc(var(--vh) * 1.7) * .5)))}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--left[_ngcontent-%COMP%]{transform:translate(calc(-100% - (calc(var(--vw) * .5) * .5) * .5),-50%)}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--right[_ngcontent-%COMP%]{transform:translate(calc(0% + (calc(var(--vw) * .5) * .5) * .5),-50%)}.openTooltip[_nghost-%COMP%]   .tooltipBubble[_ngcontent-%COMP%]{opacity:1}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--top[_ngcontent-%COMP%]{transform:translate(-50%,calc(-100% + (calc(var(--vh) * 1.7) * .5)))}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--bottom[_ngcontent-%COMP%]{transform:translate(-50%,calc(100% - (calc(var(--vh) * 1.7) * .5)))}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--left[_ngcontent-%COMP%]{transform:translate(calc(-100% - (calc(var(--vw) * .5) * .5) * .5),-50%)}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--right[_ngcontent-%COMP%]{transform:translate(calc(0% + (calc(var(--vw) * .5) * .5) * .5),-50%)}.tooltipBubble[_ngcontent-%COMP%]{z-index:1;text-transform:capitalize;padding:calc(var(--vh) * 1.3);padding-top:calc(var(--vh) * .8);padding-bottom:calc(var(--vh) * .8);font-weight:600;user-select:none;pointer-events:none;position:absolute;background:#0f1b27;border:calc(var(--vh) * .15) solid #3d5a74;color:#92abc2;white-space:nowrap;border-radius:calc(var(--vh) * .4);opacity:0;left:50%;text-align:center}.tooltipBubble[_ngcontent-%COMP%]:before{content:"";position:absolute;left:50%;border:calc(var(--vh) * .7) solid transparent;transform:translate(-50%)}.tooltipBubble--large[_ngcontent-%COMP%]{font-weight:400;font-size:16px;padding:16px;text-transform:none}.tooltipBubble--top[_ngcontent-%COMP%]{top:0;transform:translate(-50%,-100%);margin-top:calc(calc(var(--vh) * 1.7) * -1)}.tooltipBubble--top[_ngcontent-%COMP%]:before{border-top-color:#3d5a74;bottom:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15))}.tooltipBubble--bottom[_ngcontent-%COMP%]{bottom:0;transform:translate(-50%,100%);margin-top:calc(var(--vh) * 1.7)}.tooltipBubble--bottom[_ngcontent-%COMP%]:before{border-bottom-color:#3d5a74;top:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15))}.tooltipBubble--left[_ngcontent-%COMP%]{left:0;top:50%}.tooltipBubble--left[_ngcontent-%COMP%]:before{left:100%;transform:translateY(50%);border-left-color:#3d5a74;right:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15));bottom:50%}.tooltipBubble--right[_ngcontent-%COMP%]{margin-left:10px;top:50%}.tooltipBubble--right[_ngcontent-%COMP%]:before{right:100%;transform:translateY(50%);border-right-color:#3d5a74;left:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15));bottom:50%}']
        }), g
    })()
}, 25774
:
(te, U, o) => {
    "use strict";
    o.d(U, {O: () => g});
    var p = o(73307), r = o(5e3), f = o(69808);

    function e(h, i) {
        if (1 & h) {
            const t = r.EpF();
            r.TgZ(0, "gu-announce-banner-template", 1), r.NdJ("onCloseAnnounceBanner", function () {
                return r.CHM(t), r.oxw().onCloseAnnounceBanner()
            }), r.Hsn(1), r.qZA()
        }
        if (2 & h) {
            const t = r.oxw();
            r.Q6J("closable", t.closable)
        }
    }

    const _ = ["*"];
    let g = (() => {
        class h {
            constructor(t) {
                this.storageService = t, this.closable = !0, this.visible = !1
            }

            ngOnInit() {
                this.visible = this.showBanner(this.id)
            }

            showBanner(t) {
                return !t || !this.storageService.get([this.id])
            }

            markSeen(t) {
                this.storageService.set([t], !0)
            }

            onCloseAnnounceBanner() {
                this.id && this.markSeen(this.id), this.visible = !1
            }
        }

        return h.\u0275fac = function (t) {
            return new (t || h)(r.Y36(p.qy))
        }, h.\u0275cmp = r.Xpm({
            type: h,
            selectors: [["cerberus-announce-banner-control"]],
            inputs: {id: "id", closable: "closable"},
            ngContentSelectors: _,
            decls: 1,
            vars: 1,
            consts: [[3, "closable", "onCloseAnnounceBanner", 4, "ngIf"], [3, "closable", "onCloseAnnounceBanner"]],
            template: function (t, n) {
                1 & t && (r.F$t(), r.YNc(0, e, 2, 1, "gu-announce-banner-template", 0)), 2 & t && r.Q6J("ngIf", n.visible)
            },
            directives: [f.O5],
            styles: ["[_nghost-%COMP%]{position:absolute;width:100%;z-index:21}.announceBannerControl--inline[_nghost-%COMP%]{position:relative}"]
        }), h
    })()
}, 97993
:
(te, U, o) => {
    "use strict";
    o.d(U, {i: () => g});
    var p = o(8929), r = o(7625), f = o(55778), e = o(73307), _ = o(5e3);
    let g = (() => {
        class h {
            constructor(t) {
                this.featureFlagsService = t, this.text = "", this.unsubscribe = new p.xQ
            }

            ngOnInit() {
                this.watchFlagData()
            }

            watchFlagData() {
                this.featureFlagsService.get(f.vU.controllableBannerData).pipe((0, r.R)(this.unsubscribe)).subscribe(t => {
                    this.text = t.text
                })
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }
        }

        return h.\u0275fac = function (t) {
            return new (t || h)(_.Y36(e.B3))
        }, h.\u0275cmp = _.Xpm({
            type: h,
            selectors: [["cerberus-controllable-banner"]],
            decls: 2,
            vars: 1,
            consts: [["both", "2x-large", 1, "layout"], ["data-test-id", "controllable-banner-text", "kind", "large", "align", "center", "fillColor", "colors.light.300", 1, "layout__text", 3, "innerHtml"]],
            template: function (t, n) {
                1 & t && (_.TgZ(0, "gu-vertical-space", 0), _._UZ(1, "gu-paragraph-text", 1), _.qZA()), 2 & t && (_.xp6(1), _.Q6J("innerHtml", n.text, _.oJD))
            },
            styles: ["[_nghost-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]     a, [_nghost-%COMP%]     a:link, [_nghost-%COMP%]     a:visited{color:#affaed;text-decoration:none}.layout[_ngcontent-%COMP%]{display:flex;align-items:flex-start;padding:0 64px;width:100%;justify-content:center}.layout__text[_ngcontent-%COMP%]{max-width:600px}"]
        }), h
    })()
}, 66773
:
(te, U, o) => {
    "use strict";
    o.d(U, {
        ic: () => g,
        am: () => io,
        q6: () => V,
        sZ: () => Se,
        el: () => bs,
        gn: () => Gs,
        kM: () => $s,
        MZ: () => ys.M,
        W2: () => _
    });
    var p = o(69808), r = o(93075), f = o(53161), e = o(5e3);
    let _ = (() => {
        class P {
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275mod = e.oAB({type: P}), P.\u0275inj = e.cJS({imports: [[p.ez, r.u5, f.j]]}), P
    })(), g = (() => {
        class P {
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275mod = e.oAB({type: P}), P.\u0275inj = e.cJS({imports: [[p.ez]]}), P
    })();
    const h = ["2x-small", "x-small", "small", "medium", "large", "x-large", "2x-large", "3x-large", "4x-large", "5x-large", "6x-large", "7x-large", "8x-large", "9x-large"];
    var i = o(65281), t = o(69181);
    const n = ["video"], C = ["carousel"], k = ["testParagraph"], $ = function (P) {
        return {height: P}
    };

    function w(P, W) {
        if (1 & P && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & P) {
            const u = W.$implicit, a = W.index;
            e.Q6J("ngStyle", e.VKq(3, $, u.randomHeight + "px")), e.xp6(1), e.AsE(" ", u.title, " ---- index: ", a + 1, " ")
        }
    }

    function D(P, W) {
        if (1 & P && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.Q6J("ngStyle", e.VKq(2, $, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    function m(P, W) {
        if (1 & P && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.Q6J("ngStyle", e.VKq(2, $, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    function A(P, W) {
        if (1 & P && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.Q6J("ngStyle", e.VKq(2, $, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    function S(P, W) {
        if (1 & P && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.Q6J("ngStyle", e.VKq(2, $, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    const y = function () {
        return {breakpoint: "small", bothSize: "3x-large"}
    }, I = function (P) {
        return [P]
    }, s = function () {
        return {minWidth: "x-small", slidesPerView: 1.5, spaceBetween: 10}
    }, b = function () {
        return {minWidth: "medium", slidesPerView: 3.5, spaceBetween: 20}
    }, E = function () {
        return {minWidth: "small", slidesPerView: 2.5, spaceBetween: 10}
    }, R = function (P, W, u) {
        return [P, W, u]
    }, X = function () {
        return {name: "moo cow", id: "moo"}
    }, pe = function () {
        return {name: "woof dog", id: "woof"}
    }, re = function (P, W) {
        return [P, W]
    }, Ce = function () {
        return {breakpoint: "small", size: "x-large"}
    }, Z = function () {
        return {breakpoint: "medium", size: "2x-large"}
    };
    let V = (() => {
        class P {
            constructor() {
                this.socialMediaAccounts = t.$, this.onetwo = "holy smokes, batman", this.spacing = h[3], this.colors = Object.assign({}, i.colors), this.slides = [{
                    title: '"hello" world',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"moo" cow', randomHeight: 350 * Math.random() + 100}, {
                    title: '"woof" dog',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"baah" sheep', randomHeight: 350 * Math.random() + 100}, {
                    title: '"meow" cat',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"bleet" goat', randomHeight: 350 * Math.random() + 100}, {
                    title: '"howl" wolf',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"screech" cockatoo', randomHeight: 350 * Math.random() + 100}]
            }

            ngOnInit() {
                this.int = window.setInterval(() => {
                    const a = Math.random();
                    this.moo = `${a}`;
                    const x = Math.abs(Math.floor(a * h.length - 1));
                    this.spacing = h[x], this.testParagraph.nativeElement.text = `${a}`, this.testParagraph.nativeElement.bool = !this.testParagraph.nativeElement.bool
                }, 2e3);
                const u = this.video.nativeElement;
                u.currentTime = 4.5, setTimeout(() => {
                    u.style.opacity = 1, u.play()
                }, 2e3)
            }

            gotoPane(u) {
                this.carousel.nativeElement.gotoSlide(u)
            }

            onCurrentPaneChange(u) {
                console.log("pane change!!!", u.detail.currentActiveSlides)
            }

            onDropdownSelect(u) {
                console.log("drop down is selected!!!", u)
            }

            onCheck(u) {
                console.log("checked state change!!!", u)
            }

            onMoo(u) {
                console.log("!!!!!!!!!!!! moooo", u)
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-demo-sheet"]],
            viewQuery: function (u, a) {
                if (1 & u && (e.Gf(n, 7), e.Gf(C, 7), e.Gf(k, 7)), 2 & u) {
                    let x;
                    e.iGM(x = e.CRH()) && (a.video = x.first), e.iGM(x = e.CRH()) && (a.carousel = x.first), e.iGM(x = e.CRH()) && (a.testParagraph = x.first)
                }
            },
            decls: 126,
            vars: 43,
            consts: [[2, "display", "flex", "flex-direction", "column", "align-items", "center", "padding", "30px 30px 100px", "height", "100%", "background", "#bbbbbb"], ["simpleTextKind", "large", 3, "simpleTextDisplay"], ["src", "/assets/videos/stars-opens.mp4", "muted", "", "playsinline", "", "preload", "auto", 1, "video"], ["video", ""], ["text", "moo cow"], ["testParagraph", ""], ["furColor", "red", "bodyColor", "gold", "gemColor", "yellowgreen"], ["icon", "marketplace_cart"], ["href", "https://google.com", "kind", "tag"], ["href", "https://google.com", "kind", "help"], ["href", "https://google.com", "kind", "small"], ["href", "https://google.com", "icon", "set_core", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "fillColor", "colors.white"], ["href", "https://google.com", "icon", "marketplace_cart", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "leftIconPosition", ""], ["href", "https://google.com", "icon", "set_core", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "verticalLayout", ""], ["text", "Special Button", "enableSounds", "", "icon", "set_core"], ["text", "Special alt Button", "enableSounds", "", "invertColoring", "", "leftIconPosition", "", "icon", "tribe_dragon"], ["top", "large", 3, "responsiveSize"], ["text", "This is a text link"], ["both", "x-large"], ["size", "large", "text", "large primary button"], ["text", "primary button", "enableSounds", "", "icon", "set_core"], ["text", "secondary button", "enableSounds", ""], ["text", "subtle button"], [2, "display", "block", "overflow", "auto", "padding", "30px 30px 100px", "height", "100%", "background", "#ccc"], ["progress", "50"], ["bottom", "5x-large", "top", "3x-large"], [2, "color", "black", 3, "click"], ["both", "large"], ["text", "GOTO pane 4", "size", "large", 3, "click"], ["spaceBetween", "20", "slidesPerView", "2.2", "data-carousel-kind", "multi slide carousel with an uneven number of slides per screen", 1, "carousel", 3, "onSlideChange"], ["carousel", ""], ["class", "carousel__slide", 3, "ngStyle", 4, "ngFor", "ngForOf"], ["spaceBetween", "0", "slidesPerView", "1", "data-carousel-kind", "multi slide carousel with responsive slidesPerView", 1, "carousel", 3, "responsiveBreakpoints", "onSlideChange"], ["bottom", "large"], ["spaceBetween", "10", "centeredSlides", "true", "slidesPerView", "3", "data-carousel-kind", "multi slide carousel with centered slides", 1, "carousel", 3, "onSlideChange"], ["spaceBetween", "30", "slidesPerView", "3", "data-carousel-kind", "simple multi slide carousel", 1, "carousel", 3, "onSlideChange"], ["spaceBetween", "0", "slidesPerView", "1", "data-carousel-kind", "single slide carousel", 1, "carousel", 3, "onSlideChange"], [1, "useJsVars"], ["bottom", "2x-large"], [3, "fillColor"], ["labelText", "moo cow", 3, "checked", "onCheck"], ["labelText", "large moo cow", "labelPlacement", "right", "size", "large", 3, "checked", "onCheck"], ["top", "small"], ["placeholderText", "select something", 3, "items", "onSelect"], ["top", "6x-large"], ["iconLigature", "social_telegram", 1, "customGradient"], ["top", "medium"], ["kind", "help", "fillColor", "colors.gunmetal.300"], ["both", "4x-large"], ["iconLigature", "social_telegram", "fillColor", "colors.gold.300", 2, "font-size", "100px"], ["iconLigature", "friends_helmet", "fillGradient", "gradients.god.magic", "fillGradientTarget", "top right", 2, "font-size", "100px"], ["fillColor", "colors.dark.700"], ["bottom", "3x-large"], [3, "disabled"], [3, "loading"], ["size", "large", "href", "https://google.com"], ["size", "large", "align", "left", "fillGradient", "gradients.god.nature", "fillGradientTarget", "bottom"], ["top", "x-large"], ["size", "large", "fillColor", "colors.light.100", 1, "bannerHeadings__largeHeading", 3, "responsiveBreakpoints"], ["bottom", "medium", 3, "top"], ["size", "small", "align", "center"], ["bottom", "6x-large", 3, "top"], ["size", "x-small", "align", "right"], ["align", "left", "kind", "tag"], ["align", "left", "kind", "tag", "text", "simple text can also be fed input text like so... (this text is 100% untouchable from the external global styles)"], ["align", "left", "kind", "help", "fillGradient", "gradients.apocyan.simple", 1, "customSimpleText"], ["top", "2x-large", "bottom", "medium"], ["kind", "large"], ["kind", "help", "align", "right"], [3, "accounts"], ["kind", "tag"], [1, "carousel__slide", 3, "ngStyle"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "div", 0), e._UZ(1, "gu-countdown-timer"), e._UZ(2, "gu-countdown-timer", 1), e._UZ(3, "video", 2, 3), e._UZ(5, "gu-paragraph-text", 4, 5), e._UZ(7, "gu-regular-crypto-kitty", 6), e.qZA(), e.TgZ(8, "div", 0), e.TgZ(9, "gu-plain-square-button", 7), e._uU(10, " plain square button "), e.qZA(), e.TgZ(11, "gu-simple-text-button", 8), e._uU(12, " simple text button "), e.qZA(), e.TgZ(13, "gu-simple-text-button", 9), e._uU(14, " simple text button "), e.qZA(), e.TgZ(15, "gu-simple-text-button", 10), e._uU(16, " simple text button "), e.qZA(), e.TgZ(17, "gu-plain-square-button", 11), e._uU(18, " plain square "), e.qZA(), e.TgZ(19, "gu-plain-square-button", 12), e._uU(20, " Cart "), e.qZA(), e.TgZ(21, "gu-plain-square-button", 13), e._uU(22, " plain square vertical "), e.qZA(), e._UZ(23, "gu-special-hex-button", 14), e._UZ(24, "gu-special-hex-button", 15), e.TgZ(25, "gu-vertical-space", 16), e.TgZ(26, "gu-paragraph-text"), e._uU(27, "Arcu bibendum at varius vel. Nec feugiat nisl pretium fusce id velit ut tortor. Vel eros donec ac odio. "), e._UZ(28, "gu-simple-text-button", 17), e.qZA(), e.qZA(), e.TgZ(29, "gu-vertical-space", 18), e._UZ(30, "gu-primary-hex-button", 19), e.qZA(), e._UZ(31, "gu-primary-hex-button", 20), e.TgZ(32, "gu-vertical-space", 18), e._UZ(33, "gu-secondary-hex-button", 21), e.qZA(), e._UZ(34, "gu-subtle-hex-button", 22), e.qZA(), e.TgZ(35, "div", 23), e._UZ(36, "gu-hex-progress-bar", 24), e.TgZ(37, "gu-vertical-space", 25), e.TgZ(38, "button", 26), e.NdJ("click", function () {
                    return a.gotoPane(1)
                }), e._uU(39, "goto pane 2"), e.qZA(), e.TgZ(40, "gu-vertical-space", 27), e.TgZ(41, "gu-primary-hex-button", 28), e.NdJ("click", function () {
                    return a.gotoPane(3)
                }), e.qZA(), e.qZA(), e.TgZ(42, "gu-carousel", 29, 30), e.NdJ("onSlideChange", function (l) {
                    return a.onCurrentPaneChange(l)
                }), e.YNc(44, w, 2, 5, "div", 31), e.qZA(), e.TgZ(45, "gu-vertical-space", 27), e.TgZ(46, "gu-carousel", 32), e.NdJ("onSlideChange", function (l) {
                    return a.onCurrentPaneChange(l)
                }), e.YNc(47, D, 2, 4, "div", 31), e.qZA(), e.qZA(), e.TgZ(48, "gu-vertical-space", 33), e.TgZ(49, "gu-carousel", 34), e.NdJ("onSlideChange", function (l) {
                    return a.onCurrentPaneChange(l)
                }), e.YNc(50, m, 2, 4, "div", 31), e.qZA(), e.qZA(), e.TgZ(51, "gu-carousel", 35), e.NdJ("onSlideChange", function (l) {
                    return a.onCurrentPaneChange(l)
                }), e.YNc(52, A, 2, 4, "div", 31), e.qZA(), e.TgZ(53, "gu-vertical-space", 27), e.TgZ(54, "gu-carousel", 36), e.NdJ("onSlideChange", function (l) {
                    return a.onCurrentPaneChange(l)
                }), e.YNc(55, S, 2, 4, "div", 31), e.qZA(), e.qZA(), e.qZA(), e.TgZ(56, "gu-vertical-space", 33), e.TgZ(57, "div", 37), e._uU(58, " this text is styled thru plain old angular sass, using a color var from our new variables system "), e.qZA(), e.qZA(), e.TgZ(59, "gu-vertical-space", 38), e.TgZ(60, "gu-paragraph-text", 39), e._uU(61), e.qZA(), e.qZA(), e.TgZ(62, "gu-vertical-space", 33), e.TgZ(63, "gu-checkbox-input", 40), e.NdJ("onCheck", function (l) {
                    return a.onMoo(l)
                }), e.qZA(), e.TgZ(64, "gu-checkbox-input", 41), e.NdJ("onCheck", function (l) {
                    return a.onCheck(l)
                }),e.qZA(),e.qZA(),e.TgZ(65, "gu-vertical-space", 42),e.TgZ(66, "gu-dropdown", 43),e.NdJ("onSelect", function (l) {
                    return a.onDropdownSelect(l)
                }),e.qZA(),e.qZA(),e.TgZ(67, "gu-vertical-space", 44),e._UZ(68, "gu-icon", 45),e.TgZ(69, "gu-vertical-space", 46),e.TgZ(70, "gu-simple-text", 47),e._uU(71),e.qZA(),e.qZA(),e.qZA(),e.TgZ(72, "gu-vertical-space", 48),e._UZ(73, "gu-icon", 49),e._UZ(74, "gu-icon", 50),e.TgZ(75, "gu-vertical-space", 46),e.TgZ(76, "gu-simple-text", 51),e._uU(77, " ^ this is an icon - with a gradient fill input, and this text has a color fill input "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(78, "gu-vertical-space", 52),e.TgZ(79, "gu-primary-hex-button", 53),e._uU(80, "disabled button"),e.qZA(),e.TgZ(81, "gu-primary-hex-button", 54),e._uU(82, "loading button"),e.qZA(),e.TgZ(83, "gu-vertical-space", 46),e.TgZ(84, "gu-primary-hex-button", 55),e._uU(85, " moo cow "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(86, "gu-heading-text", 56),e.TgZ(87, "h1"),e._uU(88, 'this is a "large" left aligned heading'),e.qZA(),e.qZA(),e.TgZ(89, "gu-vertical-space", 57),e.TgZ(90, "gu-heading-text", 58),e._uU(91, " This heading has responsively set font-size "),e.qZA(),e.qZA(),e.TgZ(92, "gu-vertical-space", 59),e.TgZ(93, "gu-heading-text", 60),e.TgZ(94, "h3"),e._uU(95),e.qZA(),e.qZA(),e.qZA(),e.TgZ(96, "gu-vertical-space", 61),e.TgZ(97, "gu-heading-text", 62),e.TgZ(98, "h6"),e._uU(99, 'this is an "x-small" right aligned heading'),e.qZA(),e.qZA(),e.qZA(),e.TgZ(100, "gu-vertical-space", 33),e.TgZ(101, "gu-simple-text", 63),e._uU(102, ' this is the simple-text "tag" kind ... '),e.qZA(),e.qZA(),e._UZ(103, "gu-simple-text", 64),e.TgZ(104, "gu-simple-text", 65),e._uU(105, ' this is the simple-text "help" kind ... (note how simple-text displays as an inline element, not block) '),e.qZA(),e.TgZ(106, "gu-vertical-space", 66),e.TgZ(107, "gu-paragraph-text", 67),e._uU(108, ' this is "paragraph-text", kind: "large". note how it has line height, passes it\'s sizing down to "simple-text", and is '),e.TgZ(109, "em"),e._uU(110, "block level"),e.qZA(),e._uU(111, " - just like "),e.TgZ(112, "strong"),e._uU(113, "regular paragraphs!"),e.qZA(),e._UZ(114, "br"),e._uU(115),e.qZA(),e.qZA(),e.TgZ(116, "gu-vertical-space", 59),e.TgZ(117, "gu-paragraph-text", 68),e._uU(118, ' this is the "help" kind of paragraph-text '),e._UZ(119, "br"),e._uU(120, " Bibendum est ultricies integer quis auctor elit sed. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Malesuada pellentesque elit eget gravida cum sociis natoque penatibus et. Donec massa sapien faucibus et. Felis imperdiet proin fermentum leo vel orci porta non. Augue neque gravida in fermentum et sollicitudin ac orci. Ac tincidunt vitae semper quis. "),e.qZA(),e.qZA(),e._UZ(121, "gu-social-buttons-row", 69),e.TgZ(122, "gu-paragraph-text", 70),e._uU(123, ' this is the "tag" kind of paragraph-text '),e._UZ(124, "br"),e._uU(125, " Arcu bibendum at varius vel. Nec feugiat nisl pretium fusce id velit ut tortor. Vel eros donec ac odio. Ante metus dictum at tempor commodo ullamcorper a. Hendrerit gravida rutrum quisque non tellus orci ac auctor augue. Non curabitur gravida arcu ac. "),e.qZA(),e.qZA()), 2 & u && (e.xp6(2), e.Q6J("simpleTextDisplay", !0), e.xp6(23), e.Q6J("responsiveSize", e.VKq(24, I, e.DdM(23, y))), e.xp6(19), e.Q6J("ngForOf", a.slides), e.xp6(2), e.Q6J("responsiveBreakpoints", e.kEZ(29, R, e.DdM(26, s), e.DdM(27, b), e.DdM(28, E))), e.xp6(1), e.Q6J("ngForOf", a.slides), e.xp6(3), e.Q6J("ngForOf", a.slides), e.xp6(2), e.Q6J("ngForOf", a.slides), e.xp6(3), e.Q6J("ngForOf", a.slides), e.xp6(5), e.s9C("fillColor", a.colors.dark[500]), e.xp6(1), e.hij(" this text is styled using direct variable input from an angular scope variable: ", a.colors.dark[500], " (colors.dark[500]) "), e.xp6(2), e.Q6J("checked", !0), e.xp6(1), e.Q6J("checked", !1), e.xp6(2), e.Q6J("items", e.WLB(35, re, e.DdM(33, X), e.DdM(34, pe))), e.xp6(5), e.hij(" ^ this is an icon - with a custom scss gradient as text-fill ", a.onetwo, " (this text is colored as gunmetal[300]) "), e.xp6(8), e.Q6J("disabled", !0), e.xp6(2), e.s9C("loading", !0), e.xp6(9), e.Q6J("responsiveBreakpoints", e.WLB(40, re, e.DdM(38, Ce), e.DdM(39, Z))), e.xp6(2), e.s9C("top", a.spacing), e.xp6(3), e.hij('this is a "small" center aligned heading > spacing: ', a.spacing, ""), e.xp6(1), e.s9C("top", a.spacing), e.xp6(19), e.hij(" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut eu sem integer vitae justo. Amet porttitor ", a.moo, " eget dolor morbi non arcu risus quis varius. Est velit egestas dui id ornare arcu odio ut. Integer quis auctor elit sed vulputate mi sit. Dui ut ornare lectus sit amet est placerat. Cras sed felis eget velit aliquet sagittis. "), e.xp6(1), e.s9C("top", a.spacing), e.xp6(5), e.Q6J("accounts", a.socialMediaAccounts))
            },
            directives: [p.sg, p.PC],
            styles: ["[_nghost-%COMP%]{display:block}.useJsVars[_ngcontent-%COMP%]{color:#affaed}.customGradient[_ngcontent-%COMP%]{font-size:200px;background:linear-gradient(to bottom,#9DE764 0%,#5AC33F 50%,#4C772F 100%)}.customSimpleText[_ngcontent-%COMP%]{border:2px dotted gold;margin-left:8px;padding:16px}.carousel[_ngcontent-%COMP%]{box-shadow:inset 0 0 0 2px #0003}.carousel[_ngcontent-%COMP%]:before{content:attr(data-carousel-kind);position:absolute;z-index:1;bottom:0px;left:3px;color:#0000004d}.carousel__slide[_ngcontent-%COMP%]{background:yellowgreen;box-shadow:inset 0 0 0 3px gold}.carousel__slide[_ngcontent-%COMP%]:first-child{background:rebeccapurple}.carousel__slide[_ngcontent-%COMP%]:last-child{background:dodgerblue}.video[_ngcontent-%COMP%]{width:60%;margin:0 auto;opacity:0}"]
        }), P
    })(), ie = {numbers: {randomNumber: 0}, text: {randomText: "moo"}};
    setInterval(() => {
        ie = Object.assign(Object.assign({}, ie), {numbers: {randomNumber: Math.random()}})
    }, 400);
    var be = o(73307), G = o(94057);
    const ae = ["carousel"], ve = function (P) {
        return {"championButtons__button--active": P}
    };

    function Te(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "div", 14), e.NdJ("click", function () {
                const l = e.CHM(u).index;
                return e.oxw().gotoChampionSlide(l)
            }), e.TgZ(1, "picture"), e._UZ(2, "source", 15), e._UZ(3, "source", 16), e._UZ(4, "img", 17), e.qZA(), e.qZA()
        }
        if (2 & P) {
            const u = W.$implicit, a = W.index, x = e.oxw();
            e.Q6J("ngClass", e.VKq(13, ve, x.activeChampionIndex === a)), e.xp6(1), e.Gre("championButtons__button__picture championButtons__button__picture--", u.name, ""), e.xp6(1), e.FAE("srcset", "\n          //images.godsunchained.com/art2/250/", u.protoId, ".webp 250w,\n          //images.godsunchained.com/art2/375/", u.protoId, ".webp 375w,\n          //images.godsunchained.com/art2/500/", u.protoId, ".webp 500w,\n          //images.godsunchained.com/art2/720/", u.protoId, ".webp 720w\n        ", e.LSH), e.xp6(1), e.FAE("srcset", "\n          //images.godsunchained.com/art2/250/", u.protoId, ".jpg 250w,\n          //images.godsunchained.com/art2/375/", u.protoId, ".jpg 375w,\n          //images.godsunchained.com/art2/500/", u.protoId, ".jpg 500w,\n          //images.godsunchained.com/art2/720/", u.protoId, ".jpg 720w\n        ", e.LSH), e.xp6(1), e.MGl("src", "//images.godsunchained.com/art2/500/", u.protoId, ".jpg", e.LSH)
        }
    }

    function Re(P, W) {
        if (1 & P && (e.TgZ(0, "div", 18), e.TgZ(1, "picture", 19), e._UZ(2, "source", 20), e._UZ(3, "source", 21), e._UZ(4, "img", 22), e.qZA(), e.TgZ(5, "gu-vertical-space", 23), e.TgZ(6, "gu-heading-text", 24), e._uU(7), e.qZA(), e.qZA(), e.TgZ(8, "gu-paragraph-text", 25), e._uU(9), e.qZA(), e.TgZ(10, "gu-vertical-space", 26), e.TgZ(11, "gu-simple-text-button", 27), e._uU(12, " Read more "), e.qZA(), e.qZA(), e.TgZ(13, "gu-paragraph-text", 28), e._uU(14), e.qZA(), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.xp6(2), e.bRH("srcset", "\n            //images.godsunchained.com/art2/250/", u.protoId, ".webp 250w,\n            //images.godsunchained.com/art2/375/", u.protoId, ".webp 375w,\n            //images.godsunchained.com/art2/500/", u.protoId, ".webp 500w,\n            //images.godsunchained.com/art2/720/", u.protoId, ".webp 720w,\n            //images.godsunchained.com/art2/1024/", u.protoId, ".webp 1024w,\n            //images.godsunchained.com/art2/1280/", u.protoId, ".webp 1280w,\n            //images.godsunchained.com/art2/1440/", u.protoId, ".webp 1440w\n          ", e.LSH), e.xp6(1), e.bRH("srcset", "\n            //images.godsunchained.com/art2/250/", u.protoId, ".jpg 250w,\n            //images.godsunchained.com/art2/375/", u.protoId, ".jpg 375w,\n            //images.godsunchained.com/art2/500/", u.protoId, ".jpg 500w,\n            //images.godsunchained.com/art2/720/", u.protoId, ".jpg 720w,\n            //images.godsunchained.com/art2/1024/", u.protoId, ".jpg 1024w,\n            //images.godsunchained.com/art2/1280/", u.protoId, ".jpg 1280w,\n            //images.godsunchained.com/art2/1440/", u.protoId, ".jpg 1440w\n          ", e.LSH), e.xp6(1), e.MGl("src", "//images.godsunchained.com/art2/720/", u.protoId, ".jpg", e.LSH), e.xp6(3), e.hij(" ", u.title, " "), e.xp6(2), e.hij(" ", u.description, " "), e.xp6(2), e.s9C("href", u.link), e.xp6(3), e.hij(" ", u.byline, " ")
        }
    }

    let z = (() => {
        class P {
            constructor() {
                this.activeChampionIndex = 0, this.champions = G.zy.Y, this.routes = G.CF.J
            }

            ngOnInit() {
            }

            gotoChampionSlide(u) {
                this.carousel.nativeElement.gotoSlide(u)
            }

            onChampionCarouselUpdate(u) {
                this.activeChampionIndex = u.detail.currentActiveSlides[0]
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-season1-champion-section"]],
            viewQuery: function (u, a) {
                if (1 & u && e.Gf(ae, 7), 2 & u) {
                    let x;
                    e.iGM(x = e.CRH()) && (a.carousel = x.first)
                }
            },
            decls: 18,
            vars: 4,
            consts: [["size", "large", "fillGradient", "gradients.gold.simple", "align", "center", 1, "heading"], [1, "championButtons"], ["class", "championButtons__button", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "championCarouselWrapper"], [1, "championCarousel", 3, "onSlideChange"], ["carousel", ""], ["class", "championCarousel__championSlide", 4, "ngFor", "ngForOf"], [1, "sideBarImage", "sideBarImage--left"], ["srcset", "/assets/images/expansion-1/carousel-sidebar.webp", "type", "image/webp"], ["srcset", "/assets/images/expansion-1/carousel-sidebar.png", "type", "image/png"], ["src", "/assets/images/expansion-1/carousel-sidebar.png", "alt", "", 1, "sideBarImage__img"], [1, "sideBarImage", "sideBarImage--right"], ["both", "x-large", 1, "ctaButtonRow"], ["text", "Buy Packs", "size", "large", 3, "disabled", "href"], [1, "championButtons__button", 3, "ngClass", "click"], ["sizes", "20vw", "type", "image/webp", 3, "srcset"], ["sizes", "20vw", "type", "image/jpg", 3, "srcset"], ["alt", "", 1, "championButtons__button__picture__img", 3, "src"], [1, "championCarousel__championSlide"], [1, "championCarousel__championSlide__imgWrapper"], ["sizes", "75vw", "type", "image/webp", 3, "srcset"], ["sizes", "75vw", "type", "image/jpg", 3, "srcset"], ["alt", "", 1, "championCarousel__championSlide__imgWrapper__img", 3, "src"], ["both", "x-large"], ["size", "x-small", "fillColor", "colors.light.100", "align", "center"], ["fillColor", "colors.light.100", "align", "center", "kind", "large", 1, "championCarousel__championSlide__description"], ["top", "large", "bottom", "3x-large", 1, "readMoreLink"], ["kind", "tag", "target", "_blank", "fillColor", "colors.apocyan.300", "align", "center", 3, "href"], ["align", "center", "kind", "large"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "gu-heading-text", 0), e._uU(1, " Meet your champions\n"), e.qZA(), e.TgZ(2, "div", 1), e.YNc(3, Te, 5, 15, "div", 2), e.qZA(), e.TgZ(4, "div", 3), e.TgZ(5, "gu-carousel", 4, 5), e.NdJ("onSlideChange", function (l) {
                    return a.onChampionCarouselUpdate(l)
                }), e.YNc(7, Re, 15, 19, "div", 6), e.qZA(), e.TgZ(8, "picture", 7), e._UZ(9, "source", 8), e._UZ(10, "source", 9), e._UZ(11, "img", 10), e.qZA(), e.TgZ(12, "picture", 11), e._UZ(13, "source", 8), e._UZ(14, "source", 9), e._UZ(15, "img", 10), e.qZA(), e.qZA(), e.TgZ(16, "gu-vertical-space", 12), e._UZ(17, "gu-primary-hex-button", 13), e.qZA()), 2 & u && (e.xp6(3), e.Q6J("ngForOf", a.champions), e.xp6(4), e.Q6J("ngForOf", a.champions), e.xp6(10), e.Q6J("disabled", !0)("href", a.routes.buyPacks.path))
            },
            directives: [p.sg, p.mk],
            styles: ['@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{position:relative;padding:80px 0;display:flex;flex-direction:column;background:url(/assets/images/expansion-1/Lysander_LC_BG.jpg);background-size:cover;background-position:center}[_nghost-%COMP%]:before{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background:linear-gradient(to bottom,#0A0A0A 0%,rgba(10,10,10,.8) 50%)}[_nghost-%COMP%]:after{content:"";position:absolute;left:0;right:0;bottom:0;height:12px;background:radial-gradient(47.52% 50% at 50% 50%,#C6A052 0%,rgba(198,160,82,0) 100%)}.heading[_ngcontent-%COMP%]{position:relative;padding:0 20px}.championButtons[_ngcontent-%COMP%]{margin:20px auto 48px;padding:0 28px;display:grid;grid-template-columns:repeat(3,1fr);grid-column-gap:28px;grid-row-gap:28px;max-width:"768px";width:100%}@media screen and (min-width: 512px){.championButtons[_ngcontent-%COMP%]{grid-template-columns:repeat(6,1fr)}}.championButtons__button[_ngcontent-%COMP%]{border-radius:50%;width:100%;padding-bottom:100%;transition:box-shadow .25s ease-in-out;position:relative;overflow:hidden;cursor:pointer}.championButtons__button__picture[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}.championButtons__button__picture__img[_ngcontent-%COMP%]{height:300%;width:300%;object-fit:cover;position:absolute;top:0;left:50%;transform:translate(-50%,-10%)}.championButtons__button__picture--lysander[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-50%,-9%)}.championButtons__button__picture--neferu[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-45%,-14%)}.championButtons__button__picture--valka[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-52%,-6.5%)}.championButtons__button__picture--pallas[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-54%,-7%)}.championButtons__button__picture--selena[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-50%,-8%)}.championButtons__button--active[_ngcontent-%COMP%]{box-shadow:0 0 20px #f7ea9b}.championCarouselWrapper[_ngcontent-%COMP%]{margin:0 auto;width:85%;max-width:1000px;position:relative}@media screen and (min-width: 768px){.championCarouselWrapper[_ngcontent-%COMP%]{width:65%}}.sideBarImage[_ngcontent-%COMP%]{display:none;position:absolute;top:-3%;left:-6.25%;width:12.5%;user-select:none;pointer-events:none}.sideBarImage--right[_ngcontent-%COMP%]{left:auto;right:-6.25%;transform:rotateY(180deg)}.sideBarImage__img[_ngcontent-%COMP%]{display:block;width:100%}.championCarousel[_ngcontent-%COMP%]{width:100%;margin:auto;overflow:hidden}.championCarousel__championSlide[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;position:relative}.championCarousel__championSlide__imgWrapper[_ngcontent-%COMP%]{width:100%;padding-bottom:50%;position:relative;overflow:hidden}@media screen and (min-width: 512px){.sideBarImage[_ngcontent-%COMP%]{display:block}.championCarousel[_ngcontent-%COMP%]{border-radius:4vw 4vw 0 0}.championCarousel__championSlide__imgWrapper[_ngcontent-%COMP%]{border-radius:0 0 4vw 4vw}}.championCarousel__championSlide__imgWrapper__img[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;width:100%;object-fit:cover;object-position:center 20%}.championCarousel__championSlide__description[_ngcontent-%COMP%]{width:75%;margin:0 auto}.ctaButtonRow[_ngcontent-%COMP%]{display:flex;justify-content:center}.readMoreLink[_ngcontent-%COMP%]{text-align:center;display:flex;justify-content:center}.readMoreLink__text[_ngcontent-%COMP%]{padding-bottom:4px;border-bottom:2px solid #8BE1E0}.bottomContent[_ngcontent-%COMP%]{position:relative}']
        }), P
    })();
    var he = o(72986);
    o(99454);
    const q = ["emailInput"], ge = function () {
        return ["email"]
    };
    let ce = (() => {
        class P {
            constructor(u) {
                this.authHostService = u, this.emailValue = {value: "", valid: !1}, this.disableSubmitButton = !1
            }

            submitEmail() {
                if (!this.emailValue.valid) return !1;
                this.authHostService.post(`/subscribe/${this.emailValue.value}`).pipe((0, he.q)(1)).subscribe({
                    next: u => {
                        "success" === u ? (this.inputElement.nativeElement.setCurrentStatus({
                            status: "success",
                            helpText: "Success! You\u2019re all signed up."
                        }), this.disableSubmitButton = !0) : this.handleError()
                    }, error: () => this.handleError()
                })
            }

            handleError() {
                this.inputElement.nativeElement.setCurrentStatus({
                    status: "error",
                    helpText: "Encountered an error. Please try again"
                })
            }

            onValueChange(u) {
                this.emailValue = {value: u.detail.newValue, valid: u.detail.valid}
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(be.LI))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-newsletter-signup-form"]],
            viewQuery: function (u, a) {
                if (1 & u && e.Gf(q, 5), 2 & u) {
                    let x;
                    e.iGM(x = e.CRH()) && (a.inputElement = x.first)
                }
            },
            inputs: {emailValue: "emailValue", disableSubmitButton: "disableSubmitButton"},
            decls: 7,
            vars: 4,
            consts: [["fillColor", "colors.light[100]", "align", "center", "size", "x-small"], [3, "submit"], ["errorHelpText", "Please enter a valid email", "placeholderText", "Enter your email here", 1, "textInput", 3, "validateToPattern", "onValueChange"], ["emailInput", ""], ["size", "large", 3, "disabled", "horizontalStretch", "click"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "gu-heading-text", 0), e._uU(1, " signup for our newsletter!\n"), e.qZA(), e.TgZ(2, "gu-form-context", 1), e.NdJ("submit", function () {
                    return a.submitEmail()
                }), e.TgZ(3, "gu-text-input", 2, 3), e.NdJ("onValueChange", function (l) {
                    return a.onValueChange(l)
                }), e.qZA(), e.TgZ(5, "gu-primary-hex-button", 4), e.NdJ("click", function () {
                    return a.submitEmail()
                }), e._uU(6, " submit "), e.qZA(), e.qZA()), 2 & u && (e.xp6(3), e.Q6J("validateToPattern", e.DdM(3, ge)), e.xp6(2), e.Q6J("disabled", a.disableSubmitButton || !a.emailValue.valid)("horizontalStretch", !1))
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;box-sizing:border-box}", ".textInput[_ngcontent-%COMP%] {\n      margin: 16px 0 24px;\n    }\n\n    .textInput[_ngcontent-%COMP%]   .helpText[_ngcontent-%COMP%], .textInput[_ngcontent-%COMP%]   .inputArea__input[_ngcontent-%COMP%], .textInput[_ngcontent-%COMP%]   .inputArea__input[_ngcontent-%COMP%]::placeholder {\n      text-align: center;\n    }\n\n    gu-primary-hex-button[_ngcontent-%COMP%] {\n      min-width: 170px;\n    }"]
        }), P
    })(), Se = (() => {
        class P {
            constructor(u, a) {
                this.authService = u, this.authHostService = a
            }

            get isLoggedIn() {
                return this.authService.isLoggedIn()
            }

            ngOnInit() {
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(be.mI), e.Y36(be.LI))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-lore-route"]],
            decls: 33,
            vars: 0,
            consts: [[1, "headerStrip"], ["top", "4x-large"], ["fillColor", "colors.light.100", "align", "center", "size", "x-large"], ["bottom", "4x-large", "top", "large", 1, "headerStrip__bodyCopy"], ["fillColor", "colors.light.100", "align", "center", "kind", "large"], [1, "bandedStrip"], ["both", "x-large"], ["fillGradient", "gradients.gold.simple", "align", "center", "size", "small"], ["top", "medium"], ["kind", "help", "align", "center"], ["both", "medium"], ["src", "/assets/images/weird-spacer-thing.svg", 1, "weirdSpacingImage"], ["kind", "tag", "align", "center"], ["top", "4x-large", "bottom", "2x-large", 1, "loreIntroText"], ["kind", "large"], ["top", "large"], ["href", "https://blog.godsunchained.com/2020/01/24/chapter-1-citadel-of-the-gods/", 1, "readMoreLink"], ["kind", "tag", "fillColor", "colors.apocyan.300", "align", "center", 1, "readMoreLink__text"], ["top", "6x-large"], ["size", "x-small", "align", "center", 1, "mysteryHeading"], ["top", "2x-large", 1, "ctaButtonRow"], ["text", "Visit blog", "href", "https://blog.godsunchained.com/"], ["both", "6x-large"], [1, "newsLetterSignUp"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "header", 0), e.TgZ(1, "gu-vertical-space", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3, " LORE "), e.qZA(), e.qZA(), e.TgZ(4, "gu-vertical-space", 3), e.TgZ(5, "gu-paragraph-text", 4), e._uU(6, " Come, mortal! Settle in and be regaled by tales that traverse the Nine Realms, recount the deeds of the champions of Eucos, and whisper of the gods themselves. "), e.qZA(), e.qZA(), e.qZA(), e.TgZ(7, "div", 5), e.TgZ(8, "gu-vertical-space", 6), e.TgZ(9, "gu-heading-text", 7), e._uU(10, " Citadel of the gods "), e.qZA(), e.TgZ(11, "gu-vertical-space", 8), e.TgZ(12, "gu-paragraph-text", 9), e._uU(13, " Welcome to the trial "), e.qZA(), e.qZA(), e.TgZ(14, "gu-vertical-space", 10), e._UZ(15, "img", 11), e.qZA(), e.TgZ(16, "gu-paragraph-text", 12), e._uU(17, " by kelly digges "), e.qZA(), e.qZA(), e.qZA(), e.TgZ(18, "gu-vertical-space", 13), e.TgZ(19, "gu-paragraph-text", 14), e._uU(20, " You've seen the statues of the gods in temples, of course. Incorruptible Thaeriel, Vengeful Auros, Gentle Aeona. To mortal worshipers, the statues are the gods: terrible and beautiful. But the reality is they are the pale shadow of a blazing truth. This is the story of one fateful meeting, and a divine contest that would alter the course of the Nine Relams for aeons to come. "), e.qZA(), e.TgZ(21, "gu-vertical-space", 15), e.TgZ(22, "a", 16), e.TgZ(23, "gu-simple-text", 17), e._uU(24, " Read more "), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e._UZ(25, "cerberus-season1-champion-section"), e.TgZ(26, "gu-vertical-space", 18), e.TgZ(27, "gu-heading-text", 19), e._uU(28, " FOR MORE GODS UNCHAINED CONTENT & UPDATES "), e.qZA(), e.TgZ(29, "gu-vertical-space", 20), e._UZ(30, "gu-primary-hex-button", 21), e.qZA(), e.qZA(), e.TgZ(31, "gu-vertical-space", 22), e._UZ(32, "cerberus-newsletter-signup-form", 23), e.qZA())
            },
            directives: [z, ce],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{display:block}.headerStrip[_ngcontent-%COMP%]{background:url(/assets/images/colour-palace-background2.jpg);background-size:cover;background-position:center;display:flex;flex-direction:column}.headerStrip__bodyCopy[_ngcontent-%COMP%]{max-width:800px;width:80%;margin-left:auto;margin-right:auto}.bandedStrip[_ngcontent-%COMP%]{background:#0F1B27;display:flex;flex-direction:column}.weirdSpacingImage[_ngcontent-%COMP%]{display:block;width:148px;margin-left:auto;margin-right:auto}.loreIntroText[_ngcontent-%COMP%]{width:80%;max-width:800px;margin-left:auto;margin-right:auto}.readMoreLink[_ngcontent-%COMP%]{display:inline-flex;justify-content:flex-start}.readMoreLink__text[_ngcontent-%COMP%]{padding-bottom:4px;border-bottom:2px solid #8BE1E0}.ctaButtonRow[_ngcontent-%COMP%]{display:flex;justify-content:center}.mysteryHeading[_ngcontent-%COMP%]{max-width:500px;padding:0 20px;margin-left:auto;margin-right:auto}.signupForm[_ngcontent-%COMP%]{width:85%;max-width:450px;display:flex;flex-direction:column;margin-left:auto;margin-right:auto}.signupForm__emailInput[_ngcontent-%COMP%]{background:#0F1B27;color:#7192b0;border:1px solid #527493;text-align:center;padding:12px 20px;width:100%}.signupForm__emailInput[_ngcontent-%COMP%]::placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.signupForm__emailInput[_ngcontent-%COMP%]:-ms-input-placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.signupForm__emailInput[_ngcontent-%COMP%]:-moz-placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.newsLetterSignUp[_ngcontent-%COMP%]{max-width:530px;width:85%;margin-left:auto;margin-right:auto}"]
        }), P
    })();
    var it = o(39029), Pe = o(69039), tt = o(5284), T = o(84876), Y = o(32830), J = o(98539), Me = o(97223),
        at = o(19444);
    const Ge = "FLIP_A_CARD", Qe = "TOGGLE_OPEN_PACK_VIDEO_VISIBILITY", He = "TOGGLE_OPEN_PACK_CARDS",
        Ze = "SET_OPEN_PACK_VIDEO_ID", Ue = "RESET_TEMPLE", Fe = "SET_CURRENT_UNOPENED_PACKS",
        At = "TOGGLE_PACK_VISIBILITY", ht = "TOGGLE_RAFFLE_TICKETS", Ve = "SET_CURRENT_OPEN_CHEST",
        st = "SET_OPEN_CHEST_VIDEO_ID", Ht = "TOGGLE_OPEN_CHEST_VIDEO_FINISHED", ye = "PARTIAL_RESET_TEMPLE",
        Pt = "TOGGLE_OPEN_PACK_VIDEO_LOADING", ee = "TOGGLE_OPEN_PACK_VIDEO_PLAYING",
        ne = "TOGGLE_OPEN_CHEST_VIDEO_PLAYING", _e = P => ({type: Fe, payload: P}), Ut = P => ({type: st, payload: P}),
        nt = P => ({type: Ht, payload: P}), es = P => ({type: Pt, payload: P}), xs = P => ({type: ne, payload: P}),
        jt = P => ({type: ee, payload: P}), Vt = {
            flippedCards: {},
            openPackVideoId: "",
            openChestVideoId: "",
            openChestVideoComplete: !1,
            openChestVideoPlaying: !1,
            openPackVideoVisible: !1,
            openPackVideoLoading: !0,
            openPackVideoPlaying: !1,
            firstPackCardsVisible: !1,
            packImageVisible: !1,
            currentUnOpenedPacks: [],
            currentOpenPack: {},
            currentOpenChest: {},
            raffleTicketsDisplayVisible: !1
        }, qe = (0, Me.MT)((P = Vt, {type: W, payload: u}) => {
            switch (W) {
                case Ze:
                    return Object.assign(Object.assign({}, P), {openPackVideoId: u});
                case He:
                    return Object.assign(Object.assign({}, P), {firstPackCardsVisible: "boolean" == typeof u ? u : !P.firstPackCardsVisible});
                case Qe:
                    return Object.assign(Object.assign({}, P), {openPackVideoVisible: "boolean" == typeof u ? u : !P.openPackVideoVisible});
                case Ge:
                    return Object.assign(Object.assign({}, P), {flippedCards: Object.assign(Object.assign({}, P.flippedCards), {[u]: !P.flippedCards[u]})});
                case At:
                    return Object.assign(Object.assign({}, P), {packImageVisible: "boolean" == typeof u ? u : !P.packImageVisible});
                case Fe:
                    return Object.assign(Object.assign({}, P), {
                        currentUnOpenedPacks: u,
                        currentOpenPack: Object.assign(Object.assign({}, u[0]), {id: (0, at.v4)()})
                    });
                case ht:
                    return Object.assign(Object.assign({}, P), {raffleTicketsDisplayVisible: !P.raffleTicketsDisplayVisible});
                case Ve:
                    return Object.assign(Object.assign({}, P), {currentOpenChest: u});
                case st:
                    return Object.assign(Object.assign({}, P), {openChestVideoId: u, openChestVideoComplete: !1});
                case Ht:
                    return Object.assign(Object.assign({}, P), {openChestVideoComplete: "boolean" == typeof u ? u : !P.openChestVideoComplete});
                case ne:
                    return Object.assign(Object.assign({}, P), {openChestVideoPlaying: "boolean" == typeof u ? u : !P.openChestVideoPlaying});
                case Pt:
                    return Object.assign(Object.assign({}, P), {openPackVideoLoading: "boolean" == typeof u ? u : !P.openPackVideoLoading});
                case ee:
                    return Object.assign(Object.assign({}, P), {openPackVideoPlaying: "boolean" == typeof u ? u : !P.openPackVideoPlaying});
                case ye:
                    return Object.assign(Object.assign({}, Vt), {packImageVisible: !0});
                case Ue:
                    return Object.assign({}, Vt);
                default:
                    return P
            }
        }, Vt), Nt = {
            "pack-open-videos-4k order--neutral--shiny-legendary": "548697244",
            "pack-open-videos-4k order--neutral--legendary": "548697153",
            "pack-open-videos-4k order--neutral--epic": "548697068",
            "pack-open-videos-4k order--neutral--rare": "548694554",
            "pack-open-videos-4k trial--order--rarity": "463265598",
            "pack-open-videos-4k trial--neutral--shiny-legendary": "463265542",
            "pack-open-videos-4k trial--neutral--rare": "463265469",
            "pack-open-videos-4k trial--neutral--legendary": "463265417",
            "pack-open-videos-4k trial--neutral--epic": "463265363",
            "pack-open-videos-4k trial--neutral--common": "463265311",
            "pack-open-videos-4k trial--disorder--rarity": "463265255",
            "pack-open-videos-4k legacy--core--godneutral--rare": "463265203",
            "pack-open-videos-4k genesis--neutral--shiny-legendary": "463265120",
            "pack-open-videos-4k genesis--neutral--rare": "463265057",
            "pack-open-videos-4k genesis--neutral--legendary": "463264991",
            "pack-open-videos-4k genesis--neutral--epic": "463264938",
            "pack-open-videos-4k core--war--rare": "463264899",
            "pack-open-videos-4k core--neutral--rare": "463264821",
            "pack-open-videos-4k core--neutral--legendary": "463264772",
            "pack-open-videos-4k core--neutral--epic": "463264729",
            "pack-open-videos-4k core--neutral--common": "463264662",
            "pack-open-videos-4k core--nature--rare": "463264605",
            "pack-open-videos-4k core--magic--rare": "463264440",
            "pack-open-videos-4k core--light--rare": "463264367",
            "pack-open-videos-4k core--deception--rare": "463264293",
            "pack-open-videos-4k core--death--rare": "463264255",
            "pack-open-videos-720p core--death--rare": "670981848",
            "pack-open-videos-720p core--deception--rare": "670981876",
            "pack-open-videos-720p core--light--rare": "670981908",
            "pack-open-videos-720p core--magic--rare": "670981942",
            "pack-open-videos-720p core--nature--rare": "670981975",
            "pack-open-videos-720p core--neutral--common": "670982011",
            "pack-open-videos-720p core--neutral--epic": "670982040",
            "pack-open-videos-720p core--neutral--legendary": "670982074",
            "pack-open-videos-720p core--neutral--rare": "670982092",
            "pack-open-videos-720p core--war--rare": "670982121",
            "pack-open-videos-720p genesis--neutral--epic": "668081903",
            "pack-open-videos-720p genesis--neutral--legendary": "668081947",
            "pack-open-videos-720p genesis--neutral--rare": "668081980",
            "pack-open-videos-720p genesis--neutral--shiny-legendary": "668082010",
            "pack-open-videos-720p legacy--core--godneutral--rare": "668082037",
            "pack-open-videos-720p order--neutral--epic": "668082077",
            "pack-open-videos-720p order--neutral--legendary": "668082105",
            "pack-open-videos-720p order--neutral--rare": "668082141",
            "pack-open-videos-720p order--neutral--shiny-legendary": "668082169",
            "pack-open-videos-720p trial--disorder--rarity": "670985556",
            "pack-open-videos-720p trial--neutral--common": "668082239",
            "pack-open-videos-720p trial--neutral--epic": "668082280",
            "pack-open-videos-720p trial--neutral--legendary": "668082333",
            "pack-open-videos-720p trial--neutral--rare": "668082372",
            "pack-open-videos-720p trial--neutral--shiny-legendary": "668082399",
            "pack-open-videos-720p trial--order--rarity": "668082441",
            "chest-videos-open order--neutral--rare": "492326155",
            "chest-videos-open order--neutral--legendary": "492325362",
            "chest-videos-open trial--neutral--rare": "405676839",
            "chest-videos-open trial--neutral--legendary": "405676811",
            "chest-videos-open genesis--neutral--rare": "405676790",
            "chest-videos-open genesis--neutral--legendary": "405676766"
        };
    var Kt = o(80102), de = o(26532), bt = o(61462);
    const Rt = Y.iv`
  ${(0, de.asCssProp)((0, de.setBoxSizing)())}

  :host {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    ${(0, de.asCssProp)((0, bt.userSelect)("none"))};
  }

  :host(.visible) {
    ${(0, de.asCssProp)((0, bt.userSelect)("auto"))};
  }

  gu-controllable-vimeo-embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    ${(0, de.asCssProp)(i.uifx.userSelect("none"))};
  }

  @keyframes fadeAndSlideUp {
    0% {
      opacity: 0;
      transform: translateY(5%);
    }
    100% {
      opacity: 1;
      transform: translateY(0%);
    }
  }

  .chestOpenVideo {
    background: linear-gradient(
      to bottom,
      ${(0, de.asCssProp)(i.colors.gunmetal[500])} 0%,
      ${(0, de.asCssProp)(i.colors.gunmetal[700])} 100%
    );
    animation: fadeAndSlideUp 0.5s ease-in-out;
    ${(0, de.asCssProp)(i.uifx.userSelect("auto"))};
    z-index: 2;
  }

  .chestOpenVideo--aboveAllLayers {
    z-index: 3;
  }

  .unOpenedChestsListing {
    position: absolute;
    top: calc(var(--ch) * 5);
    right: calc(var(--ch) * 5);
    display: flex;
    flex-direction: column;
    z-index: 2;
  }

  .unOpenedChestsListing__chest {
    position: relative;
    padding: 0;
    padding-right: calc(var(--cw) * 6);
    padding-left: calc(var(--cw) * 1);
    margin-bottom: calc(var(--ch) * 5);
    display: flex;
    align-items: center;
    justify-content: flex-start;
    background: ${(0, de.asCssProp)(i.colors.dark[900])};
    cursor: pointer;
    opacity: 0;
    border: 1px solid ${(0, de.asCssProp)(i.colors.dark[500])};
    ${(0, de.asCssProp)(i.animation.slowTransition("opacity"))};
  }

  .unOpenedChestsListing__chest:active {
    border: 1px solid ${(0, de.asCssProp)(i.colors.light[100])} !important;
    background: ${(0, de.asCssProp)(i.colors.light[100])} !important;
  }

  .unOpenedChestsListing__chest:active .unOpenedChestsListing__chest__openNowText {
    ${(0, de.asCssProp)(i.gradients.textFill(i.colors.dark[900]))};
  }

  .unOpenedChestsListing__chest:active .unOpenedChestsListing__chest__count {
    color: ${(0, de.asCssProp)(i.colors.dark[900])};
    border-color: ${(0, de.asCssProp)(i.colors.dark[900])};
  }

  .unOpenedChestsListing__chest:hover {
    border: 1px solid ${(0, de.asCssProp)(i.colors.gunmetal[700])};
    background: ${(0, de.asCssProp)(i.colors.gunmetal[700])};
  }

  .unOpenedChestsListing__chest:nth-child(1) {
    transition-delay: ${0}ms;
  }
  .unOpenedChestsListing__chest:nth-child(2) {
    transition-delay: ${200}ms;
  }
  .unOpenedChestsListing__chest:nth-child(3) {
    transition-delay: ${400}ms;
  }
  .unOpenedChestsListing__chest:nth-child(4) {
    transition-delay: ${600}ms;
  }

  .unOpenedChestsListing--visible .unOpenedChestsListing__chest {
    opacity: 1;
  }

  .unOpenedChestsListing__chest__picture {
    display: block;
    width: calc(var(--cw) * 7.5);
    height: calc(var(--cw) * 7.5 * 0.9183);
    /* chest image aspect ratio: 91.83%; */
    position: absolute;
    right: calc(var(--cw) * -1);
    top: 50%;
    transform: scaleX(-1) translateY(-50%);
  }

  .unOpenedChestsListing__chest__picture__img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .unOpenedChestsListing__chest__openNowText {
    padding: calc(var(--ch) * 2) 0;
  }

  .unOpenedChestsListing__chest__count {
    margin: 0 calc(var(--cw) * 1);
    padding: calc(var(--ch) * 0.6) calc(var(--cw) * 0.6);
    border: 1px solid ${(0, de.asCssProp)(i.colors.gold[500])};
  }

  .chestsCta {
    position: absolute;
    left: 8%;
    bottom: 7%;
    min-width: ${(0, de.asCssProp)((0, Kt.gridUnits)(50))};
    opacity: 0;
    ${(0, de.asCssProp)(i.uifx.userSelect("none"))};
    ${(0, de.asCssProp)(i.animation.slowTransition("opacity"))};
  }

  .chestsCta--visible {
    ${(0, de.asCssProp)(i.uifx.userSelect("auto"))};
    opacity: 1;
    z-index: 2;
  }
`;
    customElements.define("gu-temple-chest-layer", (0, it.x1)({
        renderer: function ({unOpenedChests: P = [], volume: W}) {
            const u = (0, T.sO)(null), a = (0, it.I0)(qe), {
                currentOpenChest: x,
                openChestVideoId: l,
                openChestVideoPlaying: M,
                openChestVideoComplete: F,
                openPackVideoVisible: le
            } = (0, it.v9)({
                store: qe,
                selector: me => ({
                    openChestVideoPlaying: me.openChestVideoPlaying,
                    openPackVideoVisible: me.openPackVideoVisible,
                    currentOpenChest: me.currentOpenChest,
                    openChestVideoId: me.openChestVideoId,
                    openChestVideoComplete: me.openChestVideoComplete
                })
            });
            (0, T.d4)(() => {
                if (this.isIos = tt.I5.isIos(), !x.set) return;
                let me = Nt[`chest-videos-open ${x.set}--neutral--${x.rarity}`];
                me || (me = Nt["chest-videos-open order--neutral--rare"]), a(Ut(me))
            }, [x]), (0, T.d4)(() => {
                le ? this.classList.remove("visible") : this.classList.add("visible")
            }, [le]);
            return Y.dy`
    ${l ? Y.dy`
          <gu-controllable-vimeo-embed
            class=${(0, J.$)({chestOpenVideo: !0, "chestOpenVideo--aboveAllLayers": M})}
            autoPlay
            videoId=${l}
            pauseOnEndFrame
            @onVideoEnd=${() => {
                a(nt(!0)), a(xs(!1)), this.dispatchEvent(new CustomEvent("onChestOpened", {
                    detail: Object.assign({}, x),
                    bubbles: !0,
                    composed: !0
                }))
            }}
            ?domRef=${(0, Pe.Q)(u)}
            ?muted=${this.isIos}
            .volume=${W}
          ></gu-controllable-vimeo-embed>
        ` : null}
    ${P.length ? Y.dy`
          <div
            class=${(0, J.$)({unOpenedChestsListing: !0, "unOpenedChestsListing--visible": !le})}
          >
            ${P.reduce((me, we) => {
                let De;
                return me.find((ct, fe) => {
                    const ue = we.set === ct.set && we.rarity === ct.rarity;
                    return ue && (De = fe), ue
                }) ? me[De].quantityCount += 1 : me.push(Object.assign(Object.assign({}, we), {quantityCount: 1})), me
            }, []).map(me => {
                const we = `${me.set}--neutral--${me.rarity}`;
                return Y.dy`
                  <div class="unOpenedChestsListing__chest" @click=${() => (me => {
                    a(xs(!0)), me.rarity === x.rarity && me.set === x.set ? (a(nt(!1)), u.current.playVideo(0)) : a((P => ({
                        type: Ve,
                        payload: P
                    }))(me))
                })(me)}>
                    <picture class="unOpenedChestsListing__chest__picture">
                      <source
                        type="image/webp"
                        srcset="
                          //images.godsunchained.com/transparent-chest-images--open/434/${we}.webp 434w,
                          //images.godsunchained.com/transparent-chest-images--open/256/${we}.webp 256w,
                          //images.godsunchained.com/transparent-chest-images--open/128/${we}.webp 128w
                        "
                      />
                      <source
                        type="image/png"
                        srcset="
                          //images.godsunchained.com/transparent-chest-images--open/434/${we}.png 434w,
                          //images.godsunchained.com/transparent-chest-images--open/256/${we}.png 256w,
                          //images.godsunchained.com/transparent-chest-images--open/128/${we}.png 128w
                        "
                      />
                      <img
                        src="//images.godsunchained.com/transparent-chest-images--open/128/${we}.png"
                        alt="chest image"
                        class="unOpenedChestsListing__chest__picture__img"
                      />
                    </picture>
                    <gu-heading-text
                      fillGradient=${i.gradients.gold.simple()}
                      size="3x-small"
                      .responsiveSize=${[{size: "2x-small", breakpoint: "small"}]}
                      class="unOpenedChestsListing__chest__openNowText"
                    >
                      Open 1 Now
                    </gu-heading-text>
                    <gu-paragraph-text
                      kind="small"
                      class="unOpenedChestsListing__chest__count"
                      fillColor=${i.colors.gold[500]}
                      fontWeight="bold"
                    >
                      ${me.quantityCount}x
                    </gu-paragraph-text>
                  </div>
                `
            })}
          </div>
        ` : null}

    <gu-primary-hex-button
      size="large"
      class=${(0, J.$)({chestsCta: !0, "chestsCta--visible": F})}
      @click=${() => {
                a(nt(!1)), a(Ut(null))
            }}
    >
      Back to Packs
    </gu-primary-hex-button>
  `
        }, props: {properties: {unOpenedChests: {type: Array}, volume: {type: Number}}, styles: Rt}
    }));
    const Qt = Y.iv`
  :host {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    background: ${(0, de.asCssProp)(i.colors.gunmetal[900])};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0.94;
  }

  .icon {
    font-size: ${(0, de.asCssProp)((0, Kt.gridUnits)(20))};
  }

  .text {
    max-width: 350px;
  }

  @media screen and (min-width: ${(0, de.asCssProp)(i.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      display: none;
    }
  }
`;
    customElements.define("gu-temple-overlay-layer", (0, it.x1)({
        renderer: function () {
            return Y.dy`
    <gu-icon iconLigature="alert_triangle" align="center" fillColor=${i.colors.god.war.secondary} class="icon"></gu-icon>
    <gu-vertical-space top="x-large">
      <gu-paragraph-text class="text" align="center" fillColor=${i.colors.light[100]}>
        <slot></slot>
      </gu-paragraph-text>
    </gu-vertical-space>
  `
        }, props: {properties: {message: {type: String}}, styles: Qt}
    }));
    var Je = o(49749), ts = o(46461), Ps = o(77518);
    const Xe = "/assets/audio/temple", Ys = {
        diamond__common: `${Xe}/temple_reveal_diamond_common`,
        diamond__rare: `${Xe}/temple_reveal_diamond_rare`,
        diamond__epic: `${Xe}/temple_reveal_diamond_epic`,
        diamond__legendary: `${Xe}/temple_reveal_diamond_legendary`,
        gold__common: `${Xe}/temple_reveal_gold_common`,
        gold__rare: `${Xe}/temple_reveal_gold_rare`,
        gold__epic: `${Xe}/temple_reveal_gold_epic`,
        gold__legendary: `${Xe}/temple_reveal_gold_legendary`,
        shadow__common: `${Xe}/temple_reveal_shadow_common`,
        shadow__rare: `${Xe}/temple_reveal_shadow_rare`,
        shadow__epic: `${Xe}/temple_reveal_shadow_epic`,
        shadow__legendary: `${Xe}/temple_reveal_shadow_legendary`,
        meteorite__common: `${Xe}/temple_reveal_meteorite_common`,
        meteorite__rare: `${Xe}/temple_reveal_meteorite_rare`,
        meteorite__epic: `${Xe}/temple_reveal_meteorite_epic`,
        meteorite__legendary: `${Xe}/temple_reveal_meteorite_legendary`,
        plain__common: `${Xe}/temple_reveal_plain_common`,
        plain__rare: `${Xe}/temple_reveal_plain_rare`,
        plain__epic: `${Xe}/temple_reveal_plain_epic`,
        plain__legendary: `${Xe}/temple_reveal_plain_legendary`
    }, ks = Y.iv`
  ${(0, de.asCssProp)((0, de.setBoxSizing)())}

  :host {
    position: absolute;
    width: 100%;
    /* Add some padding so that scrollbars don't flicker while things are being
    rotate transformed... */
    padding: calc(var(--ch) * 5) calc(var(--cw) * 5) calc(var(--ch) * 15);
    top: calc(var(--ch) * 5);
    left: 0;
    overflow-x: auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    ${(0, de.asCssProp)((0, bt.userSelect)("none"))};
  }

  :host(.visible) {
    z-index: 1;
    ${(0, de.asCssProp)((0, bt.userSelect)("auto"))};
  }

  .raffleTicketsArea {
    min-width: 155px;
    min-height: 88px;
    width: calc(var(--cw) * 18);
    height: calc(var(--ch) * 15);
    margin-right: calc(var(--cw) * 2);
    opacity: 0;
    display: flex;
    position: relative;
    cursor: pointer;
    ${(0, de.asCssProp)(i.animation.slowTransition("height"))};
    transition-property: height, transform;
  }

  .raffleTicketsArea--opened {
    height: calc(var(--ch) * (15 + 17.3));
  }

  .raffleTicketsArea__dropdown {
    position: absolute;
    background: ${(0, de.asCssProp)(i.gradients.gold.simple("bottom"))};
    padding: 3px;
    width: 68%;
    height: calc(var(--ch) * 17.3);
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    ${(0, de.asCssProp)((0, de.drawBottomHexShapePolygonMask)("calc(var(--ch) * 4)"))};
    ${(0, de.asCssProp)(i.animation.slowTransition("opacity"))};
  }

  .raffleTicketsArea--opened .raffleTicketsArea__dropdown {
    opacity: 1;
  }

  .raffleTicketsArea__dropdown__inner {
    width: 100%;
    height: 100%;
    background: ${(0, de.asCssProp)(i.colors.gunmetal[900])};
    ${(0, de.asCssProp)((0, de.drawBottomHexShapePolygonMask)("calc(var(--ch) * 3.9)"))};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: calc(var(--ch) * 4) 0 calc(var(--ch) * 6);
  }

  .raffleTicketsArea__dropdown__inner__label {
    font-size: calc(var(--cw) * 1);
  }

  /* @TODO: Due to the use of !important inside of our gu-heading-text control...
  this one little piece of text cannot use the standard control.
  Once we have done away with all global styles, this can be once again made into a
  standard heading text control */
  .raffleTicketsArea__dropdown__inner__value {
    font-family: ${(0, de.asCssProp)(i.typography.headingFont)};
    font-size: calc(var(--cw) * 2.2);
    line-height: 1;
    margin: calc(var(--ch) * 0.5) 0 0 0;
  }

  .raffleTicketsArea__ticketImage {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
  }

  .raffleTicketsArea__ticketImage__img {
    display: block;
    width: 100%;
  }

  .perspectiveWrapper {
    position: relative;
    width: calc(var(--cw) * 16);
    perspective: calc(var(--cw) * 50);
    opacity: 0;
  }

  .perspectiveWrapper:last-child {
    margin: 0;
  }

  .cardWrapper {
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    cursor: pointer;
  }

  .cardWrapper__frontFace,
  .cardWrapper__rearFace {
    ${(0, de.asCssProp)((0, bt.userSelect)("none"))};
    transform: rotateX(0deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /*
  @TEMP CODE DEBUG:
  (used to quickly style the cards and tickets GUI)
  ---------------------------------------- *
  .unlockedPackItems {
    opacity: 1;
  }
  .raffleTicketsArea,
  .cardWrapper {
    opacity: 1;
    ${(0, de.asCssProp)((0, bt.userSelect)("auto"))};
  }
  .cardWrapper__frontFace,
  .cardWrapper__rearFace {
    backface-visibility: visible;
  }
  /* -------------------------------------------- */

  .cardWrapper__frontFace {
    width: 100%;
    transform: rotateY(180deg);
    position: relative;
  }

  .cardWrapper__frontFace__bloom {
    position: absolute;
    right: 8%;
    width: 76%;
    top: 9%;
    height: 88%;
    border-radius: calc(var(--cw) * 3);
    opacity: 0;
    transform: scale(0.7);
    filter: brightness(1);
  }

  .cardWrapper__frontFace__bloom--rare {
    background: ${(0, de.asCssProp)(i.colors.rarity.rare)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, de.asCssProp)(i.colors.rarity.rare)};
  }
  .cardWrapper__frontFace__bloom--epic {
    background: ${(0, de.asCssProp)(i.colors.rarity.epic)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, de.asCssProp)(i.colors.rarity.epic)};
  }
  .cardWrapper__frontFace__bloom--legendary {
    background: ${(0, de.asCssProp)(i.colors.rarity.legendary)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, de.asCssProp)(i.colors.rarity.legendary)};
  }
  .cardWrapper__frontFace__bloom--mythic {
    background: ${(0, de.asCssProp)(i.colors.rarity.mythic)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, de.asCssProp)(i.colors.rarity.mythic)};
  }

  .cardWrapper__frontFace__scarcity {
    padding-left: calc(var(--cw) * 1);
    position: absolute;
    width: 100%;
    left: 0;
    top: calc(100% + (var(--ch) * 1.5));
  }

  .cardWrapper__frontFace__card {
    position: relative;
  }

  .cardWrapper__rearFace {
    position: absolute;
    top: 8%;
    height: 88%;
    width: 95%;
    right: 4.5%;
  }

  .cardWrapper__rearFace__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
`, ls = P => Ps.PW[P];
    customElements.define("gu-temple-pack-card-listing", (0, it.x1)({
        renderer: function ({}) {
            const W = (0, it.I0)(qe), [u, a] = (0, T.eJ)([]), {
                currentOpenPack: x,
                firstPackCardsVisible: l,
                raffleTicketsDisplayVisible: M,
                flippedCards: F
            } = (0, it.v9)({
                store: qe,
                selector: me => ({
                    flippedCards: me.flippedCards,
                    raffleTicketsDisplayVisible: me.raffleTicketsDisplayVisible,
                    firstPackCardsVisible: me.firstPackCardsVisible,
                    currentOpenPack: me.currentOpenPack
                })
            });
            (0, T.d4)(() => {
                l ? this.classList.add("visible") : this.classList.remove("visible"), Je.p8.to(this.shadowRoot.children, {
                    duration: l ? .3 : 0,
                    opacity: l ? 1 : 0,
                    stagger: l ? .15 : 0,
                    onComplete: () => {
                        l || le()
                    }
                })
            }, [l]), (0, T.d4)(() => {
                !x.cards || a([...x.cards.map(me => {
                    const {quality: we, rarity: De} = me, lt = Ys[`${ls(we - 1)}__${De}`];
                    return lt ? new ts.Howl({src: [`${lt}.ogg`, `${lt}.mp3`]}) : {
                        play: () => {
                        }, id: `${ls(we)}__${De}`
                    }
                })])
            }, [x]), (0, T.d4)(() => () => le(), []);
            const le = () => {
                Je.p8.set([this.shadowRoot.querySelectorAll(".cardWrapper"), this.shadowRoot.children], {clearProps: "all"})
            }, Ee = me => {
                W({type: Ge, payload: me});
                const we = this.shadowRoot.querySelectorAll(".perspectiveWrapper")[me].querySelector(".cardWrapper"),
                    De = we.querySelector(".cardWrapper__frontFace__bloom"), lt = !!F[me];
                lt || u[me].play(), Je.p8.killTweensOf([De, we]), Je.p8.set([De], {clearProps: "all"});
                const ct = Je.p8.timeline({paused: !0}),
                    fe = Je.p8.timeline({repeat: -1, repeatDelay: 1, delay: 1, yoyo: !0, paused: !0});
                fe.to(De, {duration: 1.2, filter: "brightness(1.5)"}).to(De, {
                    duration: 1.2,
                    filter: "brightness(1)"
                }), ct.to(we, {duration: .4, rotateY: lt ? 0 : 180, ease: "power2.inOut"}).to(De, {
                    duration: .7,
                    opacity: 1,
                    scale: 1.04,
                    ease: "power2.inOut"
                }, "-=0.2").to(De, {
                    duration: .4,
                    opacity: .78,
                    scale: .88,
                    ease: "power2.inOut"
                }).add(fe.play(), "loopingBloom"), ct.play()
            };
            return Y.dy`
    ${x.raffleTickets ? Y.dy`
          <div
            class=${(0, J.$)({raffleTicketsArea: !0, "raffleTicketsArea--opened": M})}
          >
            <div
              class=${(0, J.$)({raffleTicketsArea__dropdown: !0})}
            >
              <div class="raffleTicketsArea__dropdown__inner">
                <gu-paragraph-text
                  kind="tag"
                  align="center"
                  class="raffleTicketsArea__dropdown__inner__label"
                  fillGradient=${i.gradients.gold.simple()}
                >
                  Draw Tickets
                </gu-paragraph-text>

                <gu-paragraph-text
                  kind="tag"
                  align="center"
                  class="raffleTicketsArea__dropdown__inner__label"
                  fillGradient=${i.gradients.gold.simple()}
                >
                  Received
                </gu-paragraph-text>

                <h3 class="raffleTicketsArea__dropdown__inner__value">${x.raffleTickets}</h3>
              </div>
            </div>
            <picture class="raffleTicketsArea__ticketImage" @click=${() => W({type: ht})}>
              <source
                srcset="
                  /assets/images/collectables-art/collectables-art--raffle-ticket@3x.webp 687w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@2x.webp 458w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@1x.webp 229w
                "
                type="image/webp"
              />
              <source
                srcset="
                  /assets/images/collectables-art/collectables-art--raffle-ticket@3x.png 687w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@2x.png 458w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@1x.png 229w
                "
                type="image/png"
              />
              <img
                src="/assets/images/collectables-art/collectables-art--raffle-ticket@1x.png"
                alt=""
                class="raffleTicketsArea__ticketImage__img"
              />
            </picture>
          </div>
        ` : null}
    ${x.cards ? x.cards.map((me, we) => Y.dy`
            <div class="perspectiveWrapper">
              <div class=${(0, J.$)({cardWrapper: !0})} @click=${() => Ee(we)}>
                <div class="cardWrapper__frontFace">
                  <i class="cardWrapper__frontFace__bloom cardWrapper__frontFace__bloom--${me.rarity}"></i>
                  <gu-card-picture
                    protoId=${me.proto}
                    quality=${me.quality}
                    class="cardWrapper__frontFace__card"
                  ></gu-card-picture>

                  ${null}
                </div>
                <picture class="cardWrapper__rearFace">
                  <source
                    type="image/webp"
                    srcset="
                      //images.godsunchained.com/rear-card-face-images/1024/regular-gu-rear-card-face.webp 1024w,
                      //images.godsunchained.com/rear-card-face-images/720/regular-gu-rear-card-face.webp   720w,
                      //images.godsunchained.com/rear-card-face-images/512/regular-gu-rear-card-face.webp   512w,
                      //images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.webp   256w
                    "
                  />
                  <source
                    type="image/png"
                    srcset="
                      //images.godsunchained.com/rear-card-face-images/1024/regular-gu-rear-card-face.png 1024w,
                      //images.godsunchained.com/rear-card-face-images/720/regular-gu-rear-card-face.png   720w,
                      //images.godsunchained.com/rear-card-face-images/512/regular-gu-rear-card-face.png   512w,
                      //images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.png   256w
                    "
                  />
                  <img
                    src="//images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.png"
                    alt="GodsUnchained rear card face image"
                    class="cardWrapper__rearFace__img"
                  />
                </picture>
              </div>
            </div>
          `) : null}
  `
        }, props: {properties: {volume: {type: Number}}, styles: ks}
    }));
    var ws = o(92436), Po = o(71459), Xs = o.n(Po), cs = o(63082), ss = o.n(cs), ds = o(65171);
    const Es = Y.iv`
  ${(0, de.asCssProp)((0, de.setBoxSizing)())}

  :host {
    height: calc(100vh - var(--headerAreaHeight));
    display: flex;
    flex-flow: column nowrap;
    overflow: hidden;
  }

  .videoAspectRatio {
    margin: auto;
    position: relative;
    padding-bottom: 56.25%;
    width: 100%;
  }

  .videoAspectRatio__img {
    display: none;
  }

  @media screen and (min-aspect-ratio: 1282/800) {
    .videoAspectRatio {
      height: 100%;
      width: auto;
      padding-bottom: 0;
    }
    .videoAspectRatio__img {
      display: block;
      width: auto;
      height: 100%;
    }
  }

  gu-controllable-vimeo-embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    ${(0, de.asCssProp)(i.uifx.userSelect("none"))};
  }

  .packOpenVideo {
    ${(0, de.asCssProp)(i.animation.standardTransition("opacity"))};
  }

  .packOpenVideo--hidden {
    opacity: 0;
  }

  /*

    @NOTE: position the drag target area roughly above the podium center

  */
  .targetDropArea {
    position: absolute;
    top: calc(var(--ch) * 32.8);
    left: calc(var(--cw) * 48.5);
    width: calc(var(--ch) * 24.5);
    height: calc(var(--ch) * 31);
  }

  /*

    @NOTE: position the draggable pack, roughly above the left podium stand

  */

  .draggablePackHitzone {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .draggablePack {
    position: absolute;
    bottom: calc(var(--ch) * 10);
    left: calc(var(--cw) * 8.7);
    width: calc(var(--ch) * 34);
    transform: rotate(-4deg);
    opacity: 0;
    cursor: pointer;
    ${(0, de.asCssProp)(i.animation.slowTransition("opacity"))};
  }

  .draggablePack--touchable {
    ${(0, de.asCssProp)((0, bt.userSelect)("auto"))};
  }

  .draggablePack--visible {
    opacity: 1;
  }

  .draggablePack--disabled {
    opacity: 0;
  }

  .draggablePack__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
    filter: drop-shadow(0 0 calc(var(--ch) * 5) rgba(${(0, de.asCssProp)((0, ds.hexToCssRgbString)(i.colors.black))}, 0.6));
  }

  .helpText {
    position: absolute;
    top: calc(var(--ch) * 67.5);
    left: calc(var(--cw) * 41);
    width: calc(var(--cw) * 30);
    text-align: center;
  }

  .unlockedPackItems {
    position: absolute;
    width: 100%;
    /* Add some padding so that scrollbars dont flick on while things are being
    rotate transformed... */
    padding: calc(var(--ch) * 5) calc(var(--cw) * 5) calc(var(--ch) * 15);
    top: calc(var(--ch) * 5);
    left: 0;
    overflow-x: auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    opacity: 0;
  }

  .unlockedPackItems--visible {
    opacity: 1;
    z-index: 1;
  }

  .unlockedPackItems__raffleTicketsArea {
    min-width: 155px;
    min-height: 88px;
    width: calc(var(--cw) * 18);
    height: calc(var(--ch) * 15);
    margin-right: calc(var(--cw) * 2);
    opacity: 0;
    display: flex;
    position: relative;
    ${(0, de.asCssProp)((0, bt.userSelect)("none"))};
    ${(0, de.asCssProp)(i.animation.slowTransition("height"))};
    transition-property: height, transform;
  }

  .unlockedPackItems__raffleTicketsArea--opened {
    height: calc(var(--ch) * (15 + 17.3));
  }

  .unlockedPackItems__raffleTicketsArea__dropdown {
    position: absolute;
    background: ${(0, de.asCssProp)(i.gradients.gold.simple("bottom"))};
    padding: 3px;
    width: 68%;
    height: calc(var(--ch) * 17.3);
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    ${(0, de.asCssProp)((0, de.drawBottomHexShapePolygonMask)("calc(var(--ch) * 4)"))};
    ${(0, de.asCssProp)(i.animation.slowTransition("opacity"))};
  }

  .unlockedPackItems__raffleTicketsArea--opened .unlockedPackItems__raffleTicketsArea__dropdown {
    opacity: 1;
  }

  .unlockedPackItems__raffleTicketsArea__dropdown__inner {
    width: 100%;
    height: 100%;
    background: ${(0, de.asCssProp)(i.colors.gunmetal[900])};
    ${(0, de.asCssProp)((0, de.drawBottomHexShapePolygonMask)("calc(var(--ch) * 3.9)"))};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: calc(var(--ch) * 4) 0 calc(var(--ch) * 6);
  }

  .unlockedPackItems__raffleTicketsArea__dropdown__inner__label {
    font-size: calc(var(--cw) * 1);
  }

  /* @TODO: Due to the use of !important inside of our gu-heading-text control...
  this one little piece of text cannot use the standard control.
  Once we have done away with all global styles, this can be once again made into a
  standard heading text control */
  .unlockedPackItems__raffleTicketsArea__dropdown__inner__value {
    font-family: ${(0, de.asCssProp)(i.typography.headingFont)};
    font-size: calc(var(--cw) * 2.2);
    line-height: 1;
    margin: calc(var(--ch) * 0.5) 0 0 0;
  }

  .unlockedPackItems__raffleTicketsArea__ticketImage {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
  }

  .unlockedPackItems__raffleTicketsArea__ticketImage__img {
    display: block;
    width: 100%;
  }

  .unlockedPackItems__3dPerspectiveWrapper {
    position: relative;
    width: calc(var(--cw) * 16);
    perspective: calc(var(--cw) * 50);
  }

  .unlockedPackItems__3dPerspectiveWrapper:last-child {
    margin: 0;
  }

  .unlockedPackItems__cardWrapper {
    ${(0, de.asCssProp)((0, bt.userSelect)("none"))};
    ${(0, de.asCssProp)(i.animation.slowTransition("transform"))};
    transition-timing-function: ease-out;
    height: 100%;
    opacity: 0;
    position: relative;
    transform-style: preserve-3d;
    transition-property: transform, opacity;
  }

  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(1) .unlockedPackItems__cardWrapper {
    transition-delay: ${0}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(2) .unlockedPackItems__cardWrapper {
    transition-delay: ${150}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(3) .unlockedPackItems__cardWrapper {
    transition-delay: ${300}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(4) .unlockedPackItems__cardWrapper {
    transition-delay: ${450}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(5) .unlockedPackItems__cardWrapper {
    transition-delay: ${600}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(6) .unlockedPackItems__cardWrapper {
    transition-delay: ${750}ms;
  }

  .unlockedPackItems__cardWrapper--flipped {
    transform: rotateY(180deg);
    transition-delay: 0ms !important;
  }

  .unlockedPackItems--visible .unlockedPackItems__cardWrapper,
  .unlockedPackItems--visible .unlockedPackItems__raffleTicketsArea {
    opacity: 1;
    cursor: pointer;
    ${(0, de.asCssProp)((0, bt.userSelect)("auto"))};
  }

  .unlockedPackItems__cardWrapper__frontFace,
  .unlockedPackItems__cardWrapper__rearFace {
    transform: rotateX(0deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /*
  @TEMP CODE DEBUG:
  (used to quickly style the cards and tickets GUI)
  ---------------------------------------- *
  .unlockedPackItems {
    opacity: 1;
  }
  .unlockedPackItems__raffleTicketsArea,
  .unlockedPackItems__cardWrapper {
    opacity: 1;
    ${(0, de.asCssProp)((0, bt.userSelect)("auto"))};
  }
  .unlockedPackItems__cardWrapper__frontFace,
  .unlockedPackItems__cardWrapper__rearFace {
    backface-visibility: visible;
  }
  .unlockedPackItems__cardWrapper__rearFace {
    opacity: 0.5;
  }
  /* -------------------------------------------- */

  .unlockedPackItems__cardWrapper__frontFace {
    width: 100%;
    transform: rotateY(180deg);
    position: relative;
  }

  .unlockedPackItems__cardWrapper__frontFace__scarcity {
    padding-left: calc(var(--cw) * 1);
    position: absolute;
    width: 100%;
    left: 0;
    top: calc(100% + (var(--ch) * 1.5));
  }

  .unlockedPackItems__cardWrapper__rearFace {
    position: absolute;
    top: 6%;
    height: 93%;
    width: 100%;
    right: 4.5%;
  }

  .unlockedPackItems__cardWrapper__rearFace__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .ctasArea {
    position: absolute;
    z-index: 1;
    bottom: 13%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
  }

  .ctasArea__cta {
    min-width: 200px;
  }

  .ctasArea__cta--buyPacksCta {
    margin-left: calc(var(--cw) * 12);
  }
`;
    customElements.define("gu-temple-view-layer", (0, it.x1)({
        renderer: function ({
                                unOpenedPacks: P = [],
                                unOpenedChests: W = [],
                                volume: u = .9,
                                headerAreaHeight: a = i.measurements.standardHeaderHeight
                            }) {
            const x = (0, T.sO)(null), l = (0, T.sO)(null), M = (0, T.sO)(null), F = (0, T.sO)(null),
                le = (0, T.sO)(null), Ee = (0, T.sO)(null), me = (0, it.I0)(qe), {
                    openPackVideoId: we,
                    openPackVideoVisible: De,
                    firstPackCardsVisible: lt,
                    flippedCards: ct,
                    packImageVisible: fe,
                    currentOpenPack: ue,
                    openPackVideoLoading: ut,
                    openPackVideoPlaying: Ot
                } = (0, it.v9)({
                    store: qe,
                    selector: ze => ({
                        openPackVideoId: ze.openPackVideoId,
                        openPackVideoVisible: ze.openPackVideoVisible,
                        firstPackCardsVisible: ze.firstPackCardsVisible,
                        flippedCards: ze.flippedCards,
                        packImageVisible: ze.packImageVisible,
                        currentOpenPack: ze.currentOpenPack,
                        openPackVideoLoading: ze.openPackVideoLoading,
                        openPackVideoPlaying: ze.openPackVideoPlaying
                    })
                });
            (0, T.d4)(() => {
                this.style.setProperty("--headerAreaHeight", `${a}px`)
            }, [a]), (0, T.d4)(() => {
                this.openPackVideoLoading = ut
            }, [ut]), (0, T.d4)(() => (zs.observe(le.current), () => {
                zs.unobserve(le.current), Ct(), No()
            }), []);
            const rt = () => {
                Ct(), this.gestureControl = new (Xs())(l.current, {
                    sensitivity: 0,
                    passive: !1,
                    capture: !0,
                    startDirectionLoopCount: 1
                }), this.gestureControl.on("pan.prestart", Xt), this.gestureControl.on("pan.start", xt), this.gestureControl.on("pan.all", rs), this.gestureControl.on("pan.end", Ft)
            }, Ct = () => {
                this.gestureControl && (this.gestureControl.removeListener("pan.prestart", Xt), this.gestureControl.removeListener("pan.start", xt), this.gestureControl.removeListener("pan.all", rs), this.gestureControl.removeListener("pan.end", Ft), this.gestureControl.destroy(), this.gestureControl = null)
            };
            (0, T.d4)(() => {
                if (!ue.set) return void Ct();
                rt();
                let ze = Nt[`pack-open-videos-720p ${ue.set}--${ue.god}--${ue.rarity}`];
                ze || (ze = Nt["pack-open-videos-720p core--neutral--rare"]), me((P => ({type: Ze, payload: P}))(ze))
            }, [ue]), (0, T.d4)(() => {
                !ue.set && P.length && me(_e(P))
            }, [P]);
            const Xt = ze => {
                    ze.sourceEvent.preventDefault()
                }, xt = ze => {
                    this.terminatedPan = !1, Je.p8.set(x.current, {x: 0, y: 0})
                }, rs = ({deltaX: ze, deltaY: Hs, sourceEvent: fo}) => {
                    if (qt(), tt.dz.checkOutOfBounds({
                        x: fo.pageX,
                        y: fo.pageY,
                        width: this.dimensions.width,
                        height: this.dimensions.height,
                        top: this.dimensions.top,
                        left: this.dimensions.left,
                        tolerance: 20
                    })) return this.terminatedPan = !0, Ft({});
                    this.terminatedPan || Je.p8.set(x.current, {
                        x: this.openPackVideoLoading ? .2 * ze : ze,
                        y: this.openPackVideoLoading ? .2 * Hs : Hs
                    })
                }, Ft = ze => {
                    Je.p8.to(x.current, this.draggablePackIsIntersecting && !this.openPackVideoLoading ? {
                        rotation: -1,
                        x: 37.2 * this.dimensions.cw + "px",
                        y: -25 * this.dimensions.ch + "px",
                        onComplete: () => ho(),
                        duration: .3
                    } : {duration: .3, x: 0, y: 0})
                }, qt = ss()(() => {
                    this.draggablePackIsIntersecting = function (P, W) {
                        let u = !1;
                        return P && W && (u = !(P.right < W.left || P.left > W.right || P.bottom < W.top || P.top > W.bottom)), u
                    }(x.current.getBoundingClientRect(), this.dragTargetRectangle)
                }, 50), zs = new ws.do(ze => {
                    ze.forEach(Hs => is())
                }), is = ss()(() => {
                    const ze = le.current.getBoundingClientRect();
                    this.dimensions = {
                        ch: .01 * le.current.offsetHeight,
                        cw: .01 * le.current.offsetWidth,
                        width: ze.width,
                        height: ze.height,
                        top: ze.top,
                        left: ze.left
                    }, this.style.setProperty("--cw", `${this.dimensions.cw}px`), this.style.setProperty("--ch", `${this.dimensions.ch}px`), this.dragTargetRectangle = Ee.current.getBoundingClientRect()
                }, 500), ho = () => {
                    me({
                        type: Qe,
                        payload: !0
                    }), this.dispatchEvent(new CustomEvent("onPackOpened", {detail: {pack: ue}})), M.current.playVideo(), me(jt(!0))
                }, No = () => {
                    console.log("RESET TEMPLE CODE"), me({type: Ue}), Je.p8.set(x.current, {clearProps: "all"})
                }, Cs = fe && !De && ut, mo = !ue.set || Object.keys(ct).length === ue.cards.length,
                _o = mo && !P.length && fe;
            return Y.dy`
    <div class="videoAspectRatio" ?domRef=${(0, Pe.Q)(le)}>
      <img class="videoAspectRatio__img" alt="ratio image" src="/assets/images/ratio-images/16-x-9-ratio.png" />

      <gu-controllable-vimeo-embed
        class="introVideo"
        videoId="405676137"
        autoPlay
        pauseOnEndFrame
        muted
        @onVideoEnd=${() => me({type: At, payload: !0})}
        ?domRef=${(0, Pe.Q)(F)}
        .volume=${u}
      ></gu-controllable-vimeo-embed>

      <gu-controllable-vimeo-embed
        class=${(0, J.$)({packOpenVideo: !0, "packOpenVideo--hidden": !De})}
        pauseOnEndFrame
        startPausedOnFirstFrame
        videoId=${we}
        @onVideoLoading=${() => {
                me(es(!0))
            }}
        @onVideoReady=${() => {
                me(es(!1))
            }}
        @onVideoEnd=${() => {
                me(jt(!1))
            }}
        @onVideoProgress=${ze => {
                const {percent: Hs} = ze.detail;
                Hs >= .425 && !lt && me({type: He, payload: !0})
            }}
        ?domRef=${(0, Pe.Q)(M)}
        .volume=${u}
      ></gu-controllable-vimeo-embed>

      <i class="targetDropArea" ?domRef=${(0, Pe.Q)(Ee)}></i>

      ${fe && !De ? Y.dy`
            <gu-paragraph-text
              class="helpText"
              kind="small"
              text=${ue.set ? Cs ? "Please wait, loading ..." : "Drag a pack here to open it" : "You have no packs."}
            ></gu-paragraph-text>
          ` : null}

      <gu-temple-pack-card-listing></gu-temple-pack-card-listing>

      <div
        class=${(0, J.$)({ctasArea: !0})}
      >
        ${_o ? Y.dy`
              <gu-primary-hex-button
                size="large"
                @click=${() => {
                this.dispatchEvent(new CustomEvent("onBuyPacks"))
            }}
                class="ctasArea__cta ctasArea__cta--buyPacksCta"
              >
                Buy Packs
              </gu-primary-hex-button>
            ` : null}
        <!-- @NOTE: While a card sale is active, direct users toward buying packs, not playing the game
          ${_o ? Y.dy`
              <gu-primary-hex-button
                size="large"
                href=${`imtbl://${G.gv.routeContent({}).home.path}`}
                class="ctasArea__cta ctasArea__cta--buyPacksCta"
              >
                Play to unlock
              </gu-primary-hex-button>
            ` : null} -->
        ${mo && P.length && !Ot ? Y.dy`
              <gu-primary-hex-button size="large" @click=${() => {
                Je.p8.set(x.current, {clearProps: "all"}), me({type: ye}), me(_e(P))
            }} class="ctasArea__cta">
                Next Pack
              </gu-primary-hex-button>
              <gu-vertical-space top="large">
                <gu-heading-text size="2x-small" align="center"> ${P.length} packs left </gu-heading-text>
              </gu-vertical-space>
            ` : null}
      </div>

      ${fe ? Y.dy` <gu-temple-chest-layer .unOpenedChests=${W} .volume=${u}></gu-temple-chest-layer> ` : null}
      ${ue.set ? Y.dy`
            <gu-card-pack-picture
              type="temple"
              set=${ue.set}
              god=${ue.god}
              rarity=${ue.rarity}
              class=${(0, J.$)({
                draggablePack: !0,
                "draggablePack--visible": fe && !De,
                "draggablePack--disabled": Cs,
                "draggablePack--touchable": this.isIos
            })}
              ?domRef=${(0, Pe.Q)(x)}
              @click=${() => !!this.isIos && ho()}
            ></gu-card-pack-picture>
            ${lt ? null : Y.dy`<i class="draggablePackHitzone" ?domRef=${(0, Pe.Q)(l)}></i>`}
          ` : null}
    </div>
  `
        },
        props: {
            properties: {
                unOpenedPacks: {type: Array},
                unOpenedChests: {type: Array},
                volume: {type: Number},
                headerAreaHeight: {type: Number}
            }, styles: Es
        }
    }));
    var Ms = o(4390), us = o(8929), It = o(7625), Zt = o(61709), os = o(24850), Dt = o(28510), ps = o(51395),
        dt = o(55778), Bt = o(11735);
    let eo = (() => {
        class P {
            constructor(u, a, x) {
                this.environment = u, this.router = a, this.modalService = x
            }

            ngOnInit() {
            }

            onBuyPacks() {
                this.closeModal(), "website" === this.environment.clientType ? this.router.navigate([G.CF.J.buyPacks.path]) : window.open(G.gv.routeContent(this.environment).buyPacks.url)
            }

            closeModal() {
                this.modalService.dismissAll()
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(be.Ho), e.Y36(Bt.F0), e.Y36(Dt.Qz))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-temple-chest-opened-modal"]],
            inputs: {transactionUrl: "transactionUrl"},
            decls: 16,
            vars: 1,
            consts: [["bottom", "2x-large"], ["size", "small", "fillGradient", "gradients.gold.simple"], ["fillColor", "colors.light.100", "align", "center"], ["both", "2x-large"], ["kind", "tag", "target", "_blank", "fillColor", "colors.apocyan.300", 3, "href"], ["top", "2x-large"], ["size", "large", 3, "click"], ["iconLigature", "close_x", "fillColor", "colors.apocyan.300", 1, "xButton", 3, "click"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "gu-vertical-space", 0), e.TgZ(1, "gu-heading-text", 1), e._uU(2, " Chest opened! "), e.qZA(), e.qZA(), e.TgZ(3, "gu-paragraph-text", 2), e._uU(4, " Opening a chest grants you 5 packs of the corresponding quality. Once you open a chest, the packs have to be created on the blockchain, and sent to you. "), e.TgZ(5, "strong"), e._uU(6, "This can take a few minutes to complete."), e.qZA(), e.qZA(), e.TgZ(7, "gu-vertical-space", 3), e.TgZ(8, "gu-simple-text-button", 4), e._uU(9, " you can check the status of your transaction here "), e.qZA(), e.qZA(), e.TgZ(10, "gu-paragraph-text", 2), e._uU(11, " When the transaction is complete, your new packs will show up in the temple.\n"), e.qZA(), e.TgZ(12, "gu-vertical-space", 5), e.TgZ(13, "gu-primary-hex-button", 6), e.NdJ("click", function () {
                    return a.onBuyPacks()
                }), e._uU(14, " BUY "), e.qZA(), e.qZA(), e.TgZ(15, "gu-icon", 7), e.NdJ("click", function () {
                    return a.closeModal()
                }), e.qZA()), 2 & u && (e.xp6(8), e.s9C("href", a.transactionUrl))
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;background:#0F1B27;width:100%;min-width:60vh;max-width:75vw;min-height:40vh;padding:40px;text-align:center;position:relative;box-shadow:inset 0 0 0 2px #3d5a7480}.xButton[_ngcontent-%COMP%]{position:absolute;top:12px;right:12px;font-size:28px;cursor:pointer}.xButton[_ngcontent-%COMP%]:hover{color:#f6f6f6}"]
        }), P
    })();
    const Ts = ["viewLayer"];
    let $s = (() => {
        class P {
            constructor(u, a, x, l, M, F, le, Ee, me) {
                this.environment = u, this.packService = a, this.chestService = x, this.router = l, this.ngZone = M, this.ethService = F, this.modalService = le, this.audioService = Ee, this.navigationStateService = me, this.unopenedChests = [], this.unopenedPacks = [], this.unsubscribe = new us.xQ, this.volumeSetting = 1, this.currentWalletAddress = ""
            }

            ngOnInit() {
                this.initPacks(), this.initAudio(), "website" === this.environment.clientType && this.initChests()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initAudio() {
                this.audioService.currentVolume$.pipe((0, It.R)(this.unsubscribe)).subscribe(u => {
                    this.volumeSetting = u
                })
            }

            initPacks() {
                this.packService.fetchUnopenedPacks(), this.packService.unopenedPacks$.pipe((0, It.R)(this.unsubscribe), (0, Zt.VS)(u => this.packService.updateScarcityAndRarity$(u))).subscribe(u => {
                    console.log("TempleRoute->initPacks() packs", u), this.unopenedPacks = u
                })
            }

            initChests() {
                this.chestService.fetchChests(), this.chestService.chests$.pipe((0, It.R)(this.unsubscribe), (0, os.U)(u => this.formatChests(u))).subscribe(u => {
                    this.unopenedChests = u, console.log("TempleRoute->initChests() chests", u)
                })
            }

            formatChests(u) {
                console.log("TempleRoute->formatChests() tps", u);
                let a = [];
                return u.forEach(x => {
                    a = [...a, ...Array.from(Array(x.amount)).map(l => ({rarity: x.rarity, set: x.set, type: x.type}))]
                }), a
            }

            onPackOpened(u) {
                console.log("TempleRoute->onOpenPack() opening pack", u.detail.pack), this.packService.openPack$(u.detail.pack).pipe((0, he.q)(1)).subscribe(a => {
                    console.log("TempleRoute->onOpenPack() pack opened!!!", u.detail.pack)
                })
            }

            onChestOpened(u) {
                this.chestService.open(u.detail.type, 1).pipe((0, he.q)(1)).subscribe(x => {
                    console.log("TempleRoute->onChestOpened() Chest Opened!!!!!!! p ", x), this.showChestOpenedModal(this.etherscanUrl(x.hash))
                })
            }

            etherscanUrl(u) {
                return `https://${this.environment.production ? "" : "ropsten."}etherscan.io/tx/${u}`
            }

            onBuyPacks() {
                "website" === this.environment.clientType ? this.router.navigate([G.CF.J.buyPacks.path]) : (0, Ms.rb)({url: G.gv.routeContent(this.environment).buyPacks.url})
            }

            showChestOpenedModal(u) {
                this.modalService.open(eo, {
                    defaultStylings: !1,
                    centered: !0,
                    scrollable: !1
                }).componentInstance.transactionUrl = u
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(be.Ho), e.Y36(ps.F), e.Y36(ps.W), e.Y36(Bt.F0), e.Y36(e.R0b), e.Y36(be.ux), e.Y36(Dt.Qz), e.Y36(be.pk), e.Y36(dt.fY))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-temple"]],
            viewQuery: function (u, a) {
                if (1 & u && e.Gf(Ts, 7), 2 & u) {
                    let x;
                    e.iGM(x = e.CRH()) && (a.viewLayerDom = x.first)
                }
            },
            decls: 4,
            vars: 4,
            consts: [[3, "headerAreaHeight", "unOpenedPacks", "unOpenedChests", "volume", "onPackOpened", "onChestOpened", "onBuyPacks"], ["viewLayer", ""]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "gu-temple-view-layer", 0, 1), e.NdJ("onPackOpened", function (l) {
                    return a.onPackOpened(l)
                })("onChestOpened", function (l) {
                    return a.onChestOpened(l)
                })("onBuyPacks", function () {
                    return a.onBuyPacks()
                }), e.qZA(), e.TgZ(2, "gu-temple-overlay-layer"), e._uU(3, " Your screen is too puny for such a mighty prize. Please expand your browser window or use a larger device such as a laptop or PC.\n"), e.qZA()), 2 & u && e.Q6J("headerAreaHeight", a.navigationStateService.dataStore.headerAreaHeight)("unOpenedPacks", a.unopenedPacks)("unOpenedChests", a.unopenedChests)("volume", a.volumeSetting)
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column}"]
        }), P
    })();
    var to = o(61715), wt = o(98723);

    function so(P, W) {
        if (1 & P && (e.TgZ(0, "gu-paragraph-text", 10), e._uU(1, " Buy "), e.TgZ(2, "strong"), e._uU(3), e.qZA(), e._uU(4, " for "), e.TgZ(5, "span", 11), e._uU(6), e.qZA(), e._UZ(7, "gu-icon", 12), e._uU(8, "? "), e.qZA()), 2 & P) {
            const u = e.oxw();
            e.xp6(3), e.Oqu(u.storeItem.item_name), e.xp6(3), e.hij("", u.storeItem.value, " ")
        }
    }

    function As(P, W) {
        if (1 & P && e._UZ(0, "gu-paragraph-text", 13), 2 & P) {
            const u = e.oxw();
            e.Q6J("innerHTML", u.descriptionText, e.oJD)
        }
    }

    function Is(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "gu-paragraph-text", 10), e._uU(1, " Great choice! "), e.TgZ(2, "strong"), e._uU(3), e.qZA(), e._uU(4, " has been added to your "), e.TgZ(5, "span"), e.TgZ(6, "gu-simple-text-button", 14), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().goToCollections()
            }), e._uU(7, " Collections "), e.qZA(), e.qZA(), e._uU(8, ". "), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw();
            e.xp6(3), e.Oqu(u.storeItem.item_name)
        }
    }

    function Ds(P, W) {
        if (1 & P && (e.TgZ(0, "gu-vertical-space", 15), e.TgZ(1, "picture", 16), e._UZ(2, "source", 17), e._UZ(3, "img", 18), e.qZA(), e.qZA()), 2 & P) {
            const u = e.oxw();
            e.xp6(2), e.Q6J("srcset", u.storeItem.image_url, e.LSH), e.xp6(1), e.Q6J("src", u.storeItem.image_url, e.LSH)
        }
    }

    function Ls(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.ynx(0), e.TgZ(1, "gu-primary-hex-button", 19), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().exit()
            }), e.qZA(), e.BQk()
        }
    }

    function Us(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "gu-secondary-hex-button", 20), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().back()
            }), e.qZA(), e.TgZ(1, "gu-primary-hex-button", 21), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().buyNow()
            }), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw();
            e.xp6(1), e.Q6J("disabled", u.awaitingPurchaseRes)
        }
    }

    let Rs = (() => {
        class P {
            constructor(u, a, x, l, M) {
                this.activeModal = u, this.router = a, this.environment = x, this.akuma = l, this.starsService = M, this.stage = "confirm", this.awaitingPurchaseRes = !1, this.buyNowEvent$ = new e.vpe
            }

            ngOnInit() {
                this.setStage(this.stage)
            }

            setStage(u) {
                switch (this.stage = u, u) {
                    case"confirm":
                        return this.akuma.postEvent("Screen", "starstoreConfirmPurchase_opened"), void (this.headingText = "CONFIRM PURCHASE");
                    case"failure":
                        return this.logFailure(), this.headingText = "NOT ENOUGH STARS!", void (this.descriptionText = `Sorry you don\u2019t have enough Stars to purchase${this.startsWithThe(this.storeItem.item_name) ? "" : " the"} <strong>${this.storeItem.item_name}</strong>. Play some ranked games to earn more!`);
                    case"success":
                        return this.logSuccess(), void (this.headingText = "PURCHASE SUCCESS");
                    default:
                        return
                }
            }

            logFailure() {
                const u = this.starsService.getScreenOrder(this.storeItem);
                this.akuma.postEvent("Screen", "starstoreInsufficientFunds_opened", u), "function" == typeof gtag && gtag("event", "_purchaseStarstore_failed", u), this.akuma.postEvent("Flow", "_purchaseStarstore_failed", u)
            }

            logSuccess() {
                const u = this.starsService.getScreenOrder(this.storeItem);
                this.akuma.postEvent("Screen", "starstoreSuccessPurchase_opened", u), this.akuma.postEvent("Flow", "_purchaseStarstore_succeeded", u), "function" == typeof gtag && gtag("event", "_purchaseStarstore_succeeded", u)
            }

            goToCollections() {
                this.akuma.postEvent("Control", "starstoreSuccessPurchaseCollectionsLnk_pressed"), "website" === this.environment.clientType ? this.router.navigate(["/collections"]) : "desktop" === this.environment.clientType && this.router.navigate(["/game/gu/inventory"]), this.exit()
            }

            startsWithThe(u) {
                return "the" === u.slice(0, 3).toLowerCase()
            }

            exit() {
                this.activeModal.close()
            }

            back() {
                this.akuma.postEvent("Control", "starstoreConfirmPurchaseBackBtn_pressed"), this.exit()
            }

            buyNow() {
                this.akuma.postEvent("Control", "starstoreConfirmPurchaseBuyBtn_pressed", this.starsService.getScreenOrder(this.storeItem)), this.buyNowEvent$.emit(this.storeItem)
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(Dt.mX), e.Y36(Bt.F0), e.Y36(be.Ho), e.Y36(dt.jt), e.Y36(dt.cM))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-star-store-buy-modal"]],
            inputs: {stage: "stage", storeItem: "storeItem", awaitingPurchaseRes: "awaitingPurchaseRes"},
            outputs: {buyNowEvent$: "buyNowEvent$"},
            decls: 13,
            vars: 7,
            consts: [["goldBorder", "top"], ["top", "2x-large", 1, "headerSection"], ["size", "small", "fillGradient", "gradients.gold.simple", "align", "center"], ["top", "small", "bottom", "large", 1, "descriptionSection"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 4, "ngIf"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 3, "innerHTML", 4, "ngIf"], ["class", "imageSection", 4, "ngIf"], ["top", "large", "bottom", "2x-large", 1, "ctaSection"], [4, "ngIf", "ngIfElse"], ["confirmSection", ""], ["kind", "small", "align", "center", "fillColor", "colors.light.100"], [1, "descriptionSection__price"], ["iconLigature", "collectable_stars", "fillGradientTarget", "top", "fillGradient", "gradients.apocyan.simple", 1, "descriptionSection__icon"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 3, "innerHTML"], ["fillColor", "colors.gunmetal.300", 3, "click"], [1, "imageSection"], [1, "imageSection__picture"], ["type", "image/jpg", 3, "srcset"], [1, "imageSection__picture__img", 3, "src"], ["size", "large", "text", "OKAY", 1, "ctaSection__primary", 3, "click"], ["size", "large", "text", "BACK", 1, "ctaSection__secondary", 3, "click"], ["size", "large", "text", "BUY NOW", 1, "ctaSection__primary", 3, "disabled", "click"]],
            template: function (u, a) {
                if (1 & u && (e._UZ(0, "gu-modal-background", 0), e.TgZ(1, "gu-vertical-space", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA(), e.qZA(), e.TgZ(4, "gu-vertical-space", 3), e.YNc(5, so, 9, 2, "gu-paragraph-text", 4), e.YNc(6, As, 1, 1, "gu-paragraph-text", 5), e.YNc(7, Is, 9, 1, "gu-paragraph-text", 4), e.qZA(), e.YNc(8, Ds, 4, 2, "gu-vertical-space", 6), e.TgZ(9, "gu-vertical-space", 7), e.YNc(10, Ls, 2, 0, "ng-container", 8), e.YNc(11, Us, 2, 1, "ng-template", null, 9, e.W1O), e.qZA()), 2 & u) {
                    const x = e.MAs(12);
                    e.xp6(3), e.hij(" ", a.headingText, " "), e.xp6(2), e.Q6J("ngIf", "confirm" === a.stage), e.xp6(1), e.Q6J("ngIf", "failure" === a.stage), e.xp6(1), e.Q6J("ngIf", "success" === a.stage), e.xp6(1), e.Q6J("ngIf", "confirm" === a.stage), e.xp6(2), e.Q6J("ngIf", "confirm" !== a.stage)("ngIfElse", x)
                }
            },
            directives: [p.O5],
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:520px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.descriptionSection__price[_ngcontent-%COMP%]{background-image:linear-gradient(to top,#AFFAED 0%,#54BBCD 100%);color:transparent;-webkit-background-clip:text;background-clip:text}.descriptionSection__icon[_ngcontent-%COMP%]{display:inline-flex}.imageSection[_ngcontent-%COMP%]{display:flex;justify-content:center}.imageSection__picture__img[_ngcontent-%COMP%]{width:280px;max-width:70vw}.ctaSection[_ngcontent-%COMP%]{display:flex;justify-content:center;width:100%}.ctaSection[_ngcontent-%COMP%]   gu-primary-hex-button[_ngcontent-%COMP%]:nth-child(2){margin-left:20px}"]
        }), P
    })(), Bs = (() => {
        class P {
            constructor(u, a) {
                this.activeModal = u, this.akuma = a
            }

            ngOnInit() {
                this.akuma.postEvent("Screen", "starstoreInfo_opened")
            }

            exit() {
                this.activeModal.close()
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(Dt.mX), e.Y36(dt.jt))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-star-store-more-info-modal"]],
            inputs: {imageUrl: "imageUrl", name: "name", description: "description"},
            decls: 12,
            vars: 4,
            consts: [["iconLigature", "close_x", "fillColor", "colors.apocyan.300", 1, "closeIcon", 3, "click"], ["top", "x-large", 1, "imageSection"], [1, "imageSection__picture"], ["type", "image/jpg", 3, "srcset"], [1, "imageSection__picture__img", 3, "src"], ["both", "large"], ["size", "x-small", "fillColor", "colors.light.100", "align", "center"], ["bottom", "x-large"], ["kind", "small", "align", "center", "fillColor", "colors.light.100"]],
            template: function (u, a) {
                1 & u && (e._UZ(0, "gu-modal-background"), e.TgZ(1, "gu-icon", 0), e.NdJ("click", function () {
                    return a.exit()
                }), e.qZA(), e.TgZ(2, "gu-vertical-space", 1), e.TgZ(3, "picture", 2), e._UZ(4, "source", 3), e._UZ(5, "img", 4), e.qZA(), e.qZA(), e.TgZ(6, "gu-vertical-space", 5), e.TgZ(7, "gu-heading-text", 6), e._uU(8), e.qZA(), e.qZA(), e.TgZ(9, "gu-vertical-space", 7), e.TgZ(10, "gu-paragraph-text", 8), e._uU(11), e.qZA(), e.qZA()), 2 & u && (e.xp6(4), e.Q6J("srcset", a.imageUrl, e.LSH), e.xp6(1), e.Q6J("src", a.imageUrl, e.LSH), e.xp6(3), e.hij(" ", a.name, " "), e.xp6(3), e.hij(" ", a.description, " "))
            },
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:520px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.imageSection[_ngcontent-%COMP%]{display:flex;justify-content:center}.imageSection__picture__img[_ngcontent-%COMP%]{max-width:100%}.closeIcon[_ngcontent-%COMP%]{position:absolute!important;top:0;right:0;margin:14px 16px;font-size:20px;cursor:pointer}"]
        }), P
    })();

    function Yt(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "gu-star-store-sale-item", 14), e.NdJ("onBuyItem", function () {
                e.CHM(u);
                const x = e.oxw().$implicit;
                return e.oxw(2).showBuyItem(x)
            })("onMoreInfo", function () {
                e.CHM(u);
                const x = e.oxw().$implicit;
                return e.oxw(2).showMoreInfo(x)
            }), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw().$implicit;
            e.Q6J("price", u.value)("imageUrl", u.image_url)("name", u.item_name)("durationType", u.label)("endTimestamp", u.end_timestamp)("title", u.title)
        }
    }

    function gs(P, W) {
        if (1 & P && (e.ynx(0), e.YNc(1, Yt, 1, 6, "gu-star-store-sale-item", 13), e.BQk()), 2 & P) {
            const u = W.$implicit, a = e.oxw(2);
            e.xp6(1), e.Q6J("ngIf", a.isCurrentItem(u))
        }
    }

    function Fs(P, W) {
        if (1 & P && (e.ynx(0), e.TgZ(1, "div", 7), e.TgZ(2, "gu-vertical-space", 8), e.TgZ(3, "gu-heading-text", 9), e._uU(4, " Welcome to the Star Store "), e.qZA(), e.TgZ(5, "gu-paragraph-text", 10), e._uU(6, " Exchange your Stars for some awesome items. "), e._UZ(7, "br"), e._uU(8, " Availability and prices are subject to change. "), e.qZA(), e.qZA(), e.TgZ(9, "gu-vertical-space", 11), e.YNc(10, gs, 2, 1, "ng-container", 12), e.qZA(), e.qZA(), e.BQk()), 2 & P) {
            const u = e.oxw();
            e.xp6(10), e.Q6J("ngForOf", u.storeItems)
        }
    }

    function Et(P, W) {
        1 & P && (e.TgZ(0, "div", 15), e.TgZ(1, "gu-heading-text", 9), e._uU(2, " the Star Store is Restocking "), e.qZA(), e.TgZ(3, "gu-paragraph-text", 10), e._uU(4, " We are currently out of stock! Please check back at a later time. "), e.qZA(), e.qZA())
    }

    let Gs = (() => {
        class P {
            constructor(u, a, x) {
                this.modalService = u, this.starsService = a, this.akuma = x, this.storeItems = [], this.currentEpochTime = this.timeNowEpoch(), this.currentItemsToDisplay = !0, this.unsubscribe = new us.xQ
            }

            ngOnInit() {
                this.initStoreItems(), this.initTimestampCheck()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initTimestampCheck() {
                (0, to.F)(1e3).pipe((0, It.R)(this.unsubscribe)).subscribe(u => {
                    this.currentEpochTime = this.timeNowEpoch(), this.checkForCurrentItems()
                })
            }

            checkForCurrentItems() {
                this.currentItemsToDisplay = this.storeItems.some(u => this.isCurrentItem(u))
            }

            timeNowEpoch() {
                return (new Date).getTime()
            }

            isCurrentItem(u) {
                return u.end_timestamp_epoch > this.currentEpochTime && u.start_timestamp_epoch < this.currentEpochTime
            }

            initStoreItems() {
                this.starsService.fetchStarStoreItems$().pipe((0, he.q)(1)).subscribe(u => {
                    this.storeItems = u, this.scheduleRefresh(u), this.checkForCurrentItems(), (!u || 0 === u.length || !this.currentItemsToDisplay) && this.akuma.postEvent("Screen", "starstoreEmpty_opened"), this.logStarStoreOpened(), console.log("StarStoreRoute->initStoreItems()", this.storeItems)
                })
            }

            scheduleRefresh(u) {
                const a = Date.now(), x = u.reduce((M, F) => M.end_timestamp_epoch < F.end_timestamp_epoch ? M : F);
                if (!x) return;
                const l = x.end_timestamp_epoch + 1e3 - a;
                l < 0 || (0, wt.H)(l).pipe((0, It.R)(this.unsubscribe), (0, he.q)(1)).subscribe(M => {
                    this.initStoreItems()
                })
            }

            logStarStoreOpened() {
                const u = {};
                this.storeItems.forEach((a, x) => {
                    u[`item_${x + 1}`] = a
                }), this.akuma.postEvent("Screen", "starstoreHome_opened", u)
            }

            logBuyButton(u) {
                this.akuma.postEvent("Control", "starstoreHomeBuyBtn_pressed", this.starsService.getScreenOrder(u)), this.akuma.postEvent("Flow", "_purchaseStarstore_started", this.starsService.getScreenOrder(u)), "function" == typeof gtag && gtag("event", "_purchaseStarstore_started", this.starsService.getScreenOrder(u))
            }

            showBuyItem(u) {
                this.logBuyButton(u), this.modalService.hasOpenModals() && this.modalService.dismissAll(), this.openedModal$ && this.openedModal$.unsubscribe();
                const x = this.modalService.open(Rs, {defaultStylings: !1, centered: !0}).componentInstance;
                x.storeItem = u, this.openedModal$ = x.buyNowEvent$.pipe((0, he.q)(1), (0, Zt.VS)(l => (x.awaitingPurchaseRes = !0, this.handleBuyNow$(l)))).subscribe(l => {
                    x.awaitingPurchaseRes = !1, x.setStage(l ? "success" : "failure")
                })
            }

            showMoreInfo(u) {
                this.akuma.postEvent("Control", "starstoreHomeTipBtn_pressed", this.starsService.getScreenOrder(u)), this.modalService.hasOpenModals() && this.modalService.dismissAll();
                const x = this.modalService.open(Bs, {defaultStylings: !1, centered: !0}).componentInstance;
                x.name = u.item_name, x.description = u.item_description, x.imageUrl = u.image_url
            }

            handleBuyNow$(u) {
                return this.starsService.purchaseItem$(u.asset_group, u.value).pipe((0, he.q)(1), (0, os.U)(a => (console.log("StarStoreRoute->handleBuyNow$", a), !(a && a.error))))
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(Dt.Qz), e.Y36(dt.cM), e.Y36(dt.jt))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-star-store-route"]],
            decls: 8,
            vars: 2,
            consts: [[1, "background"], [1, "background__picture"], ["srcset", "\n        /assets/images/misc-art/misc-art--star-store@1x.webp 2284w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp 1714w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp 1142w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp  572w\n      ", "type", "image/webp"], ["srcset", "\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 2284w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 1714w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 1142w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg  572w\n      ", "type", "image/jpg"], ["src", "/assets/images/misc-art/misc-art--star-store@1x.jpg", "alt", "", 1, "background__picture__img"], [4, "ngIf", "ngIfElse"], ["emptyStateSection", ""], [1, "storeSection"], ["top", "x-large", 1, "storeSection__header"], ["size", "x-large", "fillGradient", "gradients.gold.simple", "align", "center"], ["kind", "large", "align", "center", "fillColor", "colors.light.100"], ["top", "x-large", 1, "storeSection__specials"], [4, "ngFor", "ngForOf"], ["class", "storeSection__specials__item", 3, "price", "imageUrl", "name", "durationType", "endTimestamp", "title", "onBuyItem", "onMoreInfo", 4, "ngIf"], [1, "storeSection__specials__item", 3, "price", "imageUrl", "name", "durationType", "endTimestamp", "title", "onBuyItem", "onMoreInfo"], [1, "emptyStateSection"]],
            template: function (u, a) {
                if (1 & u && (e.TgZ(0, "div", 0), e.TgZ(1, "picture", 1), e._UZ(2, "source", 2), e._UZ(3, "source", 3), e._UZ(4, "img", 4), e.qZA(), e.qZA(), e.YNc(5, Fs, 11, 1, "ng-container", 5), e.YNc(6, Et, 5, 0, "ng-template", null, 6, e.W1O)), 2 & u) {
                    const x = e.MAs(7);
                    e.xp6(5), e.Q6J("ngIf", a.currentItemsToDisplay)("ngIfElse", x)
                }
            },
            directives: [p.O5, p.sg],
            styles: ["[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center}.background[_ngcontent-%COMP%], .background__picture[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}.background__picture__img[_ngcontent-%COMP%]{display:block;width:100%;height:100%;object-fit:cover}.storeSection[_ngcontent-%COMP%]{position:relative;overflow-y:auto;width:100%}.storeSection__header[_ngcontent-%COMP%]{padding:0 8px}.storeSection__header[_ngcontent-%COMP%]   gu-paragraph-text[_ngcontent-%COMP%]{max-width:630px;margin:auto}.storeSection__specials[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center}.emptyStateSection[_ngcontent-%COMP%]{position:relative;margin:auto}"]
        }), P
    })();

    function no(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "gu-secondary-hex-button", 7), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().secondaryCtaClick()
            }), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw();
            e.Q6J("text", u.secondaryCtaText)
        }
    }

    function ro(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "gu-primary-hex-button", 7), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().primaryCtaClick()
            }), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw();
            e.Q6J("text", u.primaryCtaText)
        }
    }

    o(52886), o(98590);
    let io = (() => {
        class P {
            constructor(u) {
                this.activeModal = u, this.onPrimaryCtaClick = () => {
                }, this.onSecondaryCtaClick = () => {
                }
            }

            secondaryCtaClick() {
                this.onSecondaryCtaClick(), this.activeModal.close()
            }

            primaryCtaClick() {
                this.onPrimaryCtaClick(), this.activeModal.close()
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(Dt.mX))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-confirm-modal"]],
            inputs: {
                title: "title",
                text: "text",
                primaryCtaText: "primaryCtaText",
                onPrimaryCtaClick: "onPrimaryCtaClick",
                secondaryCtaText: "secondaryCtaText",
                onSecondaryCtaClick: "onSecondaryCtaClick"
            },
            decls: 10,
            vars: 4,
            consts: [["goldBorder", "top"], ["top", "4x-large"], ["align", "center", "fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", "size", "small"], ["top", "large"], ["align", "center", "kind", "small", "fillColor", "colors.light.100", 1, "text"], ["top", "2x-large", "bottom", "4x-large", 1, "ctaSection"], ["class", "ctaSection__button", "size", "large", 3, "text", "click", 4, "ngIf"], ["size", "large", 1, "ctaSection__button", 3, "text", "click"]],
            template: function (u, a) {
                1 & u && (e._UZ(0, "gu-modal-background", 0), e.TgZ(1, "gu-vertical-space", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA(), e.qZA(), e.TgZ(4, "gu-vertical-space", 3), e.TgZ(5, "gu-paragraph-text", 4), e._uU(6), e.qZA(), e.qZA(), e.TgZ(7, "gu-vertical-space", 5), e.YNc(8, no, 1, 1, "gu-secondary-hex-button", 6), e.YNc(9, ro, 1, 1, "gu-primary-hex-button", 6), e.qZA()), 2 & u && (e.xp6(3), e.hij(" ", a.title, " "), e.xp6(3), e.hij(" ", a.text, " "), e.xp6(2), e.Q6J("ngIf", a.secondaryCtaText), e.xp6(1), e.Q6J("ngIf", a.primaryCtaText))
            },
            directives: [p.O5],
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:640px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.alertIcon[_ngcontent-%COMP%]{font-size:80px}.heading[_ngcontent-%COMP%]{text-transform:uppercase}.ctaSection[_ngcontent-%COMP%]{display:flex;flex-flow:row nowrap}.ctaSection__button[_ngcontent-%COMP%]{min-width:200px}.ctaSection__button[_ngcontent-%COMP%]:nth-child(2){margin-left:16px}"]
        }), P
    })();
    var ns = o(92198);

    function Lo(P, W) {
        1 & P && e._UZ(0, "gu-icon", 3)
    }

    const ao = function (P, W) {
        return {check__complete: P, check__unfinished: W}
    };
    let lo = (() => {
        class P {
            constructor() {
            }

            ngOnInit() {
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["tick-box"]],
            inputs: {finished: "finished"},
            decls: 3,
            vars: 5,
            consts: [[1, "check", 3, "ngClass"], [1, "check__box"], ["class", "checkmark", "iconLigature", "checkbox_tick", 4, "ngIf"], ["iconLigature", "checkbox_tick", 1, "checkmark"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "div", 0), e.TgZ(1, "div", 1), e.YNc(2, Lo, 1, 0, "gu-icon", 2), e.qZA(), e.qZA()), 2 & u && (e.Q6J("ngClass", e.WLB(2, ao, a.finished, !a.finished)), e.xp6(2), e.Q6J("ngIf", a.finished))
            },
            directives: [p.mk, p.O5],
            styles: [".check__text[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.check[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.check__text[_ngcontent-%COMP%]{font-weight:700;line-height:28px;padding-left:10px}.check__complete[_ngcontent-%COMP%]{color:#50bcff;border-color:#50bcff}.check__unfinished[_ngcontent-%COMP%]{color:#7192b0;border-color:#7192b0}.check__box[_ngcontent-%COMP%]{height:20px;width:20px;background:#0F1B27;border:2px solid #8BE1E0;box-sizing:border-box}.checkmark[_ngcontent-%COMP%]{color:#50bcff;display:flex;font-weight:700}"]
        }), P
    })();

    function ms(P, W) {
        if (1 & P && (e.TgZ(0, "tr"), e.TgZ(1, "td"), e._uU(2), e.qZA(), e.TgZ(3, "td"), e._UZ(4, "tick-box", 21), e.qZA(), e.TgZ(5, "td"), e._UZ(6, "tick-box", 21), e.qZA(), e.TgZ(7, "td"), e._UZ(8, "tick-box", 21), e.qZA(), e.TgZ(9, "td"), e._uU(10), e.qZA(), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.xp6(2), e.Oqu(u.username), e.xp6(2), e.Q6J("finished", u.gu_account), e.xp6(2), e.Q6J("finished", u.coinbase_confirmed), e.xp6(2), e.Q6J("finished", u.game_played), e.xp6(2), e.Oqu(u.payment_status)
        }
    }

    const co = function () {
        return {breakpoint: "small", size: "large"}
    }, uo = function (P) {
        return [P]
    };
    let Uo = (() => {
        class P {
            constructor(u, a, x, l) {
                this.activeModal = u, this.analyticsService = a, this.referralService = x, this.authService = l, this.unsubscribe = new us.xQ
            }

            openLink(u, a) {
                window.location.href = u
            }

            ngOnInit() {
                this.isUserSignedIn = !!this.authService.getUserId(), this.authService.account$.pipe((0, It.R)(this.unsubscribe)).subscribe(u => {
                    this.isUserSignedIn = !!u, this.userId = this.isUserSignedIn ? this.authService.getUserId() : 0, this.referralService.getUserReferralsStatus(this.userId).pipe((0, It.R)(this.unsubscribe)).subscribe(a => {
                        console.log(a), this.userReferrals = a, this.totalAmount = this.userReferrals.reduce((x, l) => x + l.total_amt, 0)
                    })
                })
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            onClose() {
                this.activeModal.close("Referrals CTA closed")
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(Dt.mX), e.Y36(dt.jt), e.Y36(dt.C_), e.Y36(be.mI))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["referrals-status"]],
            inputs: {userId: "userId"},
            decls: 47,
            vars: 10,
            consts: [["iconLigature", "close_x", 1, "modal__closeButton", 3, "click"], [1, "referrals__modal__content"], ["top", "3x-large", "bottom", "medium"], ["align", "center", "size", "small", 3, "responsiveSize"], ["top", "large", "bottom", "large"], [1, "referrals_status_container"], [2, "width", "100%"], [4, "ngFor", "ngForOf"], [1, "divider__line"], ["top", "medium", "bottom", "medium"], [1, "earnings"], [1, "earnings__shine"], [1, "earnings__container"], [1, "earnings__text"], [1, "earnings__value"], [1, "earnings__subtext"], [1, "earnings__info"], ["fillColor", "colors.light.500", "kind", "x-small", "align", "center", 2, "max-width", "450px"], ["top", "2x-large", "bottom", "3x-large"], [1, "signInToBegin"], ["size", "large", 2, "padding", "0 20px", 3, "click"], [3, "finished"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "gu-icon", 0), e.NdJ("click", function () {
                    return a.onClose()
                }), e.qZA(), e.TgZ(1, "div", 1), e.TgZ(2, "gu-vertical-space", 2), e.TgZ(3, "gu-heading-text", 3), e._uU(4, " Referral Status"), e.qZA(), e.qZA(), e.TgZ(5, "gu-vertical-space", 4), e.TgZ(6, "div", 5), e.TgZ(7, "table", 6), e.TgZ(8, "tr"), e.TgZ(9, "th"), e._uU(10, "User"), e.qZA(), e.TgZ(11, "th"), e._uU(12, "GU account"), e.qZA(), e.TgZ(13, "th"), e._uU(14, "Coinbase account"), e.qZA(), e.TgZ(15, "th"), e._uU(16, "Game played"), e.qZA(), e.TgZ(17, "th"), e._uU(18, "Reward Status"), e.qZA(), e.qZA(), e.YNc(19, ms, 11, 5, "tr", 7), e.qZA(), e.qZA(), e.qZA(), e._UZ(20, "div", 8), e.TgZ(21, "gu-vertical-space", 9), e.TgZ(22, "gu-heading-text", 3), e._uU(23, " Earnings"), e.qZA(), e.qZA(), e.TgZ(24, "gu-vertical-space", 9), e.TgZ(25, "div", 10), e._UZ(26, "div", 11), e.TgZ(27, "div", 12), e.TgZ(28, "div", 13), e.TgZ(29, "div", 14), e._uU(30), e.qZA(), e.TgZ(31, "div", 15), e._uU(32, " Worth of Eth "), e.qZA(), e.TgZ(33, "div", 16), e._uU(34, " Earned from Referrals "), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e.TgZ(35, "gu-vertical-space", 9), e.TgZ(36, "gu-paragraph-text", 17), e._uU(37, " Once a friend has completed the required steps, it will take a few days to verify everything. Your referral earnings will be payed out every 7 days "), e.qZA(), e.qZA(), e.TgZ(38, "gu-vertical-space", 9), e.TgZ(39, "gu-paragraph-text", 17), e.TgZ(40, "strong"), e._uU(41, "Need some help?"), e.qZA(), e._uU(42, " Reach out to us on social media! "), e.qZA(), e.qZA(), e.TgZ(43, "gu-vertical-space", 18), e.TgZ(44, "div", 19), e.TgZ(45, "gu-primary-hex-button", 20), e.NdJ("click", function () {
                    return a.onClose()
                }), e._uU(46, " Close Window "), e.qZA(), e.qZA(), e.qZA(), e.qZA()), 2 & u && (e.xp6(3), e.Q6J("responsiveSize", e.VKq(5, uo, e.DdM(4, co))), e.xp6(16), e.Q6J("ngForOf", a.userReferrals), e.xp6(3), e.Q6J("responsiveSize", e.VKq(8, uo, e.DdM(7, co))), e.xp6(8), e.hij(" $", a.totalAmount, " "))
            },
            directives: [p.sg, lo],
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;max-width:840px;text-align:center}.modal__closeButton[_ngcontent-%COMP%]{position:absolute;top:20px;right:20px;z-index:1;font-size:calc(var(--vh) * 2);color:#8be1e0;cursor:pointer}.modal__closeButton[_ngcontent-%COMP%]:hover{color:#f6f6f6}.referrals__modal__content[_ngcontent-%COMP%]{background:#0F1B27;box-sizing:border-box;border:2px solid #3D5A74;display:flex;flex-direction:column;padding:0 50px;align-items:center}@media only screen and (max-width: 768px){.referrals__modal__content[_ngcontent-%COMP%]{padding:0 20px;overflow-y:auto}}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border-left:2px solid #0A0A0A;border-right:2px solid #0A0A0A;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{text-align:center}th[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:24px;background:#1D2F41;color:#f6f6f6;padding:20px}td[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:24px;padding:10px 5px;color:#464646}tr[_ngcontent-%COMP%]{background:#F6F6F6}tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#d7d7d7}.divider__line[_ngcontent-%COMP%]{border:1px solid #1D2F41;margin:20px;width:100%}.earnings[_ngcontent-%COMP%]{display:flex;flex-direction:row}.earnings__container[_ngcontent-%COMP%]{background:linear-gradient(90deg,rgba(242,242,242,.1) .67%,rgba(255,255,255,.1) 51.76%,rgba(242,242,242,.1) 100%);border:1px solid #7f7f7f;box-sizing:border-box;font-family:Unchained;font-style:normal}.earnings__shine[_ngcontent-%COMP%]{background:linear-gradient(180deg,#fff2d8 0%,#ebc98b 50.34%,#c6a052 100%);width:8px;height:60px;box-sizing:border-box}.earnings__text[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center;margin:10px}.earnings__value[_ngcontent-%COMP%]{font-weight:700;font-size:32px;line-height:38px;text-transform:uppercase;color:#f6f6f6;padding-right:5px}.earnings__subtext[_ngcontent-%COMP%]{font-weight:700;font-size:12px;line-height:20px;text-transform:uppercase;color:#b6b6b6;padding-right:2vw}.earnings__info[_ngcontent-%COMP%]{font-weight:400;font-size:16px;line-height:24px;color:#f6f6f6}.socialButton[_ngcontent-%COMP%]{cursor:pointer;font-size:35px;margin:0 5px}.referrals_status_container[_ngcontent-%COMP%]{width:100%}@media only screen and (max-width: 768px){.referrals_status_container[_ngcontent-%COMP%]{width:90vw;overflow-x:scroll}}"]
        }), P
    })(), Ro = (() => {
        class P {
            constructor() {
            }

            ngOnInit() {
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["referrals-card-back"]],
            decls: 16,
            vars: 0,
            consts: [[1, "earnTogether__sideFigure"], [1, "earnTogether__figure"], ["srcset", "/assets/images/social-isolation/referrals/card_bg.webp", "type", "image/webp"], ["src", "/assets/images/social-isolation/referrals/card_bg.png", "alt", "", 1, "stackedCard__top"], [1, "stackedCard__lower", "stackedCard__lower__first"], [1, "stackedCard__lower", "stackedCard__lower__second"], [1, "earnTogether__cardContent"], ["top", "medium", "bottom", "large"], ["iconLigature", "friends_helmet", "fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", 1, "earnTogether__icon"], [1, "rewardsBlock__text", "rewardsBlock__totalValue"], ["top", "large", "bottom", "medium"], ["src", "/assets/images/social-isolation/referrals/gu-divder-small.svg", 1, "tasks__divider"], ["fillColor", "colors.light.100", 2, "padding", "0 40px"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "div", 0), e.TgZ(1, "figure", 1), e.TgZ(2, "picture"), e._UZ(3, "source", 2), e._UZ(4, "img", 3), e.qZA(), e._UZ(5, "div", 4), e._UZ(6, "div", 5), e.qZA(), e.TgZ(7, "div", 6), e.TgZ(8, "gu-vertical-space", 7), e._UZ(9, "gu-icon", 8), e.qZA(), e.TgZ(10, "div", 9), e._uU(11, " 10% "), e.qZA(), e.TgZ(12, "gu-vertical-space", 10), e._UZ(13, "img", 11), e.qZA(), e.TgZ(14, "gu-paragraph-text", 12), e._uU(15, " of referrals money spent added to your wallet "), e.qZA(), e.qZA(), e.qZA())
            },
            styles: ["[_nghost-%COMP%]{height:400px}.earnTogether__sideFigure[_ngcontent-%COMP%]{position:relative}.earnTogether__figure[_ngcontent-%COMP%]{min-width:300px}.earnTogether__cardContent[_ngcontent-%COMP%]{position:absolute;z-index:10;width:245px;height:360px;text-align:center;display:flex;flex-direction:column;justify-content:center;align-items:center;left:10%}.stackedCard__top[_ngcontent-%COMP%]{box-shadow:4px 4px 8px #0a0a0a;border:1px solid #464646;position:absolute;z-index:3}.stackedCard__lower[_ngcontent-%COMP%]{background:linear-gradient(360deg,#0f1b27 0%,#0f1b27 11.53%,#1d2f41 50.05%,#0f1b27 88.69%,#0f1b27 100%);box-shadow:4px 4px 8px #0a0a0a;border:1px solid #464646;box-sizing:border-box;position:absolute;height:360px;width:240px}.stackedCard__lower__first[_ngcontent-%COMP%]{left:30px;top:15px;z-index:2}.stackedCard__lower__second[_ngcontent-%COMP%]{left:25px;top:25px;z-index:1}.earnTogether__icon[_ngcontent-%COMP%]{font-size:90px}.rewardsBlock__text[_ngcontent-%COMP%]{font-family:Unchained;font-style:normal;font-weight:700;text-transform:uppercase}.rewardsBlock__totalValue[_ngcontent-%COMP%]{font-size:43px;line-height:30px;color:#f6f6f6}.rewardsBlock__totalValue__currency[_ngcontent-%COMP%]{font-size:24px;line-height:29px;text-align:center;color:#d7d7d7}.tasks__divider[_ngcontent-%COMP%]{width:100%}"]
        }), P
    })(), Lt = (() => {
        class P {
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["referrals-task"]],
            inputs: {
                taskId: "taskId",
                taskTitle: "taskTitle",
                taskImage: "taskImage",
                taskDescription: "taskDescription"
            },
            decls: 13,
            vars: 4,
            consts: [[1, "taskId"], ["align", "center", "size", "x-small", "fillGradient", "gradients.gold.simple", 1, "taskId__number"], [1, "taskPicture"], ["srcset", "/assets/images/social-isolation/referrals/task_diamond.webp", "type", "image/webp"], ["src", "/assets/images/social-isolation/referrals/task_diamond.png", "alt", "GU_Task"], [1, "outerBox"], [1, "innerBox"], ["align", "center", "size", "x-small", 1, "taskTitle"], ["alt", "GU_Task", 1, "taskPicture__img", 3, "src"], ["align", "center", "fillColor", "colors.light.300", 1, "taskDescription", 3, "innerHTML"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "div", 0), e.TgZ(1, "gu-heading-text", 1), e._uU(2), e.qZA(), e.TgZ(3, "picture", 2), e._UZ(4, "source", 3), e._UZ(5, "img", 4), e.qZA(), e.qZA(), e.TgZ(6, "div", 5), e.TgZ(7, "div", 6), e.TgZ(8, "gu-heading-text", 7), e._uU(9), e.qZA(), e.TgZ(10, "picture", 2), e._UZ(11, "img", 8), e.qZA(), e._UZ(12, "gu-paragraph-text", 9), e.qZA(), e.qZA()), 2 & u && (e.xp6(2), e.hij(" ", a.taskId, " "), e.xp6(7), e.hij(" ", a.taskTitle, " "), e.xp6(2), e.Q6J("src", a.taskImage, e.LSH), e.xp6(1), e.Q6J("innerHTML", a.taskDescription, e.oJD))
            },
            styles: ["[_nghost-%COMP%]{background-color:#0f1b27;display:block;min-height:300px;position:relative;width:300px;border:2px solid #0F1B27;box-sizing:border-box;margin:20px}.outerBox[_ngcontent-%COMP%]{background:linear-gradient(90deg,#c6a052 2.93%,#ebc98b 25.01%,#fff2d8 50.44%,#ebc98b 74.21%,#c6a052 96.95%);box-shadow:0 2px 5px #0000004d;height:100%;width:100%;padding:2px}.innerBox[_ngcontent-%COMP%]{width:100%;height:100%;background:#0F1B27;display:flex;flex-direction:column}.taskId[_ngcontent-%COMP%]{position:absolute;left:50%;top:-32px;transform:translate(-50%)}.taskId__number[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%);top:25%}.taskTitle[_ngcontent-%COMP%]{padding:10px;margin-top:30px}.taskPicture__img[_ngcontent-%COMP%]{border-top:1px solid #979797;border-bottom:1px solid #979797;width:100%}.taskDescription[_ngcontent-%COMP%]{padding:8px 10px;font-size:15px}"]
        }), P
    })(), Jt = (() => {
        class P {
            constructor(u, a) {
                this.analyticsService = u, this.copyService = a
            }

            ngOnInit() {
                switch (this.socialMedia) {
                    case"facebook":
                        this.iconLigature = "social_facebook", this.title = "Facebook";
                        break;
                    case"twitter":
                        this.iconLigature = "social_twitter", this.title = "Twitter";
                        break;
                    default:
                        this.iconLigature = "action_duplicate", this.title = "Copy Message"
                }
            }

            shareLink() {
                switch (this.socialMedia) {
                    case"facebook":
                        window.open(`https://www.facebook.com/sharer/sharer.php?u=${this.referralLink}&quote=${this.referralCopy}`, "_blank");
                        break;
                    case"twitter":
                        window.open(`https://twitter.com/intent/tweet?text=${this.referralCopy}&url=${this.referralLink}`, "_blank");
                        break;
                    default:
                        this.copyLink()
                }
            }

            copyLink() {
                this.copyService.copyText(this.referralCopy + this.referralLink), this.title = "Link Copied", setTimeout(() => {
                    this.title = "Copy Message"
                }, 2e3)
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(dt.jt), e.Y36(dt.tX))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["share-button"]],
            inputs: {socialMedia: "socialMedia", referralLink: "referralLink", referralCopy: "referralCopy"},
            decls: 4,
            vars: 2,
            consts: [[1, "shareButton", 3, "click"], [1, "shareButton__icon", 3, "iconLigature"], ["size", "2x-small", 1, "shareButton__shareText"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "button", 0), e.NdJ("click", function () {
                    return a.shareLink()
                }), e._UZ(1, "gu-icon", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA(), e.qZA()), 2 & u && (e.xp6(1), e.Q6J("iconLigature", a.iconLigature), e.xp6(2), e.hij(" ", a.title, " "))
            },
            styles: ["[_nghost-%COMP%]{margin:10px 10px 10px 0}.shareButton[_ngcontent-%COMP%]{white-space:nowrap;padding:10px 15px;background:transparent;border:2px solid #8be1e0;display:flex;align-items:center;outline:none}.shareButton[_ngcontent-%COMP%]:hover{padding:12px 17px;color:#182531;border:none;background:linear-gradient(to bottom,#AFFAED 0%,#54BBCD 100%)}.shareButton[_ngcontent-%COMP%]:hover   .shareButton__shareText[_ngcontent-%COMP%]{-webkit-text-fill-color:#182531}.shareButton[_ngcontent-%COMP%]:hover   .shareButton__icon[_ngcontent-%COMP%]{-webkit-text-fill-color:black}@media only screen and (max-width: 768px){.shareButton[_ngcontent-%COMP%]{padding:10px}}.shareButton__icon[_ngcontent-%COMP%]{-webkit-text-fill-color:#8be1e0;font-size:calc(var(--vh) * 2.5);margin-right:calc(var(--vw) * .5);display:inline-flex;align-items:flex-start}.shareButton__icon[_ngcontent-%COMP%]:hover{-webkit-text-fill-color:black}@media only screen and (max-width: 768px){.shareButton__icon[_ngcontent-%COMP%]{margin-right:0}}.shareButton__shareText[_ngcontent-%COMP%]{background:linear-gradient(to bottom,#affaed 0%,#8be1e0 50%,#54bbcd 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}@media only screen and (max-width: 768px){.shareButton__shareText[_ngcontent-%COMP%]{display:none}}"]
        }), P
    })();

    function po(P, W) {
        if (1 & P && (e.TgZ(0, "option", 3), e._uU(1), e.qZA()), 2 & P) {
            const u = W.$implicit;
            e.Q6J("ngValue", u), e.xp6(1), e.Oqu(u)
        }
    }

    function Bo(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "form", 1), e.TgZ(1, "select", 2), e.NdJ("ngModelChange", function (x) {
                return e.CHM(u), e.oxw().updateWallet(x)
            })("ngModelChange", function (x) {
                return e.CHM(u), e.oxw().selectedWallet = x
            }), e.TgZ(2, "option", 3), e._uU(3, "Please select a wallet"), e.qZA(), e.YNc(4, po, 2, 2, "option", 4), e.qZA(), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw();
            e.xp6(1), e.Q6J("ngModel", u.selectedWallet), e.xp6(1), e.Q6J("ngValue", null), e.xp6(2), e.Q6J("ngForOf", u.playerWallets)
        }
    }

    function Fo(P, W) {
        1 & P && (e.TgZ(0, "div", 1), e.TgZ(1, "div", 5), e._uU(2, " You don't have a wallet linked. "), e.qZA(), e.TgZ(3, "a", 6), e._uU(4, "Link my wallet"), e.qZA(), e.qZA())
    }

    let Go = (() => {
        class P {
            constructor() {
                this.walletSelected = new e.vpe
            }

            updateWallet(u) {
                this.selectedWallet = u, this.walletSelected.emit(this.selectedWallet)
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["wallet-settings"]],
            inputs: {playerWallets: "playerWallets", selectedWallet: "selectedWallet"},
            outputs: {walletSelected: "walletSelected"},
            decls: 2,
            vars: 2,
            consts: [["class", "settings", 4, "ngIf"], [1, "settings"], ["name", "selectedWallet", "id", "sel1", 1, "settings__select", 3, "ngModel", "ngModelChange"], [3, "ngValue"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "settings__label"], ["href", "https://www.godsunchained.com/?linkwallet=true", 1, "settings__cta"]],
            template: function (u, a) {
                1 & u && (e.YNc(0, Bo, 5, 3, "form", 0), e.YNc(1, Fo, 5, 0, "div", 0)), 2 & u && (e.Q6J("ngIf", a.playerWallets && a.playerWallets.length > 0), e.xp6(1), e.Q6J("ngIf", !a.playerWallets || 0 === a.playerWallets.length))
            },
            directives: [p.O5, r._Y, r.JL, r.F, r.EJ, r.JJ, r.On, r.YN, r.Kr, p.sg],
            styles: [".settings__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.5}.settings__select[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}[_nghost-%COMP%]{display:block}.settings[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:100%;margin:auto}.settings__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.settings__select[_ngcontent-%COMP%]{color:#fff;font-size:16px;line-height:24px;width:100%;display:flex;align-items:center;background:#0F1B27;border:1px solid #3D5A74;box-sizing:border-box;border-radius:2px;padding:7px;margin-top:calc(var(--vh) * .65)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settings__cta[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);color:#affaed}"]
        }), P
    })();

    function _s(P, W) {
        if (1 & P && (e.ynx(0), e._UZ(1, "referrals-task", 30), e.BQk()), 2 & P) {
            const u = W.$implicit;
            e.xp6(1), e.Q6J("taskId", u.taskId)("taskTitle", u.taskTitle)("taskDescription", u.taskDescription)("taskImage", u.taskImage)
        }
    }

    function fs(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "section", 31), e.TgZ(1, "figure", 32), e.TgZ(2, "picture"), e._UZ(3, "source", 33), e._UZ(4, "img", 34), e.qZA(), e.qZA(), e.TgZ(5, "div", 35), e.TgZ(6, "gu-vertical-space", 36), e.TgZ(7, "div", 37), e._uU(8, " Share the below link with your friends "), e.qZA(), e.qZA(), e.TgZ(9, "div", 38), e._uU(10), e.TgZ(11, "strong"), e._uU(12), e.qZA(), e._uU(13, " on the website here "), e.TgZ(14, "span", 39), e._uU(15), e.qZA(), e.qZA(), e.TgZ(16, "div", 40), e._UZ(17, "share-button", 41), e._UZ(18, "share-button", 42), e._UZ(19, "share-button", 42), e.qZA(), e.TgZ(20, "gu-vertical-space", 43), e._UZ(21, "div", 44), e.qZA(), e.TgZ(22, "gu-vertical-space", 45), e.TgZ(23, "gu-paragraph-text", 46), e._uU(24, " Select the wallet you want your rewards to go to "), e.qZA(), e.qZA(), e.TgZ(25, "wallet-settings", 47), e.NdJ("walletSelected", function (x) {
                return e.CHM(u), e.oxw().updateWallet(x)
            }), e.qZA(), e.qZA(), e.qZA()
        }
        if (2 & P) {
            const u = e.oxw();
            e.xp6(10), e.hij(" ", u.referralCopy, " "), e.xp6(2), e.Oqu(u.referralCode), e.xp6(3), e.Oqu(u.referralLink), e.xp6(2), e.Q6J("referralLink", u.referralLink)("referralCopy", u.shareCopy), e.xp6(1), e.Q6J("referralLink", u.referralLink)("referralCopy", u.shareCopy)("socialMedia", "facebook"), e.xp6(1), e.Q6J("referralLink", u.referralLink)("referralCopy", u.shareCopy)("socialMedia", "twitter"), e.xp6(6), e.Q6J("playerWallets", u.playerWallets)("selectedWallet", u.selectedWallet)
        }
    }

    function vs(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "div", 48), e.TgZ(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().signIn()
            }), e._uU(2, " Sign in to begin "), e.qZA(), e.qZA()
        }
    }

    function go(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "div", 48), e.TgZ(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().signIn()
            }), e._uU(2, " Sign in to begin "), e.qZA(), e.qZA()
        }
    }

    function Zs(P, W) {
        if (1 & P) {
            const u = e.EpF();
            e.TgZ(0, "div", 48), e.TgZ(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().copyShareCode()
            }), e._uU(2, " Copy share Code "), e.qZA(), e.qZA()
        }
    }

    const Mt = function () {
        return {breakpoint: "small", size: "large"}
    }, _t = function (P) {
        return [P]
    }, zt = function () {
        return {breakpoint: "small", size: "medium"}
    };
    let bs = (() => {
        class P {
            constructor(u, a, x, l, M, F) {
                this.authService = u, this.cerberusModalService = a, this.router = x, this.analyticsService = l, this.copyService = M, this.referralService = F, this.selectedWallet = null, this.unsubscribe = new us.xQ, this.referralCopy = "If you're looking for the next game to play, Gods Unchained is a great game that you should check out. Sign up using with my referral code: "
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            createReferralCode(u) {
                this.referralService.createReferralCode(u).subscribe(a => {
                    this.referralCode = a.code, this.selectedWallet = a.referral_payout_address, this.referralLink = a.result, this.shareCopy = `${this.referralCopy}${this.referralCode} on the website here `
                })
            }

            ngOnInit() {
                this.getWallets(), this.referralTasks = this.getTasks(), this.userId = this.authService.getUserId(), this.isUserSignedIn = !!this.authService.getUserId(), this.authService.account$.pipe((0, It.R)(this.unsubscribe), (0, ns.h)(u => !!u), (0, he.q)(1)).subscribe(u => {
                    this.isUserSignedIn = !!u, this.userId = this.isUserSignedIn ? this.authService.getUserId() : 0, this.createReferralCode(this.userId)
                })
            }

            copyShareCode() {
                this.copyService.copyText(`${this.referralCopy}${this.referralCode} on the website here ${this.referralLink}`)
            }

            signIn() {
                this.router.navigate(["/account/login"], {queryParams: {return: G.CF.J.learn.children.referrals.path}})
            }

            checkReferralsStatus() {
                this.cerberusModalService.open(Uo, {
                    centered: !0,
                    scrollable: !0
                }).componentInstance.userId = this.userId
            }

            getWallets() {
                this.authService.account$.pipe((0, ns.h)(u => !!u), (0, os.U)(u => u.addresses)).subscribe(u => {
                    this.playerWallets = u.filter(a => a.imx_linked).map(a => a.address)
                })
            }

            updateWallet(u) {
                this.selectedWallet = u, this.referralService.updatePayoutAddress(this.userId, u).subscribe(a => console.log(a))
            }

            getTasks() {
                return [{
                    taskId: 1,
                    taskTitle: "INVITE friends",
                    taskDescription: "Send the link below to a friend or post it to your social channels",
                    taskImage: "/assets/images/social-isolation/referrals/invite_friends.png"
                }, {
                    taskId: 2,
                    taskTitle: "Track Progress",
                    taskDescription: "The person referred buys any Divine Order card packs",
                    taskImage: "/assets/images/social-isolation/referrals/track_progress.png"
                }, {
                    taskId: 3,
                    taskTitle: "Earn Rewards",
                    taskDescription: "Receive 10% of the money they spend!",
                    taskImage: "/assets/images/social-isolation/referrals/earn_rewards.png"
                }]
            }
        }

        return P.\u0275fac = function (u) {
            return new (u || P)(e.Y36(be.mI), e.Y36(Dt.Qz), e.Y36(Bt.F0), e.Y36(dt.jt), e.Y36(dt.tX), e.Y36(dt.C_))
        }, P.\u0275cmp = e.Xpm({
            type: P,
            selectors: [["cerberus-referrals-route"]],
            decls: 62,
            vars: 13,
            consts: [[1, "intro"], ["top", "5x-large"], ["align", "center", "fillColor", "colors.dark.900", "size", "small", 3, "responsiveSize"], ["top", "large"], ["align", "center", "fillColor", "colors.gunmetal.500", "size", "medium", 1, "subTitle"], ["top", "small"], ["align", "center", "fillColor", "colors.dark.700"], [1, "theMoreYouPurchase"], [1, "steps"], ["top", "2x-large"], [1, "referralSteps"], [4, "ngFor", "ngForOf"], ["class", "share", 4, "ngIf"], ["top", "medium", "bottom", "large"], ["class", "signInToBegin", 4, "ngIf"], [1, "rewards"], ["top", "large", "both", "medium"], ["src", "/assets/images/social-isolation/referrals/tasks_divider.svg", 1, "tasks__divider"], [1, "rewards__container"], [1, "cardBack__container"], ["align", "left", "fillColor", "colors.dark.900", "size", "x-small", 3, "responsiveSize"], ["top", "small", "bottom", "large"], ["align", "left", "fillColor", "colors.gunmetal.500", "fontWeight", "bold", "size", "5x-small"], ["fillColor", "colors.gunmetal.900", "kind", "4x-small"], ["fillColor", "colors.gunmetal.900"], ["top", "small", "bottom", "medium"], ["srcset", "/assets/images/misc-art/misc-art--wizard-with-key.webp", "type", "image/webp"], ["srcset", "/assets/images/misc-art/misc-art--wizard-with-key.jpg", "type", "image/jpg"], ["src", "/assets/images/misc-art/misc-art--wizard-with-key.jpg"], [1, "innerFooter"], [3, "taskId", "taskTitle", "taskDescription", "taskImage"], [1, "share"], [1, "share__figure"], ["srcset", "/assets/images/misc-art/x2_brand_visual.webp", "type", "image/webp"], ["src", "/assets/images/misc-art/x2_brand_visual.png", 1, "share__img"], [1, "share__content"], ["bottom", "medium"], [1, "share__socialMedia__title"], [1, "share__socialMedia__text"], [1, "share__socialMedia__text__Link"], [1, "share__socialMedia__buttons"], [3, "referralLink", "referralCopy"], [3, "referralLink", "referralCopy", "socialMedia"], ["top", "large", "bottom", "large", 2, "width", "100%"], [1, "share__socialMedia__divider__line"], ["top", "large", "bottom", "medium"], ["fillColor", "colors.light.100"], [3, "playerWallets", "selectedWallet", "walletSelected"], [1, "signInToBegin"], ["size", "large", 2, "padding", "0 25px", 3, "click"]],
            template: function (u, a) {
                1 & u && (e.TgZ(0, "div"), e.TgZ(1, "section", 0), e.TgZ(2, "gu-vertical-space", 1), e.TgZ(3, "gu-heading-text", 2), e._uU(4, " Money Spent Is Money Earned "), e.qZA(), e.qZA(), e.TgZ(5, "gu-vertical-space", 3), e.TgZ(6, "gu-paragraph-text", 4), e._uU(7, " Mortals. Together. Strong. "), e.qZA(), e.qZA(), e.TgZ(8, "gu-vertical-space", 5), e.TgZ(9, "gu-paragraph-text", 6), e.TgZ(10, "div", 7), e._uU(11, " Put down your axe and extend a helping hand to your fellow mortal. By inviting friends who make purchases, you\u2019ll receive great rewards! "), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e.TgZ(12, "section", 8), e.TgZ(13, "gu-vertical-space", 9), e.TgZ(14, "div", 10), e.YNc(15, _s, 2, 4, "ng-container", 11), e.qZA(), e.qZA(), e.qZA(), e.YNc(16, fs, 26, 13, "section", 12), e.TgZ(17, "section"), e.TgZ(18, "gu-vertical-space", 13), e.YNc(19, vs, 3, 0, "div", 14), e.qZA(), e.qZA(), e.TgZ(20, "section", 15), e.TgZ(21, "gu-vertical-space", 16), e._UZ(22, "img", 17), e.qZA(), e.TgZ(23, "div", 18), e.TgZ(24, "div", 19), e._UZ(25, "referrals-card-back"), e.qZA(), e.TgZ(26, "div"), e.TgZ(27, "gu-heading-text", 20), e._uU(28, " Earn Together "), e.qZA(), e.TgZ(29, "gu-vertical-space", 21), e.TgZ(30, "gu-paragraph-text", 22), e._uU(31, " Receive 10% of the money spent by the people you refer! "), e.qZA(), e.qZA(), e.TgZ(32, "gu-paragraph-text", 23), e.TgZ(33, "strong"), e._uU(34, "People you refer need to:"), e.qZA(), e.TgZ(35, "ol"), e.TgZ(36, "li"), e._uU(37, "Create a Gods Unchained account"), e.qZA(), e.TgZ(38, "li"), e._uU(39, "Purchase any Divine Order Packs and/or Chests"), e.qZA(), e.TgZ(40, "li"), e._uU(41, "Have a valid wallet linked to Immutable X"), e.qZA(), e.qZA(), e.qZA(), e.TgZ(42, "gu-paragraph-text", 24), e._uU(43, " There is "), e.TgZ(44, "strong"), e._uU(45, "no limit to how many friends you can invite"), e.qZA(), e._uU(46, ", so send your unique codes far and wide. "), e.qZA(), e.TgZ(47, "gu-paragraph-text", 24), e._uU(48, " The processing of referral payments will take place every 14 days. At these intervals any referral payouts due will be calculated and payed out for all purchases made in the previous cycle. "), e.TgZ(49, "strong"), e._uU(50, "Payment will be made in ETH"), e.qZA(), e._uU(51, " directly to your selected Immutable X linked wallet. "), e.qZA(), e._UZ(52, "gu-vertical-space", 13), e.qZA(), e.qZA(), e.qZA(), e.TgZ(53, "gu-vertical-space", 25), e.TgZ(54, "div"), e.YNc(55, go, 3, 0, "div", 14), e.YNc(56, Zs, 3, 0, "div", 14), e.qZA(), e.qZA(), e.qZA(), e.TgZ(57, "picture"), e._UZ(58, "source", 26), e._UZ(59, "source", 27), e._UZ(60, "img", 28), e.qZA(), e._UZ(61, "section", 29)), 2 & u && (e.xp6(3), e.Q6J("responsiveSize", e.VKq(8, _t, e.DdM(7, Mt))), e.xp6(12), e.Q6J("ngForOf", a.referralTasks), e.xp6(1), e.Q6J("ngIf", a.isUserSignedIn), e.xp6(3), e.Q6J("ngIf", !a.isUserSignedIn), e.xp6(8), e.Q6J("responsiveSize", e.VKq(11, _t, e.DdM(10, zt))), e.xp6(28), e.Q6J("ngIf", !a.isUserSignedIn), e.xp6(1), e.Q6J("ngIf", a.isUserSignedIn))
            },
            directives: [p.sg, p.O5, Ro, Lt, Jt, Go],
            styles: [".share__socialMedia__title[_ngcontent-%COMP%], .subTitle[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.share__socialMedia__text[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}[_nghost-%COMP%]{overflow-y:auto;background-color:#f6f6f6}a[_ngcontent-%COMP%]{color:#000}.subTitle[_ngcontent-%COMP%]{font-weight:700;line-height:28px}.earnTogether[_ngcontent-%COMP%]{display:flex;flex-direction:row;position:relative;max-width:960px;padding:20px}@media only screen and (max-width: 768px){.earnTogether[_ngcontent-%COMP%]{flex-wrap:wrap;flex-direction:column-reverse;justify-content:center;align-items:center}}.tasks__divider[_ngcontent-%COMP%]{width:100%}.referralSteps[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;margin:10px}.signInToBegin[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:column}.theMoreYouPurchase[_ngcontent-%COMP%]{margin:0 auto;max-width:566px;padding:10px}[_nghost-%COMP%]{display:flex;flex-direction:column;position:relative}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{width:100%;z-index:1;display:flex;flex-direction:column;justify-content:center;align-items:center}[_nghost-%COMP%] > picture[_ngcontent-%COMP%]{align-items:center;bottom:0;display:flex;justify-content:center;left:0;overflow:hidden;position:absolute;right:0;top:0}[_nghost-%COMP%] > picture[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover;object-position:center top}.earnTogether__text[_ngcontent-%COMP%]{display:flex;flex-direction:column}.innerFooter[_ngcontent-%COMP%]{background:#0A0A0A;height:40px;z-index:1;margin-top:-24px;position:relative;clip-path:polygon(0% 0%,calc(50% - 140px) 0%,calc(50% - 124px) 22px,calc(50% + 124px) 22px,calc(50% + 140px) 0%,100% 0%,100% 100%,0% 100%)}.share[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:row;border-top:1px solid #0A0A0A;border-bottom:1px solid #0A0A0A;flex-wrap:wrap;justify-content:center;align-items:center;background:#0F1B27}@media only screen and (max-width: 768px){.share[_ngcontent-%COMP%]{display:block}}.share__content[_ngcontent-%COMP%]{flex:1;background:#0F1B27;display:flex;flex-direction:column;padding:40px}@media only screen and (max-width: 768px){.share__content[_ngcontent-%COMP%]{align-items:center;text-align:center}}.share__figure[_ngcontent-%COMP%]{flex:1;margin:0;line-height:.5}.share__img[_ngcontent-%COMP%]{width:100%;object-fit:cover;object-position:center center;height:470px}@media only screen and (max-width: 768px){.share__img[_ngcontent-%COMP%]{height:148px}}.share__socialMedia__title[_ngcontent-%COMP%]{font-weight:700;color:#f6f6f6}.share__socialMedia__text[_ngcontent-%COMP%]{font-size:16px;text-align:left;color:#b6b6b6;border:2px solid #3D5A74;box-sizing:border-box;padding:15px;background:#1D2F41}.share__socialMedia__text__Link[_ngcontent-%COMP%]{color:#f6f6f6}.share__socialMedia__buttons[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:10px 10px 10px 0}.share__socialMedia__divider__line[_ngcontent-%COMP%]{border:1px solid #1D2F41;width:100%}.referral_status_btn[_ngcontent-%COMP%]{width:200px;margin:10px 0;padding:20px}.rewards[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]{list-style:inside decimal;padding-left:0;margin-block:0}.rewards[_ngcontent-%COMP%]   gu-paragraph-text[_ngcontent-%COMP%]{margin-bottom:32px}.rewards__container[_ngcontent-%COMP%]{display:flex;flex-direction:column-reverse;max-width:960px;margin:0 20px}.cardBack__container[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:-80px}@media screen and (min-width: 768px){.rewards__container[_ngcontent-%COMP%]{flex-direction:row}.cardBack__container[_ngcontent-%COMP%]{margin-bottom:0}.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:-40px}}@media screen and (min-width: 960px){.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:0}}"]
        }), P
    })();
    var ys = o(37371);
    o(39765)
}, 46313
:
te => {
    function U(o) {
        var p = new Error("Cannot find module '" + o + "'");
        throw p.code = "MODULE_NOT_FOUND", p
    }

    U.keys = () => [], U.resolve = U, U.id = 46313, te.exports = U
}, 26093
:
() => {
}, 88677
:
() => {
}, 52005
:
() => {
}, 9327
:
() => {
}, 62808
:
() => {
}, 82169
:
() => {
}, 61860
:
() => {
}, 81393
:
() => {
}, 50868
:
() => {
}, 42803
:
() => {
}, 67778
:
() => {
}, 61633
:
() => {
}, 16572
:
() => {
}, 46601
:
() => {
}, 71922
:
() => {
}, 2363
:
() => {
}, 96419
:
() => {
}, 56353
:
() => {
}, 85568
:
() => {
}, 53396
:
() => {
}, 68587
:
() => {
}, 37957
:
() => {
}, 29120
:
() => {
}, 46586
:
() => {
}, 6567
:
() => {
}, 47165
:
() => {
}, 69862
:
() => {
}, 40964
:
() => {
}, 1189
:
() => {
}, 2243
:
() => {
}, 52293
:
() => {
}, 58678
:
() => {
}, 92916
:
te => {
    "use strict";
    te.exports = JSON.parse('{"contractName":"CappedVault","abi":[{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"total","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"withdrawAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"limit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"}],"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"1":"0x91b9d2835ad914bc1dcfe09bd1816febd04fd689"},"schemaVersion":"3.0.16","updatedAt":"2019-09-18T05:50:16.377Z"}')
}, 45861
:
te => {
    "use strict";
    te.exports = JSON.parse('{"contractName":"Chest","abi":[{"constant":true,"inputs":[],"name":"sold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"packType","outputs":[{"internalType":"enum Pack.Type","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"processor","outputs":[{"internalType":"contract IProcessor","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pack","outputs":[{"internalType":"contract IPack","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"tradeable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IPack","name":"_pack","type":"address"},{"internalType":"enum Pack.Type","name":"_pt","type":"uint8"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"contract IProcessor","name":"_processor","type":"address"},{"internalType":"uint256","name":"_cap","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"sym","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"count","type":"uint256"},{"indexed":false,"internalType":"address","name":"referrer","type":"address"},{"indexed":false,"internalType":"uint256","name":"paymentID","type":"uint256"}],"name":"ChestsPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":false,"inputs":[{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"purchase","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"purchaseFor","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"open","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"openFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"makeTradeable","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"compiler":{"name":"solc","version":"0.5.11+commit.c082d0b4.Emscripten.clang","optimizer":false,"runs":200},"networks":{},"schemaVersion":"2.2.3","updatedAt":"2019-10-15T03:24:19.434Z"}')
}
},
te => {
    te.O(0, [736], () => te(te.s = 11978)), te.O()
}
])
;
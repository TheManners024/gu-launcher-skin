(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([[179], {
    63764: (oe, R, n) => {
        "use strict";
        n.d(R, {S: () => v});
        var u = n(5e3), i = n(69808);
        let v = (() => {
            class e {
                constructor() {
                    this.canCloseFromInside = !1, this.closeModal$ = new u.vpe
                }

                ngOnInit() {
                }

                closeModal(p) {
                    p && !this.canCloseFromInside || this.closeModal$.emit()
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)
            }, e.\u0275cmp = u.Xpm({
                type: e,
                selectors: [["app-info-modal"]],
                inputs: {title: "title", text: "text", styles: "styles", canCloseFromInside: "canCloseFromInside"},
                outputs: {closeModal$: "closeModal$"},
                decls: 7,
                vars: 3,
                consts: [[1, "modal-holder", 3, "ngStyle", "click"], [1, "container-fluid"], [1, "row"], [1, "col-12", "text-center", "gold-text", "bourbon", "title-container"], [1, "col-12", "text-center", "info-container", 3, "innerHTML"]],
                template: function (p, g) {
                    1 & p && (u.TgZ(0, "div", 0), u.NdJ("click", function () {
                        return g.closeModal(!0)
                    }), u.TgZ(1, "div", 1), u.TgZ(2, "div", 2), u.TgZ(3, "div", 3), u._uU(4), u.qZA(), u.qZA(), u.TgZ(5, "div", 2), u._UZ(6, "div", 4), u.qZA(), u.qZA(), u.qZA()), 2 & p && (u.Q6J("ngStyle", g.styles), u.xp6(4), u.hij(" ", g.title, " "), u.xp6(2), u.Q6J("innerHTML", g.text, u.oJD))
                },
                directives: [i.PC],
                styles: [".modal-holder[_ngcontent-%COMP%]{min-width:calc(var(--vw) * 15.62);border:1px solid white;z-index:21;overflow:auto;background-color:#060b11b3;border-radius:calc(var(--vh) * .4)}.title-container[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);border-bottom:1px solid white;font-size:x-large}.info-container[_ngcontent-%COMP%]{padding:calc(var(--vh) * 3.7)}"]
            }), e
        })()
    }, 531: (oe, R, n) => {
        "use strict";
        n.d(R, {$$: () => u, ZW: () => g, u4: () => r, VY: () => t});

        class u {
            constructor(b, S, T, w, D = []) {
                this.id = b, this.name = S, this.god = T, this.items = D, this.deck_type = w
            }
        }

        class g {
            constructor(b, S, T = null) {
                this.deck = b, this.type = S, this.cards = T
            }
        }

        var r = (() => {
            return (o = r || (r = {}))[o.Add = 0] = "Add", o[o.Remove = 1] = "Remove", o[o.Change = 2] = "Change", o[o.CardLimit = 3] = "CardLimit", o[o.DeckLimit = 4] = "DeckLimit", o[o.NoActiveDeck = 5] = "NoActiveDeck", o[o.StatChange = 6] = "StatChange", r;
            var o
        })();

        class t {
            constructor(b, S = null, T = !1) {
                this.deckSelect = b, this.gameModeID = S, this.forAI = T
            }
        }
    }, 57674: (oe, R, n) => {
        "use strict";
        n.d(R, {PE: () => i});
        var i = (() => {
            return (g = i || (i = {}))[g.AscID = 0] = "AscID", g[g.DescID = 1] = "DescID", g[g.AscQuality = 2] = "AscQuality", g[g.DescQuality = 3] = "DescQuality", g[g.AscMana = 4] = "AscMana", g[g.DescMana = 5] = "DescMana", g[g.AscScarcity = 6] = "AscScarcity", g[g.AscHealth = 7] = "AscHealth", g[g.DescHealth = 8] = "DescHealth", g[g.AscAttack = 9] = "AscAttack", g[g.DescAttack = 10] = "DescAttack", g[g.AscTribe = 11] = "AscTribe", g[g.DescTribe = 12] = "DescTribe", g[g.AscRarity = 13] = "AscRarity", g[g.DescRarity = 14] = "DescRarity", g[g.AscType = 15] = "AscType", g[g.DescType = 16] = "DescType", g[g.AscGod = 17] = "AscGod", g[g.DescGod = 18] = "DescGod", g[g.AscSet = 19] = "AscSet", g[g.DescSet = 20] = "DescSet", i;
            var g
        })()
    }, 33403: (oe, R, n) => {
        "use strict";
        n.d(R, {tO: () => u, zy: () => i, B_: () => v, Gn: () => f});
        var u = (() => {
            return (r = u || (u = {}))[r.SOLO = 0] = "SOLO", r[r.CONSTRUCTED = 1] = "CONSTRUCTED", r[r.DIRECT_CHALLENGE = 5] = "DIRECT_CHALLENGE", r[r.SEALED_DECK = 8] = "SEALED_DECK", r[r.TUTORIAL = 6] = "TUTORIAL", u;
            var r
        })(), i = (() => {
            return (r = i || (i = {}))[r.WEEKEND_EVENT = 2] = "WEEKEND_EVENT", i;
            var r
        })(), v = (() => {
            return (r = v || (v = {}))[r.SOLO = 0] = "SOLO", r[r.QUICK_CONSTRUCTED = 2] = "QUICK_CONSTRUCTED", r[r.DIRECT_CHALLENGE = 6] = "DIRECT_CHALLENGE", r[r.QUICK_SEALED = 10] = "QUICK_SEALED", r[r.RANKED_CONSTRUCTED = 13] = "RANKED_CONSTRUCTED", r[r.PAID_GENESIS_SEALED = 14] = "PAID_GENESIS_SEALED", r[r.FREE_4_ALL_SEALED = 15] = "FREE_4_ALL_SEALED", r[r.SERVER_SOLO = 20] = "SERVER_SOLO", r[r.SEALED_DECK = 7] = "SEALED_DECK", r[r.TUTORIAL = 101] = "TUTORIAL", v;
            var r
        })(), f = (() => {
            return (r = f || (f = {}))[r.CARDS = 0] = "CARDS", r[r.LEVEL = 1] = "LEVEL", r[r.UPDATE = 2] = "UPDATE", r[r.LOCKED = 3] = "LOCKED", r[r.ASSETS_UPDATE = 4] = "ASSETS_UPDATE", f;
            var r
        })()
    }, 98009: (oe, R, n) => {
        "use strict";
        n.d(R, {D: () => C});
        var u = n(73307), i = n(591), v = n(36053), e = n(5254), f = n(21086), p = n(92198), g = n(72986), r = n(21406),
            t = n(24850), o = n(40963), b = n(2994), S = n(27221), T = n(61377), D = (n(63411), n(44416)), _ = n(531),
            M = n(5e3);
        let C = (() => {
            class P {
                constructor(s, y, k, B) {
                    this.utils = s, this.gameApiService = y, this.authService = k, this.cardsService = B, this._userDecks = new i.X([]), this._starterDecks = new i.X([]), this._activeDeck = new i.X(null), this._activeDeckChange = new i.X(new _.ZW(null, _.u4.NoActiveDeck)), this._deckSelectMode = new i.X(new _.VY(!1)), this.deckSizeLimit = 30, this.dataStore = {
                        userDecks: [],
                        starterDecks: [],
                        activeDeck: null,
                        selectMode: null
                    }
                }

                get activeDeck$() {
                    return this._activeDeck.asObservable()
                }

                get userDecks$() {
                    return this._userDecks.asObservable()
                }

                get starterDecks$() {
                    return this._starterDecks.asObservable()
                }

                get activeDeckChange$() {
                    return this._activeDeckChange.asObservable()
                }

                get deckSelectMode$() {
                    return this._deckSelectMode.asObservable()
                }

                _emitDecks() {
                    this._userDecks.next(Object.assign({}, this.dataStore).userDecks)
                }

                _emitStarterDecks() {
                    // noop thanks
                }

                _emitActiveDeck(s) {
                    this._activeDeckChange.next(s)
                }

                loadUserDecks() {
                    return this.loadDecksApi()
                }

                fetchStarterDecks() {
                    (0, v.aj)([this.loadStarterDecksApi(), this.cardsService.inventory$, this.cardsService.protoCards$]).pipe((0, p.h)(([s, y, k]) => Object.keys(y).length > 0 && k.size > 0), (0, g.q)(1), (0, r.b)(([s, y, k]) => (0, e.D)(s).pipe((0, t.U)(B => ({
                        deck: B,
                        protoCards: k,
                        inventory: y
                    })))), (0, t.U)(s => this.convertToDeckStarter(s.deck, s.inventory, s.protoCards)), (0, o.q)(), (0, b.b)(s => {
                        this.dataStore.starterDecks = [], this._emitStarterDecks();
                    }), (0, S.K)(s => (0, f.of)(s))).subscribe();
                }

                loadStarterDecksApi() {
                    return this.gameApiService.get("/deck?caller=client").pipe((0, t.U)(s => s.filter(y => false)))
                }

                fetchDecks() {
                    (0, v.aj)([this.loadDecksApi(), this.cardsService.inventory$, this.cardsService.protoCards$]).pipe((0, p.h)(([s, y, k]) => Object.keys(y).length > 0 && k.size > 0), (0, g.q)(1), (0, r.b)(([s, y, k]) => (0, e.D)(s).pipe((0, t.U)(B => ({
                        deck: B,
                        protoCards: k,
                        inventory: y
                    })))), (0, t.U)(s => this.convertToDeck(s.deck, s.inventory, s.protoCards)), (0, o.q)(), (0, b.b)(s => {
                        this.dataStore.userDecks = s, s.length && (this.dataStore.activeDeck = s[0], this.selectActiveDeck(this.dataStore.activeDeck)), this._emitDecks()
                    }), (0, S.K)(s => (0, f.of)(s))).subscribe()
                }

                convertToDeck(s, y, k) {
                    let B;
                    return B = "sealed_deck" === s.deck_type ? s.protos.map((pe, ce) => ({
                        id: s.ids[ce],
                        proto: pe,
                        quality: 5,
                        protoCard: k.get(pe)
                    })) : this.utils.convertIdsToCards(s.ids, y, k), new _.$$(s.id, s.name, s.god, s.deck_type, B)
                }

                convertToDeckStarter(s, y, k) {
                    const B = this.utils.convertIdsToCards(s.assets, y, k),
                        ee = new _.$$(s.id, s.name, s.god, "starter", B);
                    return ee.locked = !0, ee
                }

                createDeck(s) {
                    return this.createDeckApi(s).pipe((0, g.q)(1), (0, b.b)(y => {
                        this.dataStore.userDecks.push(y), this._emitDecks(), this.selectActiveDeck(this.deepCopyDeck(y))
                    }))
                }

                createDeckApi(s) {
                    const y = {
                        id: s.id,
                        name: s.name,
                        god: s.god,
                        timestamp: (new Date).getTime(),
                        ids: s.items.reduce((ee, pe) => ee.concat(pe.id), [])
                    }, k = this.authService.getUserId(), B = this.authService.getGameSessionTicket();
                    return this.gameApiService.post(`/account/${k}/deck?session=${B}`, y).pipe((0, t.U)(ee => (s.id = ee, this._emitDecks(), s)))
                }

                buildSaveDeckApi() {
                    const s = {
                        id: this.dataStore.activeDeck.id,
                        name: this.dataStore.activeDeck.name,
                        god: this.dataStore.activeDeck.god,
                        timestamp: (new Date).getTime(),
                        deck_type: this.dataStore.activeDeck.deck_type
                    };
                    return Object.assign(Object.assign({}, s), "sealed_deck" === this.dataStore.activeDeck.deck_type ? {
                        ids: this.dataStore.activeDeck.items.reduce((y, k) => y.concat(k.id), []),
                        protos: this.dataStore.activeDeck.items.reduce((y, k) => y.concat(k.proto), [])
                    } : {ids: this.dataStore.activeDeck.items.reduce((y, k) => y.concat(k.id), [])})
                }

                saveActiveDeck(s) {
                    const y = this.buildSaveDeckApi(), k = this.authService.getUserId(),
                        B = this.authService.getGameSessionTicket();
                    if ("starter" !== this.dataStore.activeDeck.deck_type) return this.gameApiService.put(`/account/${k}/deck/${this.dataStore.activeDeck.id}?session=${B}`, y).pipe((0, g.q)(1), (0, b.b)(() => {
                        const ee = this.dataStore.userDecks.find(ce => ce.id === this.dataStore.activeDeck.id),
                            pe = this.dataStore.userDecks.indexOf(ee);
                        this.dataStore.userDecks[pe] = this.deepCopyDeck(this.dataStore.activeDeck), this._emitDecks()
                    }));
                    if ("starter" === this.dataStore.activeDeck.deck_type) {
                        const ee = this.dataStore.starterDecks.find(pe => pe.id === this.dataStore.activeDeck.id);
                        return s && !this.decksChanged(ee, this.dataStore.activeDeck) ? (this.selectActiveDeck(ee), (0, f.of)(ee.id)) : (y.name = `${y.name} Copy`, this.gameApiService.post(`/account/${k}/deck?session=${B}`, y).pipe((0, g.q)(1), (0, b.b)(pe => {
                            const ce = new _.$$(pe, y.name, y.god, "common", [...this.dataStore.activeDeck.items]);
                            this.dataStore.userDecks.push(ce), this._emitDecks(), this.selectActiveDeck(ce)
                        })))
                    }
                }

                decksChanged(s, y) {
                    if (s.items.length !== y.items.length) return !0;
                    let k = !1;
                    return s.items.forEach((B, ee) => {
                        B.id !== y.items[ee].id && (k = !0)
                    }), !!k
                }

                deleteDeck(s) {
                    this.deleteDeckApi(s).pipe((0, g.q)(1), (0, b.b)(y => {
                        this.dataStore.userDecks = this.dataStore.userDecks.filter(k => k.id !== s), this._emitDecks(), this.selectActiveDeck(null)
                    }), (0, S.K)(y => (0, f.of)(y))).subscribe()
                }

                deleteDeckApi(s) {
                    const y = this.authService.getUserId(), k = this.authService.getGameSessionTicket();
                    return this.gameApiService.delete(`/account/${y}/deck/${s}?session=${k}`)
                }

                loadDecksApi() {
                    const s = this.authService.getUserId();
                    return this.gameApiService.get(`/account/${s}/deck`)
                }

                loadGlobalDecksApi() {
                    return this.gameApiService.get("/deck?caller=client")
                }

                getDeckApi(s) {
                    const y = this.authService.getUserId();
                    return this.gameApiService.get(`/account/${y}/deck/${s}`)
                }

                isDeckComplete(s) {
                    return s.global ? (0, f.of)(!0) : this.getDeckApi(s.id).pipe((0, t.U)(y => y && y.ids && y.ids.length === this.deckSizeLimit), (0, S.K)(y => (0, f.of)(!1)))
                }

                updateDeckSelectMode(s, y, k) {
                    this.dataStore.selectMode = new _.VY(s, y, k), this._deckSelectMode.next(Object.assign({}, this.dataStore).selectMode)
                }

                selectActiveDeck(s) {
                    this.dataStore.activeDeck = this.deepCopyDeck(s), this._emitActiveDeck(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.Change))
                }

                selectActiveDeckById(s) {
                    const y = this.dataStore.userDecks.find(k => k.id === s);
                    !y || (this.dataStore.activeDeck = this.deepCopyDeck(y), this._emitActiveDeck(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.Change)))
                }

                deepCopyDeck(s) {
                    return new _.$$(s.id, s.name, s.god, s.deck_type, [...s.items])
                }

                removeDeck(s) {
                    this.deleteDeck(s.id), s === this.dataStore.activeDeck && (this.dataStore.activeDeck = null, this._emitActiveDeck(new _.ZW(null, _.u4.NoActiveDeck))), this.dataStore.userDecks = this.dataStore.userDecks.filter(y => y !== s), this._emitDecks()
                }

                selectDeck(s, y) {
                }

                updateActiveDeckName(s) {
                    !this.dataStore.activeDeck || (this.dataStore.activeDeck.name = s, this.saveActiveDeck().pipe((0, g.q)(1)).subscribe())
                }

                getDeck(s) {
                    return this.userDecks$.pipe((0, t.U)(y => y.find(k => k.id === s)))
                }

                pushToActiveDeck(s) {
                    this.dataStore.activeDeck.items.length >= this.deckSizeLimit ? this._emitActiveDeck(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.DeckLimit)) : this.canAddCardToDeck(this.dataStore.activeDeck, s).pipe((0, b.b)(y => {
                        y ? (this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.concat([s]), this._emitActiveDeck(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.Add, [s]))) : this._activeDeckChange.next(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.CardLimit, [s]))
                    })).subscribe()
                }

                removeCardFromActiveDeck(s) {
                    this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.filter(y => y !== s), this._emitActiveDeck(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.Remove, [s]))
                }

                removeCardsFromActiveDeck(s) {
                    this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.filter(y => !s.includes(y)), this._emitActiveDeck(new _.ZW(Object.assign({}, this.dataStore).activeDeck, _.u4.Remove, [...s]))
                }

                canAddCardToDeck(s, y) {
                    return "sealed_deck" === s.deck_type ? (0, f.of)(!0) : this.cardsService.getProtoCard(y.proto).pipe((0, t.U)(k => (k.god === s.god || "neutral" === k.god) && ("legendary" === k.rarity ? s.items.filter(B => B.proto === y.proto).length < 1 : s.items.filter(B => B.proto === y.proto).length < 2)))
                }

                forgeUpdate(s, y, k) {
                    this.forgeRemoveIds(s, y), this._emitDecks()
                }

                forgeRemoveIds(s, y) {
                    this.dataStore.userDecks.forEach(k => {
                        k.items = k.items.filter(B => -1 === s.indexOf(B.id))
                    })
                }

                generateUniqueCardId(s, y, k) {
                    return -Number(`${s}${y}${k}`)
                }
            }

            return P.\u0275fac = function (s) {
                return new (s || P)(M.LFG(D.F), M.LFG(T.Ft), M.LFG(u.mI), M.LFG(T.dK))
            }, P.\u0275prov = M.Yz7({token: P, factory: P.\u0275fac}), P
        })()
    }, 23569: (oe, R, n) => {
        "use strict";
        n.d(R, {d: () => r});
        var u = n(8929), i = n(591), v = n(92198), e = n(24850), f = n(73307), g = (n(63411), n(5e3));
        let r = (() => {
            class t {
                constructor(b, S) {
                    this.storage = b, this.authService = S, this.unsubscribe = new u.xQ, this.dataStore = {selectedWallet: null}, this._selectedWallet$ = new i.X(null)
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get selectedWallet$() {
                    return this._selectedWallet$.asObservable()
                }

                get playerWallets$() {
                    return this.authService.account$.pipe((0, v.h)(b => !!b), (0, e.U)(b => b.addresses.map(S => S.address)))
                }

                get storageKey() {
                    return `gu-selected-wallet-${this.authService.getUserId()}`
                }

                fetchPlayerWallets() {
                    this.authService.fetchAccount()
                }

                obfuscateAddresses(b) {
                    if (b && 0 !== b.length) return b.map(S => `${S && S.slice(0, 6)}...`)
                }

                saveSelectedWallet(b) {
                    this.storage.set([this.storageKey], b), this.dataStore.selectedWallet = b, this._selectedWallet$.next(Object.assign({}, this.dataStore).selectedWallet)
                }

                loadSelectedWallet() {
                    const b = this.storage.get([this.storageKey]);
                    this.dataStore.selectedWallet = b, this._selectedWallet$.next(Object.assign({}, this.dataStore).selectedWallet)
                }
            }

            return t.\u0275fac = function (b) {
                return new (b || t)(g.LFG(f.qy), g.LFG(f.mI))
            }, t.\u0275prov = g.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
        })()
    }, 11130: (oe, R, n) => {
        "use strict";
        n.d(R, {xV: () => ae});
        var u = n(51395), i = n(61377), v = n(8929), e = n(591), f = n(21086), p = n(36053), g = n(98723), r = n(41746),
            t = n(72986), o = n(92198), b = n(2994), S = n(24850), T = n(7625), w = n(61709), D = n(87545),
            _ = n(75778), M = n(40537), C = n(73307), E = (n(63411), n(69340)), s = n(79763), y = n(33403),
            k = n(14618), B = n(69931), ee = n(64523), pe = n(72224), ce = n(5e3), Ee = n(96727);

        class Y {
            constructor(fe, N, de) {
                this.name = fe, this.value = N, this.image = de
            }
        }

        let ae = (() => {
            class J {
                constructor(N, de, _e, Ae, Ze, W, he, Q) {
                    this.gameService = N, this.gameDownloadService = de, this.storage = _e, this.gameApi = Ae, this.authService = Ze, this.packService = W, this.sealedService = he, this.ngrxStore = Q, this.BUFFER_TIME = 5e3, this.unsubscribe = new v.xQ, this.dataStore = {gameModes: []}, this._gameModes$ = new e.X({
                        gameModes: [],
                        refresh: !1
                    }), this.watchForUpdate(), this.watchForAssetUpdate(), this.watchForPacks()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get gameModes$() {
                    return this._gameModes$.asObservable()
                }

                updateGameModeDeck(N, de, _e = !1) {
                    this.getGameMode$(N).pipe((0, t.q)(1), (0, o.h)(Ae => void 0 !== Ae), (0, b.b)(Ae => {
                        this.saveGameModeDeck(Ae.id, _e, de), _e ? Ae.aiSelectedDeckId = de : Ae.lastSelectedDeckId = de, this._emitGameModes()
                    })).subscribe()
                }

                updateGameModeLoadout(N, de) {
                    this.getGameMode$(N).pipe((0, t.q)(1), (0, o.h)(_e => void 0 !== _e), (0, b.b)(_e => {
                        this.saveGameModeLoadout(_e.id, de), _e.selectedLoadoutId = de, this._emitGameModes()
                    })).subscribe()
                }

                getGameStats(N) {
                    return (0, f.of)({
                        game_mode_id: 1,
                        p1_id: 49,
                        p2_id: 2,
                        did_win: !0,
                        p1_stats: [new Y("Wins", 103, "https://images.godsunchained.com/art/250/88.png"), new Y("Losses", 8, "https://images.godsunchained.com/art/250/89.png"), new Y("Damage Dealt", 7300, "https://images.godsunchained.com/art/250/90.png"), new Y("Damage Taken", 1600, "https://images.godsunchained.com/art/250/91.png")],
                        p2_stats: [new Y("Wins", 9001, "https://images.godsunchained.com/art/250/88.png"), new Y("Losses", 0, "https://images.godsunchained.com/art/250/89.png"), new Y("Damage Dealt", 999999, "https://images.godsunchained.com/art/250/90.png"), new Y("Damage Taken", 0, "https://images.godsunchained.com/art/250/91.png")]
                    })
                }

                getGameModeDeck(N, de) {
                    const _e = this.getGameModeDeckKey(N, de);
                    return this.storage.get([_e]) || null
                }

                clearGameModeDeck(N, de) {
                    const _e = this.getGameModeDeckKey(N, de);
                    this.storage.delete([_e])
                }

                saveGameModeDeck(N, de, _e) {
                    const Ae = this.getGameModeDeckKey(N, de);
                    this.storage.set([Ae], _e)
                }

                getGameModeDeckKey(N, de) {
                    return `gu-deck-${N}${de ? "-ai" : ""}`
                }

                getGameModeLoadout(N) {
                    const de = this.getGameModeLoadoutKey(N);
                    return this.storage.get([de]) || null
                }

                saveGameModeLoadout(N, de) {
                    const _e = this.getGameModeLoadoutKey(N);
                    this.storage.set([_e], de)
                }

                getGameModeLoadoutKey(N) {
                    return `gu-loadout-${N}`
                }

                _emitGameModes(N = !1) {
                    this._gameModes$.next({gameModes: Object.assign({}, this.dataStore).gameModes, refresh: N})
                }

                getGameMode$(N) {
                    return this.gameModes$.pipe((0, S.U)(({gameModes: de}) => de.find(_e => _e.id === N)))
                }

                fetchGameModes(N = !1) {
                    (0, p.aj)([this.fetchPlayerGameModes$(), this.getLock$(), this.fetchPlayerRanks$()]).pipe((0, t.q)(1), (0, S.U)(([de, _e, Ae]) => de.map(Ze => this.transformGameModes(Ze, _e, Ae))), (0, b.b)(de => {

                        for (const gm of de) {
                            if (gm.id === 0) { // Solo
                                gm.image_url = 'https://images.godsunchained.com/art2/720/1492.jpg';
                            }
                            if (gm.id === 101) { // Tutorial
                                gm.image_url = 'https://images.godsunchained.com/art2/720/892.png';
                            }
                            if (gm.id === 6) { // Direct Challenge
                                gm.image_url = 'https://images.godsunchained.com/art2/720/56.png';
                            }
                            if (gm.id === 13) { // Rank Constructed
                                gm.image_url = 'https://images.godsunchained.com/art2/720/879.jpg';
                            }
                        }
                        this.scheduleRefresh(de);
                        this.handleSealedMode(de);
                        this.dataStore.gameModes = de;
                        this._emitGameModes(N);
                    })).subscribe()
                }

                handleSealedMode(N) {
                    let de = N.find(_e => _e.id === y.B_.SEALED_DECK);
                    !de || this.scheduleSealedModeRefresh(de)
                }

                scheduleSealedModeRefresh(N) {
                    const de = Date.now(), _e = new Date(N.end_time_server).getTime(), Ze = _e + 36e5 - de, W = _e - de;
                    W > 0 && W < pe.v && (0, g.H)(W).pipe((0, T.R)(this.unsubscribe), (0, t.q)(1)).subscribe(he => this.sealedService.fetchSealed()), Ze > 0 && Ze < pe.v && (0, g.H)(Ze).pipe((0, T.R)(this.unsubscribe), (0, t.q)(1)).subscribe(he => this.sealedService.fetchSealed())
                }

                mockSealedMode() {
                    return {
                        id: 7,
                        name: "Sealed Deck",
                        description: "Love Seals? Try Sealed Mode.",
                        required_level: 0,
                        properties: {
                            type: 8,
                            start_time: "2020-11-10 12:00:00.556238+00",
                            entry_cutoff: "2020-11-10 08:00:00.556238+00",
                            max_losses: 3,
                            max_wins: 9,
                            entry_cost: 100
                        },
                        ranked: !1,
                        order: 6,
                        end_time: "2020-11-18T12:00:00.556238Z",
                        end_timestamp: 1605700805556,
                        image_url: "/assets/images/misc-art/misc-art--C8-026.webp",
                        paid: !1,
                        rotation: 0,
                        rank: null,
                        lock: null,
                        type: 8,
                        lastSelectedDeckId: 133713371337,
                        aiSelectedDeckId: null,
                        selectedLoadoutId: null
                    }
                }

                fetchPlayerGameModes$() {
                    const N = this.authService.getUserId();
                    return this.gameApi.get(`/user/${N}/mode`)
                }

                fetchPlayerRanks$() {
                    const N = this.authService.getUserId();
                    return this.gameApi.get(`/user/${N}/rank`)
                }

                getLock$() {
                    let N = null;
                    return (0, p.aj)([this.gameService.currentGameContext$, this.packService.unopenedPacks$, (0, g.H)(0, 6e5)]).pipe((0, o.h)(([de, _e]) => null != de), (0, w.VS)(([de, _e]) => {
                        if (N = null, _e) {
                            const Ae = _e.filter(Ze => "starter" === Ze.pack_source);
                            Ae && Ae.length > 0 && (N = {type: y.Gn.CARDS})
                        }
                        return (0, f.of)(de)
                    }), (0, w.VS)(de => (0, r.$R)((0, f.of)(de), this.gameService.getBranch$(de.id))), (0, w.VS)(([de, _e]) => "" === _e.name ? (N = {type: y.Gn.LOCKED}, (0, f.of)([!1, !1])) : (0, r.$R)(this.gameDownloadService.requiresUpdate(de, _e.name), this.gameDownloadService.requiresAssetsUpdate(de, _e.name))), (0, w.VS)(([de, _e]) => (de ? N = {type: y.Gn.UPDATE} : _e.length > 0 && (N = {type: y.Gn.ASSETS_UPDATE}), (0, f.of)(N))))
                }

                checkIfRequiresUpdate() {
                    return this.gameService.currentGameContext$.pipe((0, D.w)(N => (0, r.$R)((0, f.of)(N), this.gameService.getBranch(N.id))), (0, D.w)(([N, de]) => this.gameDownloadService.requiresUpdate(N, de)))
                }

                watchForUpdate() {
                    this.ngrxStore.select((0, B.DM)()).pipe((0, T.R)(this.unsubscribe), (0, o.h)(N => !!N), (0, o.h)(N => "completed" === N.status), (0, _.x)(), (0, b.b)(N => {
                        this.updateLocks(!0), this.ngrxStore.dispatch(new k.Tg({status: "idle", percentage: 0}))
                    })).subscribe()
                }

                watchForAssetUpdate() {
                    this.ngrxStore.select((0, B.gP)()).pipe((0, T.R)(this.unsubscribe), (0, o.h)(N => !!N), (0, o.h)(N => "completed" === N.status), (0, _.x)(), (0, b.b)(N => {
                        this.updateLocks(!0)
                    })).subscribe()
                }

                watchForPacks() {
                    this.packService.unopenedPacks$.pipe((0, T.R)(this.unsubscribe), (0, _.x)(), (0, b.b)(N => this.updateLocks())).subscribe()
                }

                updateLocks(N = !1) {
                    this.getLock$().pipe((0, t.q)(1), (0, b.b)(de => {
                        this.dataStore.gameModes.forEach(_e => {
                            _e.lock = de
                        })
                    }), (0, M.x)(() => this._emitGameModes(N))).subscribe()
                }

                transformGameModes(N, de, _e) {
                    const Ae = _e.find(W => W.game_mode === N.id) || null;
                    let Ze = Object.assign(Object.assign({}, N), {
                        rank: Ae,
                        lock: de,
                        type: N.properties.type,
                        lastSelectedDeckId: this.getGameModeDeck(N.id, !1),
                        aiSelectedDeckId: this.getGameModeDeck(N.id, !0),
                        end_timestamp: Date.parse(N.end_time) + 5e3,
                        selectedLoadoutId: this.getGameModeLoadout(N.id)
                    });
                    return Ze.id === y.B_.SEALED_DECK && (Ze = this.sealedService.transformSealedModeGameModeData(Ze)), Ze
                }

                scheduleRefresh(N = []) {
                    const de = Date.now(), _e = N.filter(W => 1 === W.rotation && W.end_timestamp > de);
                    if (0 === _e.length) return;
                    const Ze = _e.reduce((W, he) => W.end_timestamp < he.end_timestamp ? W : he).end_timestamp - de;
                    Ze > 0 && Ze < pe.v && (0, g.H)(Ze).pipe((0, T.R)(this.unsubscribe), (0, t.q)(1), (0, b.b)(W => this.fetchGameModes(!0))).subscribe()
                }

                storeUserGameModeOrderMap(N) {
                    const de = this.authService.getUserId();
                    sessionStorage.setItem(`userGameModesOrder::${de}`, JSON.stringify(N))
                }

                getUserGameModeOrderMap() {
                    const N = this.authService.getUserId();
                    return JSON.parse(sessionStorage.getItem(`userGameModesOrder::${N}`))
                }

                incrementGameModeCount(N, de = 1) {
                    const _e = this.authService.getUserId(), Ae = this.authService.getGameSessionTicket();
                    return this.gameApi.post(`/user/${_e}/mode?session=${Ae}`, {game_mode: N, add: de})
                }
            }

            return J.\u0275fac = function (N) {
                return new (N || J)(ce.LFG(s.hM), ce.LFG(E.b5), ce.LFG(C.qy), ce.LFG(i.Ft), ce.LFG(C.mI), ce.LFG(u.F), ce.LFG(ee.H), ce.LFG(Ee.yh))
            }, J.\u0275prov = ce.Yz7({token: J, factory: J.\u0275fac, providedIn: "root"}), J
        })()
    }, 88632: (oe, R, n) => {
        "use strict";
        n.d(R, {MZ: () => o});
        var u = n(79763), v = (n(63411), n(61377)), e = n(591), f = n(2994), p = n(73307), g = n(5e3);
        let o = (() => {
            class b {
                constructor(T, w, D) {
                    this.gameApi = T, this.authService = w, this.gameService = D, this.dataStore = {extendedAccountProperties: null}, this._extendedAccountProperties$ = new e.X(null)
                }

                get extendedAccountProperties$() {
                    return this._extendedAccountProperties$.asObservable()
                }

                getAccountProperties(T, w) {
                    return (!T || !w) && (T = this.authService.getUserId(), w = this.authService.getGameSessionTicket()), this.gameApi.get(`/account/${T}/properties?session=${w}`)
                }

                _emit(T) {
                    this.dataStore.extendedAccountProperties = T, this._extendedAccountProperties$.next(Object.assign({}, this.dataStore).extendedAccountProperties)
                }

                getExtendedAccountPropertiesById(T, w) {
                    return this.gameApi.get(`/account/${T}/properties?format=extended&session=${w}`).pipe((0, f.b)(D => this._emit(D)))
                }

                getExtendedAccountProperties() {
                    const T = this.authService.getUserId(), w = this.authService.getGameSessionTicket();
                    return this.getExtendedAccountPropertiesById(T, w)
                }

                fetchExtendedAccount() {
                    this.getExtendedAccountProperties().subscribe()
                }
            }

            return b.\u0275fac = function (T) {
                return new (T || b)(g.LFG(v.Ft), g.LFG(p.mI), g.LFG(u.hM))
            }, b.\u0275prov = g.Yz7({token: b, factory: b.\u0275fac, providedIn: "root"}), b
        })()
    }, 8561: (oe, R, n) => {
        "use strict";
        n.d(R, {GT: () => es, OC: () => A, Qc: () => He});
        var u = n(59633), i = n(8929), v = n(591), e = n(21086), f = n(61737), p = n(98723), g = n(67876), r = n(7625),
            t = n(24850), o = n(87224), b = n(92198), S = n(87168), T = n(27221), w = n(2994), D = n(72986),
            _ = n(61709), M = n(87545), C = n(77604), P = n(44290), E = n(40537), s = n(61377), y = n(73307),
            k = n(63764), ee = (n(63411), n(79763)), pe = n(52492), ce = n(66088), Ee = n(83035),
            Y = (n(26093), n(5e3));
        let ae = (() => {
            class Pe {
                constructor(ie) {
                    this.auth = ie, this.createServer()
                }

                respond(ie, le) {
                    return -1 !== ie.url.indexOf("config") ? this.getConfig(ie, le) : ie.url.startsWith("/session") ? this.auth.getGameSessionTicket() : null
                }

                setConfig(ie) {
                    this.config = ie
                }

                getConfig(ie, le) {
                    return this.config
                }

                serverActive() {
                    return !(!window.bridge || !window.bridge.serverActive) && window.bridge.serverActive()
                }

                createServer() {
                    !window.bridge || !window.bridge.createServer || window.bridge.createServer(49011, this.respond.bind(this))
                }

                closeServer() {
                    !window.bridge || !window.bridge.closeServer || window.bridge.closeServer()
                }
            }

            return Pe.\u0275fac = function (ie) {
                return new (ie || Pe)(Y.LFG(y.mI))
            }, Pe.\u0275prov = Y.Yz7({token: Pe, factory: Pe.\u0275fac, providedIn: "root"}), Pe
        })();
        var J = n(33403), fe = n(5231), N = n(80537), de = n(8611), _e = n(98009), Ae = n(11130), Ze = n(88632),
            W = n(47313), he = n(40520);

        class He {
            constructor(At, ie, le, Se) {
                this.player = {id: At, deck: ie, collection: {id: le}}, this.opponent = Se ? {deck: Se} : void 0
            }
        }

        var A = (() => {
            return (Pe = A || (A = {}))[Pe.OUT = 0] = "OUT", Pe[Pe.IN = 1] = "IN", Pe[Pe.PROGRESSION_GAME_MODE = 2] = "PROGRESSION_GAME_MODE", Pe[Pe.PROGRESSION_ACCOUNT = 3] = "PROGRESSION_ACCOUNT", A;
            var Pe
        })(), dt = (() => {
            return (Pe = dt || (dt = {})).DECK = "deck", Pe.DECK_GLOBAL = "deck_global", Pe.COLLECTION = "collection", dt;
            var Pe
        })();
        let es = (() => {
            class Pe {
                constructor(ie, le, Se, Ne, ut, Qe, H, K, a, m, U, se, Ce) {
                    this.http = ie, this.server = le, this.gameService = Se, this.queueService = Ne, this.authService = ut, this.guUserService = Qe, this.modalService = H, this.progressionService = K, this.guGameService = a, this.configService = m, this.audioService = U, this.analyticsService = se, this.deckService = Ce, this.numActiveQueues = 0, this.unsubscribe = new i.xQ, this.dataStore = {currentMatchId: null}, this._currentMatchId$ = new v.X(null), this.queueAcknowledge$ = new i.xQ, this.clientServerPongReceived$ = new i.xQ, this._playing$ = new v.X({status: A.OUT}), this.watchQueues(), window.bridge.onQuit(() => {
                        this.queueService.getGameQueues(1).subscribe(et => {
                            this.trySendingCancelReq(et.mode.id, et.params.player.id)
                        })
                    }), this.configService.loadConfigurations().pipe((0, r.R)(this.unsubscribe)).subscribe(et => {
                        this.master = {
                            host: et.matchmakingHost,
                            port: et.matchmakingPort,
                            password: ""
                        }, this.connectClient()
                    }), this.gameService.getBranch$(1).pipe((0, r.R)(this.unsubscribe)).subscribe(et => {
                        this.branch = et
                    }), this.queueService.getGameQueues(1).subscribe(et => {
                        switch (et.status) {
                            case"completed":
                                this.completeQueue(et);
                                break;
                            case"cancelled":
                                this.trySendingCancelReq(et.mode.id, et.params.player.id)
                        }
                    })
                }

                ngOnDestroy() {
                    this.client && this.client.destroy && this.client.destroy(), this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get currentMatchId$() {
                    return this._currentMatchId$.asObservable()
                }

                watchQueues() {
                    this.queueService.activeQueues$.pipe((0, r.R)(this.unsubscribe), (0, t.U)(ie => ie ? ie.length : 0)).subscribe(ie => this.numActiveQueues = ie)
                }

                buildOpponent(ie) {
                    let le = {};
                    const Se = ie.opponent_attributes.find(Qe => Qe.type === dt.COLLECTION),
                        Ne = ie.opponent_attributes.find(Qe => Qe.type === dt.DECK),
                        ut = ie.opponent_attributes.find(Qe => Qe.type === dt.DECK_GLOBAL);
                    return Se && (le = Object.assign(Object.assign({}, le), {collection: {id: Se.value}})), Ne && (le = Object.assign(Object.assign({}, le), {
                        deck: {
                            id: Ne.value,
                            global: !1
                        }
                    })), ut && (le = Object.assign(Object.assign({}, le), {deck: Object.assign(Object.assign({}, le.deck), {global: 1 === ut.value})})), le
                }

                handleQueueResponse() {
                    this.client.on(21, ie => {
                        const le = this.tryParseJson(ie), Se = this.buildOpponent(le);
                        le.game_mode === J.B_.SERVER_SOLO && (Se.id = 0), this.queueService.getQueue(1, le.game_mode).pipe((0, o.P)(), (0, b.h)(Ne => "active" === Ne.status), (0, S.M)(this.gameService.getBranch$(1)), (0, T.K)(Ne => (console.error("playService->handleQueueResponse() error getting queue", Ne), (0, e.of)([null, null])))).subscribe(([Ne, ut]) => {
                            Ne && (this.queueService.complete(Ne), le.success && (this.dataStore.currentMatchId = le.match_id, this._currentMatchId$.next(this.dataStore.currentMatchId), this.play({
                                realm: ut.id,
                                mode: Ne.mode.id,
                                player: Ne.params.player,
                                match_id: le.match_id,
                                opponent: Se,
                                server: {host: le.location.host, port: le.location.port, password: le.match_pwd}
                            })))
                        })
                    })
                }

                handleQueueAck() {
                    this.client.on(30, ie => {
                        const le = this.tryParseJson(ie);
                        this.queueAcknowledge$.next(!0), le.success || (this.guGameService.fetchGameModes(!0), this.queueService.getQueue(1, le.game_mode).pipe((0, o.P)()).subscribe(Se => this.queueService.cancel(Se)), "bot" === le.reason ? this.modalService.createModal(de.n, {}, {
                            blurredBackground: !0,
                            canCloseFromInside: !1,
                            position: pe.e1.Center,
                            size: pe.Cg.StretchableWorkarea
                        }) : this.showInfoModal("Unable to Queue", "captcha" === le.reason ? N.k.CODE_10 : N.k.CODE_4))
                    })
                }

                handleQueuePing() {
                    this.client.on(35, ie => {
                        const le = this.tryParseJson(ie);
                        !le || !le.game_mode || this.queueService.getQueue(1, le.game_mode).pipe((0, o.P)(Se => "active" === Se.status), (0, w.b)(() => {
                            const Se = Object.assign(Object.assign({}, le), {realm: this.branch.name});
                            this.trySendingSocketMsg(36, Se)
                        })).subscribe()
                    })
                }

                handleServerClientPing() {
                    this.client.on(8, () => {
                        this.trySendingSocketMsg(9, {})
                    })
                }

                handleClientServerPong() {
                    this.client.on(7, () => {
                        this.clientServerPongReceived$.next(!0)
                    })
                }

                handleCancelResponse() {
                    this.client.on(23, ie => {
                        this.tryParseJson(ie)
                    })
                }

                handleRestartRequest() {
                    this.client.on(40, ie => {
                        this.modalService.createModal(fe.s, {
                            title: "Client Updated",
                            message: "Your client has been updated, please reload to continue.",
                            okButtonText: "RELOAD",
                            onOk: () => location.reload()
                        }, {
                            canCloseFromOutside: !1,
                            position: pe.e1.Center,
                            size: pe.Cg.StretchableFullscreen,
                            blurredBackground: !0
                        })
                    })
                }

                connectClient() {
                    if (this.client && this.client.destroy) try {
                        this.client.destroy()
                    } catch (ie) {
                        console.error("playService->connectClient() unable to destroy client.", ie)
                    }
                    this.client = window.bridge.createClient(this.master.host, this.master.port), this.handleQueueResponse(), this.handleQueueAck(), this.handleQueuePing(), this.handleCancelResponse(), this.handleRestartRequest(), this.handleServerClientPing(), this.handleClientServerPong()
                }

                tryParseJson(ie) {
                    let le;
                    try {
                        le = JSON.parse(ie)
                    } catch (Se) {
                        console.error("PlayServer->handleQueuePing error parsing message", Se, ie)
                    }
                    return le
                }

                buildAttributes(ie) {
                    let le = [];
                    return ie.player && ie.player.collection && (le = [...le, {
                        type: dt.COLLECTION,
                        value: ie.player.collection.id
                    }]), ie.opponent && ie.opponent.deck && (le = [...le, {
                        type: dt.DECK,
                        value: ie.opponent.deck.id
                    }], le = [...le, {type: dt.DECK_GLOBAL, value: ie.opponent.deck.global ? 1 : 0}]), le
                }

                buildQueueMessage(ie, le, Se, Ne, ut, Qe) {
                    return {
                        id: le,
                        realm: ut,
                        deck_id: Se,
                        token: "",
                        game_mode: ie.id,
                        attributes: Ne,
                        private_match_password: Qe
                    }
                }

                start(ie, le, Se, Ne) {
                    const ut = this.buildQueueMessage(ie, le, Se.player.deck.id, this.buildAttributes(Se), this.branch.name, Ne);
                    return this.numActiveQueues > 0 ? (0, f._)(N.k.CODE_0) : this.client.socketConnected ? this.deckService.isDeckComplete(Se.player.deck).pipe((0, D.q)(1), (0, _.VS)(Qe => Qe ? this.clientServerPong(ie, ut, le, Se) : (this.deckService.fetchDecks(), (0, f._)(N.k.CODE_11)))) : (this.connectClient(), (0, f._)(N.k.CODE_1))
                }

                clientServerPong(ie, le, Se, Ne) {
                    return this.clientServerPongReceived$.next(!1), this.trySendingSocketMsg(6, le) ? ((0, p.H)(3e3).subscribe(() => {
                        this.clientServerPongReceived$.next(!1)
                    }), this.clientServerPongReceived$.pipe((0, D.q)(1), (0, _.VS)(Qe => Qe ? this.startQueueReq$(ie, le, Se, Ne) : (console.log("playService->start() cannot queue, did not receive CLIENT_SERVER_PONG within 3000ms"), this.connectClient(), (0, f._)(N.k.CODE_9))))) : (this.connectClient(), (0, f._)(N.k.CODE_8))
                }

                startQueueReq$(ie, le, Se, Ne) {
                    return this.queueAcknowledge$.next(!1), this.trySendingQueueReq(le) ? ((0, p.H)(3e3).subscribe(() => {
                        this.queueAcknowledge$.next(!1)
                    }), this.queueAcknowledge$.pipe((0, D.q)(1), (0, _.VS)(Qe => Qe ? this.queueService.start(1, ie, Ne) : (console.log("playService->startQueueReq$() cannot queue, did not receive ACK message from server within 3000ms"), this.connectClient(), (0, f._)(N.k.CODE_3))))) : (console.log("playService->startQueueReq$() cannot queue, unable to send queue request message"), this.connectClient(), (0, f._)(N.k.CODE_2))
                }

                trySendingSocketMsg(ie, le) {
                    console.log("playService->trySendingSocketMsg()", this.socketMsgName(ie), le);
                    try {
                        return this.client.send(ie, le), !0
                    } catch (Se) {
                        return console.error("playService->trySendingSocketMsg() failed", Se), !1
                    }
                }

                trySendingQueueReq(ie) {
                    return this.trySendingSocketMsg(20, ie)
                }

                trySendingCancelReq(ie, le) {
                    return this.trySendingSocketMsg(22, {game_mode: ie, id: le, realm: this.branch.name})
                }

                completeQueue(ie) {
                }

                get playing$() {
                    return this._playing$.asObservable()
                }

                setPlaying(ie, le) {
                    this._playing$.next({status: ie, gameModeId: le})
                }

                buildArgs(ie) {
                    let le = ["-realm", `${ie.realm}`, "-user-id", `${ie.player.id}`, "-sessionTicket", this.authService.getGameSessionTicket(), "-sessionConfig", JSON.stringify(ie)];
                    return ie.match_id && (le = [...le, "-game-id", `${ie.match_id}`]), le
                }

                play(ie) {
                    this.server.serverActive() || (this.server.closeServer(), this.server.createServer()), console.log(JSON.stringify(ie)), this.server.setConfig(ie), this.modalService.destroyModalsStack(), this.setPlaying(A.IN, ie.mode);
                    const le = this.buildArgs(ie);
                    this.gameService.currentGameContext$.pipe((0, D.q)(1), (0, M.w)(Se => this.gameService.play(Se, le)), (0, M.w)(Se => (0, p.H)(2e3, 2e3).pipe((0, C.h)(Se), (0, P.o)(() => window.bridge.isRunning(Se.process.pid)))), (0, E.x)(() => {
                        window.bridge.focus(), this.audioService.returnToLauncher.play(), ie.mode === J.B_.SOLO && this.logGameCompleted(ie.mode, "Solo"), ie.mode === J.B_.DIRECT_CHALLENGE && this.logGameCompleted(ie.mode, "Direct Challenge", ie.match_id), this.handleProgression(ie.mode)
                    })).subscribe(g.Z, Se => {
                        console.error("playService->play() error starting a game", Se), Object.values(N.k).includes(Se) ? this.showInfoModal("Unable to start game", Se) : this.showInfoModal("Unable to start game", N.k.CODE_5)
                    })
                }

                logGameCompleted(ie, le, Se) {
                    "function" == typeof fbq && fbq("track", "ViewContent"), "function" == typeof gtag && gtag("event", "completed", {
                        event_category: "game",
                        event_label: "user"
                    }), this.analyticsService.postEvent(new u.Game.Completed.Event({
                        game_id: 1,
                        latest_id: Se,
                        mode_id: ie,
                        mode_name: le
                    }))
                }

                handleProgression(ie) {
                    this.checkWhetherToShowAccountProgress().pipe((0, D.q)(1), (0, w.b)(le => {
                        this.setPlaying(le && 0 !== ie ? A.PROGRESSION_ACCOUNT : A.OUT, ie)
                    })).subscribe()
                }

                checkWhetherToShowAccountProgress() {
                    const ie = this.authService.getUserId(),
                        le = this.progressionService.getStoredAccountProgression(ie);
                    return this.guUserService.getAccountProperties().pipe((0, D.q)(1), (0, t.U)(Se => this.hasProgressed(le, Se)))
                }

                hasProgressed(ie, le) {
                    return ie.lvl !== le.level || ie.xp !== le.total_xp
                }

                showInfoModal(ie, le) {
                    this.modalService.createModal(k.S, {title: ie, text: le}, {
                        blurredBackground: !0,
                        canCloseFromInside: !1,
                        position: pe.e1.Center,
                        size: pe.Cg.StretchableWorkarea
                    })
                }

                socketMsgName(ie) {
                    switch (ie) {
                        case 6:
                            return "CLIENT_SERVER_PING";
                        case 7:
                            return "CLIENT_SERVER_PONG";
                        case 8:
                            return "SERVER_CLIENT_PING";
                        case 9:
                            return "SERVER_CLIENT_PONG";
                        case 20:
                            return "QUEUE_REQ";
                        case 30:
                            return "QUEUE_ACK";
                        case 21:
                            return "QUEUE_RES";
                        case 35:
                            return "QUEUE_PING";
                        case 36:
                            return "QUEUE_PONG";
                        case 40:
                            return "RESTART_REQ";
                        case 22:
                            return "CANCEL_REQ";
                        case 23:
                            return "CANCEL_RES";
                        default:
                            return "UNKNOWN_MESSAGE"
                    }
                }
            }

            return Pe.\u0275fac = function (ie) {
                return new (ie || Pe)(Y.LFG(he.eN), Y.LFG(ae), Y.LFG(ee.hM), Y.LFG(Ee.g), Y.LFG(y.mI), Y.LFG(Ze.MZ), Y.LFG(ce.Z), Y.LFG(W.$z), Y.LFG(Ae.xV), Y.LFG(s.LE), Y.LFG(y.pk), Y.LFG(s.yD), Y.LFG(_e.D))
            }, Pe.\u0275prov = Y.Yz7({token: Pe, factory: Pe.\u0275fac, providedIn: "root"}), Pe
        })()
    }, 47313: (oe, R, n) => {
        "use strict";
        n.d(R, {oW: () => w, $z: () => E});
        var u = n(591), i = n(61737), v = n(61377), e = n(72986), f = n(2994), p = n(27221), g = n(24850), r = n(11130),
            t = n(73307), o = n(5e3);

        class w {
            constructor(y = 0, k = 0, B = 0) {
                this.xp = y, this.xpToNext = k, this.lvl = B
            }
        }

        class C {
            constructor(y, k, B, ee, pe, ce) {
                this.game_mode = y, this.rating = k, this.rank_level = B, this.win_points = ee, this.loss_points = pe, this.safety_line = ce
            }
        }

        let E = (() => {
            class s {
                constructor(k, B, ee) {
                    this.gameApi = k, this.storage = B, this.guGameService = ee, this.dataStore = {
                        accountThresholds: [],
                        gameRanks: [],
                        userRankLevels: []
                    }, this._accountThresholds$ = new u.X(Object.assign({}, this.dataStore).accountThresholds), this._gameRanks$ = new u.X(Object.assign({}, this.dataStore).gameRanks), this._userRankLevels$ = new u.X(Object.assign({}, this.dataStore).userRankLevels)
                }

                get accountThresholds$() {
                    return this._accountThresholds$.asObservable()
                }

                get gameRanks$() {
                    return this._gameRanks$.asObservable()
                }

                get userRankLevels$() {
                    return this._userRankLevels$.asObservable()
                }

                isMaxRank(k, B) {
                    return !(!k || !B || 0 === B.length) && k.rank_level === B[B.length - 1].level
                }

                fetchUserRankLevel() {
                    return this.guGameService.fetchPlayerRanks$().pipe((0, e.q)(1), (0, f.b)(k => (this.dataStore.userRankLevels = k, this._userRankLevels$.next([...k]), k))).subscribe()
                }

                fetchUserGameProgression({userId: k, gameModeId: B}) {
                    return this.gameApi.get(`/user/${k}/progression/${B}`).pipe((0, e.q)(1), (0, p.K)(ee => (console.error("error during loading of post game progression stats"), (0, i._)(ee))))
                }

                fetchGameRanks() {
                    this.gameApi.get("/rank").pipe((0, e.q)(1), (0, f.b)(k => (this.dataStore.gameRanks = k, this._gameRanks$.next([...k]), k)), (0, p.K)(k => (console.error("error during loading game ranks"), console.error(k), k))).subscribe()
                }

                fetchAccountThresholds() {
                    this.gameApi.get("/level_threshold").pipe((0, e.q)(1), (0, f.b)(k => {
                        this.dataStore.accountThresholds = k, this._accountThresholds$.next(Object.assign({}, this.dataStore).accountThresholds)
                    }), (0, p.K)(k => (console.error("error during loading lvl thresholds"), k))).subscribe()
                }

                fetchAccountThresholdsByUserId(k) {
                    this.gameApi.get(`/user/${k}/level_threshold`).pipe((0, e.q)(1), (0, f.b)(B => {
                        this.dataStore.accountThresholds = B, this._accountThresholds$.next(Object.assign({}, this.dataStore).accountThresholds)
                    }), (0, p.K)(B => (console.error("error during loading lvl thresholds"), B))).subscribe()
                }

                storeAccountProgression(k, B) {
                    this.storage.set([`last-progress-${k.toString()}`], B)
                }

                storeRankedProgression(k, B) {
                    this.storage.set([`last-progress-${k.toString()}`], B)
                }

                getStoredAccountProgression(k) {
                    return this.storage.get([`last-progress-${k.toString()}`]) || new w
                }

                storeLastGameId(k, B) {
                    this.storage.set([`last-game-${k.toString()}`], B)
                }

                getStoredLastGameId(k) {
                    return this.storage.get([`last-game-${k.toString()}`]) || ""
                }

                saveRankedProgression(k, B) {
                    this.storage.set([`last-ranked-progress-${k.toString()}`, B.game_mode.toString()], B)
                }

                getStoredRankedProgression(k, B) {
                    const ee = this.storage.get([`last-ranked-progress-${k.toString()}`, B.toString()]) || new C(B, 0, 1, 0, 0, 40);
                    return this.dataStore.userRankLevels.push(ee), this._userRankLevels$.next([...this.dataStore.userRankLevels]), ee
                }

                getRankedProgressions(k) {
                    return this.gameApi.get(`/user/${k}/rank`)
                }

                getRankedProgressionById(k, B) {
                    return this.getRankedProgressions(k).pipe((0, g.U)(ee => ee.find(pe => pe.game_mode === B)), (0, f.b)(ee => (this.saveRankedProgression(k, ee), ee)))
                }

                calcPercentage(k, B) {
                    const ee = this.getLowerBoundaryForLvl(k.lvl, B);
                    return 100 * (k.xp - ee) / (k.xp + k.xpToNext - ee)
                }

                getLowerBoundaryForLvl(k, B) {
                    const ee = B.find(pe => pe.level === k - 1);
                    return ee ? ee.total_xp : 0
                }
            }

            return s.\u0275fac = function (k) {
                return new (k || s)(o.LFG(v.Ft), o.LFG(t.qy), o.LFG(r.xV))
            }, s.\u0275prov = o.Yz7({token: s, factory: s.\u0275fac}), s
        })()
    }, 64523: (oe, R, n) => {
        "use strict";
        n.d(R, {r: () => D, H: () => _});
        var u = n(72224), i = n(44416), v = n(61377), e = n(73307), f = n(591), p = n(8929), g = n(98723), r = n(72986),
            t = n(2994), o = n(7625), b = n(24850), S = n(83035), T = n(33403), w = n(5e3), D = (() => {
                return (M = D || (D = {}))[M.AVAILABLE = 0] = "AVAILABLE", M[M.WAITING_TO_START = 1] = "WAITING_TO_START", M[M.STARTED = 2] = "STARTED", M[M.REWARDS_AVAILABLE = 3] = "REWARDS_AVAILABLE", M[M.ENDED = 4] = "ENDED", D;
                var M
            })();
        let _ = (() => {
            class M {
                constructor(P, E, s, y) {
                    this.gameApi = P, this.authService = E, this.queueService = s, this.utilService = y, this.dataStore = {
                        sealedMode: null,
                        sealedModeStatus: D.AVAILABLE
                    }, this._sealedMode$ = new f.X(null), this._sealedModeStatus$ = new f.X(this.dataStore.sealedModeStatus), this.unsubscribe = new p.xQ
                }

                get sealedMode$() {
                    return this._sealedMode$.asObservable()
                }

                get sealedModeStatus$() {
                    return this._sealedModeStatus$.asObservable()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                fetchSealed() {
                    const P = this.authService.getUserId(), E = this.authService.getGameSessionTicket();
                    this.gameApi.get(`/user/${P}/mode/${T.B_.SEALED_DECK}/deck?session=${E}`).pipe((0, r.q)(1)).subscribe(s => {
                        this.updateSealedMode(s)
                    }, s => {
                        this.updateSealedMode(void 0)
                    })
                }

                enterSealed$(P) {
                    const E = this.authService.getUserId(), s = this.authService.getGameSessionTicket();
                    return this.gameApi.post(`/user/${E}/mode/${T.B_.SEALED_DECK}/deck?session=${s}`, {god: P}).pipe((0, r.q)(1), (0, t.b)(y => {
                        this.updateSealedMode(y)
                    }))
                }

                updateSealedMode(P) {
                    P && (P.game_mode_data = this.transformSealedModeGameModeData(P.game_mode_data)), this.dataStore.sealedMode = P, this._sealedMode$.next(P ? Object.assign({}, this.dataStore.sealedMode) : void 0), this.handleSealedModeStatus(P)
                }

                transformSealedModeGameModeData(P) {
                    const E = this.utilService.adjustToServerTime(P.end_time_remaining);
                    return Object.assign(Object.assign({}, P), {
                        end_time_server: E,
                        end_timestamp_server: Date.parse(E),
                        properties: Object.assign(Object.assign({}, P.properties), {
                            entry_cutoff_server: this.utilService.adjustToServerTime(P.properties.entry_cutoff_remaining),
                            start_time_server: this.utilService.adjustToServerTime(P.properties.start_time_remaining)
                        })
                    })
                }

                handleSealedModeStatus(P) {
                    if (P && P.sealed_id) if ("ended" !== P.status) {
                        if (!this.areRewardsAvailable(P)) return this.areWaitingToStart(P) ? (this.scheduleRefresh(P.game_mode_data.properties.start_time_server), void this.updateSealedModeStatus(D.WAITING_TO_START)) : (this.scheduleRefresh(P.game_mode_data.end_time_server, this.onSealedEnded.bind(this)), void this.updateSealedModeStatus(D.STARTED));
                        this.updateSealedModeStatus(D.REWARDS_AVAILABLE)
                    } else this.updateSealedModeStatus(D.ENDED); else this.updateSealedModeStatus(D.AVAILABLE)
                }

                scheduleRefresh(P, E) {
                    const s = Date.now(), k = new Date(P).getTime() + 1e3 - s;
                    k > 0 && k < u.v && (0, g.H)(k).pipe((0, o.R)(this.unsubscribe), (0, r.q)(1)).subscribe(B => {
                        this.fetchSealed(), E && E()
                    })
                }

                onSealedEnded() {
                    this.queueService.activeQueues$.pipe((0, r.q)(1), (0, b.U)(P => P.find(E => E.mode.id === T.B_.SEALED_DECK))).subscribe(P => {
                        P && this.queueService.cancel(P)
                    })
                }

                areRewardsAvailable(P) {
                    const E = Date.now(), s = new Date(P.game_mode_data.end_time_server).getTime();
                    return P.losses >= P.max_losses || P.wins >= P.max_wins || E > s
                }

                areWaitingToStart(P) {
                    const E = Date.now(), s = new Date(P.game_mode_data.properties.start_time_server).getTime();
                    return s && E < s
                }

                updateSealedModeStatus(P) {
                    this.dataStore.sealedModeStatus = P, this._sealedModeStatus$.next(this.dataStore.sealedModeStatus)
                }

                claimRewards$(P) {
                    const E = this.authService.getUserId(), s = this.authService.getGameSessionTicket();
                    return this.gameApi.put(`/user/${E}/mode/${T.B_.SEALED_DECK}/deck/${P}?session=${s}`, {action: "claim"})
                }
            }

            return M.\u0275fac = function (P) {
                return new (P || M)(w.LFG(v.Ft), w.LFG(e.mI), w.LFG(S.g), w.LFG(i.F))
            }, M.\u0275prov = w.Yz7({token: M, factory: M.\u0275fac, providedIn: "root"}), M
        })()
    }, 80537: (oe, R, n) => {
        "use strict";
        n.d(R, {k: () => u});
        var u = (() => {
            return (i = u || (u = {})).CODE_0 = "You are already queueing for another game mode. (Error Code 0)", i.CODE_1 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 1)", i.CODE_2 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 2)", i.CODE_3 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 3)", i.CODE_4 = "Queueing is currently disabled for maintenance. Please try again later. (Error Code 4)", i.CODE_5 = "There was an error while starting the game. (Error Code 5)", i.CODE_6 = "There was an error while starting the game. Unable to verify game files. (Error Code 6)", i.CODE_7 = "There was an error while starting the game. Unable to verify game files. (Error Code 7)", i.CODE_8 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 8)", i.CODE_9 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 9)", i.CODE_10 = "Unable to join queue. Suspicious account activity has been detected. (Error Code 10)", i.CODE_11 = "The deck you are queueing with is not complete. (Error Code 11)", i.CODE_12 = "There was an issue authorising the game build download. (Error Code 12)", i.CODE_13 = "There was an issue downloading the game. (Error Code 13)", i.CODE_14 = "There was an issue extracting the game. (Error Code 14)", u;
            var i
        })()
    }, 8611: (oe, R, n) => {
        "use strict";
        n.d(R, {n: () => v});
        var u = n(66088), i = n(5e3);
        let v = (() => {
            class e {
                constructor(p) {
                    this.modalService = p
                }

                ngOnInit() {
                }

                hideModal() {
                    this.modalService.destroyTopModal()
                }

                reject() {
                    window.open("https://immutable.atlassian.net/servicedesk/customer/portal/1/group/1/create/18", "_blank")
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)(i.Y36(u.Z))
            }, e.\u0275cmp = i.Xpm({
                type: e,
                selectors: [["app-bot-alert-modal"]],
                inputs: {title: "title", message: "message", onOk: "onOk", okButtonText: "okButtonText"},
                decls: 12,
                vars: 0,
                consts: [[1, "gradientOverlay"], [1, "title"], [1, "description"], ["size", "large", "text", "accept", 1, "acceptButton", 3, "click"], [1, "rejectText", 3, "click"]],
                template: function (p, g) {
                    1 & p && (i._UZ(0, "div", 0), i.TgZ(1, "div", 1), i._uU(2, " account issue "), i.qZA(), i.TgZ(3, "div", 2), i._uU(4, " We\u2019ve detected some unusual activity on your account, and suspect you might be a bot. "), i._UZ(5, "br"), i._UZ(6, "br"), i._UZ(7, "br"), i._uU(8, " You won\u2019t be able to queue for games or fuse cards until we can be sure you\u2019re a human.\n"), i.qZA(), i.TgZ(9, "gu-primary-hex-button", 3), i.NdJ("click", function () {
                        return g.hideModal()
                    }), i.qZA(), i.TgZ(10, "a", 4), i.NdJ("click", function () {
                        return g.reject()
                    }), i._uU(11, " i am not a bot "), i.qZA())
                },
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.title[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.rejectText[_ngcontent-%COMP%], .description[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.title[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.rejectText[_ngcontent-%COMP%], .description[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.description[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:center;width:calc(var(--vh) * 50);height:calc(var(--vh) * 45);padding-bottom:calc(var(--vw) * 2.5);background-image:url(/gu-assets/images/backgrounds/trader-overlay-bg.webp);background-size:cover;background-position:center}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.gradientOverlay[_ngcontent-%COMP%]{position:absolute;width:calc(var(--vh) * 50);height:calc(var(--vh) * 45);border:1px solid #182531;background:radial-gradient(ellipse at center,rgba(12,22,32,0) -80%,#0c1620 70%)}.title[_ngcontent-%COMP%]{background:linear-gradient(to bottom,#fff2d8 0%,#ebc98b 50%,#c6a052 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;padding-bottom:calc(var(--vh) * 2);padding-top:calc(var(--vh) * 6);text-transform:uppercase}.description[_ngcontent-%COMP%]{margin-top:calc(calc(var(--vw) * 2) * .7);padding-left:calc(var(--vh) * 6);padding-right:calc(var(--vh) * 6);text-align:center}.acceptButton[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2)}.rejectText[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2);text-transform:uppercase;color:#8be1e0;cursor:pointer}.rejectText[_ngcontent-%COMP%]:hover{text-decoration:underline}"]
            }), e
        })()
    }, 5231: (oe, R, n) => {
        "use strict";
        n.d(R, {s: () => v});
        var u = n(66088), i = n(5e3);
        let v = (() => {
            class e {
                constructor(p) {
                    this.modalService = p
                }

                ngOnInit() {
                }

                onOkCLick() {
                    this.onOk()
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)(i.Y36(u.Z))
            }, e.\u0275cmp = i.Xpm({
                type: e,
                selectors: [["app-hijack-modal"]],
                inputs: {title: "title", message: "message", onOk: "onOk", okButtonText: "okButtonText"},
                decls: 5,
                vars: 3,
                consts: [[1, "title-section"], [1, "message-section"], ["size", "large", 1, "cta-button", 3, "text", "click"]],
                template: function (p, g) {
                    1 & p && (i.TgZ(0, "div", 0), i._uU(1), i.qZA(), i.TgZ(2, "div", 1), i._uU(3), i.qZA(), i.TgZ(4, "gu-primary-hex-button", 2), i.NdJ("click", function () {
                        return g.onOkCLick()
                    }), i.qZA()), 2 & p && (i.xp6(1), i.Oqu(g.title), i.xp6(2), i.Oqu(g.message), i.xp6(1), i.Q6J("text", g.okButtonText))
                },
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.title-section[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.message-section[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.title-section[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.message-section[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.message-section[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{border:calc(var(--vh) * .15) solid #527493;background-color:#0c1620;position:relative;display:block;color:#f6f6f6;padding:calc(var(--vw) * 2);width:calc(var(--vw) * 30);display:flex;flex-flow:column nowrap;align-items:center;padding-bottom:calc(var(--vw) * 2.5)}.title-section[_ngcontent-%COMP%]{padding-bottom:calc(var(--vh) * 2);border-bottom:calc(var(--vh) * .15) solid #fff;text-transform:uppercase}.message-section[_ngcontent-%COMP%]{margin-top:calc(calc(var(--vw) * 2) * .7);text-align:center}.cta-button[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2)}"]
            }), e
        })()
    }, 14618: (oe, R, n) => {
        "use strict";
        n.d(R, {
            gK: () => u,
            ky: () => i,
            Kg: () => v,
            dY: () => e,
            yn: () => f,
            Ry: () => p,
            Tg: () => g,
            c7: () => r,
            Vm: () => t,
            $9: () => o,
            X4: () => b,
            Lg: () => S,
            P6: () => T,
            wT: () => w
        });
        var u = (() => {
            return (D = u || (u = {})).GAME_BUILD_DOWNLOAD_CHECK = "[GameResources] Game Build Download Check", D.GAME_BUILD_DOWNLOAD_REQUEST = "[GameResources] Game Build Download Request", D.GAME_BUILD_DOWNLOAD_PROGRESS = "[GameResources] Game Build Download Progress", D.GAME_BUILD_DOWNLOAD_EXTRACT = "[GameResources] Game Build Download Extract", D.GAME_BUILD_DOWNLOAD_SUCCESS = "[GameResources] Game Build Download Success", D.GAME_BUILD_DOWNLOAD_ERROR = "[GameResources] Game Build Download Error", D.GAME_BUILD_DOWNLOAD_UPDATE_STATUS = "[GameResources] Game Build Download Update Status", D.GAME_ASSETS_DOWNLOAD_CHECK = "[GameResources] Game Assets Download Check", D.GAME_ASSETS_DOWNLOAD_REQUEST = "[GameResources] Game Assets Download Request", D.GAME_ASSETS_DOWNLOAD_PROGRESS = "[GameResources] Game Assets Download Progress", D.GAME_ASSETS_DOWNLOAD_SUCCESS = "[GameResources]  Game Assets Download Success", D.GAME_ASSETS_DOWNLOAD_ERROR = "[GameResources]  Game Assets Download Error", D.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS = "[GameResources] Game Assets Download Update Status", u;
            var D
        })();

        class i {
            constructor(_) {
                this.payload = _, this.type = u.GAME_BUILD_DOWNLOAD_CHECK
            }
        }

        class v {
            constructor() {
                this.type = u.GAME_BUILD_DOWNLOAD_REQUEST
            }
        }

        class e {
            constructor(_) {
                this.payload = _, this.type = u.GAME_BUILD_DOWNLOAD_PROGRESS
            }
        }

        class f {
            constructor(_) {
                this.payload = _, this.type = u.GAME_BUILD_DOWNLOAD_EXTRACT
            }
        }

        class p {
            constructor() {
                this.type = u.GAME_BUILD_DOWNLOAD_SUCCESS
            }
        }

        class g {
            constructor(_) {
                this.payload = _, this.type = u.GAME_BUILD_DOWNLOAD_UPDATE_STATUS
            }
        }

        class r {
            constructor(_) {
                this.payload = _, this.type = u.GAME_BUILD_DOWNLOAD_ERROR
            }
        }

        class t {
            constructor(_) {
                this.payload = _, this.type = u.GAME_ASSETS_DOWNLOAD_CHECK
            }
        }

        class o {
            constructor() {
                this.type = u.GAME_ASSETS_DOWNLOAD_REQUEST
            }
        }

        class b {
            constructor(_) {
                this.payload = _, this.type = u.GAME_ASSETS_DOWNLOAD_PROGRESS
            }
        }

        class S {
            constructor(_) {
                this.payload = _, this.type = u.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS
            }
        }

        class T {
            constructor() {
                this.type = u.GAME_ASSETS_DOWNLOAD_SUCCESS
            }
        }

        class w {
            constructor(_) {
                this.payload = _, this.type = u.GAME_ASSETS_DOWNLOAD_ERROR
            }
        }
    }, 69931: (oe, R, n) => {
        "use strict";
        n.d(R, {VD: () => i, DM: () => v, gP: () => e});
        var u = n(96727);
        const i = (0, u.ZF)("gameResources"), v = () => (0, u.P1)(i, f => f.gameBuild),
            e = () => (0, u.P1)(i, f => f.gameAssets)
    }, 63411: (oe, R, n) => {
        "use strict";
        n.d(R, {e: () => _});
        var u = n(73175), i = n(591), v = n(61737), e = n(21086), f = n(2994), p = n(61709), g = n(27221), r = n(24850),
            t = n(72986), o = n(40520), b = n(73307), S = n(5e3), T = n(11735);
        const w = new u.N0;
        let _ = (() => {
            class M {
                constructor(P, E, s, y) {
                    this.authHostService = P, this.storage = E, this.featureFlagsService = s, this.router = y, this.isRemembering = !0, this.dataStore = {account: null}, this._account$ = new i.X(null)
                }

                login(P, E, s) {
                    return this.authHostService.post("/auth2?type=login&code=" + this.generate(), P).pipe((0, f.b)(y => this.sendAnalytics(!0, P.email, +y.id)), (0, p.VS)(y => this.saveAccount(y, E, s)), (0, f.b)(y => this.fetchAccount()), (0, g.K)(y => (this.sendAnalytics(!1, P.email), (0, v._)(y))))
                }

                saveAccount(P, E, s) {
                    return this.auth = P, "function" == typeof window.bridge.updateAuthPair && window.bridge.updateAuthPair(P), this.isRemembering = E, E && (this.storage.set(["user_id"], P.id), this.storage.set(["refresh"], P.refresh), this.storage.set(["access"], P.access)), this.authHostService.post(`/account/${P.id}/session`, {game_id: s}).pipe((0, f.b)(y => {
                        "function" == typeof window.bridge.updateSession && window.bridge.updateSession(y), this.storage.set(["game_session"], y)
                    }), (0, r.U)(() => !0), (0, g.K)(y => (0, e.of)(!1)))
                }

                getLinkedAddresses(P) {
                    return this.authHostService.get(`v2/account/${P}`).pipe((0, r.U)(E => E.addresses.map(s => s.address)))
                }

                fetchSession() {
                    return (0, e.of)(this.getGameSessionTicket())
                }

                sendAnalytics(P, E, s) {
                }

                get account$() {
                    return this._account$.asObservable()
                }

                _emitAccount(P) {
                    this.dataStore.account = P, this._account$.next(Object.assign({}, this.dataStore).account), this.featureFlagsService.setContext(P ? {
                        userID: `${P.id}`,
                        email: P.email,
                        name: P.username,
                        anonymous: !1
                    } : {anonymous: !0})
                }

                getUserId() {
                    return this.auth && null != this.auth.id ? this.auth.id : this.storage.get(["user_id"])
                }

                getGameSessionTicket() {
                    return this.storage.get(["game_session"])
                }

                fetchAccount() {
                    const P = this.getUserId();
                    !P || this.authHostService.get(`/v2/account/${P}`).pipe((0, t.q)(1), (0, f.b)(E => this._emitAccount(E))).subscribe()
                }

                fetchAccountDetails() {
                    const P = this.getUserId();
                    if (P) return this.authHostService.get(`/v2/account/${P}`)
                }

                updateCurrentUser(P) {
                    const E = this.getUserId();
                    return this.updateUser(E, P)
                }

                updateUser(P, E) {
                    return this.authHostService.put("/account/" + P, E).pipe((0, t.q)(1), (0, f.b)(s => this._emitAccount(s)))
                }

                getAuthHeader() {
                    let P = new o.WM;
                    return P = P.append("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"), P = P.append("Authorization", this.getAccessToken()), P
                }

                getRefreshToken() {
                    return this.storage.get(["refresh"])
                }

                getAccessToken() {
                    return this.storage.get(["access"])
                }

                getAuthToken() {
                    return this.auth
                }

                register(P) {
                    return this.authHostService.post("/register", P)
                }

                resend(P) {
                    return this.authHostService.post("/resend", {email: P})
                }

                resetPassword(P) {
                    return this.authHostService.put("/reset", {email: P})
                }

                isLoggedIn() {
                    const P = this.getRefreshToken();
                    return null != P && P.length > 0
                }

                logout() {
                    this.auth = null, this._emitAccount(null), this.storage.delete(["user_id"]), this.storage.delete(["refresh"]), this.storage.delete(["access"]), this.storage.delete(["email"]), this.storage.delete(["subscribe"]), this.authHostService.post("/logout"), this.router.navigate(["/login"]), this.featureFlagsService.setContext({
                        userID: void 0,
                        email: void 0,
                        name: void 0,
                        anonymous: !0
                    })
                }

                refreshToken() {
                    const P = this.getRefreshToken();
                    return this.authHostService.post("/auth2?type=refresh&code=" + this.generate(), {refresh: P}).pipe((0, f.b)(E => {
                    }))
                }

                linkReferralCode(P) {
                    const E = this.getUserId();
                    return this.authHostService.post(`/account/${E}/referrer`, {referral: P})
                }

                tokenIsExpired() {
                    const P = this.getAuthToken();
                    return w.isTokenExpired(P.access)
                }

                generate() {
                    function P(F, Y) {
                        return (F.length - F.replace(new RegExp(Y, "g"), "").length) / Y.length
                    }

                    function E(F, Y, ae) {
                        return Y > F.length - 1 ? F : F.substr(0, Y) + ae + F.substr(Y + 1)
                    }

                    const s = function (F) {
                        const ae = Math.pow(16, Math.min(F, 8) - 1), J = Math.pow(16, Math.min(F, 8)) - 1;
                        let N = (Math.floor(Math.random() * (J - ae + 1)) + ae).toString(16);
                        for (; N.length < F;) N += s(F - 8);
                        return N
                    }, y = Math.ceil(25 * Math.random()), k = 32 - y - 4;
                    let B = ("" + s(y) + 2 + s(2) + 2 + s(k)).toLowerCase(), ce = P(B, "a") - P(B, "b") + 1, Ee = 0;
                    for (; ce > 0 && ("a" !== B[Ee] && "b" !== B[Ee] && "2" !== B[Ee] && (B = E(B, Ee, "b"), ce--), Ee++, !(Ee > B.length));) ;
                    for (; ce < 0 && ("a" !== B[Ee] && "b" !== B[Ee] && "2" !== B[Ee] && (B = E(B, Ee, "a"), ce++), Ee++, !(Ee > B.length));) ;
                    return B
                }
            }

            return M.\u0275fac = function (P) {
                return new (P || M)(S.LFG(b.LI), S.LFG(b.qy), S.LFG(b.B3), S.LFG(T.F0))
            }, M.\u0275prov = S.Yz7({token: M, factory: M.\u0275fac}), M
        })()
    }, 69340: (oe, R, n) => {
        "use strict";
        n.d(R, {b5: () => M});
        var u = n(21086), i = n(41746), v = n(8929), e = n(56498), f = n(24850), p = n(87168), g = n(61709),
            r = n(87545), t = n(14618), o = n(69931), b = n(79763), S = n(44416), T = n(5e3), w = n(96727);
        let M = (() => {
            class C {
                constructor(E, s, y, k) {
                    this.gameService = E, this.zone = s, this.utils = y, this.ngrxStore = k, this.downloads = new Map
                }

                getCurrentDownload() {
                    return this.currentDownload
                }

                getVersionFile(E, s) {
                    return window.bridge.httpGet(`https://s3-ap-southeast-2.amazonaws.com/gods-builds/manifests/${s}-manifest.json`).pipe(this.utils.enterZone(this.zone))
                }

                getLatest(E, s) {
                    return this.getVersionFile(E, s).pipe((0, f.U)(y => y.build_version))
                }

                getLocal(E) {
                    return (0, u.of)(this.gameService.getProperty(E.id, "version"))
                }

                getVersions(E, s) {
                    let y;
                    return y = (0, i.$R)("local" === s ? this.getLocal(E) : this.getLatest(E, s), this.getLocal(E)), y
                }

                requiresUpdate(E, s) {
                    return this.getVersions(E, s).pipe((0, p.M)(this.ngrxStore.select(o.VD)), (0, g.VS)(([[y, k], B]) => {
                        let ee = !0;
                        return k && k === y && (ee = "downloaded" === this.gameService.getProperty(E.id, "status")), ee && "downloading" !== B.gameBuild.status && "extracting" !== B.gameBuild.status && this.ngrxStore.dispatch(new t.ky({isUpdateRequired: ee})), (0, u.of)(ee)
                    }))
                }

                getUserPlatform() {
                    return "win32" === window.bridge.platform() ? "win" : "mac"
                }

                getLatestAssetsVersions(E, s) {
                    const y = {platform: this.getUserPlatform(), branch: s};
                    return window.bridge.httpPost("https://oyhca2oyje.execute-api.us-east-1.amazonaws.com/test/1/game/assets", y).pipe(this.utils.enterZone(this.zone))
                }

                getLocalAssetsVersions(E) {
                    return this.gameService.getProperty(E.id, "assets") ? (0, u.of)(JSON.parse(this.gameService.getProperty(E.id, "assets"))) : (0, u.of)(null)
                }

                requiresAssetsUpdate(E, s) {
                    return (0, i.$R)(this.getLocalAssetsVersions(E), this.getLatestAssetsVersions(E, s)).pipe((0, p.M)(this.ngrxStore.select(o.VD)), (0, r.w)(([[y, k], B]) => {
                        let ee;
                        return ee = y ? this.deltaAssetsVersions(y, k) : k, ee.length > 0 && "downloading" !== B.gameAssets.status && this.ngrxStore.dispatch(new t.Vm({isUpdateRequired: ee.length > 0})), (0, u.of)(ee)
                    }))
                }

                deltaAssetsVersions(E, s) {
                    let y = [];
                    return y = E ? s ? s.filter(k => !E.some(B => k.etag === B.etag)) : [] : s, y
                }

                getDownloadInfo(E, s, y) {
                    return this.gameService.isObfuscatedBranch(E.id) ? {
                        url: `${E.base_url_auth}/builds/game/${s}/${this.getFileName(E, s)}`,
                        authToken: y
                    } : {url: `${E.base_url}/builds/${s}/${this.getFileName(E, s)}`, authToken: void 0}
                }

                getFileName(E, s) {
                    return "win32" === window.bridge.platform() ? "gods_" + s + E.extensions.windows : "gods_" + s + E.extensions.osx
                }

                downloadAndExtract(E, s, y) {
                    const k = this.gameService.getInstallPath(E), B = this.getDownloadInfo(E, s, y),
                        ee = window.bridge.download(B.url, k, this.getFileName(E, s), y).pipe((0, f.U)(pe => (this.currentDownload.extracting = !0, this.gameService.setProperty(E.id, "version", s), this.gameService.setProperty(E.id, "status", "downloaded"), {
                            game: E,
                            fileName: this.getFileName(E, s),
                            installPath: k
                        })));
                    return this.currentDownload = {
                        progress: window.bridge.progress,
                        download: ee,
                        extracting: !1,
                        error$: new v.xQ
                    }, this.currentDownload
                }

                displayDownloadCompleteNotification(E) {
                    new window.Notification("Download Complete", {
                        body: E.title + " has finished downloading.",
                        silent: !0
                    }).onclick = () => {
                    }
                }

                deleteFile(E, s) {
                    const y = window.bridge.join(s, E);
                    window.bridge.exists(y) && window.bridge.deleteFile(y)
                }

                extractGame(E, s, y) {
                    return new e.y(k => {
                        const B = window.bridge.join(y, s), ee = window.bridge.join(y, E.title);
                        window.bridge.exists(B) || (console.error("GameDownloadService->extractGame() unable to find file to extract"), k.error("File not found! Cannot extract.")), window.bridge.extract(B, ee, pe => {
                            "win32" !== window.bridge.platform() ? window.bridge.chmod(ee + "/StandaloneOSXUniversal/gods.app/Contents/MacOS/gods", Ee => {
                                Ee ? (console.error(Ee), k.error(Ee)) : k.next(!0)
                            }) : k.next(!0)
                        })
                    }).pipe((0, g.VS)(k => {
                        if (k) return this.gameService.setProperty(E.id, "status", "extracted"), this.gameService.refreshGameContext(), null != this.currentDownload && (this.currentDownload.extracting = !1), (0, u.of)(k)
                    }))
                }

                uninstallGame(E, s) {
                    window.bridge.deleteFile(window.bridge.join(s, E.title))
                }
            }

            return C.\u0275fac = function (E) {
                return new (E || C)(T.LFG(b.hM), T.LFG(T.R0b), T.LFG(S.F), T.LFG(w.yh))
            }, C.\u0275prov = T.Yz7({token: C, factory: C.\u0275fac, providedIn: "root"}), C
        })()
    }, 79763: (oe, R, n) => {
        "use strict";
        n.d(R, {hM: () => C});
        var u = n(591), i = n(61737), v = n(21086), e = n(24850), f = n(92198), p = n(72986), g = n(61377),
            r = n(73307), t = n(63764), o = n(80537), S = (n(63411), n(52492)), T = n(66088), w = n(5e3);
        let C = (() => {
            class P {
                constructor(s, y, k, B, ee, pe) {
                    this.authHostService = s, this.auth = y, this.storage = k, this.modalService = B, this.akuma = ee, this.gameApi = pe, this._currentGameContext$ = new u.X(null), this._branches$ = new u.X([]), this.dataStore = {
                        currentGameContext: null,
                        branches: []
                    }
                }

                get currentGameContext$() {
                    return this._currentGameContext$.asObservable()
                }

                get branches$() {
                    return this._branches$.asObservable()
                }

                getBranch$(s) {
                    const y = this.getProperty(s, "branch"), k = y && "" !== y ? y : "beta";
                    return this.branches$.pipe((0, e.U)(B => B.find(ee => ee.name === k)), (0, f.h)(B => !!B))
                }

                isObfuscatedBranch(s = 1) {
                    const y = this.getProperty(s, "branch"), k = this.dataStore.branches.find(B => B.name === y);
                    return k && k.obfuscated
                }

                onValidBranch(s, y) {
                    return !(!s || !y.find(k => k.name === s))
                }

                fetchBranchesExtended(s) {
                    const y = this.getProperty(s, "branch");
                    this.fetchBranchesExtendedApi(s).subscribe(k => {
                        this.onValidBranch(y, k) || (this.setProperty(s, "branch", "beta"), this.refreshGameContext(), "string" == typeof y && (this.auth.logout(), setTimeout(() => window.location.reload()))), this.dataStore.branches = k, this._branches$.next([...this.dataStore.branches])
                    })
                }

                fetchBranchesExtendedApi(s) {
                    const y = this.auth.getUserId();
                    return this.authHostService.get(`/game/${s}/player/${y}/branch?format=extended`).pipe((0, p.q)(1))
                }

                setGuGameContext() {
                    this.dataStore.currentGameContext = this.getMockedGuGame(), this._emitCurrentGameContext()
                }

                refreshGameContext() {
                    this._emitCurrentGameContext()
                }

                _emitCurrentGameContext() {
                    this._currentGameContext$.next(Object.assign({}, this.dataStore).currentGameContext)
                }

                getGames(s) {
                    return this.authHostService.get("/account/" + s + "/game")
                }

                getUserTutorialMissions(s, y) {
                    return (!s || !y) && (s = this.auth.getUserId(), y = this.auth.getGameSessionTicket()), this.gameApi.get(`/user/${s}/tutorial?session=${y}`)
                }

                updateUserTutorialMissions(s, y, k) {
                    return (!s || !k) && (s = this.auth.getUserId(), k = this.auth.getGameSessionTicket()), this.gameApi.post(`/user/${s}/tutorial?session=${k}`, y)
                }

                setProcessID(s, y) {
                    null == this.sessions && (this.sessions = new Map);
                    const k = this.sessions.get(s);
                    k && (k.pid = y, this.sessions.set(s, k))
                }

                isInstalled(s) {
                    const y = this.getPlayPath(s), k = window.bridge.exists(y);
                    return k || console.error("Game is not installed", y), k
                }

                play(s, y) {
                    const k = this.getPlayPath(s);
                    if (!this.isInstalled(s)) return console.error("gameService->play() game not intalled", s.id, s.title), (0, i._)(o.k.CODE_6);
                    let B;
                    return B = y ? window.bridge.executeArgs(k, y, (ee, pe) => {
                        if (pe) return console.error("gameService->play()->window.bridge.executeArgs() error starting game", k, pe), (0, i._)(o.k.CODE_7);
                        this.logGameClientLaunched()
                    }) : window.bridge.execute(k, (ee, pe) => {
                        if (pe) return console.error("gameService->play()->window.bridge.execute() error starting game", k, pe), (0, i._)(o.k.CODE_7);
                        this.logGameClientLaunched()
                    }), "win32" !== window.bridge.platform() && B.pid++, this.setProcessID(s.id, B.pid), (0, v.of)({process: B})
                }

                logGameClientLaunched() {
                    "function" == typeof gtag && gtag("event", "succeeded", {event_category: "gameClientLaunched"}), this.akuma.postEvent("Flow", "_gameClientLaunched_succeeed")
                }

                getPlayPath(s) {
                    const y = this.getInstallPath(s), k = window.bridge.join(y, s.title);
                    return "win32" === window.bridge.platform() ? window.bridge.join(k, s.executables.windows) : window.bridge.join(k, s.executables.osx)
                }

                showInfoModal(s, y) {
                    this.modalService.createModal(t.S, {title: s, text: y}, {
                        blurredBackground: !0,
                        canCloseFromInside: !1,
                        position: S.e1.Center,
                        size: S.Cg.StretchableWorkarea
                    })
                }

                getMockedGuGame() {
                    return {
                        id: 1,
                        title: "Gods Unchained",
                        description: "Gods Unchained is a state of the art competitive card game driven by decentralized asset ownership.\n      <br><br>Gods Unchained combines the convenience and beauty of digital card games with\n      the true ownership offered by physical card games to create the world's first blockchain eSport.",
                        background_url: "",
                        thumbnail_url: "launcher-mockup-gu-logo.png",
                        base_url: "https://builds.godsunchained.com",
                        base_url_auth: "https://d2kgdofmel8ecp.cloudfront.net",
                        userId: this.auth.getUserId(),
                        role: "dev",
                        executables: {
                            osx: "/StandaloneOSXUniversal/gods.app",
                            windows: "/StandaloneWindows64/gods.exe"
                        },
                        extensions: {osx: "_osx_full.zip", windows: "_win64_full.zip"}
                    }
                }

                getDefaultInstallPath() {
                    return "win32" === window.bridge.platform() ? window.bridge.homeDirectory() + "\\AppData\\Local\\GodsUnchained" : window.bridge.homeDirectory() + "/Library/GodsUnchained/"
                }

                getInstallPath(s) {
                    return this.getProperty(s.id, "path") || this.getDefaultInstallPath()
                }

                getAssetsPath() {
                    return "win32" === window.bridge.platform() ? window.bridge.homeDirectory() + "\\Documents\\My Games\\GodsUnchained\\Assets" : window.bridge.homeDirectory() + "/Library/GodsUnchained/Assets"
                }

                getGameId() {
                    return this.dataStore.currentGameContext ? this.dataStore.currentGameContext.id : null
                }

                getProperty(s, y) {
                    return this.storage.get(["game", String(s), y])
                }

                deleteProperty(s, y) {
                    return this.storage.delete(["game", String(s), y])
                }

                setProperty(s, y, k) {
                    return this.storage.set(["game", String(s), y], k)
                }

                getBranch(s) {
                    const y = this.getProperty(s, "branch");
                    return (0, v.of)(y && "" !== y ? y : "beta")
                }

                clearAssets(s) {
                    this.setProperty(s, "assets", JSON.stringify([])), window.bridge.clearGUAssets(y => {
                        console.error("Error Clearing New Assets", y)
                    }), location.reload()
                }

                checkInstallationPath(s) {
                    if (!this.getProperty(s, "path")) {
                        const k = this.getDefaultInstallPath();
                        this.setProperty(s, "path", k), this.clearVersion(s)
                    }
                }

                clearVersion(s) {
                    this.deleteProperty(s, "version"), this.refreshGameContext(), setTimeout(() => window.location.reload())
                }
            }

            return P.\u0275fac = function (s) {
                return new (s || P)(w.LFG(r.LI), w.LFG(r.mI), w.LFG(r.qy), w.LFG(T.Z), w.LFG(g.jt), w.LFG(g.Ft))
            }, P.\u0275prov = w.Yz7({token: P, factory: P.\u0275fac, providedIn: "root"}), P
        })()
    }, 24058: (oe, R, n) => {
        "use strict";
        n.d(R, {m: () => v});
        var u = n(73307), i = n(5e3);
        let v = (() => {
            class e {
                constructor(p) {
                    this.storageService = p, this.logsClearedKey = "logsCleared", this.fileNames = ["main.log", "main.old.log", "renderer.log", "renderer.old.log"]
                }

                shouldClearLogs() {
                    return !this.storageService.get([this.logsClearedKey])
                }

                clearLogs() {
                    ("win32" === window.bridge.platform() ? this.windowsPaths() : this.macPaths()).forEach(g => {
                        this.fileNames.forEach(r => {
                            const t = `${g}${r}`;
                            window.bridge.exists(t) && window.bridge.deleteFile(t)
                        })
                    }), this.storageService.set([this.logsClearedKey], !0)
                }

                windowsPaths() {
                    return [`${window.bridge.homeDirectory()}\\AppData\\Roaming\\immutable-launcher\\logs\\`, `${window.bridge.homeDirectory()}\\AppData\\Roaming\\apollo-launcher\\logs\\`]
                }

                macPaths() {
                    return [`${window.bridge.homeDirectory()}/Library/Logs/immutable-launcher/`, `${window.bridge.homeDirectory()}/Library/Logs/apollo-launcher/`]
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)(i.LFG(u.qy))
            }, e.\u0275prov = i.Yz7({token: e, factory: e.\u0275fac, providedIn: "root"}), e
        })()
    }, 52492: (oe, R, n) => {
        "use strict";
        n.d(R, {e1: () => u, Cg: () => i});
        var u = (() => {
            return (e = u || (u = {}))[e.Center = 0] = "Center", e[e.Custom = 1] = "Custom", u;
            var e
        })(), i = (() => {
            return (e = i || (i = {}))[e.Fullscreen = 0] = "Fullscreen", e[e.Workarea = 1] = "Workarea", e[e.StretchableFullscreen = 2] = "StretchableFullscreen", e[e.StretchableWorkarea = 3] = "StretchableWorkarea", i;
            var e
        })()
    }, 66088: (oe, R, n) => {
        "use strict";
        n.d(R, {Z: () => T});
        var u = n(8929), i = n(2994), v = n(57503), e = n(5e3), f = n(22313), p = n(69808);
        const g = ["modalHolder"];

        function r(w, D) {
        }

        let t = (() => {
            class w {
                constructor(_, M, C) {
                    this.resolver = _, this.sanitizer = M, this.el = C, this.blurredBackground = !1, this.canCloseFromInside = !1, this.canCloseFromOutside = !0, this.closeModal$ = new e.vpe
                }

                get myStyle() {
                    return this.sanitizer.bypassSecurityTrustStyle(`\n      z-index: ${this.styles.zIndex};\n    `)
                }

                ngOnInit() {
                    const _ = this.resolver.resolveComponentFactory(this.component);
                    this.componentRef = this.modalHolder.createComponent(_, 0, this.modalHolder.injector, [[]]), Object.assign(this.componentRef.instance, this.inputs), this.calculateLocation()
                }

                ngOnDestroy() {
                    this.componentRef = null
                }

                calculateLocation() {
                }

                closeModal(_) {
                    _ && !this.canCloseFromInside || !_ && this.canCloseFromOutside && this.closeModal$.emit()
                }

                onClickedOutside(_) {
                }
            }

            return w.\u0275fac = function (_) {
                return new (_ || w)(e.Y36(e._Vd), e.Y36(f.H7), e.Y36(e.SBq))
            }, w.\u0275cmp = e.Xpm({
                type: w,
                selectors: [["app-modal"]],
                viewQuery: function (_, M) {
                    if (1 & _ && e.Gf(g, 7, e.s_b), 2 & _) {
                        let C;
                        e.iGM(C = e.CRH()) && (M.modalHolder = C.first)
                    }
                },
                hostVars: 2,
                hostBindings: function (_, M) {
                    2 & _ && e.Akn(M.myStyle)
                },
                inputs: {
                    component: "component",
                    inputs: "inputs",
                    styles: "styles",
                    blurredBackground: "blurredBackground",
                    canCloseFromInside: "canCloseFromInside",
                    canCloseFromOutside: "canCloseFromOutside"
                },
                outputs: {closeModal$: "closeModal$"},
                decls: 4,
                vars: 1,
                consts: [[1, "bgOverlay", 3, "click"], [1, "modalContentContainer", 3, "ngStyle", "click"], ["modalHolder", ""]],
                template: function (_, M) {
                    1 & _ && (e.TgZ(0, "a", 0), e.NdJ("click", function () {
                        return M.closeModal(!1)
                    }), e.qZA(), e.TgZ(1, "div", 1), e.NdJ("click", function () {
                        return M.closeModal(!0)
                    }), e.YNc(2, r, 0, 0, "ng-template", null, 2, e.W1O), e.qZA()), 2 & _ && (e.xp6(1), e.Q6J("ngStyle", M.styles))
                },
                directives: [p.PC],
                styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;display:block}.bgOverlay[_ngcontent-%COMP%]{position:absolute;right:0;left:0;top:0;bottom:0;background-color:#0c1620;opacity:.7}.bgOverlay--transparent[_ngcontent-%COMP%]{background:transparent}.modalContentContainer[_ngcontent-%COMP%]{position:absolute;top:0;left:0;opacity:1}"]
            }), w
        })();
        var o = n(6674), b = n(44416), S = n(52492);
        let T = (() => {
            class w {
                constructor(_, M, C, P, E) {
                    this.resolver = _, this.appRef = M, this.utilsService = P, this.resizeService = E, this._modalDestroy$ = new u.xQ, this.modalsStack = [], this.modalFactory = this.resolver.resolveComponentFactory(t), this.renderer = C.createRenderer(null, null), this.resizeService.viewPortUnits$.pipe((0, i.b)(({vh: s}) => this.vh = s)).subscribe()
                }

                setModalVCRs(_, M) {
                    this.workareaVcr = _, this.fullscreenVcr = M
                }

                get modalDestroy$() {
                    return this._modalDestroy$.asObservable()
                }

                createModal(_, M = {}, {
                    canCloseFromInside: C = !1,
                    canCloseFromOutside: P = !0,
                    blurredBackground: E = !1,
                    position: s = S.e1.Center,
                    customPosition: y = null,
                    size: k = S.Cg.StretchableFullscreen
                } = {}, B) {
                    const ee = B || this.getVCR(k), pe = this.getModalHolderStyles(s, k, y);
                    0 === this.modalsStack.length && (this.renderer.addClass(ee.element.nativeElement.parentElement, "addModalBlurBackground"), this.modalsStack.push({
                        vcr: ee,
                        nativeElement: ee.element.nativeElement,
                        parentElement: ee.element.nativeElement.parentElement
                    }));
                    const ce = this.createModalComponent(_, M, ee, pe, E, C, P);
                    this.modalsStack.push({
                        component: ce,
                        vcr: ee,
                        nativeElement: ce.instance.el.nativeElement
                    }), this.updateBlur()
                }

                getVCR(_) {
                    switch (_) {
                        case S.Cg.Fullscreen:
                        case S.Cg.StretchableFullscreen:
                            return this.fullscreenVcr || this.appRef.components[0].instance.vcr;
                        case S.Cg.Workarea:
                        case S.Cg.StretchableWorkarea:
                            return this.workareaVcr
                    }
                }

                getModalHolderStyles(_, M, C) {
                    if (_ === S.e1.Custom) {
                        (null === C || 2 !== C.split(":").length) && console.error("Provide valid customPosition (SELECTOR:POSITION ex. '#elementId:left')");
                        const P = C.split(":");
                        return Object.assign(Object.assign({}, this.getRelativePos(P[0], P[1])), {zIndex: M === S.Cg.Workarea ? v.Rl.measurements.headerBarZLevel - 1 : v.Rl.measurements.modalLayerZLevel})
                    }
                    return Object.assign(Object.assign({}, this.getBoundaries(_, M)), {zIndex: M === S.Cg.Workarea ? v.Rl.measurements.headerBarZLevel - 1 : v.Rl.measurements.modalLayerZLevel})
                }

                destroyTopModal() {
                    if (0 === this.modalsStack.length) return;
                    const _ = this.modalsStack.pop();
                    this._modalDestroy$.next(_.component.componentType), _.component && _.component.destroy(), _.component = null, this.updateBlur(), 1 === this.modalsStack.length && (this.renderer.removeClass(this.modalsStack[0].parentElement, "addModalBlurBackground"), this.modalsStack = [])
                }

                destroyModalsStack() {
                    0 !== this.modalsStack.length && (this.modalsStack.filter(_ => _.component).forEach(_ => {
                        this._modalDestroy$.next(_.component.componentType), _.component.destroy(), _.component = null, _.nativeElement = null
                    }), this.updateBlur(), this.renderer.removeClass(this.modalsStack[0].parentElement, "addModalBlurBackground"), this.modalsStack = [])
                }

                createModalComponent(_, M, C, P, E, s, y) {
                    const k = C.createComponent(this.modalFactory, this.modalsStack.length - 1, C.injector, [[]]);
                    return Object.assign(k.instance, {
                        styles: P,
                        blurredBackground: E,
                        canCloseFromInside: s,
                        canCloseFromOutside: y,
                        component: _,
                        inputs: M
                    }), k.instance.closeModal$.subscribe(() => {
                        C.remove(), this.destroyTopModal()
                    }), k
                }

                getBoundaries(_, M) {
                    if (_ === S.e1.Center) {
                        if (M === S.Cg.StretchableFullscreen || M === S.Cg.StretchableWorkarea) return {
                            "top.%": 50,
                            "left.%": 50,
                            transform: "translate(-50%, -50%)"
                        };
                        if (M === S.Cg.Fullscreen || M === S.Cg.Workarea) return {top: 0, bottom: 0, left: 0, right: 0};
                        console.error(`Size '${M}' not supported`)
                    } else console.error(`Position '${_}' not supported`)
                }

                getRelativePos(_, M) {
                    const P = window.document.querySelector(_).getBoundingClientRect();
                    switch (M) {
                        case"left":
                            return {
                                "right.px": document.body.clientWidth - P.right + P.width + 15,
                                "top.px": P.top + P.height / 2,
                                transform: "translateY(-50%)"
                            };
                        case"right":
                            return {
                                "left.px": P.right + 15,
                                "top.px": P.top + P.height / 2,
                                transform: "translateY(-50%)"
                            };
                        case"top":
                            return {
                                top: "unset",
                                "bottom.px": document.body.clientHeight - P.bottom + P.height + 15,
                                "left.px": P.left + P.width / 2,
                                transform: "translateX(-50%)"
                            };
                        case"bottom":
                            return {
                                "top.px": P.bottom + 15,
                                "left.px": P.left + P.width / 2,
                                transform: "translateX(-50%)"
                            }
                    }
                    return {"top.%": 50, "left.%": 50, transform: "translate(-50%, -50%)"}
                }

                updateBlur() {
                    if (this.modalsStack.filter(_ => !!_.nativeElement).forEach(_ => this.setBlurredBackground(_.nativeElement, !1)), this.modalsStack.length > 1) {
                        const _ = this.utilsService.findLastIndex(this.modalsStack, M => M.component && M.component.instance && M.component.instance.blurredBackground);
                        _ > 0 && this.setBlurredBackground(this.modalsStack[_].nativeElement, !0)
                    }
                }

                setBlurredBackground(_, M) {
                    let C;
                    _ instanceof Comment ? C = _.previousSibling : (C = _, this.renderer.setStyle(_, "backgroundColor", M ? "rgba(29,47,65, 0.6)" : "unset")), this.renderer.setStyle(C, "backdrop-filter", M ? `blur(${1.5 * this.vh}px)` : "none")
                }
            }

            return w.\u0275fac = function (_) {
                return new (_ || w)(e.LFG(e._Vd), e.LFG(e.z2F), e.LFG(e.FYo), e.LFG(b.F), e.LFG(o._))
            }, w.\u0275prov = e.Yz7({token: w, factory: w.\u0275fac}), w
        })()
    }, 77391: (oe, R, n) => {
        "use strict";
        n.d(R, {f: () => v});
        var u = n(591), i = n(5e3);
        let v = (() => {
            class e {
                constructor() {
                    this._currentRoute$ = new u.X("")
                }

                get currentRoute$() {
                    return this._currentRoute$.asObservable()
                }

                updateCurrentRoute(p) {
                    this._currentRoute$.next(p)
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)
            }, e.\u0275prov = i.Yz7({token: e, factory: e.\u0275fac, providedIn: "root"}), e
        })()
    }, 236: (oe, R, n) => {
        "use strict";
        n.d(R, {u: () => i});
        var u = n(5e3);
        let i = (() => {
            class v {
                transform(f) {
                    const p = Math.floor(f / 60);
                    return p.toString().padStart(1, "0") + ":" + Math.floor(f - 60 * p).toString().padStart(2, "0")
                }
            }

            return v.\u0275fac = function (f) {
                return new (f || v)
            }, v.\u0275pipe = u.Yjl({name: "duration", type: v, pure: !0}), v
        })()
    }, 83035: (oe, R, n) => {
        "use strict";
        n.d(R, {g: () => r});
        var u = n(59633), v = n(591), e = n(1059), f = n(92198), p = n(61377), g = n(5e3);
        let r = (() => {
            class t {
                constructor(b, S) {
                    this.analyticsService = b, this.akumaService = S, this.dataStore = {activeQueues: []}, this._activeQueues$ = new v.X([]), this._queueStatus$ = new v.X(null)
                }

                get queueStatus$() {
                    return this._queueStatus$.asObservable()
                }

                get activeQueues$() {
                    return this._activeQueues$.asObservable()
                }

                _emitQueues() {
                    this._activeQueues$.next(Object.assign({}, this.dataStore).activeQueues)
                }

                enqueue(b) {
                    this.dataStore.activeQueues.push(b), this._emitQueues()
                }

                dequeue(b) {
                    this.dataStore.activeQueues = this.dataStore.activeQueues.filter(S => S !== b), this._emitQueues()
                }

                start(b, S, T) {
                    const w = {game_id: b, mode: S, startTimestamp: (new Date).getTime(), status: "active", params: T};
                    return this.enqueue(w), this._queueStatus$.next(w), this.logQueueStarted(w), this.getQueueSubset(_ => _ === w).pipe((0, e.O)(w))
                }

                cancel(b) {
                    this.dataStore.activeQueues = this.dataStore.activeQueues.filter(S => S && (S.game_id !== b.game_id || S.mode.id !== b.mode.id)), b.status = "cancelled", b.startTimestamp = null, this._queueStatus$.next(b), this._emitQueues(), this.logQueueCancelled(b)
                }

                complete(b) {
                    this.dataStore.activeQueues = this.dataStore.activeQueues.filter(S => S && (S.game_id !== b.game_id || S.mode.id !== b.mode.id)), b.status = "completed", b.startTimestamp = null, this._queueStatus$.next(b), this._emitQueues(), this.logQueueCompleted(b)
                }

                stopAllQueues() {
                    this.dataStore.activeQueues.forEach(b => this.cancel(b))
                }

                getQueue(b, S) {
                    return this.getQueueSubset(T => T && T.game_id === b && T.mode.id === S)
                }

                getGameQueues(b) {
                    return this.getQueueSubset(S => S && S.game_id === b)
                }

                getQueueSubset(b) {
                    return this.queueStatus$.pipe((0, f.h)(S => b(S)))
                }

                logQueueCancelled(b) {
                    "function" == typeof gtag && gtag("event", "failed", {event_category: "queue"});
                    const S = {
                        game_id: b.game_id,
                        mode_id: b.mode.id,
                        mode_name: b.mode.name,
                        button_state: "queue_cancelled"
                    };
                    this.analyticsService.postEvent(new u.Queue.Cancelled.Event(S)), this.akumaService.postEvent("Flow", "_queue_failed", S), this.akumaService.postEvent("Control", "arenaHomeGameStartBtn_pressed", S)
                }

                logQueueCompleted(b) {
                    "function" == typeof gtag && gtag("event", "succeeded", {event_category: "queue"});
                    const S = {
                        game_id: b.game_id,
                        mode_id: b.mode.id,
                        mode_name: b.mode.name,
                        button_state: "queue_completed"
                    };
                    this.analyticsService.postEvent(new u.Queue.Completed.Event(S)), this.akumaService.postEvent("Flow", "_queue_succeeded", S)
                }

                logQueueStarted(b) {
                    "function" == typeof gtag && gtag("event", "started", {event_category: "queue"});
                    const S = {
                        game_id: b.game_id,
                        mode_id: b.mode.id,
                        mode_name: b.mode.name,
                        button_state: "queue_started"
                    };
                    this.analyticsService.postEvent(new u.Queue.Started.Event(S)), this.akumaService.postEvent("Flow", "_queue_started", S), this.akumaService.postEvent("Control", "arenaHomeGameStartBtn_pressed", S)
                }
            }

            return t.\u0275fac = function (b) {
                return new (b || t)(g.LFG(p.yD), g.LFG(p.jt))
            }, t.\u0275prov = g.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
        })()
    }, 6674: (oe, R, n) => {
        "use strict";
        n.d(R, {_: () => b});
        var u = n(8929), i = n(591), v = n(23753), e = n(80013), f = n(92198), p = n(2994), g = n(7625), r = n(44416),
            t = n(73307), o = n(5e3);
        let b = (() => {
            class S {
                constructor(w, D, _) {
                    this.utils = w, this.zone = D, this.storage = _, this.unsubscribe = new u.xQ, this._windowSize$ = new i.X({
                        width: 0,
                        height: 0
                    }), this._viewPortUnits$ = new i.X({
                        vh: 0,
                        vw: 0
                    }), this.ClientSize = "CLIENT_SIZE", this.updateBridgeClientViewport(), this.watchWindowResize()
                }

                get windowSize$() {
                    return this._windowSize$.asObservable()
                }

                get viewPortUnits$() {
                    return this._viewPortUnits$.asObservable()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                onResize(w) {
                    this._windowSize$.next({width: w.target.innerWidth, height: w.target.innerHeight})
                }

                setViewPortUnits({vh: w, vw: D}) {
                    this._viewPortUnits$.next({vw: D, vh: w})
                }

                watchWindowResize() {
                    (0, v.R)(window, "resize").pipe((0, e.b)(100)).subscribe(w => this.onResize(w))
                }

                watchClientResize() {
                    this._currentDisplaySize = window.bridge.getDisplaySize(), window.bridge.displayMetricsChange$.pipe(this.utils.enterZone(this.zone), (0, f.h)(w => this.displayMetricsDiffer(w)), (0, p.b)(w => {
                        this._currentDisplaySize = w, this.resizeClient(this.currentClientSize)
                    })).subscribe()
                }

                get currentClientSize() {
                    return this.storage.get([this.ClientSize]) || "medium"
                }

                resizeClient(w) {
                    const D = S.clientSizes.find(M => M.name === w);
                    if (!D) return void console.error(`Client Size: ${w}, not supported`);
                    this.storage.set([this.ClientSize], D.name);
                    const _ = this.calcClientSize(D.displayPortion, this._currentDisplaySize.width);
                    window.bridge.setClientSize(_.width, _.height, !0, !0)
                }

                calcClientSize(w, D) {
                    const _ = Math.floor(D * w);
                    return {width: _, height: Math.floor(9 * _ / 16)}
                }

                displayMetricsDiffer(w) {
                    return w.width !== this._currentDisplaySize.width && w.height !== this._currentDisplaySize.height
                }

                updateBridgeClientViewport() {
                    this.viewPortUnits$.pipe((0, f.h)(() => "function" == typeof window.bridge.updateViewportUnits), (0, p.b)(w => window.bridge.updateViewportUnits(w)), (0, g.R)(this.unsubscribe)).subscribe()
                }
            }

            return S.clientSizes = [{name: "small", displayPortion: .5}, {
                name: "medium",
                displayPortion: .75
            }, {name: "large", displayPortion: .85}], S.\u0275fac = function (w) {
                return new (w || S)(o.LFG(r.F), o.LFG(o.R0b), o.LFG(t.qy))
            }, S.\u0275prov = o.Yz7({token: S, factory: S.\u0275fac}), S
        })()
    }, 5969: (oe, R, n) => {
        "use strict";
        n.d(R, {g: () => v});
        var u = n(591), i = n(5e3);
        let v = (() => {
            class e {
                constructor() {
                    this._openSettings$ = new u.X(null)
                }

                get openSettings$() {
                    return this._openSettings$.asObservable()
                }

                openSettings(p = "immutable") {
                    this._openSettings$.next(p)
                }

                markSettingsAsOpen() {
                    this._openSettings$.next(null)
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)
            }, e.\u0275prov = i.Yz7({token: e, factory: e.\u0275fac}), e
        })()
    }, 44416: (oe, R, n) => {
        "use strict";
        n.d(R, {F: () => p});
        var u = n(52886), i = n(61377), v = n(56498), e = n(57674), f = n(5e3);
        let p = (() => {
            class g {
                constructor(t) {
                    this.filterService = t
                }

                markFormGroupTouched(t) {
                    Object.values(t.controls).forEach(o => {
                        o.markAsTouched(), o.controls && this.markFormGroupTouched(o)
                    })
                }

                getRandomInt(t, o) {
                    return t = Math.ceil(t), o = Math.floor(o), Math.floor(Math.random() * (o - t + 1)) + t
                }

                arrayToMap(t, o, b) {
                    return t ? t.reduce((S, T) => (S[o(T)] = b(T), S), {}) : {}
                }

                groupBy(t, o) {
                    const b = new Map;
                    return t.forEach(S => {
                        const T = o(S), w = b.get(T);
                        w ? w.push(S) : b.set(T, [S])
                    }), b
                }

                convertIdsToCards(t, o, b) {
                    const S = [];
                    for (const T in o) if (o[T]) {
                        const w = b.get(parseInt(T));
                        o[T].forEach(D => {
                            if (-1 !== t.indexOf(D.id)) {
                                const _ = new u.Zb(D.id, parseInt(T), D.q, w, D.status);
                                S.push(_)
                            }
                        })
                    }
                    return S
                }

                diff(t, o) {
                    return [...t.filter(T => !o.includes(T)), ...o.filter(T => !t.includes(T))]
                }

                enterZone(t) {
                    return o => new v.y(b => o.subscribe({
                        next(S) {
                            t.run(() => b.next(S))
                        }, error(S) {
                            b.error(S)
                        }, complete() {
                            b.complete()
                        }
                    }))
                }

                findLastIndex(t, o) {
                    const b = t.slice().reverse().findIndex(o);
                    return b >= 0 ? t.length - 1 - b : b
                }

                hashCode(t) {
                    let b, S, o = 0;
                    if (0 === t.length) return o;
                    for (b = 0; b < t.length; b++) S = t.charCodeAt(b), o = (o << 5) - o + S, o |= 0;
                    return o
                }

                chunk(t, o) {
                    const b = [];
                    for (; t.length;) b.push(t.splice(0, o));
                    return b
                }

                calcTopCards(t, o, b) {
                    const S = this.filterService.getSort(e.PE.AscScarcity, t), T = [...o].sort(S),
                        w = Math.min(b, T.length);
                    return T.slice(0, w)
                }

                toISODateString(t) {
                    function o(b) {
                        return b < 10 ? "0" + b : b
                    }

                    return t.getUTCFullYear() + "-" + o(t.getUTCMonth() + 1) + "-" + o(t.getUTCDate()) + "T" + o(t.getUTCHours()) + ":" + o(t.getUTCMinutes()) + ":" + o(t.getUTCSeconds()) + "." + o(t.getUTCMilliseconds()) + "Z"
                }

                calculateContentHeight(t, o) {
                    let b = t.style.height, S = t.offsetHeight, T = t.scrollHeight, w = t.style.overflow;
                    if (!(S >= T)) return T;
                    if (t.style.height = S + o + "px", t.style.overflow = "hidden", T < t.scrollHeight) {
                        for (; t.offsetHeight >= t.scrollHeight;) t.style.height = (S -= o) + "px";
                        for (; t.offsetHeight < t.scrollHeight;) t.style.height = S++ + "px";
                        return t.style.height = b, t.style.overflow = w, S
                    }
                }

                dictionaryToMap(t) {
                    return Object.entries(t).map(([o, b]) => ({
                        key: o,
                        val: b
                    })).reduce((o, b) => o.set(Number(b.key), b.val), new Map)
                }

                adjustToServerTime(t) {
                    const o = 1e3 * t, S = (new Date).getTime() + o;
                    return new Date(S).toISOString()
                }
            }

            return g.\u0275fac = function (t) {
                return new (t || g)(f.LFG(i.iZ))
            }, g.\u0275prov = f.Yz7({token: g, factory: g.\u0275fac, providedIn: "root"}), g
        })()
    }, 49757: (oe, R, n) => {
        "use strict";
        n.d(R, {m: () => s});
        var u = n(45210), i = n(69808), v = n(93075), e = n(73307), f = n(51649), p = n(5e3);
        let g = (() => {
            class y {
            }

            return y.\u0275fac = function (B) {
                return new (B || y)
            }, y.\u0275mod = p.oAB({type: y}), y.\u0275inj = p.cJS({
                providers: [{provide: f.R, useClass: f.E}],
                imports: [[i.ez]]
            }), y
        })();
        var r = n(61377), t = n(43991);
        let o = (() => {
            class y {
            }

            return y.\u0275fac = function (B) {
                return new (B || y)
            }, y.\u0275mod = p.oAB({type: y}), y.\u0275inj = p.cJS({providers: [t.z], imports: [[i.ez, r.xd]]}), y
        })();
        var b = n(1639), S = n(69878), T = n(23569), w = n(79763), D = n(66088), _ = n(236), M = n(18464);
        let P = (() => {
            class y {
                transform(B, ee) {
                    const pe = new M.BigNumber(10).pow(18);
                    return B ? new M.BigNumber(B).div(pe) : null
                }
            }

            return y.\u0275fac = function (B) {
                return new (B || y)
            }, y.\u0275pipe = p.Yjl({name: "WeiToEth", type: y, pure: !0}), y
        })();
        var E = n(5969);
        let s = (() => {
            class y {
                static forRoot() {
                    return {ngModule: y, providers: [D.Z, w.hM, _.u, P, r.$c, T.d, E.g, {provide: e.Ho, useValue: S.N}]}
                }
            }

            return y.\u0275fac = function (B) {
                return new (B || y)
            }, y.\u0275mod = p.oAB({type: y}), y.\u0275inj = p.cJS({imports: [[i.ez, u.aw, v.u5, v.UX, b.W2, o, r.xd, g], u.aw, v.UX, b.W2, r.xd, g]}), y
        })()
    }, 69878: (oe, R, n) => {
        "use strict";
        n.d(R, {N: () => D});
        var u = n(61377), i = n(43991), v = n(63411), e = n(73307), f = n(40886), p = n(26959), g = n(45425),
            r = n(5254), t = n(68896), o = n(18499), b = n(24850), S = n(5e3);
        const D = {
            production: !0,
            appConfig: "./assets/config/appConfig.prod.json",
            appConfigDev: "./assets/config/appConfig.dev.json",
            facebookId: "1069247517330-3up4o81s0idk15isj1j884v7i4kng8l9.apps.googleusercontent.com",
            googleId: "329849180933335",
            ipApiKey: "MaCXYSWqarQdyw4",
            wyreId: "AC_D3GURN789ZF",
            tickerHost: "https://api.coinmarketcap.com/v1/ticker",
            analyticsHost: "https://ingest.immutable.com/",
            immutableWalletPageURL: "https://landing.immutable.com/wallet",
            envClasses: {
                authService: v.e, ethService: (() => {
                    class _ {
                        constructor(C) {
                            this.environment = C, this.initHTTPProvider()
                        }

                        initHTTPProvider() {
                            this._httpProvider = this.environment.production ? new p.J : new p.J("ropsten")
                        }

                        get httpProvider() {
                            return this._httpProvider
                        }

                        getTransactionReceipt$(C) {
                            return (0, r.D)(this._httpProvider.getTransactionReceipt(C))
                        }

                        getBalance(C) {
                            return (0, r.D)(this._httpProvider.getBalance(C))
                        }

                        getTransaction$(C) {
                            return (0, r.D)(this.provider.getTransaction(C))
                        }

                        getWETHBalance(C) {
                            let P, E;
                            return P = new g.ethers.providers.InfuraProvider(this.environment.production ? f.t : f.Y), E = this.environment.production ? "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2" : "0xc778417e063141139fce010982780140aa0cd5ab", (0, r.D)(o.WETH9.at(P, E).balanceOf(C)).pipe((0, b.U)(s => s.toString()))
                        }

                        getGasPrice() {
                            return (0, r.D)(this.provider ? this.provider.getGasPrice() : (0, t.c)())
                        }
                    }

                    return _.\u0275fac = function (C) {
                        return new (C || _)(S.LFG(e.Ho))
                    }, _.\u0275prov = S.Yz7({token: _, factory: _.\u0275fac}), _
                })(), cardsService: u.dK, storageService: (() => {
                    class _ {
                        constructor() {
                        }

                        set(C, P) {
                            return null != P && window.bridge.set(C, P)
                        }

                        get(C) {
                            return window.bridge.get(C)
                        }

                        delete(C) {
                            return window.bridge.delete(C)
                        }
                    }

                    return _.\u0275fac = function (C) {
                        return new (C || _)
                    }, _.\u0275prov = S.Yz7({token: _, factory: _.\u0275fac, providedIn: "root"}), _
                })(), authHostService: u.f1, assetsService: i.z, audioService: u.QF, featureFlagsService: u.ai
            },
            clientType: "desktop",
            guWebsite: "https://godsunchained.com",
            guManageWalletsURL: "https://godsunchained.com/manage-wallets",
            GUPropertyValidators: {
                card: "0x200e6fb8febf5355596ccdefe1247e92382cfcfb",
                board: "0x81428219ba5faee2afbe1dbe26ba5e47aab1ed45",
                trinket: "0xc50fd991bc8008928853048d0a4f9fecf3a5e8a3",
                noprop: "0xfd75675db386450d42e3968f405d34dce317adb8"
            },
            recaptchaPublicSiteKeyV2: "6LeBjfcUAAAAAMnGQNtQk2aQZ1W3pENSCbOPfp3g",
            recaptchaPublicSiteKeyV3: "6LcdouAUAAAAABwriEGDpNUrkXoIPbSSVVB2WP2f",
            sentry: {
                dsn: "https://6f5677b3a54f433bbb68ca9f275ebd2a@o1090070.ingest.sentry.io/6112682",
                tracesSampleRate: .1
            },
            purchasingUiHost: "https://purchasing-ui.prod.godsunchained.com",
            launchDarklyKey: "60135261d87a7e09e20a42fe",
            immutableXMarketplaceUrl: "https://market.x.immutable.com",
            immutableXMarketplaceUrlGUCollection: "https://market.x.immutable.com/assets?collection=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c",
            GUCollectioimmutableXMarketplaceUrlGUInventory: "https://market.x.immutable.com/inventory/0xacb3c6a43d15b907e8433077b6d38ae40936fe2c"
        }
    }, 11978: (oe, R, n) => {
        "use strict";
        var u = n(22313), i = n(8929), v = n(591), e = n(21086), f = n(5254);

        class r {
            constructor(L, l, O, Z) {
                this.remote = L, this.directory = l, this.filename = O
            }

            start() {
            }

            pause() {
            }

            resume() {
            }

            finish() {
            }

            cancel() {
            }

            download(L) {
                return (0, e.of)()
            }

            dummyDownload(L) {
                return (0, e.of)()
            }
        }

        class S {
            constructor() {
                this.log = void 0, this.warn = void 0, this.error = void 0, this.initLogger()
            }

            initLogger() {
            }
        }

        S.consoleLog = console.log, S.consoleError = console.error, S.consoleWarn = console.warn;
        var T = n(35736);

        class D {
            constructor(L = 1) {
                this.currentRequests = [], this.runningRequests = 0, this.maxConcurrentRequests = L
            }

            callFunction(L, ...l) {
                return L.bind(this, l), console.log("callFunction ---- ", L.name, l), new Promise((O, Z) => {
                    this.currentRequests.push({resolve: O, reject: Z, fnToCall: L, args: l}), this.tryNext()
                })
            }

            tryNext() {
                if (this.currentRequests.length && this.runningRequests < this.maxConcurrentRequests) {
                    const {resolve: L, reject: l, fnToCall: O, args: Z} = this.currentRequests.shift();
                    this.runningRequests++, O(...Z).then(be => L(be)).catch(be => l(be)).finally(() => {
                        this.runningRequests--, this.tryNext()
                    })
                }
            }
        }

        function _(h) {
            return h.join("-")
        }

        function M(h) {
            return "object" == typeof navigator && "string" == typeof navigator.userAgent && navigator.userAgent.indexOf(h) >= 0
        }

        !window.bridge && (!M("Electron") || M("Cypress")) && (window.bridge = new class {
            constructor() {
                this.logger = new S, this.variant = "browser", this.progress = new i.xQ, this.appsModalExisting$ = new v.X(!1), this.displayMetricsChange$ = new i.xQ, this.isInGame$ = new v.X(!1), this.protocolRedirect$ = new v.X(null), this.watchForDisplayChanges(), this.watchInGameStatus(), this.checkAdditionalArgs(), this.watchForAppsModal(), this.watchProtocolRedirect()
            }

            getDownloadProgress$() {
                return (0, e.of)()
            }

            watchProtocolRedirect() {
                return null
            }

            cancelDownload() {
                console.log("Preload->cancelDownload()"), this.gameDownload && this.gameDownload.cancel()
            }

            pauseDownload() {
                console.log("Preload->pauseDownload()"), this.gameDownload && this.gameDownload.pause()
            }

            resumeDownload() {
                console.log("Preload->resumeDownload()"), this.gameDownload && this.gameDownload.resume()
            }

            openDialog(L, l) {
            }

            isRunning(L) {
                return !0
            }

            extract(L, l, O) {
            }

            download(L, l, O, Z) {
                return console.log("Preload->download(urlr, location, filename)", L, l, O), this.gameDownload = new r(L, l, O), this.progress = new i.xQ, (0, f.D)(this.gameDownload.download({
                    authToken: Z,
                    onStart: X => {
                        console.log("Preload->download()->onStart", X)
                    },
                    onProgress: X => {
                        null != window && this.progress.next(X)
                    },
                    onEnd: X => {
                        this.progress.complete()
                    }
                }))
            }

            downloadAssets(L, l) {
                console.log("Preload->downloadAssets(WithOutSempahore)", L);
                let O = [];
                return O = L.map((Z, X) => new r(Z.url, l + Z.location, Z.file_name)), O
            }

            downloadAssetsWithSempahore(L, l, O, Z, X) {
                console.log("Preload->downloadAssetsWithSempahore()", L);
                const be = new D(X);
                return L.map((Re, it) => {
                    const pt = {
                        authToken: Z, onStart: ve => {
                        }, onProgress: ve => {
                            O[it].next(ve)
                        }, onEnd: ve => {
                            O[it].complete()
                        }
                    };
                    console.log(Re.url, l + Re.location, Re.file_name);
                    const ze = new r(Re.url, l + Re.location, Re.file_name), ye = ze.download.bind(ze, pt);
                    return (0, f.D)(be.callFunction(ye, pt))
                })
            }

            onQuit(L) {
            }

            focus() {
            }

            deleteFile(L) {
            }

            chmod(L, l) {
            }

            execute(L, l) {
                return null
            }

            executeArgs(L, l, O) {
                return null
            }

            clearCache() {
            }

            exists(L) {
                return !0
            }

            homeDirectory() {
                return ""
            }

            platform() {
                return ""
            }

            createServer(L, l) {
            }

            serverActive() {
                return null
            }

            closeServer() {
            }

            set(L, l) {
                window.sessionStorage.setItem(_(L), JSON.stringify(l))
            }

            get(L) {
                const l = window.sessionStorage.getItem(_(L));
                return null !== l ? JSON.parse(l) : null
            }

            delete(L) {
                window.sessionStorage.removeItem(_(L))
            }

            minimizeWindow() {
            }

            maximizeWindow() {
            }

            closeWindow() {
            }

            setFullscreen(L) {
            }

            getDisplaySize() {
                return {height: 0, width: 0}
            }

            setClientSize(L, l, O = !1, Z = !1) {
            }

            watchForDisplayChanges() {
            }

            watchInGameStatus() {
            }

            watchForAppsModal() {
            }

            setInGameStatus(L) {
            }

            clearGUAssets(L) {
            }

            checkAdditionalArgs() {
                const L = T.argv.map(l => l.split("=")).reduce((l, [O, Z]) => (l[O] = Z, l), {});
                L["--auth-id"] && L["--auth-access"] && (this.authId = +L["--auth-id"], this.authAccess = L["--auth-access"]), L["--session-ticket"] && (this.sessionTicket = L["--session-ticket"]), L["--vw"] && L["--vh"] && (this.vw = L["--vw"], this.vh = L["--vh"])
            }

            updateAuthPair(L) {
            }

            updateSession(L) {
            }

            updateViewportUnits(L) {
            }

            setClientPosition(L, l, O = !1) {
            }

            toggleFullscreen() {
            }

            createClient(L, l) {
                return {
                    on: (O, Z) => {
                    }, send: (O, Z) => {
                    }, destroy: () => {
                    }, socketConnected: !1
                }
            }

            join(...L) {
            }

            version() {
            }

            launcherTarget() {
            }

            httpGet(L) {
                return (0, f.D)(fetch(L).then(l => l.json()))
            }

            httpPost(L, l) {
                return (0, e.of)()
            }
        });
        var E = n(43050), s = n(5e3);
        const y = JSON.parse('{"buildNumber":"904","branch":"master"}');
        var k = n.t(y, 2), ee = (n(12751), n(53161)), pe = n(16517), ce = n(32182), Ee = n(96727), F = n(99565),
            Y = n(60870), ae = n(40520), J = n(93075), fe = n(76360), N = n(73307), de = n(38076);
        let _e = (() => {
            class h {
                constructor(l) {
                    this.authService = l
                }

                init() {
                    this.authService.account$.subscribe(l => {
                        l ? de.av({id: String(l.id), username: l.username}) : de.e(O => O.setUser(null))
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.LFG(N.mI))
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
        })();
        var Ae = n(87182), Ze = n(85115), W = n(11735);
        n(57334);
        let ue = (() => {
            class h {
                serialize(l) {
                    return {
                        url: l.url,
                        params: we(l.root, O => O.params),
                        queryParams: we(l.root, O => O.queryParams),
                        data: xe(l.root)
                    }
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac}), h
        })();

        function we(h, L) {
            if (!h) return {};
            const l = L(h), O = h.children.find(Z => "primary" === Z.outlet) || h.firstChild;
            return Object.assign(Object.assign({}, l), we(O, L))
        }

        function xe(h) {
            if (!h) return {};
            const L = h.data, l = h.children.find(O => "primary" === O.outlet) || h.firstChild;
            return Object.assign(Object.assign({}, L), xe(l))
        }

        const We = {stateKey: "router", navigationActionTiming: ce.R0.PostActivation, serialzer: ue};
        (0, Ee.ZF)(We.stateKey);
        var A = n(61377), ne = n(1639), q = n(69878), at = (n(70893), n(59633)), je = n(61715), qe = n(7625),
            Ke = n(61709), Le = n(27221), Ue = n(92198), Ge = n(24850), Oe = n(2994), Ye = (n(57503), n(70655)),
            nt = n(79763);
        let dt = (() => {
            class h {
                constructor(l, O) {
                    this.authHostService = l, this.gameService = O
                }

                recordActivity(l) {
                    return (0, f.D)(this.getCurrentGameID()).pipe((0, Ke.VS)(O => this.authHostService.post("/account/" + l + "/activity", {game_id: O})))
                }

                getCurrentGameID() {
                    return (0, Ye.mG)(this, void 0, void 0, function* () {
                        return this.gameService.getGameId()
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.LFG(N.LI), s.LFG(nt.hM))
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
        })();
        n(63411);
        var Pe = n(44416);
        let At = (() => {
            class h {
                constructor(l, O, Z) {
                    this.utils = l, this.zone = O, this.router = Z, this._protocolPayload$ = new i.xQ, this.unsubscribe = new i.xQ
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get protocolPayload$() {
                    return this._protocolPayload$.asObservable()
                }

                watchProtocol() {
                    window.bridge.protocolRedirect$.pipe(this.utils.enterZone(this.zone), (0, qe.R)(this.unsubscribe), (0, Ue.h)(l => !!l), (0, Oe.b)(({url: l}) => {
                        this.handlePayload(l), this.handleRouteChange(l)
                    })).subscribe()
                }

                handlePayload(l) {
                    const O = l.split("?payload=")[1];
                    if (!O) return !1;
                    const Z = decodeURIComponent(O), X = JSON.parse(Z);
                    if (this._protocolPayload$.next(X), X.toString().indexOf("/game/gu/")) {
                        const be = X.toString();
                        this.router.navigate([be])
                    }
                }

                handleRouteChange(l) {
                    const O = l.match(/(imtbl.*):\/\/(game\/gu\/.*)/);
                    if (!O) return !1;
                    const Z = O[2];
                    Z && this.router.navigate([`/${Z}`])
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.LFG(Pe.F), s.LFG(s.R0b), s.LFG(W.F0))
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
        })();
        var ie = n(77391), le = n(6674);
        const Se = ["ratioSetter"], Ne = ["*"];
        let ut = (() => {
            class h {
                constructor(l, O) {
                    this.resizeService = l, this.el = O
                }

                ngOnInit() {
                    this.resizeService.windowSize$.subscribe(() => this.setCustomViewportProps()), this.setCustomViewportProps()
                }

                triggerCalcs() {
                    this.setCustomViewportProps()
                }

                setCustomViewportProps() {
                    const l = this.ratioSetter.nativeElement, O = .01 * l.offsetWidth, Z = .01 * l.offsetHeight;
                    document.documentElement.style.setProperty("--vw", `${O}px`), document.documentElement.style.setProperty("--vh", `${Z}px`), this.resizeService.setViewPortUnits({
                        vw: O,
                        vh: Z
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(le._), s.Y36(s.SBq))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-auto-letterbox"]],
                viewQuery: function (l, O) {
                    if (1 & l && s.Gf(Se, 7), 2 & l) {
                        let Z;
                        s.iGM(Z = s.CRH()) && (O.ratioSetter = Z.first)
                    }
                },
                ngContentSelectors: Ne,
                decls: 5,
                vars: 0,
                consts: [[1, "appRatioSetter"], ["ratioSetter", ""], ["src", "/assets/images/16-x-9-ratio.png", "alt", "ratio image", 1, "appRatioSetter__ratioImage", 3, "load"], [1, "innerAppContainer"]],
                template: function (l, O) {
                    1 & l && (s.F$t(), s.TgZ(0, "div", 0, 1), s.TgZ(2, "img", 2), s.NdJ("load", function () {
                        return O.triggerCalcs()
                    }), s.qZA(), s.TgZ(3, "div", 3), s.Hsn(4), s.qZA(), s.qZA())
                },
                styles: [`
                [_nghost-%COMP%] {
                    display: flex;
                    flex-flow: column nowrap;
                    height: 100vh;
                    width: 100vw;
                    background: var(--gu-blue-dark);
                }
                .appRatioSetter[_ngcontent-%COMP%] {
                    margin: auto;
                    position: relative;
                    width: 100vw;
                    padding-bottom: 56.23%
                }
                .appRatioSetter__ratioImage[_ngcontent-%COMP%] {
                    display: none
                }
                .innerAppContainer[_ngcontent-%COMP%] {
                    position: absolute;
                    width: 100%;
                    height: 100%;
                    top: 0;
                    left: 0;
                    overflow: hidden;
                    display: flex;
                    flex-direction: column
                }
                @media screen and (min-aspect-ratio: 1282/720) {
                    .appRatioSetter[_ngcontent-%COMP%] {
                        height: 100vh;
                        width: auto;
                        padding-bottom: 0
                    }
                    .appRatioSetter__ratioImage[_ngcontent-%COMP%] {
                        display: block;
                        width: auto;
                        height: 100%
                    }
                }
                `]
            }), h
        })();
        var Qe = n(52492), H = n(66088), K = n(41777), a = n(72986), m = n(69808), U = n(80013), se = n(40537),
            Ce = n(83035);

        function ct(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "form", 8), s.TgZ(1, "label", 9), s._uU(2, "Username"), s.qZA(), s.TgZ(3, "div", 10), s.TgZ(4, "input", 11), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().audioService.clickTinyV1.play()
                }), s.qZA(), s.TgZ(5, "gu-primary-hex-button", 12), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().updateUser()
                }), s.qZA(), s.qZA(), s.TgZ(6, "div", 13), s._uU(7, " Your username will be publicly visible. "), s.qZA(), s.qZA()
            }
            if (2 & h) {
                const l = s.oxw();
                s.Q6J("formGroup", l.formGroup), s.xp6(5), s.Q6J("text", l.updating ? "Saving" : "Save")
            }
        }

        function et(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "gu-primary-hex-button", 14), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().logout()
                }), s.qZA()
            }
        }

        const {buildNumber: Ht, branch: jt} = k,
            Vt = window.bridge && window.bridge.version ? window.bridge.version() : 0,
            ts = window.bridge && window.bridge.launcherTarget ? window.bridge.launcherTarget() : "PROD";
        let vt = (() => {
            class h {
                constructor(l, O, Z, X, be, Ie, Re, it) {
                    this.authService = l, this.fb = O, this.audioService = Z, this.modalService = X, this.resizeService = be, this.utils = Ie, this.storage = Re, this.queueService = it, this.loading = !1, this.updating = !1, this.version = Vt, this.launcherTarget = ts, this.cerberusBuildNumber = Ht, this.cerberusBranch = jt, this.clientSizes = le._.clientSizes, this.volume = 0, this.volumeControl = new J.NI(.9), this.unsubscribe = new i.xQ
                }

                ngOnInit() {
                    this.anonymous || this.initUserNameForm(), this.clientSize = this.resizeService.currentClientSize, this.initVolumeControl()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                initVolumeControl() {
                    const l = this.storage.get(["gu-audioVolume"]);
                    this.volumeControl.setValue(l), this.volumeControl.valueChanges.pipe((0, qe.R)(this.unsubscribe), (0, U.b)(100)).subscribe(O => this.audioService.setGlobalVolume(O))
                }

                logout() {
                    this.modalService.destroyTopModal(), this.queueService.stopAllQueues(), this.authService.logout()
                }

                clearCache() {
                    window.bridge.clearCache(), location.reload()
                }

                updateUser() {
                    this.formGroup.invalid ? this.utils.markFormGroupTouched(this.formGroup) : this.updating || (this.updating = !0, this.authService.updateCurrentUser({username: this.formGroup.get("username").value}).pipe((0, se.x)(() => {
                        this.updating = !1
                    })).subscribe())
                }

                updateClientSize(l) {
                    this.resizeService.resizeClient(l)
                }

                initUserNameForm() {
                    this.buildFormGroup(), this.loading = !0, this.authService.account$.pipe((0, qe.R)(this.unsubscribe), (0, Oe.b)(l => this.formGroup.get("username").setValue(l.username)), (0, Le.K)(l => (this.logout(), l)), (0, se.x)(() => this.loading = !1)).subscribe()
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({
                        username: ["", J.kI.required],
                        volume: [this.storage.get(["gu-audioVolume"]) || 0, J.kI.required]
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(N.mI), s.Y36(J.qu), s.Y36(N.pk), s.Y36(H.Z), s.Y36(le._), s.Y36(Pe.F), s.Y36(N.qy), s.Y36(Ce.g))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-apollo-settings"]],
                inputs: {anonymous: "anonymous"},
                decls: 14,
                vars: 10,
                consts: [["class", "settingsForm", 3, "formGroup", 4, "ngIf"], [1, "audioControl"], [1, "audioControl__heading"], ["id", "volume", "type", "range", "min", "0", "max", "1", "step", "0.1", 1, "audioControl__rangeInput", 3, "formControl"], ["for", "#volume", 1, "audioControl__volumeLabel"], [1, "version-label"], ["size", "regular", "text", "Clear Cache", 1, "settingsForm__bottomCta", "settingsForm__bottomCta--cacheClear", 3, "click"], ["class", "settingsForm__bottomCta", "size", "regular", "text", "Logout", 3, "click", 4, "ngIf"], [1, "settingsForm", 3, "formGroup"], ["for", "usernameInput", 1, "settingsForm__label"], [1, "settingsForm__inputsRow"], ["name", "username", "type", "text", "formControlName", "username", "id", "usernameInput", "aria-describedby", "usernameHelp", 1, "settingsForm__textInput", 3, "click"], ["size", "regular", 1, "settingsForm__cta", 3, "text", "click"], ["id", "usernameHelp", 1, "settingsForm__hintText"], ["size", "regular", "text", "Logout", 1, "settingsForm__bottomCta", 3, "click"]],
                template: function (l, O) {
                    1 & l && (s.YNc(0, ct, 8, 2, "form", 0), s.TgZ(1, "div", 1), s.TgZ(2, "label", 2), s._uU(3, "Audio Volume"), s.qZA(), s._UZ(4, "input", 3), s.TgZ(5, "label", 4), s._uU(6), s.qZA(), s.qZA(), s.TgZ(7, "h5", 5), s._uU(8), s.ALo(9, "lowercase"), s.qZA(), s.TgZ(10, "h5", 5), s._uU(11), s.qZA(), s.TgZ(12, "gu-primary-hex-button", 6), s.NdJ("click", function () {
                        return O.clearCache()
                    }), s.qZA(), s.YNc(13, et, 1, 0, "gu-primary-hex-button", 7)), 2 & l && (s.Q6J("ngIf", !O.anonymous), s.xp6(4), s.Q6J("formControl", O.volumeControl), s.xp6(2), s.Oqu(O.volumeControl.value), s.xp6(2), s.AsE("Launcher Version: ", O.version, "-", s.lcZ(9, 8, O.launcherTarget), ""), s.xp6(3), s.AsE("Cerberus Version: ", O.cerberusBranch, ".", O.cerberusBuildNumber, ""), s.xp6(2), s.Q6J("ngIf", !O.anonymous))
                },
                directives: [m.O5, J.eT, J.Fj, J.JJ, J.oH, J._Y, J.JL, J.sg, J.u],
                pipes: [m.i8],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.version-label[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%], .audioControl__heading[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.version-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.audioControl__heading[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;margin:auto}.settingsForm[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;align-self:center;width:70%}.settingsForm__inputsRow[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%}.settingsForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4);flex-grow:1;margin:0 calc(var(--vw) * 1) 0 0}.settingsForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__cta[_ngcontent-%COMP%]{min-width:calc(var(--vw) * 8);flex-grow:0}.settingsForm__hintText[_ngcontent-%COMP%]{padding-top:calc(var(--vh) * 2)}.version-label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4);text-align:center;user-select:all}.settingsForm__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);font-size:calc(var(--vh) * 1.9)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__bottomCta[_ngcontent-%COMP%]{width:70%;margin:0 auto}.settingsForm__bottomCta--cacheClear[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4);margin-bottom:calc(var(--vh) * 2)}.audioControl[_ngcontent-%COMP%]{width:70%;margin:calc(var(--vh) * 3) auto}.audioControl__volumeLabel[_ngcontent-%COMP%]{display:inline-block;position:relative;width:60px;line-height:20px;text-align:center;border-radius:3px;color:#e0c58f;padding:5px 10px;margin-left:8px}.audioControl__rangeInput[_ngcontent-%COMP%]{-webkit-appearance:none;width:calc(100% - 73px);height:10px;border-radius:5px;background:#1d2f41;outline:none;padding:0;margin:0}.audioControl__rangeInput[_ngcontent-%COMP%]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:20px;height:20px;border-radius:50%;background:#e0c58f;cursor:pointer}.audioControl__rangeInput[_ngcontent-%COMP%]:active::-webkit-slider-thumb{background:#e0c58f}.audioControl__rangeInput[_ngcontent-%COMP%]::-moz-range-thumb{width:20px;height:20px;border:0;border-radius:50%;background:#e0c58f;cursor:pointer}"]
            }), h
        })();
        var gt = n(69340);

        function ds(h, L) {
            if (1 & h && (s.TgZ(0, "option", 12), s._uU(1), s.qZA()), 2 & h) {
                const l = L.$implicit;
                s.Q6J("ngValue", l.name), s.xp6(1), s.Oqu(l.name)
            }
        }

        function ss(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.ynx(0), s.TgZ(1, "label", 9), s._uU(2, "Branch"), s.qZA(), s.TgZ(3, "select", 10), s.NdJ("ngModelChange", function (Z) {
                    return s.CHM(l), s.oxw(2).updateBranch(Z, !0)
                })("click", function () {
                    return s.CHM(l), s.oxw(2).playClickTinyV1()
                })("ngModelChange", function (Z) {
                    return s.CHM(l), s.oxw(2).branch = Z
                }), s.YNc(4, ds, 2, 2, "option", 11), s.qZA(), s.BQk()
            }
            if (2 & h) {
                const l = s.oxw(2);
                s.xp6(3), s.Q6J("ngModel", l.branch), s.xp6(1), s.Q6J("ngForOf", l.branchesExtended)
            }
        }

        function Rt(h, L) {
            if (1 & h && (s.ynx(0), s.TgZ(1, "label", 13), s._uU(2, "Local Version"), s.qZA(), s._UZ(3, "input", 5), s.BQk()), 2 & h) {
                const l = s.oxw(2);
                s.xp6(3), s.Q6J("value", l.local)
            }
        }

        function ns(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "form", 1), s.YNc(1, ss, 5, 2, "ng-container", 2), s.TgZ(2, "label", 3), s._uU(3, "Installation Path"), s.qZA(), s.TgZ(4, "div", 4), s._UZ(5, "input", 5), s.TgZ(6, "gu-icon", 6), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().showDialog()
                }), s.qZA(), s.qZA(), s.YNc(7, Rt, 4, 1, "ng-container", 2), s.TgZ(8, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().clearVersion()
                }), s.qZA(), s.TgZ(9, "gu-primary-hex-button", 8), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().clearAssets()
                }), s.qZA(), s.qZA()
            }
            if (2 & h) {
                const l = s.oxw();
                s.xp6(1), s.Q6J("ngIf", l.branchesExtended), s.xp6(4), s.Q6J("value", l.path), s.xp6(2), s.Q6J("ngIf", l.local)
            }
        }

        let Dt = (() => {
            class h {
                constructor(l, O, Z) {
                    this.gameService = l, this.gameDownloadService = O, this.audioService = Z, this.loaded = !1
                }

                ngOnInit() {
                    !this.game || (this.branch = this.gameService.getProperty(this.game.id, "branch"), this.path = this.gameService.getInstallPath(this.game), this.version = this.gameService.getProperty(this.game.id, "version"), this.updateBranch(this.branch), this.initBranches())
                }

                initBranches() {
                    this.gameService.branches$.pipe((0, Ke.VS)(l => (this.branchesExtended = l, !this.branch && this.branchesExtended && this.updateBranch(this.branchesExtended[0].name), this.gameDownloadService.getVersions(this.game, this.branch)))).subscribe(([l, O]) => {
                        this.local = O, this.loaded = !0
                    }, () => this.loaded = !0)
                }

                updateBranch(l, O) {
                    this.branch = l, this.gameService.setProperty(this.game.id, "branch", this.branch), this.gameService.refreshGameContext(), O && setTimeout(() => window.location.reload())
                }

                clearVersion() {
                    this.gameService.deleteProperty(this.game.id, "version"), this.gameService.refreshGameContext(), setTimeout(() => window.location.reload())
                }

                clearAssets() {
                    this.gameService.clearAssets(this.game.id)
                }

                showDialog() {
                    this.playClickTinyV1(), window.bridge.openDialog({
                        properties: ["openDirectory", "createDirectory"],
                        defaultPath: this.path,
                        message: "Choose Install Directory"
                    }, (l, O) => {
                        l && l.length > 0 && (this.path = l[0], this.gameService.setProperty(this.game.id, "path", this.path))
                    })
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(nt.hM), s.Y36(gt.b5), s.Y36(N.pk))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-game-settings"]],
                inputs: {game: "game"},
                decls: 1,
                vars: 1,
                consts: [["class", "settingsForm", 4, "ngIf"], [1, "settingsForm"], [4, "ngIf"], ["for", "installpath", 1, "settingsForm__label"], [1, "settingsForm__path"], ["type", "text", "disabled", "", 1, "settingsForm__textInput", 3, "value"], ["iconLigature", "settings_cog", 1, "path-select-btn", 3, "click"], ["size", "large", "text", "Clear Version", 1, "settingsForm__cta", 3, "click"], ["size", "large", "text", "Clear Assets", 1, "settingsForm__cta", 3, "click"], ["for", "sel1", 1, "settingsForm__label"], ["name", "branch", "id", "sel1", 1, "settingsForm__select", 3, "ngModel", "ngModelChange", "click"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "settingsForm__label"]],
                template: function (l, O) {
                    1 & l && s.YNc(0, ns, 10, 3, "form", 0), 2 & l && s.Q6J("ngIf", O.loaded)
                },
                directives: [m.O5, J._Y, J.JL, J.F, J.EJ, J.JJ, J.On, m.sg, J.YN, J.Kr],
                styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.settingsForm__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:block;margin:auto}.settingsForm[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:60%;margin:auto}.settingsForm__path[_ngcontent-%COMP%]{display:flex}.settingsForm__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.path-select-btn[_ngcontent-%COMP%]{height:calc(var(--vh) * 5);line-height:calc(var(--vh) * 5);width:calc(var(--vh) * 5);margin-top:calc(var(--vh) * .65);background-color:#072337;border-radius:0 calc(var(--vh) * .4) calc(var(--vh) * .4) 0;cursor:pointer;border:calc(var(--vh) * .15) solid #c6a052;border-left:none;text-align:center;display:flex}.path-select-btn[_ngcontent-%COMP%]     i{margin:auto}.settingsForm__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4);margin-top:calc(var(--vh) * .65)}.settingsForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__textInput[_ngcontent-%COMP%]{flex:1;border:calc(var(--vh) * .15) solid #c6a052;border-radius:calc(var(--vh) * .4) 0 0 calc(var(--vh) * .4)}.settingsForm__cta[_ngcontent-%COMP%]{align-self:center;margin:0 auto;margin-top:calc(var(--vh) * 4)}"]
            }), h
        })(), Ps = (() => {
            class h {
                constructor() {
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-wallet-settings"]],
                decls: 9,
                vars: 0,
                consts: [["top", "2x-large", 1, "manageWalletsLink"], ["kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100"], ["both", "large"], ["kind", "small", "fillColor", "colors.light.100"], ["href", "https://godsunchained.com/manage-wallets", "target", "_blank", "backgroundFillColor", "colors.gunmetal.500", "borderColor", "colors.gunmetal.300", "borderColorHover", "colors.gunmetal.100", "fillColor", "colors.light.300", "icon", "leave_website", "leftIconPosition", "true"]],
                template: function (l, O) {
                    1 & l && (s.TgZ(0, "gu-vertical-space", 0), s.TgZ(1, "gu-vertical-space"), s.TgZ(2, "gu-paragraph-text", 1), s._uU(3, " Wallet Management & Linking to Immutable X "), s.qZA(), s.qZA(), s.TgZ(4, "gu-vertical-space", 2), s.TgZ(5, "gu-paragraph-text", 3), s._uU(6, " Add, remove, or view wallets, and link your wallets to the Immutable X marketplace. "), s.qZA(), s.qZA(), s.TgZ(7, "gu-plain-square-button", 4), s._uU(8, " Go to Website "), s.qZA(), s.qZA())
                },
                styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settings__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.settings__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:block;margin:0 auto}.settings[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:100%;margin:auto}.settings__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.settings__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settings__cta[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);color:#affaed}.manageWalletsLink[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}"]
            }), h
        })();

        function ws(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "div", 1), s.NdJ("click", function () {
                    const X = s.CHM(l).$implicit;
                    return s.oxw().selectTab(X.title, X)
                }), s._uU(1), s.qZA()
            }
            if (2 & h) {
                const l = L.$implicit, O = s.oxw();
                s.ekj("active", l.title === O.activeTab), s.xp6(1), s.hij(" ", l.title.toUpperCase(), " ")
            }
        }

        function Wt(h, L) {
            if (1 & h && s._UZ(0, "app-apollo-settings", 7), 2 & h) {
                const l = s.oxw();
                s.Q6J("anonymous", l.anonymous)
            }
        }

        function os(h, L) {
            if (1 & h && s._UZ(0, "app-game-settings", 8), 2 & h) {
                const l = s.oxw();
                s.Q6J("game", l.selectedGame)
            }
        }

        function ks(h, L) {
            1 & h && s._UZ(0, "app-wallet-settings", 9)
        }

        let ht = (() => {
            class h {
                constructor(l, O, Z) {
                    this.gameService = l, this.audioService = O, this.authService = Z, this.activeTab = "immutable", this.games = []
                }

                ngOnInit() {
                    const l = this.authService.getUserId();
                    l ? (this.anonymous = !1, this.gameService.getGames(l).pipe((0, a.q)(1)).subscribe(O => this.games = O.records)) : this.anonymous = !0
                }

                selectTab(l, O) {
                    this.audioService.clickMediumV1.play(), this.activeTab = l, O && (this.selectedGame = O)
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(nt.hM), s.Y36(N.pk), s.Y36(N.mI))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-settings-modal"]],
                inputs: {activeTab: "activeTab"},
                decls: 10,
                vars: 9,
                consts: [[1, "side-pane"], [1, "side-pane-item", 3, "click"], ["class", "side-pane-item", 3, "active", "click", 4, "ngFor", "ngForOf"], [1, "settingsContent"], ["class", "settingsContent__tab", 3, "anonymous", 4, "ngIf"], ["class", "settingsContent__tab", 3, "game", 4, "ngIf"], ["class", "settingsContent__tab", 4, "ngIf"], [1, "settingsContent__tab", 3, "anonymous"], [1, "settingsContent__tab", 3, "game"], [1, "settingsContent__tab"]],
                template: function (l, O) {
                    1 & l && (s.TgZ(0, "aside", 0), s.TgZ(1, "div", 1), s.NdJ("click", function () {
                        return O.selectTab("immutable")
                    }), s._uU(2, " Immutable "), s.qZA(), s.YNc(3, ws, 2, 3, "div", 2), s.TgZ(4, "div", 1), s.NdJ("click", function () {
                        return O.selectTab("wallet")
                    }), s._uU(5, " WALLET "), s.qZA(), s.qZA(), s.TgZ(6, "div", 3), s.YNc(7, Wt, 1, 1, "app-apollo-settings", 4), s.YNc(8, os, 1, 1, "app-game-settings", 5), s.YNc(9, ks, 1, 0, "app-wallet-settings", 6), s.qZA()), 2 & l && (s.xp6(1), s.ekj("active", "immutable" === O.activeTab), s.xp6(2), s.Q6J("ngForOf", O.games), s.xp6(1), s.ekj("active", "wallet" === O.activeTab), s.xp6(2), s.Q6J("@fade", O.activeTab), s.xp6(1), s.Q6J("ngIf", "immutable" === O.activeTab), s.xp6(1), s.Q6J("ngIf", "wallet" !== O.activeTab && "immutable" !== O.activeTab), s.xp6(1), s.Q6J("ngIf", "wallet" === O.activeTab))
                },
                directives: [m.sg, m.O5, vt, Dt, Ps],
                styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.side-pane-item[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.side-pane-item[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22);line-height:1.4}[_nghost-%COMP%]{width:calc(var(--vw) * 60);height:calc(var(--vh) * 80);border-radius:calc(var(--vh) * .4);background-color:#0c1620;border:calc(var(--vh) * .15) solid #e0c58f;display:flex}.side-pane[_ngcontent-%COMP%]{width:30%;border-right:calc(var(--vh) * .15) solid #e0c58f;display:flex;flex-flow:column nowrap}.side-pane-item[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.8);color:#f6f6f6;text-align:center;transition:all .15s ease;cursor:pointer}.side-pane-item[_ngcontent-%COMP%]:hover{background-color:#1d2f41}.side-pane-item.active[_ngcontent-%COMP%]{background-color:#182531}.settingsContent[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.8);flex:1;display:flex}.settingsContent__tab[_ngcontent-%COMP%]{width:calc(var(--vw) * 30)}"],
                data: {animation: [(0, K.X$)("fade", [(0, K.eR)("* => *", [(0, K.jt)(500, (0, K.F4)([(0, K.oB)({opacity: 0}), (0, K.oB)({opacity: 1})]))])])]}
            }), h
        })();
        var Kt = n(5969);
        let me = (() => {
            class h {
                constructor(l, O, Z, X) {
                    this.modalService = l, this.audioService = O, this.settingsService = Z, this.akumaService = X, this.unsubscribe = new i.xQ
                }

                ngOnInit() {
                    this.watchSettingsService()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                watchSettingsService() {
                    this.settingsService.openSettings$.pipe((0, qe.R)(this.unsubscribe), (0, Ue.h)(l => !!l)).subscribe(l => {
                        this.openSettings(l), this.settingsService.markSettingsAsOpen()
                    })
                }

                windowFullscreen() {
                    this.audioService.clickTinyV1.play(), window.bridge.toggleFullscreen()
                }

                closeWindow() {
                    this.audioService.clickTinyV1.play(), window.bridge.closeWindow()
                }

                minimize() {
                    this.audioService.clickTinyV1.play(), window.bridge.minimizeWindow()
                }

                openSettings(l) {
                    this.akumaService.postControlEvent("gu", "Arena", "", "settings", "Mnu", "pressed"), this.audioService.clickTinyV1.play(), this.modalService.createModal(ht, {activeTab: l}, {
                        blurredBackground: !0,
                        canCloseFromOutside: !0,
                        position: Qe.e1.Center,
                        size: Qe.Cg.StretchableFullscreen
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(H.Z), s.Y36(N.pk), s.Y36(Kt.g), s.Y36(A.jt))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["cerberus-draggable-titlebar"]],
                decls: 9,
                vars: 0,
                consts: [[1, "electronMenuItem", "electronMenuItem--closeWindow", 3, "click"], ["iconLigature", "close_x", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--windowToggle", 3, "click"], ["iconLigature", "window_toggle", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--minimise", 3, "click"], ["iconLigature", "window_minimise", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--settings", 3, "click"], ["iconLigature", "settings_cog", 1, "electronMenuItem__icon"], [1, "draggable"]],
                template: function (l, O) {
                    1 & l && (s.TgZ(0, "a", 0), s.NdJ("click", function () {
                        return O.closeWindow()
                    }), s._UZ(1, "gu-icon", 1), s.qZA(), s.TgZ(2, "a", 2), s.NdJ("click", function () {
                        return O.windowFullscreen()
                    }), s._UZ(3, "gu-icon", 3), s.qZA(), s.TgZ(4, "a", 4), s.NdJ("click", function () {
                        return O.minimize()
                    }), s._UZ(5, "gu-icon", 5), s.qZA(), s.TgZ(6, "a", 6), s.NdJ("click", function () {
                        return O.openSettings("immutable")
                    }), s._UZ(7, "gu-icon", 7), s.qZA(), s._UZ(8, "div", 8))
                },
                styles: [`
                [_nghost-%COMP%] {
                    width:100%;
                    height:28px;
                    z-index:23;
                    display:flex;
                    flex-direction:row-reverse;
                    padding-right:8px;
                }
                .draggable[_ngcontent-%COMP%] {
                    flex:1;
                    -webkit-app-region:drag
                }
                .electronMenuItem[_ngcontent-%COMP%]  {
                    cursor:pointer;
                    display:flex;
                    width:28px
                }
                .electronMenuItem[_ngcontent-%COMP%]:hover .electronMenuItem__icon[_ngcontent-%COMP%] {
                    color:#f6f6f6
                }
                .electronMenuItem__icon[_ngcontent-%COMP%]  {
                    font-size: 14px;
                    margin: auto;
                    text-shadow: 0 2px 0 rgba(39, 39, 39, .4);
                    color: #7192b0;
                }
                `]
            }), h
        })();
        var kt = n(39765), Ys = n(25774), Es = n(97993);

        function us(h, L) {
            1 & h && (s.TgZ(0, "cerberus-announce-banner-control", 2), s._UZ(1, "cerberus-controllable-banner"), s.qZA())
        }

        function xt(h, L) {
            if (1 & h && (s.ynx(0), s.YNc(1, us, 2, 0, "cerberus-announce-banner-control", 1), s.BQk()), 2 & h) {
                const l = s.oxw();
                s.xp6(1), s.Q6J("featureFlagIf", l.Flags.showControllableBanner)
            }
        }

        let Qs = (() => {
            class h {
                constructor(l, O, Z, X, be, Ie, Re, it, pt) {
                    this.vcr = l, this.analyticsService = O, this.authService = Z, this.activityService = X, this.router = be, this.navigationService = Ie, this.route = Re, this.protocolService = it, this.akumaService = pt, this.Flags = A.vU, this.destroyed$ = new i.xQ, this.watchForNavigation(), this.protocolService.watchProtocol()
                }

                ngOnInit() {
                    this.recordActivity(), this.logSessionStarted(), this.logSessionAuthenticated(), this.authService.account$.pipe((0, qe.R)(this.destroyed$)).subscribe(l => {
                        this.isLoggedIn = !!l
                    })
                }

                ngOnDestroy() {
                    this.destroyed$.next(), this.destroyed$.complete()
                }

                logSessionStarted() {
                    "function" == typeof gtag && gtag("event", "started", {event_category: "session"});
                    const l = {is_referred: !1, landing_page: window.location.pathname};
                    this.analyticsService.postEvent(new at.Session.Started.Event(l)), this.akumaService.postEvent("Flow", "_session_started", l), "function" == typeof fbq && fbq("track", "ViewLauncher")
                }

                logSessionAuthenticated() {
                    this.authService.isLoggedIn() && ("function" == typeof gtag && gtag("event", "authenticated", {event_category: "session"}), this.analyticsService.postEvent(new at.Session.Authenticated.Event({})), this.akumaService.postEvent("Flow", "_sessionAuthenticated_succeeded"))
                }

                recordActivity() {
                    (0, je.F)(3e4).pipe((0, Ke.VS)(() => {
                        const l = this.authService.getUserId();
                        return l && this.authService.isLoggedIn() ? this.activityService.recordActivity(l) : (0, e.of)()
                    }), (0, Le.K)((l, O) => (console.error("App->recordActivity() error", l), (0, e.of)(l)))).subscribe()
                }

                watchForNavigation() {
                    this.router.events.pipe((0, Ue.h)(l => l instanceof W.m2), (0, Ge.U)(() => this.route), (0, Ge.U)(l => {
                        for (; l.firstChild;) l = l.firstChild;
                        return l
                    }), (0, Ke.zg)(l => l.data), (0, Ge.U)(l => l.hasOwnProperty("state") ? l.state : ""), (0, Oe.b)(l => this.navigationService.updateCurrentRoute(l))).subscribe(() => {
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(s.s_b), s.Y36(A.yD), s.Y36(N.mI), s.Y36(dt), s.Y36(W.F0), s.Y36(ie.f), s.Y36(W.gz), s.Y36(At), s.Y36(A.jt))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["cerberus-root"]],
                decls: 4,
                vars: 1,
                consts: [[4, "ngIf"], ["class", "announceBannerControl announceBannerControl--inline", 4, "featureFlagIf"], [1, "announceBannerControl", "announceBannerControl--inline"]],
                template: function (l, O) {
                    1 & l && (s.TgZ(0, "app-auto-letterbox"), s._UZ(1, "cerberus-draggable-titlebar"), s.YNc(2, xt, 2, 1, "ng-container", 0), s._UZ(3, "router-outlet"), s.qZA()), 2 & l && (s.xp6(2), s.Q6J("ngIf", !O.isLoggedIn))
                },
                directives: [ut, me, m.O5, W.lC, kt.w, Ys.O, Es.i],
                styles: ["[_nghost-%COMP%]{display:block}"]
            }), h
        })(), Os = (() => {
            class h {
                constructor() {
                }

                ngOnInit() {
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-home"]],
                decls: 1,
                vars: 0,
                template: function (l, O) {
                    1 & l && s._UZ(0, "router-outlet")
                },
                directives: [W.lC],
                styles: ["[_nghost-%COMP%]{display:block;flex:1}.screen-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0;left:0;z-index:-1}.app-bar[_ngcontent-%COMP%]{right:calc(var(--vw) * 3.33);position:absolute;bottom:0;right:calc(var(--vw) * 10)}"]
            }), h
        })();
        var lt = n(75778), Js = n(98723);

        function ps(h, L) {
            1 & h && (s.TgZ(0, "div", 6), s._uU(1, " Username is required "), s.qZA())
        }

        function gs(h, L) {
            1 & h && (s.TgZ(0, "div", 6), s._uU(1, " Username must be at least 4 characters long "), s.qZA())
        }

        function is(h, L) {
            if (1 & h && (s.TgZ(0, "div", 6), s._uU(1), s.qZA()), 2 & h) {
                const l = s.oxw();
                s.xp6(1), s.hij(" ", l.usernameError, " ")
            }
        }

        let Ts = (() => {
            class h {
                constructor(l, O, Z, X) {
                    this.router = l, this.modalService = O, this.http = Z, this.authService = X, this.unsubscribe = new i.xQ
                }

                ngOnInit() {
                    this.initForm()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                initForm() {
                    this.usernameControl = new J.NI(this.username, [J.kI.required, J.kI.minLength(4)]), this.watchSearch()
                }

                watchSearch() {
                    this.usernameControl.valueChanges.pipe((0, qe.R)(this.unsubscribe), (0, U.b)(500), (0, lt.x)(), (0, Oe.b)(l => {
                        this.username = l, this.usernameError = void 0
                    })).subscribe()
                }

                submit() {
                    this.submitUsernameApi$(this.username).pipe((0, a.q)(1), (0, Oe.b)(l => {
                        this.modalService.destroyTopModal(), this.router.navigate(["/"])
                    }), (0, Le.K)(l => (403 === l.status && (this.usernameError = "Username not allowed."), 400 === l.status && (this.usernameError = "Username is invalid."), 500 === l.status && (this.usernameError = "Username is taken."), (0, e.of)(l)))).subscribe()
                }

                submitUsernameApi$(l) {
                    const O = this.authService.getUserId(), Z = this.authService.getGameSessionTicket();
                    return this.http.post(`https://test-auth.apollo.gg/account/${O}/user?session=${Z}`, {username: l})
                }

                isUsernameValid$(l) {
                    const O = ["immutable", "apollo", "mythic"];
                    return (0, Js.H)(1e3).pipe((0, Oe.b)(Z => {
                        this.usernameError = O.some(X => X === l) ? "Username is taken" : void 0
                    }))
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(W.F0), s.Y36(H.Z), s.Y36(ae.eN), s.Y36(N.mI))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["app-username-onboarding"]],
                decls: 11,
                vars: 5,
                consts: [[1, "title"], [1, "onboarding"], ["type", "search", "name", "usernameControl", "maxlength", "15", 1, "form__textInput", 3, "formControl"], [1, "form__inputHint"], ["class", "form__inputHint__text", 4, "ngIf"], ["size", "large", "text", "Submit", 1, "form__submitButton", 3, "disabled", "click"], [1, "form__inputHint__text"]],
                template: function (l, O) {
                    1 & l && (s.TgZ(0, "header", 0), s._uU(1, " Unique Username Onboarding "), s.qZA(), s.TgZ(2, "section", 1), s._uU(3, " Onboarding section for inputting username. Please enter a unique username "), s._UZ(4, "input", 2), s.TgZ(5, "div", 3), s.YNc(6, ps, 2, 0, "div", 4), s.YNc(7, gs, 2, 0, "div", 4), s.qZA(), s.TgZ(8, "gu-primary-hex-button", 5), s.NdJ("click", function () {
                        return O.submit()
                    }), s.qZA(), s.TgZ(9, "div", 3), s.YNc(10, is, 2, 1, "div", 4), s.qZA(), s.qZA()), 2 & l && (s.xp6(4), s.Q6J("formControl", O.usernameControl), s.xp6(2), s.Q6J("ngIf", O.usernameControl.hasError("required") && O.usernameControl.touched), s.xp6(1), s.Q6J("ngIf", O.usernameControl.hasError("minlength") && O.usernameControl.touched), s.xp6(1), s.Q6J("disabled", !O.usernameControl.valid || O.usernameError), s.xp6(2), s.Q6J("ngIf", O.usernameError))
                },
                directives: [J.Fj, J.nD, J.JJ, J.oH, m.O5],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form__inputHint__text[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.form__inputHint__text[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{min-width:calc(var(--vw) * 15.62);border:1px solid white;z-index:21;overflow:auto;background-color:#060b11b3;border-radius:calc(var(--vh) * .4);display:flex;flex-direction:column}.title[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);border-bottom:1px solid white;font-size:x-large;text-align:center}.onboarding[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);text-align:center}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);text-align:center;margin:0 auto;margin-top:calc(var(--vh) * 5);width:calc(var(--vw) * 25);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1);min-height:15px}.form__inputHint__text[_ngcontent-%COMP%]{text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);width:calc(var(--vw) * 25);margin-left:auto;margin-right:auto}"]
            }), h
        })();

        function Et(h, L) {
            1 & h && (s.TgZ(0, "div", 13), s._uU(1, "Email address is required"), s.qZA())
        }

        function Ms(h, L) {
            1 & h && (s.TgZ(0, "div", 13), s._uU(1, " Enter valid email address "), s.qZA())
        }

        function Xs(h, L) {
            1 & h && (s.TgZ(0, "div", 13), s._uU(1, " Password is required "), s.qZA())
        }

        function $s(h, L) {
            if (1 & h && (s.TgZ(0, "div", 14), s._uU(1), s.qZA()), 2 & h) {
                const l = s.oxw();
                s.xp6(1), s.Oqu(l.loginError)
            }
        }

        function hs(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " Email address is required "), s.qZA())
        }

        function zt(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " Enter valid email address "), s.qZA())
        }

        function ms(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " This email is already in use. "), s.qZA())
        }

        function As(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " User name is required "), s.qZA())
        }

        function Is(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " User name cannot be the same as email "), s.qZA())
        }

        function _s(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " Password is required "), s.qZA())
        }

        function Yt(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " Passwords must be at least 8 characters long "), s.qZA())
        }

        function qs(h, L) {
            1 & h && (s.TgZ(0, "div", 16), s._uU(1, " Passwords don't match "), s.qZA())
        }

        function Ds(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "form", 4), s.NdJ("ngSubmit", function () {
                    return s.CHM(l), s.oxw().register()
                }), s.TgZ(1, "input", 5), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().playClickTinyV1()
                }), s.qZA(), s.YNc(2, hs, 2, 0, "div", 6), s.YNc(3, zt, 2, 0, "div", 6), s.YNc(4, ms, 2, 0, "div", 6), s.TgZ(5, "input", 7), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().playClickTinyV1()
                }), s.qZA(), s.YNc(6, As, 2, 0, "div", 6), s.YNc(7, Is, 2, 0, "div", 6), s.TgZ(8, "input", 8), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().playClickTinyV1()
                }), s.qZA(), s.YNc(9, _s, 2, 0, "div", 6), s.YNc(10, Yt, 2, 0, "div", 6), s.TgZ(11, "input", 9), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().playClickTinyV1()
                }), s.qZA(), s.YNc(12, qs, 2, 0, "div", 6), s.TgZ(13, "gu-vertical-space", 10), s.TgZ(14, "gu-checkbox-input", 11), s.NdJ("onCheck", function (Z) {
                    return s.CHM(l), s.oxw().onAcceptTermsCheck(Z)
                }), s.qZA(), s.qZA(), s.TgZ(15, "gu-checkbox-input", 12), s.NdJ("onCheck", function (Z) {
                    return s.CHM(l), s.oxw().onSubscribeCheck(Z)
                }), s.qZA(), s.TgZ(16, "gu-primary-hex-button", 13), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().register()
                }), s.qZA(), s.TgZ(17, "label", 14), s._uU(18, "Already have an account? "), s.TgZ(19, "a", 15), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().playClickTinyV1()
                }), s._uU(20, " Login Now. "), s.qZA(), s.qZA(), s.qZA()
            }
            if (2 & h) {
                const l = s.oxw();
                s.Q6J("formGroup", l.formGroup), s.xp6(2), s.Q6J("ngIf", l.email.hasError("required") && l.email.touched), s.xp6(1), s.Q6J("ngIf", l.email.hasError("email") && l.email.touched && (null == l.email.value ? null : l.email.value.length) > 0), s.xp6(1), s.Q6J("ngIf", l.emailError), s.xp6(2), s.Q6J("ngIf", l.userName.hasError("required") && l.userName.touched), s.xp6(1), s.Q6J("ngIf", l.userName.hasError("mismatch") && l.userName.touched), s.xp6(2), s.Q6J("ngIf", l.password.hasError("required") && l.password.touched), s.xp6(1), s.Q6J("ngIf", l.password.hasError("minlength") && l.password.touched), s.xp6(2), s.Q6J("ngIf", (l.passwordConfirm.hasError("required") || l.passwordConfirm.hasError("mismatch")) && l.passwordConfirm.touched), s.xp6(4), s.Q6J("loading", l.loading)("text", l.loading ? "Signing Up" : "Sign Up"), s.uIk("disabled", !l.formGroup.valid)
            }
        }

        function Ls(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "div", 17), s.TgZ(1, "div", 18), s.TgZ(2, "div"), s._uU(3, " We've sent an email to "), s.TgZ(4, "span"), s._uU(5), s.qZA(), s._uU(6, " - please follow the link in that email to confirm your account in a browser and then come back to login. "), s.qZA(), s._UZ(7, "gu-primary-hex-button", 19), s.TgZ(8, "div"), s._uU(9, " Still waiting? Try sending again or starting from scratch. "), s.qZA(), s.TgZ(10, "gu-primary-hex-button", 20), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().register(!0)
                }), s.qZA(), s.TgZ(11, "gu-primary-hex-button", 21), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().resetRegister()
                }), s.qZA(), s.qZA(), s.qZA()
            }
            if (2 & h) {
                const l = s.oxw();
                s.xp6(5), s.Oqu(l.email.value)
            }
        }

        function Ot(h, L) {
            1 & h && (s.TgZ(0, "div", 9), s._uU(1, " Enter valid email address "), s.qZA())
        }

        function tn(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "form", 4), s.NdJ("submit", function () {
                    return s.CHM(l), s.oxw().reset()
                }), s.TgZ(1, "input", 5), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().playClickTinyV1()
                }), s.qZA(), s.YNc(2, Ot, 2, 0, "div", 6), s.TgZ(3, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().reset()
                }), s.qZA(), s.TgZ(4, "a", 8), s._uU(5, " Back to login "), s.qZA(), s.qZA()
            }
            if (2 & h) {
                const l = s.oxw();
                s.Q6J("formGroup", l.formGroup), s.xp6(2), s.Q6J("ngIf", l.email.errors && l.email.touched), s.xp6(1), s.Q6J("text", l.loading ? "Resetting" : "Reset Password")
            }
        }

        function Us(h, L) {
            if (1 & h) {
                const l = s.EpF();
                s.TgZ(0, "div", 10), s.TgZ(1, "div", 11), s._uU(2), s.qZA(), s.TgZ(3, "a", 12), s.NdJ("click", function () {
                    return s.CHM(l), s.oxw().tryAgain()
                }), s._uU(4, " Try Again "), s.qZA(), s.TgZ(5, "a", 8), s._uU(6, " Back to login "), s.qZA(), s.qZA()
            }
            if (2 & h) {
                const l = s.oxw();
                s.xp6(2), s.Oqu(l.info)
            }
        }

        const Gs = [{path: "", redirectTo: "game/gu", pathMatch: "full"}, {
            path: "login", component: (() => {
                class h {
                    constructor(l, O, Z, X, be, Ie, Re, it, pt, ze, ye) {
                        this.analyticsService = l, this.authService = O, this.fb = Z, this.utils = X, this.router = be, this.modalService = Ie, this.vcr = Re, this.storageService = it, this.audioService = pt, this.http = ze, this.akumaService = ye, this.loading = !1, this.loginVideoSrc = "/assets/videos/login-video.webm"
                    }

                    ngOnInit() {
                        this.buildFormGroup(), this.formGroup.setValue({rememberMe: !0, email: null, password: null})
                    }

                    login() {
                        if (this.formGroup.invalid) return void this.utils.markFormGroupTouched(this.formGroup);
                        if (this.loading) return;
                        const l = {email: this.formGroup.value.email, password: this.formGroup.value.password},
                            O = this.formGroup.value.rememberMe;
                        this.loginError = "", this.loading = !0, this.authService.login(l, O, 1).pipe((0, a.q)(1), (0, Oe.b)(Z => {
                            this.logSessionAuthenticated(Z), this.storageService.set(["email"], l.email), this.router.navigate(["/"])
                        }), (0, Le.K)(Z => this.handleLoginError(Z)), (0, se.x)(() => this.loading = !1)).subscribe()
                    }

                    logSessionAuthenticated(l) {
                        "function" == typeof gtag && gtag("event", "authenticated", {event_category: "session"}), this.analyticsService.postEvent(new at.Session.Authenticated.Event({})), this.akumaService.postEvent("Flow", "_sessionAuthenticated_succeeded")
                    }

                    handleLoginError(l) {
                        return console.warn("Login->login()->authService->login() unsuccessful.", l), this.loginError = l.error.error || "Unable to login.", (0, e.of)([])
                    }

                    get email() {
                        return this.formGroup.get("email")
                    }

                    get password() {
                        return this.formGroup.get("password")
                    }

                    buildFormGroup() {
                        this.formGroup = this.fb.group({
                            email: ["", [J.kI.required, J.kI.email]],
                            password: ["", [J.kI.required]],
                            rememberMe: !0
                        })
                    }

                    hasUniqueUsername$(l) {
                        const O = this.authService.getGameSessionTicket();
                        return this.http.get(`https://test-auth.apollo.gg/account/${l}/user?session=${O}`)
                    }

                    handleNoUniqueUsername() {
                        this.modalService.createModal(Ts, {}, {
                            blurredBackground: !0,
                            canCloseFromInside: !1,
                            canCloseFromOutside: !1,
                            position: Qe.e1.Center,
                            size: Qe.Cg.StretchableWorkarea
                        }, this.vcr)
                    }

                    playClickTinyV1() {
                        this.audioService.clickTinyV1.play()
                    }
                }

                return h.\u0275fac = function (l) {
                    return new (l || h)(s.Y36(A.yD), s.Y36(N.mI), s.Y36(J.qu), s.Y36(Pe.F), s.Y36(W.F0), s.Y36(H.Z), s.Y36(s.s_b), s.Y36(N.qy), s.Y36(N.pk), s.Y36(ae.eN), s.Y36(A.jt))
                }, h.\u0275cmp = s.Xpm({
                    type: h,
                    selectors: [["cerberus-login"]],
                    decls: 17,
                    vars: 7,
                    consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "loginVideo", 3, "src"], ["videoPlayer", ""], [1, "loginForm", 3, "formGroup", "submit"], [1, "logo_wrapper"], ["src", "/assets/images/gu-logo-large.webp", 1, "large_logo"], ["aria-describedby", "emailErrorLabel", "id", "email", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", 1, "loginForm__textInput", 3, "keyup.enter", "click"], ["class", "loginForm__inputHint", 4, "ngIf"], ["aria-describedby", "loginErrorLabel", "name", "username", "id", "password", "type", "password", "formControlName", "password", "placeholder", "Password", 1, "loginForm__textInput", 3, "keyup.enter", "click"], ["class", "loginForm__inputHint", "id", "loginErrorLabel", 4, "ngIf"], ["routerLink", "/reset", 1, "loginForm__forgottenLink"], ["id", "button__SignIn", "size", "large", "text", "SIGN IN", 1, "loginForm__submitButton", 3, "loading", "click"], [1, "creatAccountArea"], ["text", "CREATE ACCOUNT", "kind", "secondary", "routerLink", "/register"], [1, "loginForm__inputHint"], ["id", "loginErrorLabel", 1, "loginForm__inputHint"]],
                    template: function (l, O) {
                        1 & l && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video. "), s.qZA(), s.TgZ(3, "form", 2), s.NdJ("submit", function () {
                            return O.login()
                        }), s.TgZ(4, "div", 3), s._UZ(5, "img", 4), s.qZA(), s.TgZ(6, "input", 5), s.NdJ("keyup.enter", function () {
                            return O.login()
                        })("click", function () {
                            return O.playClickTinyV1()
                        }), s.qZA(), s.YNc(7, Et, 2, 0, "div", 6), s.YNc(8, Ms, 2, 0, "div", 6), s.TgZ(9, "input", 7), s.NdJ("keyup.enter", function () {
                            return O.login()
                        })("click", function () {
                            return O.playClickTinyV1()
                        }), s.qZA(), s.YNc(10, Xs, 2, 0, "div", 6), s.YNc(11, $s, 2, 1, "div", 8), s.TgZ(12, "a", 9), s._uU(13, " Forgotten password? "), s.qZA(), s.TgZ(14, "gu-primary-hex-button", 10), s.NdJ("click", function () {
                            return O.login()
                        }), s.qZA(), s.qZA(), s.TgZ(15, "div", 11), s._UZ(16, "gu-primary-hex-button", 12), s.qZA()), 2 & l && (s.Q6J("src", O.loginVideoSrc, s.LSH), s.xp6(3), s.Q6J("formGroup", O.formGroup), s.xp6(4), s.Q6J("ngIf", O.email.hasError("required") && O.email.touched), s.xp6(1), s.Q6J("ngIf", O.email.hasError("email") && O.email.touched && (null == O.email.value ? null : O.email.value.length) > 0), s.xp6(2), s.Q6J("ngIf", O.password.hasError("required") && O.password.touched), s.xp6(1), s.Q6J("ngIf", O.loginError), s.xp6(3), s.Q6J("loading", O.loading))
                    },
                    directives: [J._Y, J.JL, J.sg, J.Fj, J.JJ, J.u, m.O5, W.yS, W.rH],
                    styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.loginForm__forgottenLink[_ngcontent-%COMP%], .loginForm__inputHint[_ngcontent-%COMP%], .creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.loginForm__forgottenLink[_ngcontent-%COMP%], .loginForm__inputHint[_ngcontent-%COMP%], .creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%;position:relative}.logo_wrapper[_ngcontent-%COMP%]{width:100%;text-align:center}.large_logo[_ngcontent-%COMP%]{width:70%}.loginVideo[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:1}.loginForm[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 17.7);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.loginForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.loginForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.loginForm__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.loginForm__forgottenLink[_ngcontent-%COMP%]{text-align:right;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:4px;margin-bottom:8px}.loginForm__submitButton[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;padding:0 50px;min-width:216px}.creatAccountArea[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 10.9);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap;align-items:center}.creatAccountArea__text[_ngcontent-%COMP%]{text-align:center;font-weight:600;color:#f6f6f6}.notify_users[_ngcontent-%COMP%]{margin-top:20px;color:#f6f6f6;z-index:1;width:600px;text-align:center;background-color:#0f1b27;padding:20px;border-radius:5px;line-height:1.5}"]
                }), h
            })()
        }, {
            path: "register", component: (() => {
                class h {
                    constructor(l, O, Z, X, be, Ie) {
                        this.analyticsService = l, this.auth = O, this.fb = Z, this.utils = X, this.storageService = be, this.audioService = Ie, this.termsError = !1, this.emailError = !1, this.finished = !1, this.loading = !1, this.videoSrc = "/assets/videos/login-video.webm", this.unsubscribe = new i.xQ
                    }

                    ngOnInit() {
                        this.buildFormGroup(), this.logRegistrationStarted(), this.email.valueChanges.pipe((0, qe.R)(this.unsubscribe)).subscribe(() => this.emailError = !1)
                    }

                    ngOnDestroy() {
                        this.passwordChangeSubscription && this.passwordChangeSubscription.unsubscribe(), this.passwordChangeSubscription = null, this.emailChangeSubscription && this.emailChangeSubscription.unsubscribe(), this.emailChangeSubscription = null, this.unsubscribe.next(), this.unsubscribe.complete()
                    }

                    logRegistrationStarted() {
                        "function" == typeof fbq && fbq("track", "Lead"), "function" == typeof gtag && gtag("event", "generate_lead"), this.analyticsService.postEvent(new at.Registration.Started.Event({}))
                    }

                    logAccountCreated(l) {
                        this.storageService.set(["user_id"], l.id), this.analyticsService.postEvent(new at.Account.Created.Event({
                            email: l.email,
                            is_referred: !1,
                            subscribed: l.subscribe,
                            username: l.username,
                            user_id: l.id
                        })), this.storageService.delete(["user_id"]), "function" == typeof fbq && fbq("track", "CompleteRegistration"), "function" == typeof gtag && gtag("event", "sign_up")
                    }

                    onSubscribeCheck(l) {
                        this.subscribe.setValue(l.detail.checked)
                    }

                    onAcceptTermsCheck(l) {
                        this.agreeToTerms.setValue(l.detail.checked)
                    }

                    register(l) {
                        const O = {
                            email: this.email.value,
                            username: this.userName.value,
                            password: this.password.value,
                            subscribe: this.subscribe.value
                        }, Z = Object.assign({}, O);
                        delete Z.password;
                        for (const X in Z) Z.hasOwnProperty(X) && this.storageService.set([X], `${Z[X]}`);
                        if (this.formGroup.invalid) this.utils.markFormGroupTouched(this.formGroup); else if (!this.loading) {
                            if (this.termsError = !1, this.emailError = !1, !this.agreeToTerms.value) return void (this.termsError = !0);
                            this.loading = !0, this.auth.register(O).pipe((0, a.q)(1), (0, Oe.b)(X => {
                                this.finished = !0, l || this.logAccountCreated(Object.assign({id: X}, Z))
                            }), (0, Le.K)(X => (console.error("Register->register()->authService.register() registration unsuccessfull.", X), this.emailError = !0, (0, e.of)([]))), (0, se.x)(() => this.loading = !1)).subscribe()
                        }
                    }

                    resetRegister() {
                        this.formGroup.reset(), this.finished = !1
                    }

                    passwordMatchValidator(l) {
                        if (!l.parent) return null;
                        const O = l.parent.get("password");
                        return this.passwordChangeSubscription || (this.passwordChangeSubscription = O.valueChanges.pipe((0, qe.R)(this.unsubscribe)).subscribe(() => {
                            l.updateValueAndValidity()
                        })), O.value !== l.value ? {mismatch: !0} : null
                    }

                    usernameMatchEmailValidator(l) {
                        if (!l.parent) return null;
                        const O = l.parent.get("email");
                        return this.emailChangeSubscription || (this.emailChangeSubscription = O.valueChanges.pipe((0, qe.R)(this.unsubscribe)).subscribe(Z => {
                            l.updateValueAndValidity()
                        })), l.value === O.value ? {mismatch: !0} : null
                    }

                    get email() {
                        return this.formGroup.get("email")
                    }

                    get password() {
                        return this.formGroup.get("password")
                    }

                    get passwordConfirm() {
                        return this.formGroup.get("passwordConfirm")
                    }

                    get userName() {
                        return this.formGroup.get("userName")
                    }

                    get agreeToTerms() {
                        return this.formGroup.get("agreeToTerms")
                    }

                    get subscribe() {
                        return this.formGroup.get("subscribe")
                    }

                    buildFormGroup() {
                        this.formGroup = this.fb.group({
                            email: ["", [J.kI.required, J.kI.email]],
                            userName: ["", [J.kI.required, this.usernameMatchEmailValidator.bind(this)]],
                            password: ["", [J.kI.required, J.kI.minLength(8)]],
                            passwordConfirm: ["", [J.kI.required, this.passwordMatchValidator.bind(this)]],
                            subscribe: [!1],
                            agreeToTerms: [!1]
                        })
                    }

                    playClickTinyV1() {
                        this.audioService.clickTinyV1.play()
                    }
                }

                return h.\u0275fac = function (l) {
                    return new (l || h)(s.Y36(A.yD), s.Y36(N.mI), s.Y36(J.qu), s.Y36(Pe.F), s.Y36(N.qy), s.Y36(N.pk))
                }, h.\u0275cmp = s.Xpm({
                    type: h,
                    selectors: [["app-register"]],
                    decls: 5,
                    vars: 3,
                    consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "video", 3, "src"], ["videoPlayer", ""], ["class", "form", 3, "formGroup", "ngSubmit", 4, "ngIf"], ["class", "success-info", 4, "ngIf"], [1, "form", 3, "formGroup", "ngSubmit"], ["aria-describedby", "emailErrorLabel", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", "autocomplete", "false", 1, "form__textInput", 3, "click"], ["class", "form__inputHint", 4, "ngIf"], ["aria-describedby", "usernameErrorLabel", "name", "username", "type", "text", "formControlName", "userName", "placeholder", "Username", "autocomplete", "false", 1, "form__textInput", 3, "click"], ["name", "password", "type", "password", "formControlName", "password", "placeholder", "Password", 1, "form__textInput", 3, "click"], ["name", "repeat", "type", "password", "formControlName", "passwordConfirm", "placeholder", "Repeat", 1, "form__textInput", 3, "click"], ["both", "medium"], ["labelText", "I agree to the <a href='https://apollo.gg/terms'>Terms and Conditions</a>", 3, "onCheck"], ["labelText", "Sign up for exclusive updates!", 3, "onCheck"], ["size", "large", 1, "form__submitButton", 3, "loading", "text", "click"], [1, "nav_login", "font-weight-bold"], ["routerLink", "/login", 1, "form__backToLogin", 3, "click"], [1, "form__inputHint"], [1, "success-info"], [1, "register-finished", "text-center"], ["size", "normal", "routerLink", "/login", "text", "Login", 1, "form__submitButton"], ["size", "normal", "text", "Resend", 1, "form__submitButton", 3, "click"], ["size", "normal", "text", "Re-Register", 1, "form__submitButton", 3, "click"]],
                    template: function (l, O) {
                        1 & l && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.YNc(3, Ds, 21, 12, "form", 2), s.YNc(4, Ls, 12, 1, "div", 3)), 2 & l && (s.Q6J("src", O.videoSrc, s.LSH), s.xp6(3), s.Q6J("ngIf", !O.finished), s.xp6(1), s.Q6J("ngIf", O.finished))
                    },
                    directives: [m.O5, J._Y, J.JL, J.sg, J.Fj, J.JJ, J.u, W.yS, W.rH],
                    styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form-check-label[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%], .form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%], .register-finished[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.register-finished[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.form-check-label[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%], .form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%}.video[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:.65}.form[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 31);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.success-info[_ngcontent-%COMP%]{width:calc(var(--vw) * 27.7)}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{text-align:center;margin-top:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%]{text-align:center;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:calc(var(--vh) * 2);cursor:pointer}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);margin-bottom:calc(var(--vh) * 4.44);margin-left:auto;margin-right:auto;min-width:160px}.form__subscribe-checkbox[_ngcontent-%COMP%], .form__submitButton[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}"]
                }), h
            })()
        }, {
            path: "reset", component: (() => {
                class h {
                    constructor(l, O, Z, X) {
                        this.authService = l, this.fb = O, this.utils = Z, this.audioService = X, this.finished = !1, this.loading = !1, this.videoSrc = "/assets/videos/login-video.webm"
                    }

                    ngOnInit() {
                        this.buildFormGroup()
                    }

                    reset() {
                        this.formGroup.invalid ? this.utils.markFormGroupTouched(this.formGroup) : this.loading || (this.loading = !0, this.authService.resetPassword(this.email.value).pipe((0, a.q)(1)).subscribe(l => {
                            this.loading = !1, this.finished = !0, this.info = "Follow the instructions sent to you by email in order to reset your password."
                        }, l => {
                            this.loading = !1, this.finished = !0, console.error(l), this.info = "Error has occurred during sending an email. Try again later."
                        }))
                    }

                    get email() {
                        return this.formGroup.get("email")
                    }

                    buildFormGroup() {
                        this.formGroup = this.fb.group({email: ["", [J.kI.required, J.kI.email]]})
                    }

                    tryAgain() {
                        this.finished = !1, this.formGroup.reset()
                    }

                    playClickTinyV1() {
                        this.audioService.clickTinyV1.play()
                    }
                }

                return h.\u0275fac = function (l) {
                    return new (l || h)(s.Y36(N.mI), s.Y36(J.qu), s.Y36(Pe.F), s.Y36(N.pk))
                }, h.\u0275cmp = s.Xpm({
                    type: h,
                    selectors: [["app-reset"]],
                    decls: 5,
                    vars: 3,
                    consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "video", 3, "src"], ["videoPlayer", ""], ["class", "form", 3, "formGroup", "submit", 4, "ngIf"], ["class", "success-info", 4, "ngIf"], [1, "form", 3, "formGroup", "submit"], ["aria-describedby", "emailErrorLabel", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", 1, "form__textInput", 3, "click"], ["class", "form__inputHint", 4, "ngIf"], ["size", "large", 1, "form__submitButton", 3, "text", "click"], ["routerLink", "/login", 1, "form__backToLogin"], [1, "form__inputHint"], [1, "success-info"], [1, "info-label"], [1, "form__tryAgain", 3, "click"]],
                    template: function (l, O) {
                        1 & l && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.YNc(3, tn, 6, 3, "form", 2), s.YNc(4, Us, 7, 1, "div", 3)), 2 & l && (s.Q6J("src", O.videoSrc, s.LSH), s.xp6(3), s.Q6J("ngIf", !O.finished), s.xp6(1), s.Q6J("ngIf", O.finished))
                    },
                    directives: [m.O5, J._Y, J.JL, J.sg, J.Fj, J.JJ, J.u, W.yS],
                    styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%}.video[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:.65}.form[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 37.96);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.success-info[_ngcontent-%COMP%]{width:calc(var(--vw) * 27.7)}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{text-align:center;margin-top:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%]{text-align:center;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:calc(var(--vh) * 2);cursor:pointer}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);margin-left:auto;margin-right:auto}"]
                }), h
            })()
        }, {path: "demo-sheet", component: ne.q6}, {
            path: "game",
            component: Os,
            canActivate: [(() => {
                class h {
                    constructor(l) {
                        this.authService = l
                    }

                    canActivate(l, O) {
                        return this.authService.refreshToken().pipe((0, Ke.VS)(Z => this.authService.saveAccount(Z, !0, 1)), (0, Le.K)(Z => (this.authService.logout(), (0, e.of)(Z))))
                    }
                }

                return h.\u0275fac = function (l) {
                    return new (l || h)(s.LFG(N.mI))
                }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
            })()],
            data: {reuse: !0},
            children: [{path: "gu", loadChildren: () => n.e(26).then(n.bind(n, 94026)).then(h => h.GuModule)}]
        }];
        let Fs = (() => {
            class h {
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275mod = s.oAB({type: h}), h.\u0275inj = s.cJS({
                imports: [[W.Bz.forRoot(Gs, {
                    useHash: !0,
                    enableTracing: !1
                })], W.Bz]
            }), h
        })();
        var Zs = n(98009), Ns = n(47313), Qt = n(41746), fs = n(30567), Ws = n(36053), Tt = n(87545), zs = n(43164),
            wn = n(52216), vs = n(28510), sn = n(88632), kn = n(87168), St = n(33403), En = n(11130), On = n(8561);
        let Tn = (() => {
            class h {
                constructor(l, O, Z) {
                    this.cerberusModalService = l, this.activeModal = O, this.akumaService = Z
                }

                ngOnInit() {
                    this.akumaService.postScreenEvent("tutorial", "Skip", "", "opened")
                }

                goBack() {
                    this.akumaService.postControlEvent("tutorial", "Skip", "", "return", "Btn", "pressed"), this.activeModal.close("Coinbase CTA closed")
                }

                skipTutorial() {
                    this.akumaService.postControlEvent("tutorial", "Skip", "", "confirm", "Btn", "pressed"), this.cerberusModalService.dismissAll()
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(vs.Qz), s.Y36(vs.mX), s.Y36(A.jt))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["cerberus-skip-tutorial-modal"]],
                decls: 15,
                vars: 0,
                consts: [[1, "modal__header"], [1, "modal__content"], ["top", "3x-large", "bottom", "medium"], ["align", "center", "size", "x-small", "fillGradient", "gradients.gold.simple"], ["top", "medium", "bottom", "medium"], ["fillColor", "colors.light.800", "kind", "x-small"], [1, "modal__btnsGroup"], [1, "modal__btn", 3, "click"]],
                template: function (l, O) {
                    1 & l && (s._UZ(0, "div", 0), s.TgZ(1, "div", 1), s.TgZ(2, "gu-vertical-space", 2), s.TgZ(3, "gu-heading-text", 3), s._uU(4, " Are you Sure you want to skip the tutorial?"), s.qZA(), s.qZA(), s.TgZ(5, "gu-vertical-space", 4), s.TgZ(6, "gu-paragraph-text", 5), s._uU(7, " You won\u2019t receive your 3 Core Packs. "), s._UZ(8, "br"), s._uU(9, " To unlock this reward at a later time, come back by selecting \u201cTutorial\u201d from the Arena screen. "), s.qZA(), s.qZA(), s.TgZ(10, "div", 6), s.TgZ(11, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                        return O.goBack()
                    }), s._uU(12, " Go Back "), s.qZA(), s.TgZ(13, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                        return O.skipTutorial()
                    }), s._uU(14, " Yes "), s.qZA(), s.qZA(), s.qZA())
                },
                styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;max-width:640px;text-align:center}.modal__header[_ngcontent-%COMP%]{background:linear-gradient(90deg,#c6a052 2.93%,#ebc98b 25.01%,#fff2d8 50.44%,#ebc98b 74.21%,#c6a052 96.95%);box-shadow:0 2px 5px #0000004d;height:3px;width:100%}.modal__content[_ngcontent-%COMP%]{background:linear-gradient(90deg,#0f1b27 1.39%,#0f1b27 12.6%,#1d2f41 50.06%,#0f1b27 87.64%,#0f1b27 98.63%);box-sizing:border-box;border:2px solid #3D5A74;display:flex;flex-direction:column;padding:0 calc(var(--vw) * 1.5);align-items:center}.modal__btnsGroup[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;padding:20px 0;width:50%}.modal__btn[_ngcontent-%COMP%]{padding:15px;margin:10px}.modal__closeButton[_ngcontent-%COMP%]{position:absolute;top:20px;right:20px;z-index:1;font-size:calc(var(--vh) * 2);color:#8be1e0;cursor:pointer}.modal__closeButton[_ngcontent-%COMP%]:hover{color:#fff}"]
            }), h
        })();
        var Mn = n(17268);
        let $n = (() => {
            class h {
                constructor(l, O, Z, X, be, Ie, Re, it) {
                    this.cerberusModalService = l, this.queueService = O, this.gameService = Z, this.guGameService = X, this.playService = be, this.authService = Ie, this.audioService = Re, this.akumaService = it
                }

                ngOnInit() {
                    this.akumaService.postScreenEvent("tutorial", "Welcome", "", "opened"), this.akumaService.postFlowEvent("tutorialComplete", "started")
                }

                beginTutorial() {
                    this.audioService.arenaClickStart.play(), this.akumaService.postControlEvent("tutorial", "Welcome", "", "go", "Btn", "pressed");
                    const l = this.authService.getUserId();
                    this.queueService.activeQueues$.pipe((0, a.q)(1)).subscribe(O => {
                        O.forEach(Z => this.queueService.cancel(Z))
                    }), this.gameService.getBranch$(1).pipe((0, a.q)(1), (0, kn.M)(this.guGameService.getGameMode$(St.B_.TUTORIAL)), (0, Oe.b)(([O, Z]) => {
                        this.playService.play({
                            realm: O.id,
                            mode: St.B_.TUTORIAL,
                            mission: Z.properties.mission,
                            player: {
                                id: l,
                                deck: {id: Z.properties.player.deck.id, global: Z.properties.player.deck.global},
                                collection: {id: Z.properties.player.collection.id}
                            },
                            opponent: {
                                deck: {
                                    id: Z.properties.opponent.deck.id,
                                    global: Z.properties.opponent.deck.global
                                }, collection: {id: Z.properties.opponent.collection.id}
                            }
                        })
                    })).subscribe(O => this.cerberusModalService.dismissAll())
                }

                skipTutorial() {
                    this.akumaService.postControlEvent("tutorial", "Welcome", "", "skip", "Btn", "pressed");
                    this.cerberusModalService.open(Tn, {centered: !0}).result.then(Z => {
                    }, Z => {
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.Y36(vs.Qz), s.Y36(Ce.g), s.Y36(nt.hM), s.Y36(En.xV), s.Y36(On.GT), s.Y36(N.mI), s.Y36(N.pk), s.Y36(A.jt))
            }, h.\u0275cmp = s.Xpm({
                type: h,
                selectors: [["cerberus-tutorial-start-modal"]],
                decls: 48,
                vars: 1,
                consts: [[1, "leftPanel"], ["src", "/gu-assets/images/tutorial/citadel-herald-bg.webp", 1, "leftPanel__image"], [1, "leftPanel__imageShadow"], ["src", "/gu-assets/images/GULogo-white.svg", "alt", "", 1, "leftPanel__logoImage"], [1, "rightPanel"], ["fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", "size", "x-small", 1, "rightPanel__title"], ["fillColor", "colors.light.300", 1, "rightPanel__subtitle"], [1, "rightPanel__gameplay"], ["src", "/gu-assets/images/tutorial/gameplay-basics.webp", 1, "rightPanel__gameplay__image"], [1, "rightPanel__gameplay__title"], ["fillColor", "colors.light.300"], [1, "rightPanel__howto"], [1, "rightPanel__howto__mana"], ["src", "/gu-assets/images/tutorial/how-mana-works.webp", 1, "rightPanel__howto__image"], [1, "rightPanel__howto__title"], [1, "rightPanel__howto__win"], ["src", "/gu-assets/images/tutorial/how-to-win.webp", 1, "rightPanel__howto__image"], [1, "rightPanel__freeStuff"], ["src", "/gu-assets/images/tutorial/free-stuff-banner-start.png", 1, "rightPanel__freeStuff__bgImage"], ["src", "/gu-assets/images/tutorial/free-core-pack.png", 1, "rightPanel__freeStuff__cardImage"], ["fillColor", "colors.light.300", 1, "rightPanel__freeStuff__text"], [1, "rightPanel__freeStuff__tooltip", 3, "title"], ["iconLigature", "little_help"], ["size", "medium", "text", "BEGIN", 1, "rightPanel__beginTutorialBtn", 3, "click"], ["fillColor", "colors.apocyan.100", 1, "rightPanel__closeTutorialBtn", 3, "click"]],
                template: function (l, O) {
                    1 & l && (s.TgZ(0, "div", 0), s.TgZ(1, "picture"), s._UZ(2, "img", 1), s.qZA(), s._UZ(3, "div", 2), s.TgZ(4, "picture"), s._UZ(5, "img", 3), s.qZA(), s.qZA(), s.TgZ(6, "div", 4), s.TgZ(7, "gu-heading-text", 5), s._uU(8, " Welcome to the Tutorial "), s.qZA(), s.TgZ(9, "gu-simple-text", 6), s._uU(10, " A swift lesson to help you learn the basics. All great heroes need to start somewhere! "), s.qZA(), s.TgZ(11, "div", 7), s.TgZ(12, "picture"), s._UZ(13, "img", 8), s.qZA(), s.TgZ(14, "div", 9), s.TgZ(15, "gu-simple-text", 10), s.TgZ(16, "strong"), s._uU(17, "GAMEPLAY BASICS"), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.TgZ(18, "div", 11), s.TgZ(19, "div", 12), s.TgZ(20, "picture"), s._UZ(21, "img", 13), s.qZA(), s.TgZ(22, "div", 14), s.TgZ(23, "gu-simple-text", 10), s.TgZ(24, "strong"), s._uU(25, "HOW MANA WORKS"), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.TgZ(26, "div", 15), s.TgZ(27, "picture"), s._UZ(28, "img", 16), s.qZA(), s.TgZ(29, "div", 14), s.TgZ(30, "gu-simple-text", 10), s.TgZ(31, "strong"), s._uU(32, "HOW TO WIN"), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.qZA(), s.TgZ(33, "div", 17), s.TgZ(34, "picture"), s._UZ(35, "img", 18), s.qZA(), s.TgZ(36, "picture"), s._UZ(37, "img", 19), s.qZA(), s.TgZ(38, "gu-simple-text", 20), s._uU(39, " Receive "), s.TgZ(40, "strong"), s._uU(41, "3 Core Packs "), s.qZA(), s.TgZ(42, "app-tooltip", 21), s._UZ(43, "gu-icon", 22), s.qZA(), s._uU(44, " upon completion of the tutorial. "), s.qZA(), s.qZA(), s.TgZ(45, "gu-primary-hex-button", 23), s.NdJ("click", function () {
                        return O.beginTutorial()
                    }), s.qZA(), s.TgZ(46, "gu-simple-text", 24), s.NdJ("click", function () {
                        return O.skipTutorial()
                    }), s._uU(47, " MAYBE LATER "), s.qZA(), s.qZA()), 2 & l && (s.xp6(42), s.Q6J("title", "Core Packs hold <br/> non-blockchain cards that can <br/> be used to expand your decks."))
                },
                directives: [Mn.K],
                styles: ["[_nghost-%COMP%]{display:flex;background-color:#0f1b27;border:2px solid #3D5A74;box-sizing:border-box;box-shadow:5px 5px 15px #0006;width:1050px}.rightPanel[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%}.rightPanel__title[_ngcontent-%COMP%]{margin-top:20px}.rightPanel__subtitle[_ngcontent-%COMP%]{margin:20px;text-align:center}.rightPanel__gameplay[_ngcontent-%COMP%]{margin:0 30px;width:450px}.rightPanel__gameplay__image[_ngcontent-%COMP%]{width:450px;display:block}.rightPanel__gameplay__title[_ngcontent-%COMP%]{background:linear-gradient(to left,#0F1B27 0%,#1D2F41 100%);text-align:center;padding:10px}.rightPanel__howto[_ngcontent-%COMP%]{display:flex;margin-top:10px}.rightPanel__howto__mana[_ngcontent-%COMP%]{margin-right:3px}.rightPanel__howto__win[_ngcontent-%COMP%]{margin-left:3px}.rightPanel__howto__image[_ngcontent-%COMP%]{width:222px;display:block}.rightPanel__howto__title[_ngcontent-%COMP%]{background:linear-gradient(to left,#0F1B27 0%,#1D2F41 100%);text-align:center;padding:10px}.rightPanel__freeStuff[_ngcontent-%COMP%]{position:relative}.rightPanel__freeStuff__bgImage[_ngcontent-%COMP%]{width:510px;display:block;margin-top:35px}.rightPanel__freeStuff__cardImage[_ngcontent-%COMP%]{position:absolute;top:0px;left:15px;height:90px}.rightPanel__freeStuff__text[_ngcontent-%COMP%]{position:absolute;top:45px;left:85px;font-size:15px}.rightPanel__freeStuff__tooltip[_ngcontent-%COMP%]{display:inline;text-align:center}.rightPanel__beginTutorialBtn[_ngcontent-%COMP%]{margin-top:20px;padding:0 40px}.rightPanel__closeTutorialBtn[_ngcontent-%COMP%]{margin-top:20px;font-size:15px;cursor:pointer}.leftPanel[_ngcontent-%COMP%]{position:relative;width:100%}.leftPanel__image[_ngcontent-%COMP%]{max-width:100%;max-height:100%;display:block}.leftPanel__imageShadow[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0px;background:linear-gradient(180deg,rgba(15,27,39,0) 57.61%,rgba(15,27,39,.7) 73.26%,rgba(15,27,39,.9) 100%)}.leftPanel__logoImage[_ngcontent-%COMP%]{width:330px;position:absolute;bottom:60px;left:0;right:0;margin-left:auto;margin-right:auto}"]
            }), h
        })();
        var tt = n(14618);
        let In = (() => {
            class h {
                constructor(l, O, Z, X, be, Ie, Re, it, pt, ze) {
                    this.actions$ = l, this.ngrxStore = O, this.gameApi = Z, this.authService = X, this.guUserService = be, this.gameService = Ie, this.gameDownloadService = Re, this.zone = it, this.utils = pt, this.cerberusModalService = ze, this.GameAssetsDownloadRequest$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(tt.gK.GAME_ASSETS_DOWNLOAD_REQUEST), (0, Tt.w)(ye => this.gameService.currentGameContext$.pipe((0, Ue.h)(ve => null != ve), (0, Ke.VS)(ve => (0, Qt.$R)((0, e.of)(ve), this.gameService.getBranch(ve.id))), (0, Ke.VS)(([ve, Pt]) => (0, Qt.$R)((0, e.of)(ve), this.gameDownloadService.getLatestAssetsVersions(ve, Pt), this.gameDownloadService.getLocalAssetsVersions(ve), this.getBasicAuthToken())), (0, a.q)(1))), (0, Tt.w)(([ye, ve, Pt, bt]) => {
                        const rt = this.gameService.isObfuscatedBranch(ye.id) ? bt : void 0,
                            $t = this.gameDownloadService.deltaAssetsVersions(Pt, ve),
                            Xt = $t.reduce((qt, cs) => qt + cs.size, 0), yt = this.gameService.getAssetsPath(),
                            Ss = Array.from({length: $t.length}, () => new v.X(null)),
                            Nt = window.bridge.downloadAssetsWithSempahore($t, yt, Ss, rt, 5).map(qt => qt.pipe(this.utils.enterZone(this.zone)));
                        return (0, e.of)({
                            downloadAssets: Nt,
                            assetsProgresses: Ss,
                            totalBytes: Xt,
                            game: ye,
                            remoteAssets: ve
                        })
                    }), (0, Tt.w)(ye => (0, Qt.$R)((0, fs.D)(ye.downloadAssets).pipe((0, Ge.U)(ve => ({
                        downloads: ve,
                        game: ye.game,
                        remoteAssets: ye.remoteAssets
                    }))), (0, Ws.aj)(ye.assetsProgresses).pipe((0, zs.p)(1e3), (0, Oe.b)(ve => {
                        const Pt = ve.reduce((rt, $t) => $t ? rt + $t.bytesCompleted : rt + 0, 0),
                            bt = Math.round(100 * Pt / ye.totalBytes);
                        this.ngrxStore.dispatch(new tt.X4({percentage: bt, status: "downloading"}))
                    })))), (0, Tt.w)(([ye, ve]) => (this.gameService.deleteProperty(ye.game.id, "assets"), this.gameService.setProperty(ye.game.id, "assets", JSON.stringify(ye.remoteAssets)), this.gameService.refreshGameContext(), this.gameDownloadService.displayDownloadCompleteNotification(ye.game), [new tt.P6])), (0, Le.K)((ye, ve) => (console.error(ye), this.ngrxStore.dispatch(new tt.wT({error: ye})), ve)))), this.GameAssetsDownloadSuccess$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(tt.gK.GAME_ASSETS_DOWNLOAD_SUCCESS), (0, Tt.w)(ye => {
                        const ve = this.authService.getUserId();
                        return this.gameService.getUserTutorialMissions(ve).pipe((0, a.q)(1))
                    }), (0, Tt.w)(ye => (ye[0].completed || this.showTutorialModal(), [new tt.Lg({
                        status: "idle",
                        percentage: 100
                    })])), (0, Le.K)((ye, ve) => (console.error(ye), ve)))), this.GameBuildDownloadExtractRequest$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(tt.gK.GAME_BUILD_DOWNLOAD_EXTRACT), (0, Ge.U)(ye => ye.payload), (0, Tt.w)(ye => this.gameService.getBranch(ye.game.id).pipe((0, Ge.U)(ve => ({
                        branch: ve,
                        action: ye
                    })))), (0, Tt.w)(({
                                          branch: ye,
                                          action: ve
                                      }) => this.gameDownloadService.extractGame(ve.game, ve.fileName, ve.installPath).pipe((0, Ge.U)(Pt => ({
                        result: Pt,
                        branch: ye,
                        action: ve
                    })))), (0, Tt.w)(({action: ve}) => (this.gameService.setProperty(ve.game.id, "status", "extracted"), this.gameService.refreshGameContext(), ve.localVersion && this.gameDownloadService.deleteFile(this.gameDownloadService.getFileName(ve.game, ve.localVersion), this.gameService.getInstallPath(ve.game)), this.gameDownloadService.displayDownloadCompleteNotification(ve.game), [new tt.Ry])), (0, Le.K)((ye, ve) => (console.error(ye), this.ngrxStore.dispatch(new tt.c7({error: ye})), ve)))), this.GameBuildDownloadRequest$ = (0, pe.GW)(() => this.actions$.pipe((0, pe.l4)(tt.gK.GAME_BUILD_DOWNLOAD_REQUEST), (0, Tt.w)(ye => this.gameService.currentGameContext$.pipe((0, Ue.h)(ve => null != ve), (0, Ke.VS)(ve => (0, Qt.$R)((0, e.of)(ve), this.gameService.getBranch(ve.id))), (0, Ke.VS)(([ve, Pt]) => (0, Qt.$R)((0, e.of)(ve), this.gameDownloadService.getVersions(ve, Pt), this.getBasicAuthToken())), (0, a.q)(1))), (0, Tt.w)(([ye, [ve, Pt], bt]) => {
                        const rt = this.gameService.getInstallPath(ye),
                            $t = this.gameDownloadService.getDownloadInfo(ye, ve, bt),
                            Xt = this.gameService.isObfuscatedBranch(ye.id) ? bt : void 0;
                        return (0, Ws.aj)([window.bridge.download($t.url, rt, this.getFileName(ye, ve), Xt).pipe(this.utils.enterZone(this.zone), (0, Ge.U)(yt => ({
                            game: ye,
                            fileName: this.getFileName(ye, ve),
                            installPath: rt,
                            remoteVersion: ve,
                            localVersion: Pt
                        }))), window.bridge.progress.pipe(this.utils.enterZone(this.zone), (0, zs.p)(1e3), (0, wn.V)(12e4), (0, Ge.U)(yt => (this.ngrxStore.dispatch(new tt.dY({
                            percentage: this.getPercentage(yt),
                            status: "downloading"
                        })), yt)))])
                    }), (0, Ke.zg)(([ye, ve]) => (this.gameService.setProperty(ye.game.id, "version", ye.remoteVersion), this.gameService.setProperty(ye.game.id, "status", "downloaded"), [new tt.yn({
                        game: ye.game,
                        fileName: ye.fileName,
                        installPath: ye.installPath,
                        localVersion: ye.localVersion
                    })])), (0, Le.K)((ye, ve) => (console.error(ye), this.ngrxStore.dispatch(new tt.c7({error: ye})), ve))))
                }

                getBasicAuthToken() {
                    const l = this.authService.getUserId(), O = this.authService.getGameSessionTicket();
                    return this.gameApi.get(`/user/${l}/build?session=${O}`).pipe((0, Ge.U)(Z => Z.basic_auth))
                }

                getPercentage(l) {
                    return l ? Math.round(100 * l.bytesCompleted / l.bytesTotal) : 0
                }

                getFileName(l, O) {
                    return "win32" === window.bridge.platform() ? "gods_" + O + l.extensions.windows : "gods_" + O + l.extensions.osx
                }

                showTutorialModal() {
                    this.cerberusModalService.open($n).result.then(Z => {
                    }, Z => {
                    })
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.LFG(pe.eX), s.LFG(Ee.yh), s.LFG(A.Ft), s.LFG(N.mI), s.LFG(sn.MZ), s.LFG(nt.hM), s.LFG(gt.b5), s.LFG(s.R0b), s.LFG(Pe.F), s.LFG(vs.Qz))
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac}), h
        })();
        const nn = {
            gameBuild: {isUpdateRequired: !1, percentage: 0, status: "idle"},
            gameAssets: {isUpdateRequired: !1, percentage: 0, status: "idle"}
        };

        function on(h, L) {
            switch (L.type) {
                case tt.gK.GAME_BUILD_DOWNLOAD_CHECK:
                    return Object.assign(Object.assign({}, h), {gameBuild: Object.assign(Object.assign({}, h.gameBuild), {isUpdateRequired: L.payload.isUpdateRequired})});
                case tt.gK.GAME_BUILD_DOWNLOAD_PROGRESS:
                    return Object.assign(Object.assign({}, h), {
                        gameBuild: Object.assign(Object.assign({}, h.gameBuild), {
                            percentage: L.payload.percentage,
                            status: L.payload.status
                        })
                    });
                case tt.gK.GAME_BUILD_DOWNLOAD_SUCCESS:
                    return Object.assign(Object.assign({}, h), {
                        gameBuild: Object.assign(Object.assign({}, h.gameBuild), {
                            isUpdateRequired: !1,
                            status: "completed",
                            percentage: 100
                        })
                    });
                case tt.gK.GAME_BUILD_DOWNLOAD_UPDATE_STATUS:
                    return Object.assign(Object.assign({}, h), {
                        gameBuild: Object.assign(Object.assign({}, h.gameBuild), {
                            isUpdateRequired: h.gameBuild.isUpdateRequired,
                            status: L.payload.status,
                            percentage: h.gameBuild.percentage
                        })
                    });
                case tt.gK.GAME_BUILD_DOWNLOAD_ERROR:
                    return Object.assign(Object.assign({}, h), {
                        gameBuild: Object.assign(Object.assign({}, h.gameBuild), {
                            isUpdateRequired: h.gameBuild.isUpdateRequired,
                            status: "error",
                            percentage: h.gameBuild.percentage
                        })
                    });
                case tt.gK.GAME_ASSETS_DOWNLOAD_CHECK:
                    return Object.assign(Object.assign({}, h), {gameAssets: Object.assign(Object.assign({}, h.gameAssets), {isUpdateRequired: L.payload.isUpdateRequired})});
                case tt.gK.GAME_ASSETS_DOWNLOAD_PROGRESS:
                    return Object.assign(Object.assign({}, h), {
                        gameAssets: Object.assign(Object.assign({}, h.gameAssets), {
                            percentage: L.payload.percentage,
                            status: L.payload.status
                        })
                    });
                case tt.gK.GAME_ASSETS_DOWNLOAD_SUCCESS:
                    return Object.assign(Object.assign({}, h), {
                        gameAssets: Object.assign(Object.assign({}, h.gameAssets), {
                            isUpdateRequired: !1,
                            status: "completed",
                            percentage: 100
                        })
                    });
                case tt.gK.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS:
                    return Object.assign(Object.assign({}, h), {
                        gameAssets: Object.assign(Object.assign({}, h.gameAssets), {
                            isUpdateRequired: h.gameAssets.isUpdateRequired,
                            status: L.payload.status,
                            percentage: L.payload.percentage
                        })
                    });
                case tt.gK.GAME_ASSETS_DOWNLOAD_ERROR:
                    return Object.assign(Object.assign({}, h), {
                        gameAssets: Object.assign(Object.assign({}, h.gameAssets), {
                            isUpdateRequired: h.gameAssets.isUpdateRequired,
                            status: "error",
                            percentage: h.gameAssets.percentage
                        })
                    });
                default:
                    return h
            }
        }

        let rn = (() => {
            class h {
                constructor() {
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac}), h
        })();
        var rs = n(56302);
        const an = {wallet: null, user: null};
        (0, Ee.ZF)("account");
        var Gt = (() => {
            return (h = Gt || (Gt = {})).INIT_WALLET = "[App] Initialize Wallet", h.INIT_METAMASK = "[App] Initialize MetaMask", h.UPDATE_STORE = "[App] Update Store", h.UPDATE_MARKETPRICE_ETH = "[App] Update Market Price of Ether", Gt;
            var h
        })();
        const gn = {
            app: function (h, L) {
                switch (L.type) {
                    case Gt.INIT_WALLET:
                    case Gt.INIT_METAMASK:
                        return Object.assign({}, h);
                    default:
                        return h
                }
            }, router: ce.mg, account: function (h = an, L) {
                switch (L.type) {
                    case rs.X8.FETCH_USER_ACCOUNT_SUCCESS:
                        return Object.assign(Object.assign({}, h), {user: L.payload.accountData});
                    case rs.X8.FETCH_USER_WALLET_SUCCESS:
                        return Object.assign(Object.assign({}, h), {wallet: L.payload.walletData});
                    case rs.X8.UPDATE_USER_ETH_BALANCE:
                        return Object.assign(Object.assign({}, h), {wallet: Object.assign(Object.assign({}, h.wallet), {ethBalance: L.payload.balance})});
                    default:
                        return h
                }
            }
        }, Gn = [], as = "reCaptchaOnloadCallback";
        let Hs = (() => {
            class h {
                constructor(l) {
                    this.http = l, this.$loaded = new v.X(!1), this.registerOnloadCallback(), this.load()
                }

                registerOnloadCallback() {
                    window[as] = () => {
                        const l = "g-recpatcha";
                        this.addWidget(l), this.renderWidget(l), this.$loaded.next(!0)
                    }
                }

                addWidget(l) {
                    const O = document.createElement("div");
                    O.id = l, O.style.visibility = "hidden", document.body.appendChild(O)
                }

                renderWidget(l) {
                    this.grecaptcha().render(l, {sitekey: q.N.recaptchaPublicSiteKeyV3, size: "invisible"})
                }

                load() {
                    return this.$loaded.getValue() || this.addScriptTag(), this.$loaded.asObservable()
                }

                addScriptTag() {
                    const l = document.body, O = this.createScriptTag();
                    l.appendChild(O)
                }

                createScriptTag() {
                    const l = document.createElement("script");
                    return l.innerHTML = "", l.src = this.getScriptSrc(), l.async = !0, l.defer = !0, l
                }

                getScriptSrc() {
                    let l = "https://www.recaptcha.net/recaptcha/api.js";
                    return l += "?onload=" + as, l += "&render=" + q.N.recaptchaPublicSiteKeyV3, l
                }

                execute(l) {
                    return (0, f.D)(this.grecaptcha().execute({action: l}))
                }

                grecaptcha() {
                    return window.grecaptcha
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.LFG(ae.eN))
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
        })(), Cs = (() => {
            class h {
                constructor() {
                    this.dataStore = {headerOptions: []}, this._headerOptions$ = new v.X([])
                }

                get headerOptions$() {
                    return this._headerOptions$.asObservable()
                }

                _emit() {
                    this._headerOptions$.next(Object.assign({}, this.dataStore).headerOptions)
                }

                update(l) {
                    this.dataStore.headerOptions = l, this._emit()
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac, providedIn: "root"}), h
        })();
        var Mt = n(24058), mt = n(61737), ls = n(77604);
        let xs = (() => {
            class h {
                constructor(l) {
                    this.auth = l, this.isRefreshingToken = !1, this.tokenSubject = new v.X(null)
                }

                addToken(l, O) {
                    return l.clone({setHeaders: {Authorization: "Bearer " + O}})
                }

                intercept(l, O) {
                    const Z = this.auth.getAuthToken();
                    return O.handle(this.addToken(l, Z ? Z.access : null)).pipe((0, Le.K)(be => {
                        if (be instanceof ae.UA) switch (be.status) {
                            case 400:
                                return this.badRequest(be);
                            case 401:
                                if (-1 == l.url.indexOf("login")) {
                                    if (-1 == l.url.indexOf("refresh")) return this.unauthorized(l, O);
                                    this.auth.logout()
                                }
                        }
                        return (0, mt._)(be)
                    }))
                }

                badRequest(l) {
                    return l && 400 === l.status && l.error && "invalid_grant" === l.error.error ? (this.auth.logout(), null) : (0, mt._)(l)
                }

                unauthorized(l, O) {
                    return this.isRefreshingToken ? this.tokenSubject.pipe((0, Ue.h)(Z => null != Z), (0, a.q)(1), (0, Ke.VS)(Z => O.handle(this.addToken(l, Z)))) : (this.isRefreshingToken = !0, this.tokenSubject.next(null), this.auth.refreshToken().pipe((0, Ke.VS)(Z => Z && Z.refresh ? this.auth.saveAccount(Z, this.auth.isRemembering, 1).pipe((0, ls.h)(Z)) : (this.auth.logout(), (0, e.of)())), (0, Ke.VS)(Z => (this.tokenSubject.next(Z.access), O.handle(this.addToken(l, Z.access)))), (0, Le.K)(Z => (0, mt._)("unauthorized")), (0, se.x)(() => {
                        this.isRefreshingToken = !1
                    })))
                }
            }

            return h.\u0275fac = function (l) {
                return new (l || h)(s.LFG(N.mI))
            }, h.\u0275prov = s.Yz7({token: h, factory: h.\u0275fac}), h
        })();
        var x, js = n(49757);
        let d = [A.LE, {
            provide: s.ip1,
            useFactory: h => () => h.loadConfigurations().toPromise(),
            multi: !0,
            deps: [A.LE]
        }, {provide: ae.TP, useClass: xs, multi: !0}, {provide: ce.GC, useClass: ue}, {
            provide: N.B3,
            useClass: q.N.envClasses.featureFlagsService
        }, {provide: N.mI, useClass: q.N.envClasses.authService}, {
            provide: N.qy,
            useClass: q.N.envClasses.storageService
        }, {provide: N.ux, useClass: q.N.envClasses.ethService}, {
            provide: N.LI,
            useClass: q.N.envClasses.authHostService
        }, {provide: N.eQ, useClass: q.N.envClasses.assetsService}, {
            provide: N.pk,
            useClass: q.N.envClasses.audioService
        }, Mt.m, Y.x0, Pe.F, A.Ho, A.n2, A.dK, Zs.D, Cs, le._, At, Hs, A.fY, Ns.$z];
        (null === (x = q.N.sentry) || void 0 === x ? void 0 : x.dsn) && (d = [...d, {
            provide: s.qLn,
            useValue: Ae.v({showDialog: !1})
        }, {provide: Ze.aN, deps: [W.F0]}, {
            provide: s.ip1,
            useFactory: (h, L) => () => L.init(),
            deps: [Ze.aN, _e],
            multi: !0
        }]);
        let I = (() => {
            class h {
            }

            return h.\u0275fac = function (l) {
                return new (l || h)
            }, h.\u0275mod = s.oAB({type: h, bootstrap: [Qs]}), h.\u0275inj = s.cJS({
                providers: d,
                imports: [[J.u5, ae.JF, Fs, J.UX, fe.PW, u.b2, js.m.forRoot(), Ee.Aw.forRoot(gn, {metaReducers: Gn}), ce.Qi.forRoot(We), q.N.production ? [] : F.FT.instrument(), pe.sQ.forRoot([rn]), Ee.Aw.forFeature("gameResources", on, {initialState: nn}), pe.sQ.forFeature([In]), ne.ic, ee.j]]
            }), h
        })();
        var V;
        if (q.N.production && (0, s.G48)(), null === (V = q.N.sentry) || void 0 === V ? void 0 : V.dsn) {
            const {buildNumber: h} = k;
            E.S({
                release: `gu-cerberus@0.13.3+${h}`,
                environment: q.N.production ? "production" : "staging",
                dsn: q.N.sentry.dsn,
                integrations: [],
                tracesSampleRate: q.N.sentry.tracesSampleRate || 0
            })
        }
        u.q6().bootstrapModule(I).catch(h => console.error(h))
    }, 12751: (oe, R, n) => {
        "use strict";
        n(10609), window.process = {env: {DEBUG: void 0}}, window.global = window, global.Buffer = n(93172).Buffer, global.process = n(35736)
    }, 73307: (oe, R, n) => {
        "use strict";
        n.d(R, {
            Ho: () => i,
            mI: () => v,
            ux: () => e,
            qy: () => p,
            LI: () => r,
            eQ: () => t,
            pk: () => o,
            Hd: () => b,
            B3: () => S
        });
        var u = n(5e3);
        const i = new u.OlP("environment-settings"), v = new u.OlP("i-auth-service"), e = new u.OlP("i-eth-service"),
            p = (new u.OlP("i-cards-service"), new u.OlP("i-storage-service")),
            r = (new u.OlP("i-modal-service"), new u.OlP("i-auth-host-service")), t = new u.OlP("i-assets-service"),
            o = new u.OlP("i-audio-service"), b = new u.OlP("i-launchdarkly-client"),
            S = new u.OlP("i-feature-flag-service");
        new u.OlP("i-deck-code-service"), new u.OlP("apollo-token")
    }, 51649: (oe, R, n) => {
        "use strict";
        n.d(R, {R: () => r, E: () => t});
        var u = n(39017), i = n(61737), v = n(36053), e = n(72986), f = n(24850), p = n(5e3), g = n(69439);
        const r = new p.OlP("deck-code-service");
        let t = (() => {
            class o {
                constructor(S) {
                    this.cardsService = S
                }

                decodeDeckCode(S) {
                    let T, w, D;
                    try {
                        ({domain: T, formatCode: w, libraryIds: D} = (0, u.Jx)(S))
                    } catch (_) {
                        return (0, i._)(_)
                    }
                    return (0, v.aj)([this.cardsService.protoCards$, this.cardsService.inventory$]).pipe((0, e.q)(1), (0, f.U)(([_, M]) => {
                        const {ownedCards: C, unownedProtos: P} = this.buildFromInventory(_, M, T, D, w);
                        return {ownedCards: C, unownedProtos: P, domain: T, formatCode: w}
                    }))
                }

                validateProtos(S, T, w) {
                    if (T.length > 30) throw new Error("Too many cards in the deck.");
                    if (w.length !== T.length) throw new Error("One or more cards in your deck are not valid.");
                    T.forEach(D => {
                        const _ = S.get(D), M = T.filter(C => C === D).length;
                        if (M > 2 || ("legendary" === _.rarity || "mythic" === _.rarity) && M > 1) throw new Error("There are too many copies of one or more cards in your deck.")
                    })
                }

                buildFromInventory(S, T, w, D, _) {
                    const M = this.getProtos(D, S, w);
                    this.validateProtos(S, M, D);
                    const {ownedCards: C, unownedProtos: P} = this.convertToOwnedUnowned(M, T, S);
                    return {ownedCards: C, unownedProtos: P, domain: w, formatCode: _}
                }

                convertToOwnedUnowned(S, T, w) {
                    const D = [], _ = [];
                    return S.forEach(M => {
                        const C = T[M];
                        if (!C || !C.length) return void _.push(M);
                        const E = [...C].sort((s, y) => s.q - y.q).filter(s => !D.map(y => y.id).includes(s.id));
                        if (E && E.length) {
                            const s = {proto: M, quality: E[0].q, id: E[0].id, protoCard: w.get(M)};
                            D.push(s)
                        } else _.push(M)
                    }), {ownedCards: D, unownedProtos: this.sortProtos(_, w)}
                }

                sortProtos(S, T) {
                    return [...S.map(C => T.get(C))].sort((C, P) => C.name < P.name ? -1 : 1).sort((C, P) => C.mana - P.mana).map(C => C.proto)
                }

                getProtos(S, T, w) {
                    const D = [];
                    return T.forEach((_, M) => {
                        if ("neutral" !== _.god && _.god !== w) return;
                        const C = S.filter(P => P === _.lib_id).length;
                        for (let P = 0; P < C; P++) D.push(M)
                    }), D
                }

                encodeDeck(S, T) {
                    return (0, u.cv)(S, T)
                }
            }

            return o.\u0275fac = function (S) {
                return new (S || o)(p.LFG(g.d))
            }, o.\u0275prov = p.Yz7({token: o, factory: o.\u0275fac, providedIn: "root"}), o
        })()
    }, 57503: (oe, R, n) => {
        "use strict";
        n.d(R, {Rl: () => u.Rl});
        var u = n(39029), i = n(70655), e = (n(61517), n(32830)), f = n(86041), p = n(56418), g = n(65171),
            r = n(80102), t = n(26532), o = n(65281);
        let b = class extends e.oi {
            constructor() {
                super(...arguments), this.closable = !0
            }

            static get styles() {
                return e.iv`
      :host {
        width: 100%;
        display: flex;
        position: fixed;
        background-color: rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.dark[900]))}, 0.8);
      }

      .closeIcon {
        position: absolute;
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        top: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        right: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        cursor: pointer;
        z-index: 1;
      }
    `
            }

            close() {
                this.dispatchEvent(new CustomEvent("onCloseAnnounceBanner", {bubbles: !1}))
            }

            render() {
                return e.dy`
      ${this.closable ? e.dy`<gu-icon
            fillColor="colors.apocyan.300"
            iconLigature="close_x"
            class="closeIcon"
            @click="${this.close}"
            data-test-id="announce-banner-close-icon"
          ></gu-icon>` : ""}

      <slot></slot>
    `
            }
        };
        (0, i.gn)([(0, p.C)({type: Boolean}), (0, i.w6)("design:type", Object)], b.prototype, "closable", void 0), b = (0, i.gn)([(0, f.M)("gu-announce-banner-template")], b);
        var S = n(47925);
        let T = class extends e.oi {
            constructor() {
                super(...arguments), this.responsiveSize = []
            }

            static get properties() {
                return {
                    top: {type: String},
                    bottom: {type: String},
                    both: {type: String},
                    responsiveSize: {type: Array}
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: block;
        margin-top: var(--marginTop);
        margin-bottom: var(--marginBottom);
      }
    `
            }

            pickMarginValue(c, $) {
                return c ? o.measurements.spacingAmountMapping[c] : $ ? o.measurements.spacingAmountMapping[$] : 0
            }

            generateVariablesAndMediaQueries() {
                const c = this.pickMarginValue(this.both, this.top), $ = this.pickMarginValue(this.both, this.bottom);
                return e.dy`
      <style>

        /* DEFINE BASE SIZING */
        ${(0, t.asCssProp)(`\n          :host {\n            --marginTop: ${c};\n            --marginBottom: ${$};\n          }\n        `)}

        /* DEFINE RESPONSIVE SIZING */
        ${this.responsiveSize.map(({breakpoint: z, topSize: re, bottomSize: ke, bothSize: Be}) => {
                    const Xe = this.pickMarginValue(Be, re), Ct = this.pickMarginValue(Be, ke);
                    return e.iv`
            @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping[z])}) {
              :host {
                ${(0, t.asCssProp)(Xe ? `--marginTop: ${Xe};` : "")}
                ${(0, t.asCssProp)(Ct ? `--marginBottom: ${Ct};` : "")}
              }
            }
          `
                })}
      </style>
    `
            }

            render() {
                return e.dy`
      ${this.generateVariablesAndMediaQueries()}
      <slot></slot>
    `
            }
        };
        T = (0, i.gn)([(0, f.M)("gu-vertical-space")], T), n(11015);
        let D = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        width: 100%;
        height: 100vh;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
            }

            render() {
                return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          Gods Unchained is currently offline while we resolve issues affecting the launcher. Weâ€™ll be back online
          shortly.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
            }
        };
        D = (0, i.gn)([(0, f.M)("gu-outage-banner")], D);
        let _ = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        width: 100%;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
            }

            render() {
                return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          Due to ongoing issues, Weekend Ranked will not run this weekend. It will resume the following weekend for a
          special double rewards event.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
            }
        };
        _ = (0, i.gn)([(0, f.M)("gu-ranked-weekend-cancelled-banner")], _);
        let M = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        width: 100%;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
            }

            render() {
                return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          <strong>WEEKEND RANKED IS POSTPONED<strong>
          <br />
          Due to a critical issue, the Weekend Ranked event has been cancelled. Next event will yield double rewards as a result.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
            }
        };
        M = (0, i.gn)([(0, f.M)("gu-maintenance-banner")], M);
        var C = n(38872), P = n(98539);
        let E = class extends e.oi {
            constructor() {
                super(...arguments), this.overlay = !1, this.reveal = !1, this.imageLoader = new Image, this.isLoading = !1
            }

            static get styles() {
                return e.iv`
      :host {
        width: 100vw;
        height: 100vh;
        position: fixed;
        z-index: -10;
        background-position: center center;
        background-size: cover;
      }

      .backdrop__image,
      .backdrop__overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: block;
        border: none;
      }

      .backdrop__image {
        background-position: center center;
        background-size: cover;
        transition: opacity ease-in-out 0.5s;
      }

      :host(.loading) .backdrop__image {
        opacity: 0;
        transition: none;
      }

      .backdrop__overlay {
        z-index: 1;
        background: linear-gradient(
          0deg,
          rgba(10, 10, 10, 0.9) 0%,
          rgba(10, 10, 10, 0.5) 51.49%,
          rgba(10, 10, 10, 0.25) 77.04%,
          rgba(10, 10, 10, 0.75) 100%
        );
        mix-blend-mode: normal;
        opacity: 0.75;
      }

      .backdrop__overlay--reveal {
        animation: backdropFade 3s forwards;
      }

      @keyframes backdropFade {
        from {
          background-color: rgba(0, 0, 0, 1);
          opacity: 1;
        }
        to {
          background-color: rgba(0, 0, 0, 0);
          opacity: 0.75;
        }
      }
    `
            }

            updated(c) {
                super.updated(c), c.has("image") && this.image && (this.imageLoader.src = `/assets/images/backdrops/${this.image}`, !this.isLoading && (this.isLoading = !0, (0, r.waitForImageToLoad)(this.imageLoader).then(() => {
                    requestAnimationFrame(() => {
                        this.classList.add("loading"), this.style.backgroundImage = this.imageElement.style.backgroundImage, this.imageElement.style.backgroundImage = `url(/assets/images/backdrops/${this.image})`, this.isLoading = !1, requestAnimationFrame(() => this.classList.remove("loading"))
                    })
                })))
            }

            renderBackdrop() {
                return this.image ? e.dy` <div class="backdrop__image" /> ` : e.dy``
            }

            renderOverlay() {
                return this.overlay ? e.dy`
      <div class="${(0, P.$)({backdrop__overlay: !0, "backdrop__overlay--reveal": this.reveal})}"></div>
    ` : e.dy``
            }

            render() {
                return e.dy` ${this.renderBackdrop()} ${this.renderOverlay()} `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], E.prototype, "image", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], E.prototype, "overlay", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], E.prototype, "reveal", void 0), (0, i.gn)([(0, C.I)(".backdrop__image"), (0, i.w6)("design:type", HTMLImageElement)], E.prototype, "imageElement", void 0), E = (0, i.gn)([(0, f.M)("gu-backdrop")], E);
        var s = n(92436);
        const y = new s.do(G => {
            G.forEach(c => {
                c.target.handleResize()
            })
        });
        let k = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
      }

      /* Make the iframe keep an aspect ratio, and
      position it in the middle of its parent wrapper*/
      iframe {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        width: calc(var(--cw) * 100);
        height: calc(var(--cw) * 56.25);
        /* Given a 16:9 aspect ratio, 9/16*100 = 56.25 */
        min-height: calc(var(--ch) * 100);
        min-width: calc(var(--ch) * 177.77);
        /* Given a 16:9 aspect ratio, 16/9*100 = 177.77 */
      }

      :host([cropFromTop='true']) iframe {
        top: 0;
        transform: translate(-50%, 0%);
      }
    `
            }

            static get properties() {
                return {videoId: {type: String}, cropFromTop: {type: String}, quality: {type: String}}
            }

            firstUpdated() {
                y.observe(this), this.handleResize()
            }

            disconnectedCallback() {
                y.unobserve(this)
            }

            handleResize(c) {
                const ke = .01 * this.offsetHeight;
                this.style.setProperty("--cw", .01 * this.offsetWidth + "px"), this.style.setProperty("--ch", `${ke}px`)
            }

            qualityParam() {
                return this.quality ? `&quality=${this.quality}` : ""
            }

            render() {
                return e.dy`
      <iframe
        src=${`https://player.vimeo.com/video/${this.videoId}?autoplay=1&loop=1&title=0&byline=0&portrait=0&background=1&muted=1${this.qualityParam()}`}
        frameborder="0"
        allow="autoplay; fullscreen"
      ></iframe>
    `
            }
        };
        k = (0, i.gn)([(0, f.M)("gu-background-vimeo-embed")], k);
        var B = n(14879), ce = (n(89534), n(51256), n(72650)), Ee = n(93270), F = n(40010);
        const N = e.iv`
  ${F.W2}

  /* host element establishes 1px outline */
  :host {
    background: ${(0, t.asCssProp)(o.colors.dark[500])};
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  /* golden border */
  :host::before {
    ${(0, t.inset)(1)}
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
    z-index: 1;
  }

  /* inner outline */
  :host::after {
    position: absolute;
    content: ' ';
    ${(0, t.inset)(5, 6)}
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
    z-index: 2;
  }

  /* button content and inner brackground */
  :host .button__content {
    position: absolute;
    ${(0, t.inset)(7, 8)}
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
    z-index: 3;
  }

  .button__icon,
  .button__text {
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .button__icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5.5))};
  }

  .button__text {
    line-height: ${(0, t.asCssProp)("48px")};
  }

  /* Default style */

  :host([type='default'])::before {
    background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host([type='default'])::after {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }

  :host([type='default']) .button__icon,
  :host([type='default']) .button__text {
    background-image: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host([type='default']:hover) .button__content,
  :host([type='default']:active) .button__content {
    background-image: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host([type='default']:hover) .button__text,
  :host([type='default']:hover) .button__icon,
  :host([type='default']:active) .button__text,
  :host([type='default']:active) .button__icon {
    background-image: none;
    background-color: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  /* Inverted style */

  :host([type='inverted'])::before {
    background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host([type='inverted'])::after {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }

  :host([type='inverted']) .button__content {
    background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host([type='inverted']) .button__text,
  :host([type='inverted']) .button__icon {
    background-image: none;
    background-color: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host([type='inverted']:hover) .button__content,
  :host([type='inverted']:active) .button__content {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host([type='inverted']:hover) .button__text,
  :host([type='inverted']:hover) .button__icon,
  :host([type='inverted']:active) .button__text,
  :host([type='inverted']:active) .button__icon {
    background-image: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  /* Flat silver style */

  :host([type='silver'])::before {
    background: ${(0, t.asCssProp)(o.colors.light[500])};
  }

  :host([type='silver'])::after {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host([type='silver']) .button__text {
    background-color: ${(0, t.asCssProp)(o.colors.light[500])};
  }

  :host([type='silver']:hover) .button__content,
  :host([type='silver']:active) .button__content {
    background-color: ${(0, t.asCssProp)(o.colors.light[500])};
  }

  :host([type='silver']:hover) .button__text,
  :host([type='silver']:active) .button__text {
    background-color: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host([type='silver']:active)::after {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    opacity: 0.2;
  }

  /* Flat gold style */

  :host([type='gold'])::before {
    background: ${(0, t.asCssProp)(o.colors.gold[500])};
  }

  :host([type='gold'])::after {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host([type='gold']) .button__text {
    background-color: ${(0, t.asCssProp)(o.colors.gold[500])};
  }

  :host([type='gold']:hover) .button__content,
  :host([type='gold']:active) .button__content {
    background-color: ${(0, t.asCssProp)(o.colors.gold[500])};
  }

  :host([type='gold']:hover) .button__text,
  :host([type='gold']:active) .button__text {
    background-color: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host([type='gold']:active)::after {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    opacity: 0.2;
  }
`;

        class de extends B.o {
            constructor() {
                super(...arguments), this.type = "default"
            }

            static get styles() {
                return N
            }

            renderText() {
                return e.dy`
      <gu-heading-text class="button__text" size="2x-small">
        <slot></slot>
      </gu-heading-text>
    `
            }
        }

        (0, i.gn)([(0, p.C)({reflect: !0}), (0, i.w6)("design:type", String)], de.prototype, "type", void 0), customElements.define("gu-gilded-hex-button", (0, ce.b)((0, Ee.Z)(de))), n(43977);
        let Ae = class extends e.oi {
            constructor() {
                super(...arguments), this.gap = 16, this.layout = "centered", this.visible = !0, this.layouts = {
                    centered: "center",
                    justified: "space-between"
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        justify-content: var(--layout, center);
        align-items: center;
        gap: var(--gap, 16px);
      }

      ${(0, t.asCssProp)((0, t.fadeReveal)(":host", ":host(.visible)"))}
    `
            }

            render() {
                return this.classList.toggle("visible", this.visible), this.style.setProperty("--gap", `${this.gap}px`), this.style.setProperty("--layout", this.layouts[this.layout]), e.dy`<slot></slot>`
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Ae.prototype, "gap", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Ae.prototype, "layout", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Ae.prototype, "visible", void 0), Ae = (0, i.gn)([(0, f.M)("gu-button-group")], Ae), n(1949);
        var W = n(26711);
        const he = e.iv`
  :host {
    display: inline-flex;
    position: relative;
    min-width: var(--gu-button-min-width);
    height: var(--gu-button-height);
    line-height: var(--gu-button-height);

    --gu-button-color: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
    --gu-button-border-width: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
    --gu-button-min-width: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
    --gu-button-height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
    --gu-button-padding-x: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    --gu-button-margin: 0px;
    --gu-button-disabled-color: ${(0, t.asCssProp)(o.colors.dark[500])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.dark[700])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(o.colors.dark[700])};
    --gu-button-font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    --gu-button-font-family: 'Open Sans', sans-serif;
    --gu-button-text-transform: inherit;
    --gu-button-text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.3);
  }

  :host([theme='dark']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(o.colors.apocyan[500])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(o.colors.dark[900])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(o.colors.light[500])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(o.colors.dark[900])};
    --gu-button-secondary-text-shadow: none;

    --gu-button-subtle-background-color: ${(0, t.asCssProp)(o.colors.dark[700])};
    --gu-button-subtle-background-color-hover: ${(0, t.asCssProp)(o.colors.dark[500])};
    --gu-button-subtle-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.dark[700])};
    --gu-button-subtle-border-color-hover: ${(0, t.asCssProp)(o.colors.dark[500])};
    --gu-button-subtle-color: ${(0, t.asCssProp)(o.colors.light[700])};
    --gu-button-subtle-color-hover: ${(0, t.asCssProp)(o.colors.light[500])};
    --gu-button-subtle-text-shadow: var(--gu-button-text-shadow);

    --gu-button-danger-background-color: ${(0, t.asCssProp)(o.colors.god.war.tertiary)};
    --gu-button-danger-background-color-hover: ${(0, t.asCssProp)(o.colors.god.war.secondary)};
    --gu-button-danger-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.god.war.tertiary)};
    --gu-button-danger-border-color-hover: ${(0, t.asCssProp)(o.colors.god.war.secondary)};
    --gu-button-danger-color: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-danger-color-hover: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-danger-text-shadow: var(--gu-button-text-shadow);
  }

  :host([theme='light']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(o.colors.apocyan[500])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-secondary-text-shadow: none;

    --gu-button-subtle-background-color: ${(0, t.asCssProp)(o.colors.light[300])};
    --gu-button-subtle-background-color-hover: ${(0, t.asCssProp)(o.colors.light[500])};
    --gu-button-subtle-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.light[300])};
    --gu-button-subtle-border-color-hover: ${(0, t.asCssProp)(o.colors.light[500])};
    --gu-button-subtle-color: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-subtle-color-hover: ${(0, t.asCssProp)(o.colors.dark[300])};
    --gu-button-subtle-text-shadow: none;

    --gu-button-danger-background-color: ${(0, t.asCssProp)(o.colors.god.war.tertiary)};
    --gu-button-danger-background-color-hover: ${(0, t.asCssProp)(o.colors.god.war.secondary)};
    --gu-button-danger-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.god.war.tertiary)};
    --gu-button-danger-border-color-hover: ${(0, t.asCssProp)(o.colors.god.war.secondary)};
    --gu-button-danger-color: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-danger-color-hover: ${(0, t.asCssProp)(o.colors.light[100])};
    --gu-button-danger-text-shadow: var(--gu-button-text-shadow);

    --gu-button-disabled-color: ${(0, t.asCssProp)(o.colors.light[500])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.light[300])};
    --gu-button-disabled-border: hover var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.light[300])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(o.colors.light[300])};
  }

  :host([theme='gunmetal']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(o.colors.apocyan[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
    --gu-button-secondary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-disabled-color: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
  }

  .standard-button {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    line-height: var(--gu-button-height);
    font-size: var(--gu-button-font-size);
    font-family: var(--gu-button-font-family);
    font-weight: 700;
    color: var(--gu-button-color);
    border-radius: var(--gu-button-border-radius);
    padding: 0px var(--gu-button-padding-x);
    margin: var(--gu-button-margin);
    min-width: calc(var(--gu-button-min-width) - var(--gu-button-padding-x));
    z-index: 3;
    text-decoration-line: none;
    flex-grow: 1;
  }

  .standard-button__loader {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    z-index: 1;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    border-radius: var(--gu-button-border-radius);
  }

  .standard-button__icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
  }

  .standard-button--icon-right .standard-button__icon {
    order: 1;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
    margin-right: 0px;
  }

  .standard-button--icon-only .standard-button__icon {
    position: absolute;
    left: 50%;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(-2))};
    margin-right: 0px;
  }

  .standard-button--primary {
    background-color: var(--gu-button-primary-background-color);
    border: var(--gu-button-primary-border);
    color: var(--gu-button-primary-color);
    text-shadow: var(--gu-button-primary-text-shadow);
  }
  .standard-button--primary .standard-button__loader {
    background-color: var(--gu-button-primary-background-color);
  }

  .standard-button--secondary {
    background-color: var(--gu-button-secondary-background-color);
    border: var(--gu-button-secondary-border);
    color: var(--gu-button-secondary-color);
    text-shadow: var(--gu-button-secondary-text-shadow);
  }
  .standard-button--secondary .standard-button__loader {
    background-color: var(--gu-button-secondary-background-color);
  }

  .standard-button--subtle {
    background-color: var(--gu-button-subtle-background-color);
    border: var(--gu-button-subtle-border);
    color: var(--gu-button-subtle-color);
    text-shadow: var(--gu-button-subtle-text-shadow);
  }
  .standard-button--subtle .standard-button__loader {
    background-color: var(--gu-button-subtle-background-color);
  }

  .standard-button--danger {
    background-color: var(--gu-button-danger-background-color);
    border: var(--gu-button-danger-border);
    color: var(--gu-button-danger-color);
    text-shadow: var(--gu-button-danger-text-shadow);
  }
  .standard-button--danger .standard-button__loader {
    background-color: var(--gu-button-danger-background-color);
  }

  /* Hover states
    ----------------------------------------------------------------------------------- */
  .standard-button--primary:hover {
    background-color: var(--gu-button-primary-background-color-hover);
    border-color: var(--gu-button-primary-border-color-hover);
    color: var(--gu-button-primary-color-hover);
  }
  .standard-button--secondary:hover {
    background-color: var(--gu-button-secondary-background-color-hover);
    border-color: var(--gu-button-secondary-border-color-hover);
    color: var(--gu-button-secondary-color-hover);
  }

  :host([theme='light']) .standard-button--secondary:hover {
    text-shadow: var(--gu-button-text-shadow);
  }

  .standard-button--subtle:hover {
    background-color: var(--gu-button-subtle-background-color-hover);
    border-color: var(--gu-button-subtle-border-color-hover);
    color: var(--gu-button-subtle-color-hover);
  }
  .standard-button--danger:hover {
    background-color: var(--gu-button-danger-background-color-hover);
    border-color: var(--gu-button-danger-border-color-hover);
    color: var(--gu-button-danger-color-hover);
  }

  /* Active states
    ----------------------------------------------------------------------------------- */
  :host([theme='light']) .standard-button:active > * {
    opacity: 0.7;
  }

  :host([theme='dark']) .standard-button:active > * {
    opacity: 0.7;
  }

  :host([theme='gunmetal']) .standard-button:active {
    box-shadow: inset 0px 2px 6px rgba(0, 0, 0, 0.75);
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */

  :host([expand='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }
  :host([expand='true']) .standard-button {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Disabled and Loading states
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']) .standard-button {
    color: var(--gu-button-disabled-color);
    border: var(--gu-button-disabled-border);
    background-color: var(--gu-button-disabled-background-color);
    text-shadow: none;
  }

  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, t.asCssProp)(o.uifx.userSelect("none"))};
  }

  /* Icon coloring rules
    ----------------------------------------------------------------------------------- */
  :host(.standard-button-icon-success) gu-icon {
    --textFillColor: var(--gu-blue);
  }
`;
        let Q = class extends e.oi {
            constructor() {
                super(...arguments), this.loading = !1, this.disabled = !1, this.expand = !1, this.iconPosition = "left", this.iconOnly = !1, this.type = "primary", this.theme = "light"
            }

            static get styles() {
                return he
            }

            renderIcon() {
                return this.icon ? e.dy`<gu-icon iconLigature=${this.icon} class="standard-button__icon"></gu-icon>` : e.dy``
            }

            renderLoader() {
                return !this.loading || this.disabled ? e.dy`` : e.dy` <div class="standard-button__loader">
      <gu-rectangular-spinner color="grey"></gu-rectangular-spinner>
    </div>`
            }

            getClassMap() {
                return {
                    "standard-button": !0,
                    "standard-button--icon-only": this.iconOnly,
                    [`standard-button--icon-${this.iconPosition}`]: !0,
                    [`standard-button--${this.type}`]: !0
                }
            }

            render() {
                return this.href ? e.dy` <a
        ?disabled="${this.disabled}"
        href=${this.href}
        target=${this.target}
        class=${(0, P.$)(this.getClassMap())}
      >
        ${this.renderLoader()} ${this.renderIcon()}
        <div class="standard-button__content">
          <slot data-test-id="standard-button-text-slot"></slot>
        </div>
      </a>` : e.dy` <button ?disabled="${this.disabled}" class=${(0, P.$)(this.getClassMap())}>
        ${this.renderLoader()} ${this.renderIcon()}
        <div class="standard-button__content">
          <slot data-test-id="standard-button-text-slot"></slot>
        </div>
      </button>`
            }
        };
        (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], Q.prototype, "loading", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], Q.prototype, "disabled", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], Q.prototype, "expand", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Q.prototype, "iconPosition", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], Q.prototype, "iconOnly", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Q.prototype, "icon", void 0), (0, i.gn)([(0, p.C)({reflect: !0}), (0, i.w6)("design:type", String)], Q.prototype, "type", void 0), (0, i.gn)([(0, p.C)({reflect: !0}), (0, i.w6)("design:type", String)], Q.prototype, "theme", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Q.prototype, "href", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Q.prototype, "target", void 0), Q = (0, i.gn)([(0, f.M)("gu-standard-button")], Q);
        var te = n(84876), ge = n(25297), ue = n(72985), we = n(58672);
        const xe = {text: {type: String}, href: {type: String}, target: {type: String}},
            We = Object.assign(Object.assign({}, xe), {
                loading: {type: String},
                loadingColor: {type: String},
                disabled: {type: String},
                icon: {type: String},
                leftIconPosition: {type: Boolean},
                size: {type: String},
                enableSounds: {type: Boolean},
                horizontalStretch: {type: String}
            }), Ve = Object.assign(Object.assign({}, xe), {
                color: {type: String},
                loading: {type: String},
                loadingColor: {type: String},
                disabled: {type: String},
                size: {type: String},
                enableSounds: {type: Boolean},
                horizontalStretch: {type: String}
            });
        var ft = n(91418);
        const Bt = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
    flex-grow: 0;
    height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
  }

  .buttonContent--square {
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
    position: relative;
    z-index: 2;
    order: 1;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
  }

  :host([iconColor]) .buttonContent__icon {
    color: var(--iconColor);
  }

  .buttonContent__text {
    position: relative;
    z-index: 2;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    order: 1;
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([horizontalStretch='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0 0;
  }

  /* Button content when layout is vertical
    ----------------------------------------------------------------------------------- */
  .buttonContent--vertical {
    flex-direction: column;
    align-items: center;
    min-width: 70px;
    max-width: 80px;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} ${(0, t.asCssProp)((0, r.gridUnits)(3))};
  }

  .buttonContent--vertical .buttonContent__icon {
    order: 0;
    margin: 0;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
  }

  .buttonContent--vertical .buttonContent__text {
    text-align: center;
  }

  :host([backgroundFillColor='colors.apocyan.500']) {
    text-shadow: 0px 1px 1px rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.black))}, 0.3);
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, t.asCssProp)(o.uifx.userSelect("none"))};
  }

  :host([disabled='true']) {
    filter: grayscale(100%);
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(o.colors.gunmetal[300])};
    color: ${(0, t.asCssProp)(o.colors.light[300])};
  }

  :host(:active) {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(o.colors.light[300])};
    color: ${(0, t.asCssProp)(o.colors.light[100])};
  }

  :host([borderColorHover]:hover),
  :host([borderColorHover]:hover) ::slotted(*) {
    box-shadow: 0px 0px ${(0, t.asCssProp)((0, r.gridUnits)(1))} var(--borderColorHover);
  }

  ${(0, t.asCssProp)(ft.fillColoringRules)}
`, A = 18, q = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: flex;
    flex-grow: 0;
    justify-self: center;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    overflow: hidden;
    cursor: pointer;
    color: ${(0, t.asCssProp)(o.colors.light[100])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(12, 12))};
    ${(0, t.asCssProp)(o.animation.standardTransition("all"))};

    /* NORMAL SIZING BY DEFAULT */
    min-width: 140px;
    height: ${(0, t.asCssProp)("32px")};
    line-height: ${(0, t.asCssProp)("32px")};
  }

  /* The background "fill" color of the button */
  :host::before {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
    ${(0, t.asCssProp)(o.animation.standardTransition("all"))};
  }

  /* "LARGE" SIZE BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([size='large']) {
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(A, A))};
  }

  :host([size='large']) .buttonContent {
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  :host([size='large'])::before {
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  :host([size='large']) .buttonContent__icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5.5))};
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([horizontalStretch='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("12px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
    position: relative;
    z-index: 2;
    order: 2;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
  }

  .buttonContent__text {
    position: relative;
    z-index: 2;
    color: inherit;
    text-shadow: 0 calc(var(--vh) * 0.2) calc(var(--vh) * 0.2) rgba(${(0, t.asCssProp)(o.colors.dark[900])}, 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    align-content: center;
    order: 1;
    gap: 8px;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0 0;
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    filter: grayscale(100%);
    ${(0, t.asCssProp)(o.uifx.userSelect("none"))};
  }

  /*  MOUSE-DOWN FX
    ----------------------------------------------------------------------------------- */
  :host(:active)::after {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, t.asCssProp)(o.gradients.apocyan.simple())};
    opacity: 0.2;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
  }
`, $e = e.iv`
  ${q}

  :host {
    background: none;
    color: var(--gu-blue);
  }

  .waveArtwork {
    display: none;
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    color: var(--gu-blue-hover);
  }
  
  :host(:hover)::before,
  :host(:active)::before,
  :host(:active)::after {
    background: var(--gu-blue-dark);
  }
`, at = e.iv`
  ${q}

  :host {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
  }

  :host::before {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
  }

  :host(:hover)::before {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }
`, qe = (e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: inline-flex;
    justify-content: flex-start;
    cursor: pointer;
  }

  .buttonText {
    color: ${(0, t.asCssProp)(o.colors.apocyan[100])};
    border-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(o.colors.apocyan[100])};
    padding-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) .buttonText {
    border-color: ${(0, t.asCssProp)(o.colors.gold[300])};
    color: ${(0, t.asCssProp)(o.colors.gold[300])};
  }
`, e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}
  ${q}

  :host {
    display: flex;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    cursor: pointer;
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
  }

  :host::before {
    background: none;
  }

  .hexLayer {
    position: absolute;
  }

  .outerKeyline {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: ${(0, t.asCssProp)(o.colors.dark[500])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(A, A))};
  }

  .outerGolden {
    top: 1px;
    bottom: 1px;
    left: 1px;
    right: 1px;
    background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  .innerGunmetal {
    top: 5px;
    bottom: 5px;
    left: 6px;
    right: 6px;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
  }

  .innerButtonFill {
    top: 7px;
    bottom: 7px;
    left: 8px;
    right: 8px;
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    position: relative;
    z-index: 2;
    order: 1;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5.5))};
    ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
  }

  .buttonContent__text {
    display: inline;
    position: relative;
    z-index: 2;
    text-decoration: none;
    line-height: ${(0, t.asCssProp)("48px")};
    order: 1;
    ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0 0;
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) .innerButtonFill,
  :host(:active) .innerButtonFill {
    background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host(:hover) .buttonContent__text,
  :host(:hover) .buttonContent__icon,
  :host(:active) .buttonContent__text,
  :host(:active) .buttonContent__icon {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    background-clip: text;
    -webkit-background-clip: text;
  }

  /*  INVERTED COLORING
  ----------------------------------------------------------------------------------- */
  :host(.invertColoring) .innerButtonFill {
    background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
  }

  :host(.invertColoring) .buttonContent__text,
  :host(.invertColoring) .buttonContent__icon {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    background-clip: text;
    -webkit-background-clip: text;
  }

  /*  INVERTED HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(.invertColoring:hover) .innerButtonFill,
  :host(.invertColoring:active) .innerButtonFill {
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
  }

  :host(.invertColoring:hover) .buttonContent__text,
  :host(.invertColoring:hover) .buttonContent__icon,
  :host(.invertColoring:active) .buttonContent__text,
  :host(.invertColoring:active) .buttonContent__icon {
    ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
  }
`), Ke = o.colors.light[500], Le = o.colors.gold[500], Ue = o.colors.dark[500], Ge = o.colors.dark[900], Oe = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}
  ${q}

  :host {
    display: flex;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    cursor: pointer;
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
  }

  :host::before {
    background: none; // fixing the dark bleed in common-hex-button
  }

  .hexLayer {
    position: absolute;
  }

  .outerKeyline {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: ${(0, t.asCssProp)(Ue)};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(A, A))};
  }

  .outer {
    top: 1px;
    bottom: 1px;
    left: 1px;
    right: 1px;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }
  .outerSilver {
    background-color: ${(0, t.asCssProp)(Ke)};
  }
  .outerGold {
    background-color: ${(0, t.asCssProp)(Le)};
  }

  .innerDark {
    top: 5px;
    bottom: 5px;
    left: 6px;
    right: 6px;
    background: ${(0, t.asCssProp)(o.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
  }

  .innerButtonFill {
    top: 7px;
    bottom: 7px;
    left: 8px;
    right: 8px;
    background: ${(0, t.asCssProp)(Ge)};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  .buttonContent__text {
    display: inline;
    position: relative;
    z-index: 2;
    text-decoration: none;
    line-height: ${(0, t.asCssProp)("48px")};
    order: 1;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .buttonContent__textSilver {
    background-color: ${(0, t.asCssProp)(Ke)};
  }
  .buttonContent__textGold {
    background-color: ${(0, t.asCssProp)(Le)};
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) .innerButtonFillSilver,
  :host(:active) .innerButtonFillSilver {
    background-color: ${(0, t.asCssProp)(Ke)};
  }
  :host(:hover) .innerButtonFillGold,
  :host(:active) .innerButtonFillGold {
    background-color: ${(0, t.asCssProp)(Le)};
  }

  :host(:hover) .buttonContent__text,
  :host(:active) .buttonContent__text {
    background-color: ${(0, t.asCssProp)(Ge)};
    background-clip: text;
    -webkit-background-clip: text;
  }

  :host(:active)::after {
    background: ${(0, t.asCssProp)(Ge)};
    opacity: 0.2;
  }
`, Fe = e.iv`
  ${q}

  :host {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(o.colors.apocyan[100])};
    text-transform: uppercase;
  }

  :host::before {
    display: none;
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }
`;

        function Ye(G, c) {
            return c && "true" !== G ? e.dy` <gu-icon iconLigature=${c} class="buttonContent__icon"></gu-icon> ` : null
        }

        function nt(G, c, $ = "grey") {
            return "true" === c ? e.dy`<gu-rectangular-spinner color=${$}></gu-rectangular-spinner>` : G || e.dy` <slot></slot> `
        }

        const Pe = e.dy`
  <div class="waveArtwork">
    <picture class="waveArtwork__side waveArtwork__side--top">
      <source srcset="/assets/images/hex-button/hex-button--top-wave-art.webp" type="image/webp" />
      <source srcset="/assets/images/hex-button/hex-button--top-wave-art.png" type="image/png" />
      <img src="/assets/images/hex-button/hex-button--top-wave-art.png" />
    </picture>

    <picture class="waveArtwork__side waveArtwork__side--bottom">
      <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.webp" type="image/webp" />
      <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.png" type="image/png" />
      <img src="/assets/images/hex-button/hex-button--bottom-wave-art.png" />
    </picture>
  </div>
`, ut = Object.assign(Object.assign({}, We), {invertColoring: {type: Boolean}});
        customElements.define("gu-special-hex-button", (0, we.x)({
            renderer: function ({
                                    text: G,
                                    loading: c,
                                    loadingColor: $,
                                    icon: z,
                                    leftIconPosition: re,
                                    invertColoring: ke
                                }) {
                return (0, te.d4)(() => {
                    ke ? this.classList.add("invertColoring") : this.classList.remove("invertColoring")
                }, [ke]), e.dy` ${(({icon: G, leftIconPosition: c, text: $, loading: z, loadingColor: re}) => e.dy`
  <i class="hexLayer outerKeyline"></i>
  <i class="hexLayer outerGolden"></i>
  <i class="hexLayer innerGunmetal"></i>
  <i class="hexLayer innerButtonFill"></i>

  <div class=${(0, P.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-heading-text class="buttonContent__text" size="2x-small">
      ${nt($, z, re)}
    </gu-heading-text>
    ${Ye(z, G)}
  </div>
`)({text: G, icon: z, loading: c, loadingColor: $, leftIconPosition: re})} `
            }, baseClass: (0, ue.lH)((0, ue.Am)((0, ue.s)((0, ue.Xg)(ge.J)))), props: {properties: ut, styles: qe}
        })), customElements.define("gu-special-hex-flat-button", (0, we.x)({
            renderer: function ({color: G, text: c, loading: $, loadingColor: z}) {
                return e.dy` ${(({color: G, text: c, loading: $, loadingColor: z}) => {
                    const re = G ? G[0].toUpperCase() + G.slice(1) : "Silver";
                    return e.dy`
    <i class="hexLayer outerKeyline"></i>
    <i class="hexLayer outer outer${re}"></i>
    <i class="hexLayer innerDark"></i>
    <i class="hexLayer innerButtonFill innerButtonFill${re}"></i>

    <div class=${(0, P.$)({buttonContent: !0})}>
      <gu-heading-text class="buttonContent__text buttonContent__text${re}" size="2x-small">
        ${nt(c, $, z)}
      </gu-heading-text>
    </div>
  `
                })({color: G, text: c, loading: $, loadingColor: z})} `
            }, props: {properties: Ve, styles: Oe}, baseClass: (0, ue.Am)((0, ue.s)((0, ue.Xg)(ge.J)))
        })), customElements.define("gu-primary-hex-button", (0, we.x)({
            renderer: function ({text: G, loading: c, loadingColor: $, size: z, icon: re, leftIconPosition: ke}) {
                return e.dy`
    ${Pe} ${(({icon: G, leftIconPosition: c, size: $, text: z, loading: re, loadingColor: ke}) => e.dy`
  <div class=${(0, P.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-heading-text class="buttonContent__text" size=${"large" === $ ? "2x-small" : "3x-small"}>
      ${nt(z, re, ke)}
    </gu-heading-text>
    ${Ye(re, G)}
  </div>
`)({text: G, icon: re, size: z, loading: c, loadingColor: $, leftIconPosition: ke})}
  `
            }, props: {properties: We, styles: $e}, baseClass: (0, ue.lH)((0, ue.Am)((0, ue.s)((0, ue.Xg)(ge.J))))
        })), customElements.define("gu-secondary-hex-button", (0, we.x)({
            renderer: function ({text: G, loading: c, loadingColor: $, icon: z, leftIconPosition: re}) {
                return e.dy` ${(({icon: G, leftIconPosition: c, text: $, loading: z, loadingColor: re}) => e.dy`
  <div class=${(0, P.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-simple-text class="buttonContent__text" kind="small">
      ${nt($, z, re)}
    </gu-simple-text>
    ${Ye(z, G)}
  </div>
`)({text: G, icon: z, loading: c, loadingColor: $, leftIconPosition: re})} `
            }, props: {properties: We, styles: at}, baseClass: (0, ue.Am)((0, ue.s)((0, ue.Xg)(ge.J)))
        })), customElements.define("gu-subtle-hex-button", (0, we.x)({
            renderer: function ({text: G, loading: c, loadingColor: $, size: z, icon: re, leftIconPosition: ke}) {
                return e.dy` ${(({
                                     icon: G,
                                     leftIconPosition: c,
                                     text: $,
                                     loading: z,
                                     loadingColor: re,
                                     size: ke
                                 }) => e.dy`
  <div class=${(0, P.$)({buttonContent: !0, "buttonContent--leftIcon": c})}>
    <gu-heading-text class="buttonContent__text" size=${"large" === ke ? "2x-small" : "3x-small"}>
      ${nt($, z, re)}
    </gu-heading-text>
    ${Ye(z, G)}
  </div>
`)({text: G, icon: re, size: z, loading: c, loadingColor: $, leftIconPosition: ke})} `
            }, props: {properties: We, styles: Fe}, baseClass: (0, ue.Am)((0, ue.s)((0, ue.Xg)(ge.J)))
        }));
        var m = n(5284), U = n(52102);
        const {asCssProp: se} = m.ZB, {gridUnits: Ce} = m.dz, ct = e.iv`
  :host {
    display: inline-flex;
    justify-content: flex-start;
    cursor: pointer;
  }

  :host,
  :host([kind='small']),
  :host([kind='help']) {
    border-bottom: ${se(Ce(.25))} solid;
    padding-bottom: ${se(Ce(.25))};
  }

  :host([kind='large']) {
    border-bottom: ${se(Ce(.5))} solid;
    padding-bottom: ${se(Ce(.25))};
  }

  :host([kind='tag']) {
    border-bottom: ${se(Ce(.5))} solid;
    padding-bottom: ${se(Ce(.25))};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    border-color: ${se(o.colors.gold[300])};
    color: ${se(o.colors.gold[300])};
  }
`;
        let et = class extends ((0, ue.Xg)(U._)) {
            static get styles() {
                const c = [];
                return super.styles && c.push(super.styles), c.push(ct), c
            }

            static get properties() {
                return Object.assign(Object.assign({}, super.properties), xe)
            }
        };
        et = (0, i.gn)([(0, f.M)("gu-simple-text-button")], et);
        const Ht = Object.assign(Object.assign({}, We), {
            iconColor: {type: String},
            fillColor: {type: String},
            fillColorHover: {type: String},
            fillGradient: {type: String},
            fillGradientTarget: {type: String},
            backgroundFillColor: {type: String},
            backgroundFillColorHover: {type: String},
            backgroundFillGradient: {type: String},
            backgroundFillGradientTarget: {type: String},
            borderColor: {type: String},
            borderColorHover: {type: String},
            verticalLayout: {type: Boolean},
            square: {type: Boolean}
        });
        customElements.define("gu-plain-square-button", (0, we.x)({
            renderer: function ({
                                    text: G,
                                    loading: c,
                                    loadingColor: $,
                                    icon: z,
                                    iconColor: re,
                                    leftIconPosition: ke,
                                    fillColor: Be,
                                    fillColorHover: Xe,
                                    fillGradient: Ct,
                                    fillGradientTarget: Zt,
                                    backgroundFillColor: wt,
                                    backgroundFillColorHover: Lt,
                                    backgroundFillGradient: _t,
                                    backgroundFillGradientTarget: Me,
                                    borderColor: De,
                                    borderColorHover: It,
                                    verticalLayout: ot,
                                    square: st
                                }) {
                return (0, te.d4)(() => {
                    (0, g.updateColoringVariables)({
                        component: this,
                        iconColor: re,
                        fillColor: Be,
                        fillColorHover: Xe,
                        fillGradient: Ct,
                        fillGradientTarget: Zt,
                        backgroundFillColor: wt,
                        backgroundFillColorHover: Lt,
                        backgroundFillGradient: _t,
                        backgroundFillGradientTarget: Me,
                        borderColor: De,
                        borderColorHover: It
                    })
                }, [re, Be, Xe, Ct, Zt, wt, Lt, _t, Me, De, It]), e.dy`${(({
                                                                               icon: G,
                                                                               leftIconPosition: c,
                                                                               text: $,
                                                                               loading: z,
                                                                               loadingColor: re,
                                                                               verticalLayout: ke,
                                                                               square: Be
                                                                           }) => e.dy`
  <div
    class=${(0, P.$)({
                    buttonContent: !0,
                    "buttonContent--leftIcon": c,
                    "buttonContent--vertical": ke,
                    "buttonContent--square": Be
                })}
  >
    <gu-paragraph-text class="buttonContent__text" kind=${ke ? "tag" : "small"} fontWeight="bold">
      ${nt($, z, re)}
    </gu-paragraph-text>
    ${Ye(z, G)}
  </div>
`)({icon: z, leftIconPosition: ke, loading: c, loadingColor: $, text: G, verticalLayout: ot, square: st})}`
            }, props: {properties: Ht, styles: Bt}, baseClass: (0, ue.Am)((0, ue.s)((0, ue.Xg)(ge.J)))
        }));
        var Vt = (() => {
            return (G = Vt || (Vt = {})).img2text = "img2text", G.text2img = "text2img", Vt;
            var G
        })();
        let ts = class extends e.oi {
            constructor() {
                super(...arguments), this.direction = Vt.img2text, this.headerSize = "small", this.headerColor = o.colors.light[100], this.textKind = "small", this.textColor = o.colors.light[500], this.backgroundPosition = "top", this.backgroundSize = "contain", this.headerResponsiveSize = [], this.textResponsiveKind = [], this.backgroundImageResponsive = [], this.breakpoint = "medium"
            }

            static get properties() {
                return {
                    background: {type: String},
                    direction: {type: String},
                    header: {type: String},
                    headerSize: {type: String},
                    headerColor: {type: String},
                    text: {type: String},
                    textKind: {type: String},
                    textColor: {type: String},
                    backgroundPosition: {type: String},
                    backgroundSize: {type: String},
                    headerResponsiveSize: {type: Array},
                    textResponsiveKind: {type: Array},
                    backgroundImageResponsive: {type: Array},
                    breakpoint: {type: String}
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
      }
      .flex-box-col {
        display: flex;
        flex-direction: column;
      }
      .character {
        display: flex;
        background-repeat: no-repeat;
        border-bottom: 1px solid ${(0, t.asCssProp)(o.colors.dark[500])};
        align-items: flex-end;
        justify-content: center;
        min-height: 450px;
      }
      .character-text {
        box-sizing: border-box;
        margin: 280px 20px 20px;
        width: 100%;
        padding-left: 20px;
        border-left: 4px solid ${(0, t.asCssProp)(o.colors.gold[500])};
        text-align: left;
      }
      @media only screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping["x-small"])}) ) {
        .character {
          height: 440px;
        }
        .character-text {
          margin: 40px;
        }
      }
    `
            }

            generateBackgroundImageMediaQueries() {
                return this.backgroundImageResponsive.map(({
                                                               breakpoint: c,
                                                               pos: $,
                                                               size: z
                                                           }) => `\n        @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping[c])}) {\n          .character {\n            background-image: ${["x-small", "small"].includes(c) ? "linear-gradient(to bottom, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 1) 80%), " : ""}\n            url('${this.background}') !important;\n            background-position: ${(0, t.asCssProp)($)} !important;\n            background-size: ${(0, t.asCssProp)(z)} !important;\n          }\n        }\n    `).join("\n")
            }

            generateMediaQueries() {
                return `\n      /* DEFINE RESPONSIVE SIZING */\n      ${this.generateBackgroundImageMediaQueries()}\n        @media\n        screen\n        and\n        (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping[this.breakpoint])}) {\n        .character {\n          flex-direction: column !important;\n          align-items: flex-end !important;\n          justify-content: center !important;\n        }\n        .character-img2text {\n          align-items: flex-end !important;\n        }\n        .character-text2img {\n          align-items: flex-start !important;\n        }\n        .character-text {\n          width: 50% !important;\n          margin: 20px !important;\n        }\n        .character-text-img2text {\n          padding-left: 0 !important;\n          border-left: none !important;\n          padding-right: 20px !important;\n          border-right: 4px solid ${(0, t.asCssProp)(o.colors.gold[500])} !important;\n          text-align: right !important;\n        }\n        .character-text-text2img {\n          padding-right: 0 !important;\n          border-right: none !important;\n          padding-left: 20px !important;\n          border-left: 4px solid ${(0, t.asCssProp)(o.colors.gold[500])} !important;\n          text-align: left !important;\n        }\n      }`
            }

            generateAllStyles() {
                return e.dy`<style>
      .character {
        background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 1) 45%),
          url('${this.background}');
        background-color: #000;
        background-position: ${this.backgroundPosition};
        background-size: ${this.backgroundSize};
      }
      ${this.generateMediaQueries()}
    </style>`
            }

            render() {
                return e.dy`
      ${this.generateAllStyles()}
      <div class="character character-${this.direction} ">
        <div class="character-text character-text-${this.direction}">
          <gu-heading-text
            class="character-textAllignment"
            fillcolor="${this.headerColor}"
            size="${this.headerSize}"
            .responsiveSize=${this.headerResponsiveSize}
          >
            ${this.header}
          </gu-heading-text>
          <gu-vertical-space both="medium"></gu-vertical-space>
          <gu-paragraph-text
            class="character-textAllignment"
            fillcolor="${this.textColor}"
            kind="${this.textKind}"
            .responsiveKind=${this.textResponsiveKind}
          >
            ${this.text}
          </gu-paragraph-text>
        </div>
      </div>
    `
            }
        };
        ts = (0, i.gn)([(0, f.M)("gu-card-character")], ts);
        var vt = n(7302), gt = n(49219);
        const ds = G => `https://images.godsunchained.com/cardpack-images--${G}`, ss = G => "undefined" === G || !G;
        let Rt = class extends e.oi {
            constructor() {
                super(...arguments), this.type = "marketing", this.responsiveSrcsetSizes = `${gt.imageQualities.normal}px`
            }

            static get styles() {
                return e.iv`
      :host {
        display: block;
        width: 100%;
      }

      .picture {
        display: block;
        width: 100%;
        padding-bottom: 100%;
        position: relative;
      }

      .picture--marketing {
        padding-bottom: 128%;
      }

      .image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        transition: opacity 0.2s ease-in-out;

        -webkit-touch-callout: none;
        -webkit-user-drag: none;
      }

      :host(.loading) .image {
        opacity: 0;
      }
    `
            }

            update(c) {
                c.has("god") && (this.sanitizedGod = "all" === this.god || "core" === this.god ? "neutral" : this.god), super.update(c)
            }

            updated(c) {
                super.updated(c), this.image && (this.image.complete ? (this.classList.remove("loading", "error"), this.notifyState("loaded")) : (this.classList.remove("error"), this.classList.add("loading"), this.notifyState("loading"), (0, r.waitForImageToLoad)(this.image).then(() => {
                    this.classList.remove("loading", "error"), this.notifyState("loaded")
                }).catch(() => {
                    this.classList.remove("loading"), this.classList.add("error"), this.notifyState("error")
                })))
            }

            notifyState(c) {
                this.dispatchEvent(new CustomEvent(c, {detail: this, bubbles: !1, composed: !1}))
            }

            render() {
                const {type: c, set: $, rarity: z, sanitizedGod: re, responsiveSrcsetSizes: ke} = this;
                return ss(c) || ss($) || ss(re) || ss(z) ? e.dy`` : e.dy`
      <picture class="picture picture--${c}">
        <source
          srcset=${Object.keys(gt.imageQualities).map(Be => {
                    const Xe = gt.imageQualities[Be];
                    return `${ds(c)}/${Xe}/${$}--${re}--${z}.webp ${Xe}w`
                }).join(", ")}
          type="image/webp"
          sizes="${ke}"
        />
        <source
          srcset=${Object.keys(gt.imageQualities).map(Be => {
                    const Xe = gt.imageQualities[Be];
                    return `${ds(c)}/${Xe}/${$}--${re}--${z}.png ${Xe}w`
                }).join(",")}
          type="image/png"
          sizes="${ke}"
        />
        <img
          class="image"
          src="${ds(c)}/${gt.imageQualities.small}/${$}--${re}--${z}.png"
          alt="Card Pack Image"
        />
      </picture>
    `
            }
        };
        (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Rt.prototype, "set", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Rt.prototype, "rarity", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Rt.prototype, "god", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Rt.prototype, "type", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", Object)], Rt.prototype, "responsiveSrcsetSizes", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", String)], Rt.prototype, "sanitizedGod", void 0), (0, i.gn)([(0, C.I)(".image"), (0, i.w6)("design:type", HTMLImageElement)], Rt.prototype, "image", void 0), Rt = (0, i.gn)([(0, f.M)("gu-card-pack-picture")], Rt);
        const ns = (G, c) => `https://card.godsunchained.com/?id=${G}&q=${c}`;
        let Dt = class extends e.oi {
            constructor() {
                super(...arguments), this.quality = 1, this.protoId = 1, this.responsiveSrcsetSizes = `${gt.imageQualities.normal}px`, this.showLoadingState = !1
            }

            updated(c) {
                super.updated(c), (c.has("protoId") || c.has("quality")) && (this.classList.add("loading"), (0, r.waitForImageToLoad)(this.image).then(() => this.classList.remove("loading")))
            }

            render() {
                return e.dy`
      <picture class="picture">
        <source
          srcset=${Object.keys(gt.imageQualities).map(c => {
                    const $ = gt.imageQualities[c];
                    return `${ns(this.protoId, this.quality)}&w=${$} ${$}w`
                }).join(", ")}
          type="image/webp"
          sizes="${this.responsiveSrcsetSizes}"
        />
        <source
          srcset=${Object.keys(gt.imageQualities).map(c => {
                    const $ = gt.imageQualities[c];
                    return `${ns(this.protoId, this.quality)}&w=${$}&png=true ${$}w`
                }).join(", ")}
          type="image/png"
          sizes="${this.responsiveSrcsetSizes}"
        />
        <img
          class="image"
          src="${ns(this.protoId, this.quality)}&w=${gt.imageQualities.small}&png=true"
          alt="Card Pack Image"
        />
      </picture>
      <gu-icon iconLigature="action_hidePassword" class="loadingIcon"></gu-icon>
    `
            }
        };
        Dt.styles = e.iv`
    :host {
      position: relative;
      display: block;
      width: 100%;
    }

    :host(.loading) .image {
      opacity: 0.9;
    }

    :host(.loading) .loadingIcon {
      opacity: 0.9;
    }

    .picture {
      display: block;
      width: 100%;
      padding-bottom: 134.75%; /* ratio of card images is: 1.347583643122677 */
      position: relative;
    }

    .image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .loadingIcon {
      position: absolute;
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      color: ${(0, t.asCssProp)(o.colors.light[100])};
      opacity: 0;
    }
  `, (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Dt.prototype, "quality", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Dt.prototype, "protoId", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], Dt.prototype, "responsiveSrcsetSizes", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], Dt.prototype, "showLoadingState", void 0), (0, i.gn)([(0, C.I)("img.image"), (0, i.w6)("design:type", HTMLImageElement)], Dt.prototype, "image", void 0), Dt = (0, i.gn)([(0, f.M)("gu-card-picture")], Dt);
        var Ps = n(71459), ws = n.n(Ps), Wt = n(49749), os = n(63082), ks = n.n(os);
        const Kt_ALL = "slidesListing__slide", Kt_CURRENT = "slidesListing__slide--currentSlide", me = new s.do(G => {
            G.forEach(c => {
                c.target.handleResize()
            })
        });
        let kt = class extends e.oi {
            constructor() {
                super(...arguments), this.slidesPerView = 1, this.spaceBetween = 0, this.centeredSlides = !1, this.responsiveBreakpoints = [], this.state = {
                    leftLocked: !1,
                    rightLocked: !1,
                    translateRatio: 1,
                    slidesPerView: 1,
                    spaceBetween: 0,
                    specialRemainderSlideActive: !1,
                    lockTranslateX: null,
                    hasRemainderSlide: !1,
                    translateX: 0,
                    startTranslateX: 0,
                    currentSlideIndexes: [],
                    totalSlidesCount: 0,
                    centeredSlides: !1
                }, this.dimensions = {
                    width: 0,
                    height: 0,
                    slideWidth: 0,
                    totalWidth: 0,
                    slideCenteringSideMargin: 0,
                    left: 0,
                    top: 0
                }, this.debouncedResize = ks()(() => {
                    this.layoutSlides(), this.updatePaneClasses(), this.reset()
                }, 500)
            }

            static get styles() {
                return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: block;
        position: relative;
        overflow: hidden;
      }

      .slidesListing {
        display: flex;
        align-items: flex-start;
        height: 100%;
        overflow: hidden;
        position: relative;
        transition: height ${250}ms ease-in-out;
      }

      ::slotted(.slidesListing__slide) {
        display: flex;
        flex-shrink: 0;
        flex-grow: 0;
      }

      ::slotted(.slideListing__slide--currentSlide) {
        z-index: 1;
      }
    `
            }

            static get properties() {
                return {
                    slidesPerView: {type: Number},
                    spaceBetween: {type: Number},
                    centeredSlides: {type: Boolean},
                    responsiveBreakpoints: {type: Array}
                }
            }

            firstUpdated() {
                me.observe(this), this.slidesListingDom = this.shadowRoot.querySelector(".slidesListing"), this.gestureControl = new (ws())(this, {
                    sensitivity: 0,
                    swipeVelocity: 60,
                    passive: !1,
                    capture: !0,
                    startDirectionLoopCount: 1
                }), this.gestureControl.on("pan.prestart", c => {
                    c.sourceEvent instanceof MouseEvent && c.sourceEvent.preventDefault()
                }), this.gestureControl.on("pan.start", c => this.onPanStart(c)), this.gestureControl.on("pan.all", c => this.onPan(c)), this.gestureControl.on("pan.end", c => this.onPanEnd(c)), this.storeSlideDoms(), this.handleResize(), this.updatePaneClasses()
            }

            disconnectedCallback() {
                this.gestureControl.destroy(), me.unobserve(this), super.disconnectedCallback()
            }

            get onLastSlide() {
                const {state: {currentSlideIndexes: c}} = this;
                return this.state.centeredSlides ? c[c.length - 1] >= this.state.totalSlidesCount : c[c.length - 1] >= this.state.totalSlidesCount - 1
            }

            get onFirstSlide() {
                return 0 === this.state.currentSlideIndexes[0]
            }

            get isMultiSlide() {
                return this.state.slidesPerView > 1
            }

            get hasRemainderSlide() {
                return this.state.slidesPerView - Math.floor(this.state.slidesPerView) != 0
            }

            layoutSlides() {
                this.slidesListingDom.style.width = `${this.dimensions.totalWidth + 2 * this.dimensions.slideCenteringSideMargin}px`, Wt.p8.set(this.slideDoms, {
                    width: this.dimensions.slideWidth,
                    marginLeft: c => this.state.centeredSlides && 0 === c ? this.dimensions.slideCenteringSideMargin : 0,
                    marginRight: c => c === this.state.totalSlidesCount - 1 ? this.dimensions.slideCenteringSideMargin : this.state.spaceBetween
                })
            }

            onPanStart(c) {
                this.slidesListingDom.style.cursor = "grabbing", this.direction = null, this.state.startTranslateX = 0 === this.state.currentSlideIndexes[0] ? 0 : this.state.translateX, this.state.translateX = 0, this.state.rightLocked = !1, this.state.leftLocked = !1, this.setXTrans("left", 0)
            }

            onPan(c) {
                this.setXTrans(c.deltaX < 0 ? "left" : "right", c.deltaX)
            }

            setXTrans(c, $) {
                this.direction = c;
                let z = 1;
                const re = $ * z, ke = this.state.startTranslateX + re;
                "right" === c && ke >= 0 ? this.state.rightLocked || (this.state.lockTranslateX = re, this.state.rightLocked = !0) : this.state.rightLocked = !1, "left" === c && this.dimensions.totalWidth - this.dimensions.width + ke + 2 * this.dimensions.slideCenteringSideMargin <= 0 ? this.state.leftLocked || (this.state.lockTranslateX = re, this.state.leftLocked = !0) : this.state.leftLocked = !1, z = this.state.leftLocked || this.state.rightLocked ? .1 : 1;
                let Xe = this.state.startTranslateX + re;
                (this.state.rightLocked || this.state.leftLocked) && (Xe = this.state.startTranslateX + this.state.lockTranslateX + ($ - this.state.lockTranslateX) * z), this.state.translateX = Xe, this.drawFrame()
            }

            onPanEnd(c) {
                console.log("!!!!!!!! PAN END"), this.slidesListingDom.style.cursor = null;
                const $ = Math.abs(this.state.translateX - this.state.startTranslateX),
                    z = this.state.slidesPerView > 1 ? .8 : .5;
                let re = Math.abs($) / (this.dimensions.slideWidth * z);
                return !this.state.centeredSlides && !this.onLastSlide && Math.abs(this.state.translateX - this.dimensions.width) >= this.dimensions.totalWidth ? this.nextSlides(null, [this.state.totalSlidesCount - 2, this.state.totalSlidesCount - 1, this.state.totalSlidesCount]) : (!this.state.centeredSlides && this.onLastSlide && this.state.hasRemainderSlide && (re = re >= .5 ? 1 : re), Math.floor(re) >= 1 ? this.state.translateX < this.state.startTranslateX ? this.nextSlides(Math.floor(re)) : this.prevSlides(Math.floor(re)) : c.isSwipe ? "right" === c.swipeDirection ? this.prevSlides(1) : "left" === c.swipeDirection ? this.nextSlides(1) : null : this.reset())
            }

            drawFrame() {
                this.resetAnimation && this.resetAnimation.kill(), Wt.p8.set(this.slidesListingDom, {x: this.state.translateX})
            }

            onSlotChange(c) {
                this.storeSlideDoms(), this.updatePaneClasses(), this.setCarouselHeight()
            }

            storeSlideDoms() {
                const c = this.shadowRoot.getElementById("slidesSlot");
                this.slideDoms = c.assignedElements(), this.state.totalSlidesCount = this.slideDoms.length
            }

            updatePaneClasses() {
                this.slideDoms.forEach((c, $) => {
                    c.classList.remove(Kt_ALL, Kt_CURRENT), c.classList.add(Kt_ALL), -1 !== this.state.currentSlideIndexes.indexOf($) && c.classList.add(Kt_CURRENT)
                })
            }

            getTransToLastSlide() {
                return -1 * (this.dimensions.totalWidth - this.dimensions.width + 2 * this.dimensions.slideCenteringSideMargin)
            }

            getTransToFirstSlide() {
                const c = this.state.currentSlideIndexes[0];
                return -1 * (c * this.dimensions.slideWidth + this.state.spaceBetween * c)
            }

            reset({duration: c = .25, specialResetForEndOfSlides: $ = !1} = {}) {
                $ && (this.state.specialRemainderSlideActive = $);
                let z = this.state.specialRemainderSlideActive ? this.getTransToLastSlide() : this.getTransToFirstSlide();
                this.state.centeredSlides && this.onLastSlide && (z = this.getTransToLastSlide()), z !== this.state.translateX && (this.state.translateX = z, this.resetAnimation = Wt.p8.to(this.slidesListingDom, {
                    duration: c,
                    x: this.state.translateX,
                    ease: "power2.inOut"
                })), this.setCarouselHeight()
            }

            setCarouselHeight() {
                if (this.state.centeredSlides) return !1;
                const c = this.getMaxCurrentSlideHeight();
                this.slidesListingDom.style.height = `${c}px`
            }

            getMaxCurrentSlideHeight() {
                return this.state.currentSlideIndexes.reduce(($, z) => {
                    const re = this.slideDoms[z];
                    return $ < re.offsetHeight ? re.offsetHeight : $
                }, 0)
            }

            emitSlideChange(c) {
                let $ = this.state.currentSlideIndexes;
                this.state.centeredSlides && ($ = $.map(this.onFirstSlide ? (z, re) => 0 === re ? null : z - 1 : this.onLastSlide ? (z, re) => re === $.length - 1 ? null : z : (z, re) => z - 1)), this.dispatchEvent(new CustomEvent("onSlideChange", {
                    detail: {
                        direction: c,
                        currentActiveSlides: $,
                        atEnd: this.onLastSlide,
                        atStart: this.onFirstSlide
                    }
                }))
            }

            incrementCurrentIndexes(c, $) {
                this.state.currentSlideIndexes = c || this.state.currentSlideIndexes.map(z => null === z ? 0 : z + $)
            }

            assignResponsiveVariables(c) {
                const $ = this.responsiveBreakpoints.filter(z => {
                    const re = parseInt(S.breakpointSizeMapping[z.minWidth], 10);
                    return c >= re
                }).sort((z, re) => {
                    const ke = parseInt(S.breakpointSizeMapping[z.minWidth], 10);
                    return parseInt(S.breakpointSizeMapping[re.minWidth], 10) - ke
                })[0];
                if ($) {
                    const {slidesPerView: z, spaceBetween: re, minWidth: ke} = $,
                        Be = parseInt(S.breakpointSizeMapping[ke], 10);
                    c >= Be && ("number" == typeof z && (this.state.slidesPerView = z), "number" == typeof re && (this.state.spaceBetween = re))
                } else this.state.slidesPerView = this.slidesPerView, this.state.spaceBetween = this.spaceBetween;
                1 === this.state.slidesPerView ? (this.state.spaceBetween = 0, this.state.centeredSlides = !1) : this.state.centeredSlides = this.centeredSlides, this.state.currentSlideIndexes.length !== Math.ceil(this.state.slidesPerView) && (this.state.currentSlideIndexes = Array(Math.ceil(this.state.slidesPerView)).fill(0).map((z, re) => re))
            }

            nextSlides(c = 1, $) {
                if (this.onLastSlide) return $ && this.incrementCurrentIndexes($), this.reset({specialResetForEndOfSlides: !0});
                this.incrementCurrentIndexes($, c), this.state.translateX = this.state.startTranslateX + (this.dimensions.slideWidth + this.state.spaceBetween) * c * -1, Wt.p8.to(this.slidesListingDom, {
                    duration: .25,
                    x: this.state.translateX,
                    ease: "power2.inOut",
                    onComplete: () => {
                        this.reset(), this.updatePaneClasses(), this.emitSlideChange(this.direction)
                    }
                })
            }

            prevSlides(c = 1, $) {
                if (this.onFirstSlide || this.state.specialRemainderSlideActive) return this.state.specialRemainderSlideActive = !1, this.reset();
                this.incrementCurrentIndexes($, -1 * c), this.state.translateX = this.state.startTranslateX + (this.dimensions.slideWidth + this.state.spaceBetween) * c, Wt.p8.to(this.slidesListingDom, {
                    duration: .25,
                    x: this.state.translateX,
                    ease: "power2.inOut",
                    onComplete: () => {
                        this.reset(), this.updatePaneClasses(), this.emitSlideChange(this.direction)
                    }
                })
            }

            gotoSlide(c) {
                if (c < 0 || c > this.state.totalSlidesCount - 1 || this.state.centeredSlides) return console.error("Error! Application requested a bad slide index:", c), !1;
                this.state.currentSlideIndexes = this.state.currentSlideIndexes.map(() => c).map(($, z) => $ + z), this.reset(), this.emitSlideChange()
            }

            handleResize() {
                const {width: c, height: $, left: z, top: re} = this.getBoundingClientRect();
                this.assignResponsiveVariables(c);
                const ke = Math.floor(c - this.state.spaceBetween * (this.state.slidesPerView - 1)),
                    Be = Math.floor(ke / this.state.slidesPerView),
                    Xe = Math.floor(this.state.totalSlidesCount * Be + this.state.spaceBetween * (this.state.totalSlidesCount - 1)),
                    Ct = this.state.centeredSlides ? Math.floor(.5 * (c - Be)) : 0;
                this.dimensions = {
                    width: c,
                    height: $,
                    slideWidth: Be,
                    totalWidth: Xe,
                    slideCenteringSideMargin: Ct,
                    left: z,
                    top: re
                }, this.debouncedResize(this.dimensions)
            }

            render() {
                return e.dy`
      <div class="slidesListing">
        <slot id="slidesSlot" @slotchange=${this.onSlotChange}></slot>
      </div>
    `
            }
        };
        kt = (0, i.gn)([(0, f.M)("gu-carousel")], kt);
        var Ys = n(89728), Es = n(19444);
        const us = "20px";
        let Os = class extends e.oi {
            constructor() {
                super(...arguments), this.labelText = "", this.size = "normal", this.checked = !1, this.labelPlacement = "left", this.id = "", this.kind = "tag"
            }

            static get properties() {
                return {
                    kind: {type: String},
                    iconLigature: {type: String},
                    labelText: {type: String},
                    size: {type: String},
                    checked: {type: Boolean},
                    labelPlacement: {type: String},
                    id: {type: String}
                }
            }

            static get styles() {
                return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  /* DEFAULTS ARE SMALL AND LEFT LABEL PLACEMENT */
  :host {
    display: flex;
    align-items: center;
    position: relative;
    min-height: ${(0, t.asCssProp)(us)};
  }

  :host([size='large']) .checkmark {
    font-size: 20px;
    width: ${(0, t.asCssProp)("30px")};
    height: ${(0, t.asCssProp)("30px")};
  }

  :host([size='large']) .label {
    font-size: ${(0, t.asCssProp)(o.typography.simpleTextSizeMapping.small)};
  }

  :host([labelPlacement='right']) .checkboxLabel {
    padding-right: 15px;
    order: 1;
  }

  :host([labelPlacement='right']) .checkmark {
    order: 2;
    margin-left: auto;
    margin-right: 0;
  }

  :host(:hover) .checkmark {
    border-color: ${(0, t.asCssProp)(o.colors.gunmetal[300])};
  }

  .input {
    cursor: pointer;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    display: block;
    margin: 0;
  }

  .checkmark {
    width: ${(0, t.asCssProp)(us)};
    height: ${(0, t.asCssProp)(us)};
    border: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
    display: flex;
    flex-shrink: 0;
    font-size: 16px;
    margin-right: 15px;
    ${(0, t.asCssProp)(o.uifx.userSelect("none"))}
  }

  .label {
    position: relative;
  }

  .input:checked ~ .checkmark {
    border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
  }

  /*
  .input:checked ~ .label {
    color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
  }

  .input:checked ~ .checkmark {
    color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
  }
  */
`
            }

            onCheck() {
                this.checked = !this.checked, this.dispatchEvent(new CustomEvent("onCheck", {detail: {checked: this.checked}}))
            }

            render() {
                const {onCheck: c, checked: $, labelText: z, kind: re} = this, ke = (0, Es.v4)();
                return e.dy`
      <input id=${ke} type="checkbox" class="input" @change=${c} .checked=${$} />
      <gu-icon class="checkmark" iconLigature=${this.checked ? "checkbox_tick" : ""}></gu-icon>
      ${void 0 !== z ? e.dy`
            <label for=${ke} class="label">
              <gu-simple-text .kind=${re}> ${(0, Ys.A)(z)} </gu-simple-text>
            </label>
          ` : ""}
    `
            }
        };
        Os = (0, i.gn)([(0, f.M)("gu-checkbox-input")], Os), n(62701);
        const Js = ["days", "hours", "minutes", "seconds"];
        let Et = class extends e.oi {
            constructor() {
                super(...arguments), this.darkBackground = !1, this.targetTime = 1755790779, this.showFields = Js, this.size = "large", this.simpleTextDisplay = !1, this.simpleTextKind = "small", this.padZeroes = !1, this.getDelta = () => new Date(1e3 * this.targetTime).getTime() - (new Date).getTime(), this.getTimeRemaining = () => {
                    const c = this.getDelta();
                    let $ = Math.floor(c / 864e5), z = Math.floor(c % 864e5 / 36e5), re = Math.floor(c % 36e5 / 6e4),
                        ke = Math.floor(c % 6e4 / 1e3);
                    return $ = $ < 0 ? 0 : $, z = z < 0 ? 0 : z, re = re < 0 ? 0 : re, ke = ke < 0 ? 0 : ke, {
                        seconds: this.addPadding(`${ke}`),
                        minutes: this.addPadding(`${re}`),
                        hours: this.addPadding(`${z}`),
                        days: this.addPadding(`${$}`)
                    }
                }, this.addPadding = c => c.length < 2 && this.padZeroes ? `0${c}` : c, this.getHeadingTextSize = c => "small" === c ? "small" : "large", this.getDividerHeadingTextSize = c => "small" === c ? "large" : "x-large", this.getSimpleTextKind = c => "small" === c ? "micro" : "small"
            }

            update(c) {
                c.has("targetTime") && this.initializeCounter(), c.has("simpleTextDisplay") && (this.simpleTextDisplay ? this.classList.add("simpleTextMode") : this.classList.remove("simpleTextMode")), super.update(c)
            }

            disconnectedCallback() {
                clearInterval(this.timer)
            }

            initializeCounter() {
                this.timeLeft = this.getTimeRemaining(), clearInterval(this.timer), this.timer = window.setInterval(() => {
                    this.timeLeft = this.getTimeRemaining(), this.getDelta() < 0 && (clearInterval(this.timer), this.dispatchEvent(new CustomEvent("onCountdownComplete")))
                }, 1e3)
            }

            maybePluralise(c, $) {
                return 1 === c ? $.replace(/s$/, "") : $
            }

            render() {
                return void 0 === this.timeLeft ? e.dy`` : ((0, g.updateColoringVariables)({
                    component: this,
                    fillColor: this.fillColor
                }), this.simpleTextDisplay ? e.dy`
          ${this.showFields.map((c, $) => e.dy` <gu-simple-text
              fillColor=${this.fillColor}
              .kind=${this.simpleTextKind}
              align="center"
            >
              ${this.timeLeft[c]}
              ${$ < this.showFields.length - 1 ? e.dy`<span class="simpleTextDivider"> : </span>` : null}
            </gu-simple-text>`)}
        ` : e.dy`
          ${this.showFields.map((c, $) => e.dy`
              <div
                class=${(0, P.$)({digit: !0, [`digit--${this.size}`]: !0, darkBackground: this.darkBackground})}
              >
                <gu-heading-text size=${this.getHeadingTextSize(this.size)}> ${this.timeLeft[c]} </gu-heading-text>
                <gu-simple-text
                  fillColor=${this.fillColor}
                  kind=${this.getSimpleTextKind(this.size)}
                  align="center"
                  class="label"
                  .text=${this.maybePluralise(parseInt(this.timeLeft[c], 10), c)}
                ></gu-simple-text>
              </div>
              ${$ < this.showFields.length - 1 ? e.dy`<gu-heading-text
                    class="divider divider--${this.size}"
                    size=${this.getDividerHeadingTextSize(this.size)}
                    >:</gu-heading-text
                  >` : null}
            `)}
        `)
            }
        };
        Et.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}

    :host {
      display: flex;
      align-items: center;
    }

    :host(.simpleTextMode) {
      display: inline-flex;
    }

    .divider {
      color: ${(0, t.asCssProp)(o.colors.gold[500])};
      margin: ${(0, t.asCssProp)((0, r.gridUnits)(-11))} ${(0, t.asCssProp)((0, r.gridUnits)(.5))} 0;
      line-height: 1;
    }

    .divider--small {
      margin: ${(0, t.asCssProp)((0, r.gridUnits)(-9))} ${(0, t.asCssProp)((0, r.gridUnits)(.5))} 0;
    }

    .divider:last-child {
      display: none;
    }
    .label {
      text-transform: uppercase;
    }

    .digit {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .digit > gu-heading-text {
      width: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      height: ${(0, t.asCssProp)((0, r.gridUnits)(22))};
      line-height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      background: url('/assets/images/countdown-timer/ui-embellishments--digit-background.svg') no-repeat;
      background-size: contain;
      background-position: center top;
      text-align: center;
    }

    .digit.darkBackground > gu-heading-text {
      background: url('/assets/images/countdown-timer/ui-embellishments--digit-dark-background.svg') no-repeat;
      background-size: contain;
      background-position: center top;
    }

    .digit--large > gu-heading-text {
      width: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      height: ${(0, t.asCssProp)((0, r.gridUnits)(22))};
      line-height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    }

    .digit--small > gu-heading-text {
      width: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      height: ${(0, t.asCssProp)((0, r.gridUnits)(17))};
      line-height: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
    }
  `, (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Boolean)], Et.prototype, "darkBackground", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Et.prototype, "targetTime", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Array)], Et.prototype, "showFields", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Et.prototype, "fillColor", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Et.prototype, "size", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Boolean)], Et.prototype, "simpleTextDisplay", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Et.prototype, "simpleTextKind", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Boolean)], Et.prototype, "padZeroes", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], Et.prototype, "timeLeft", void 0), Et = (0, i.gn)([(0, f.M)("gu-countdown-timer")], Et);
        const Ms = (0, t.asCssProp)(`${o.measurements.standardBorderSize} solid ${o.colors.gold[500]}`);
        let $s = class extends e.oi {
            constructor() {
                super(...arguments), this.expanded = !1, this.selectedId = "", this.items = [], this.placeholderText = ""
            }

            static get styles() {
                return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: block;
    position: relative;
  }

  .dropdownToggle {
    display: block;
    cursor: pointer;
    border-bottom: ${Ms};
    ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
  }

  .dropdownToggle--expanded {
  }

  .dropdownMenu {
    position: absolute;
    height: 0px;
    right: 0;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    ${(0, t.asCssProp)(o.animation.standardTransition("height"))}
  }

  .dropdownMenu--expanded {
    height: auto;
    background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    border-right: ${Ms};
    padding: ${(0, t.asCssProp)(`${m.dz.gridUnits(2)}`)} 0;
    z-index: 1;
  }

  .dropdownMenu__item {
    padding: ${(0, t.asCssProp)(`${m.dz.gridUnits(2)} ${m.dz.gridUnits(4)};`)};
    cursor: pointer;
    margin: 0;
    white-space: nowrap;
    text-align: right;
  }

  .dropdownMenu__item--selected {
    ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
  }

  .dropdownMenu__item:hover {
    color: ${(0, t.asCssProp)(o.colors.light[100])};
  }
`
            }

            static get properties() {
                return {
                    expanded: {type: Boolean},
                    selectedId: {type: String},
                    items: {type: Array},
                    placeholderText: {type: String}
                }
            }

            toggleMenu(c) {
                c.stopPropagation(), this.expanded = !this.expanded
            }

            get selectedItem() {
                return this.items ? this.items.find(c => c.id === this.selectedId) : null
            }

            selectDropDownItem(c) {
                this.selectedId = c, this.expanded = !1, this.dispatchEvent(new CustomEvent("onSelect", {detail: {item: this.selectedItem}}))
            }

            render() {
                return e.dy`
      <gu-simple-text
        class=${(0, P.$)({dropdownToggle: !0, "dropdownToggle--expanded": this.expanded})}
        @click=${this.toggleMenu}
        kind="tag"
      >
        <gu-vertical-space bottom="x-small">
          ${this.selectedItem ? this.selectedItem.name : this.placeholderText}
        </gu-vertical-space>
      </gu-simple-text>

      <div
        class=${(0, P.$)({dropdownMenu: !0, "dropdownMenu--expanded": this.expanded})}
      >
        ${this.items.map(c => e.dy`
            <gu-simple-text
              class=${(0, P.$)({dropdownMenu__item: !0, "dropdownMenu__item--selected": c.id === this.selectedId})}
              @click=${() => this.selectDropDownItem(c.id)}
              kind="tag"
            >
              ${c.name}
            </gu-simple-text>
          `)}
      </div>
    `
            }
        };
        $s = (0, i.gn)([(0, f.M)("gu-dropdown")], $s), n(99454);
        let hs = class extends e.oi {
            constructor() {
                super(...arguments), this.time = ""
            }

            static get styles() {
                return e.iv`
      :host {
        width: 84px;
      }
    `
            }

            start() {
                this.timer || (this.updateTime(), this.timer = setInterval(() => this.updateTime(), 1e3))
            }

            updateTime() {
                const c = new Date, $ = Math.floor((this.target.getTime() - c.getTime()) / 1e3), z = [];
                $ > 604800 && z.push(this.withUnit(Math.floor($ / 604800), "w")), $ > 86400 && z.push(this.withUnit(Math.floor($ % 604800 / 86400), "d")), $ > 3600 && z.push(this.withUnit(Math.floor($ % 86400 / 3600), "h")), $ > 60 && z.push(this.withUnit(Math.floor($ % 3600 / 60), "min")), z.push(this.withUnit($ % 60, "s")), this.time = z.join(" "), this.requestUpdate("time")
            }

            withUnit(c, $) {
                return `${Math.max(c, 0)}${$}`
            }

            stop() {
                this.timer && clearInterval(this.timer), this.time = "", this.timer = void 0, this.requestUpdate("time")
            }

            render() {
                return this.target ? this.start() : this.stop(), e.dy`${this.time}`
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Date)], hs.prototype, "target", void 0), hs = (0, i.gn)([(0, f.M)("gu-game-mode-timer")], hs);
        let zt = class extends e.oi {
            constructor() {
                super(...arguments), this.isRunning = !1, this.complete = !1, this.type = "", this.images = {
                    "": "",
                    tutorial: "/assets/images/game-modes/options/tutorial.png",
                    solo: "/assets/images/game-modes/options/solo.png",
                    "server-solo": "/assets/images/game-modes/options/solo.png",
                    ranked: "/assets/images/game-modes/options/ranked.png",
                    sealed: "/assets/images/game-modes/options/ranked.png",
                    "direct-challenge": "/assets/images/game-modes/options/direct-challenge.png"
                }
            }

            static get styles() {
                return e.iv`
      :host {
        height: 100%;
        display: flex;
        place-content: stretch stretch;
        overflow: hidden;
        margin: 0 0 0 -8px;
        padding: 0 8px;
      }

      .game-mode-options {
        display: flex;
        flex: 1 1 auto;
        flex-direction: column;
        background: linear-gradient(
            180deg,
            rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.gunmetal[900]))}, 0.7) 0%,
            #0c1620 100%
          ),
          var(--image, ''), ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        background-size: cover;
        background-position: center;
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
        place-content: stretch stretch;
        opacity: 1;
        transition: opacity 0.25s ease, transform 0.25s cubic-bezier(0.42, 0.01, 0.54, 1.31);
        overflow: hidden;
        padding: 12px;
      }

      .game-mode-options--hidden {
        opacity: 0;
        transform: translateX(100%);
      }

      .game-mode-options__actions {
        margin: 16px 0 0 0;
      }

      .game-mode-options__scroll-area {
        flex: 1 1 auto;
        overflow: hidden;
        overflow-y: scroll;
        display: flex;
        flex-direction: column;
        place-content: stretch flex-start;
        margin: -12px -8px -12px -12px;
        padding: 12px 4px 12px 12px;
        -webkit-mask-image: linear-gradient(0deg, transparent, black 16px, black calc(100% - 16px), transparent);
      }

      ${(0, t.asCssProp)((0, t.styleScrollbars)(".game-mode-options__scroll-area"))}

      .game-mode-options__timer,
      .game-mode-options__description {
        margin: 4px 0;
      }

      .game-mode-options__extra {
        vertical-align: baseline;
        transform: translateY(3px) scale(90%);
      }
    `
            }

            startGame() {
                this.dispatchEvent(new CustomEvent("startGame", {detail: Object.assign({}, this.gameMode)}))
            }

            renderStartButton() {
                return e.dy`
      <gu-button-group class="game-mode-options__actions">
        <gu-gilded-hex-button
          data-test-id="launch-game-cta"
          size="large"
          .disabled=${this.isRunning || !this.complete}
          .loading=${this.isRunning}
          @click=${this.startGame}
        >
          Start
        </gu-gilded-hex-button>
      </gu-button-group>
    `
            }

            renderActions() {
                return this.renderStartButton()
            }

            renderHeader() {
                var c, $, z, re;
                return e.dy`
      <gu-vertical-space bottom="small" data-test-id="game-mode-options-header">
        <gu-heading-text
          class="game-mode-options__title"
          size="x-small"
          data-test-id="game-mode-title"
          fillGradient="gradients.gold.simple"
        >
          ${null !== ($ = null === (c = this.gameMode) || void 0 === c ? void 0 : c.name) && void 0 !== $ ? $ : ""} ${this.renderTitleExtras()}
        </gu-heading-text>
        ${this.renderCountdownTimer()}
        <gu-paragraph-text
          class="game-mode-options__description"
          kind="micro"
          fillColor="white"
          data-test-id="game-mode-description"
        >
          ${null !== (re = null === (z = this.gameMode) || void 0 === z ? void 0 : z.description) && void 0 !== re ? re : ""}
        </gu-paragraph-text>
      </gu-vertical-space>
    `
            }

            renderCountdownTimer() {
                var c, $;
                return null !== ($ = null === (c = this.gameMode) || void 0 === c ? void 0 : c.expiry) && void 0 !== $ && $ ? Math.floor((this.gameMode.expiry.getTime() - (new Date).getTime()) / 1e3) > 7776e3 ? e.dy`` : e.dy`
      <gu-paragraph-text
        class="game-mode-options__timer"
        kind="micro"
        fontWeight="bold"
        fillColor="${(0, t.asCssProp)(o.colors.gunmetal[100])}"
      >
        <gu-game-mode-timer .target=${this.gameMode.expiry} data-test-id="game-mode-timer"></gu-game-mode-timer>
      </gu-paragraph-text>
    ` : e.dy``
            }

            renderTitleExtras() {
                var c, $;
                return null !== ($ = null === (c = this.gameMode) || void 0 === c ? void 0 : c.ranked) && void 0 !== $ && $ ? e.dy`<gu-icon class="game-mode-options__extra" iconLigature="flux_symbol"></gu-icon>` : e.dy``
            }

            render() {
                var c;
                return this.gameMode && (this.type = this.gameMode.key), this.style.setProperty("--image", `url(${null !== (c = this.images[this.type]) && void 0 !== c ? c : ""})`), e.dy`
      <div
        class=${(0, P.$)({
                    "game-mode-options": !0,
                    [`game-mode-options--${this.type}`]: "" !== this.type,
                    "game-mode-options--hidden": "" === this.type
                })}
      >
        <div class="game-mode-options__scroll-area">
          ${this.renderHeader()}
          <slot class="game-mode-options__body" data-test-id="game-mode-options-body"></slot>
        </div>
        ${this.renderActions()}
      </div>
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], zt.prototype, "gameMode", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], zt.prototype, "isRunning", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], zt.prototype, "error", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], zt.prototype, "complete", void 0), zt = (0, i.gn)([(0, f.M)("gu-game-mode-panel")], zt);
        let ms = class extends e.oi {
            constructor() {
                super(...arguments), this.gameModes = [], this.images = {
                    tutorial: "/assets/images/game-modes/selector/tutorial.png",
                    solo: "/assets/images/game-modes/selector/solo.png",
                    "server-solo": "/assets/images/game-modes/selector/solo.png",
                    ranked: "/assets/images/game-modes/selector/ranked.png",
                    sealed: "/assets/images/game-modes/selector/ranked.png",
                    "direct-challenge": "/assets/images/game-modes/selector/direct-challenge.png"
                }
            }

            static get properties() {
                return {gameModes: {type: Array}, active: {type: Object}}
            }

            static get styles() {
                return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        width: 100%;
        height: 100%;
        display: block;
        overflow-y: scroll;
      }

      :host::-webkit-scrollbar {
        display: none;
      }

      .game-modes {
        display: flex;
        flex-direction: column;
        padding: 4px 12px 4px 8px;
        margin: 0;
        position: relative; // apply stacking context on iOS, thereby avoiding scrolling issues
        z-index: 1; // apply stacking context on iOS, thereby avoiding scrolling issues
      }

      .game-mode-tile {
        display: block;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        border-radius: 4px;
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);
        background-position: center center;
        background-size: cover;
        margin: 4px 0;
        transition: transform 0.5s ease;
        user-select: none;
      }

      .game-mode-tile--active {
        transform: translateX(4px);
      }

      .game-mode-tile--active .game-mode-tile__link {
        border: 1px solid #54bbcd;
        box-shadow: 0 0 8px #8be1e0;
      }

      .game-mode-tile__link {
        display: block;
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        background: linear-gradient(270deg, rgba(15, 27, 39, 0.2) 0%, rgba(15, 27, 39, 0.7) 43.4%, #0f1b27 100%);
        padding: 8px 12px 8px 12px;
        border-radius: 4px;
        text-decoration: none;
        height: 54px;
        position: relative;

        -webkit-touch-callout: none;
        -webkit-user-drag: none;
      }

      .game-mode-tile__title {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0 0 8px 0;
      }

      .game-mode-tile__title,
      .game-mode-tile__description {
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.75);
      }

      .game-mode-tile__description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .game-mode-tile__extra {
        position: absolute;
        font-size: 24px;
        right: 4px;
        top: 4px;
        text-color: black;
        background: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
        border-radius: 4px;
        padding: 2px;
      }

      ${(0, t.asCssProp)((0, t.listReveal)(".game-mode-tile"))}
    `
            }

            onClick(c) {
                this.active = c, this.dispatchEvent(new CustomEvent("gameModeSelection", {
                    detail: c,
                    bubbles: !0,
                    composed: !0
                }))
            }

            renderTile(c) {
                var $;
                return e.dy`
      <li
        class=${(0, P.$)({"game-mode-tile": !0, "game-mode-tile--active": this.active && this.active.key === c.key})}
        style="background-image: url(${null !== ($ = this.images[c.key]) && void 0 !== $ ? $ : this.images.solo});"
      >
        <a
          class="game-mode-tile__link"
          data-test-id="game-mode-tile-link"
          href="javascript:void(0)"
          @click=${() => this.onClick(c)}
        >
          <gu-heading-text class="game-mode-tile__title" size="2x-small" fillColor="${o.colors.light[100]}">
            ${c.name}
          </gu-heading-text>
          <gu-paragraph-text class="game-mode-tile__description" kind="micro" fillColor="${o.colors.light[100]}">
            ${c.description}
          </gu-paragraph-text>
          ${this.renderExtras(c)}
        </a>
      </li>
    `
            }

            renderExtras(c) {
                return c.ranked ? e.dy`
        <div class="game-mode-tile__extra">
          <gu-icon iconLigature="flux_symbol" fillColor="black"></gu-icon>
        </div>
      ` : e.dy``
            }

            render() {
                return e.dy`
      <ul class="game-modes">
        ${this.gameModes.map(c => this.renderTile(c))}
      </ul>
    `
            }
        };
        ms = (0, i.gn)([(0, f.M)("gu-game-modes")], ms);
        let As = class extends e.oi {
            constructor() {
                super(...arguments), this.time = "00:00"
            }

            static get properties() {
                return {started: {type: Object}}
            }

            static get styles() {
                return e.iv`
      :host {
        width: 84px;
      }
    `
            }

            start() {
                this.timer || (this.timer = setInterval(() => {
                    const c = new Date, $ = Math.floor((c.getTime() - this.started.getTime()) / 1e3),
                        z = ("00" + Math.floor($ / 60)).substr(-2, 2), re = ("00" + $ % 60).substr(-2, 2);
                    this.time = `${z}:${re}`, this.requestUpdate("time")
                }, 1e3))
            }

            stop() {
                this.timer && clearInterval(this.timer), this.time = "00:00", this.timer = void 0, this.requestUpdate("time")
            }

            render() {
                return this.started ? this.start() : this.stop(), e.dy` <gu-heading-text size="medium" data-test-id="queue-time">${this.time}</gu-heading-text> `
            }
        };
        As = (0, i.gn)([(0, f.M)("gu-queue-timer")], As);
        let Is = class extends e.oi {
            constructor() {
                super(...arguments), this.type = "queue"
            }

            static get properties() {
                return {gameMode: {type: Object}, type: {type: String}, queueStarted: {type: Date}}
            }

            static get styles() {
                return e.iv`
      :host {
        position: absolute;
        width: 100%;
        bottom: 0;
        height: 0;
        transition: transform 1s ease;
        transform: translateY(70px);
      }

      :host(.visible) {
        transform: translateY(0);
      }

      .game-queue-panel__finish {
        content: '';
        position: absolute;
        bottom: 0;
        display: block;
        height: 4px;
        width: 100%;
        left: 0;
        background: ${(0, t.asCssProp)(o.gradients.gold.mirror("left"))};
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
      }

      .game-queue-panel__content {
        position: absolute;
        bottom: 0;
        left: 50%;
        height: 60px;
        width: 50%;
        display: flex;
        place-content: stretch stretch;
        overflow: hidden;
      }

      .game-queue-panel__content::before {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        transform: skew(-15deg) translateX(15px);
        display: block;
        height: 60px;
        width: 50vw;
        background: ${(0, t.asCssProp)(o.gradients.gunmetal.simple("left"))};
        z-index: -1;
      }

      .game-queue-panel__left,
      .game-queue-panel__right {
        display: flex;
        place-content: center;
        flex: 1 1 auto;
        width: 40%;
      }

      .game-queue-panel__devider {
        width: 2px;
        flex: 0 0 auto;
        background: linear-gradient(180deg, rgba(198, 160, 82, 0) 0%, #fff2d8 50.99%, rgba(198, 160, 82, 0) 100%);
        margin: 8px 12px 12px 12px;
      }

      .game-queue-panel__left {
        text-align: right;
        padding-left: 28px;
        flex-direction: column;
      }

      .game-queue-panel__right {
        flex-direction: row;
        place-items: center;
        gap: 8px;
        flex-wrap: nowrap;
        flex: 0 1 0;
        padding-right: 8px;
      }

      .ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    `
            }

            handleCancelButton() {
                this.dispatchEvent(new CustomEvent("cancel", {detail: this.gameMode}))
            }

            render() {
                return this.classList.toggle("visible", !!this.gameMode), e.dy`
      <div
        data-test-id="game-queue-panel-panel"
        class=${(0, P.$)({
                    "game-queue-panel__content": !0,
                    [`game-queue-panel__content--type-${this.gameMode ? this.gameMode.key : ""}`]: !!this.gameMode
                })}
        data-test-id="game-queue-panel"
      >
        <div class="game-queue-panel__left">
          <gu-simple-text kind="tag" fillColor="${o.colors.gunmetal[100]}" align="right">
            ${this.gameMode ? "In Queue" : " "}
          </gu-simple-text>
          <gu-heading-text class="ellipsis" size="x-small" fillColor="white" align="right">
            ${this.gameMode ? this.gameMode.name : " "}
          </gu-heading-text>
        </div>
        <div class="game-queue-panel__devider"></div>
        <div class="game-queue-panel__right">
          <gu-queue-timer data-test-id="queue-timer" .started=${this.queueStarted}></gu-queue-timer>
          <gu-circular-close-button
            data-test-id="queue-cancel-button"
            @click=${this.handleCancelButton}
          ></gu-circular-close-button>
        </div>
      </div>
      <div class="game-queue-panel__finish"></div>
    `
            }
        };
        Is = (0, i.gn)([(0, f.M)("gu-game-queue-panel")], Is);
        let _s = class extends e.oi {
            render() {
                return e.dy`<slot></slot>`
            }
        };
        _s.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}
    :host {
      height: ${(0, t.asCssProp)(`${o.measurements.standardHeaderAlertBarHeight}px`)};
      position: relative;
      display: flex;
      background: ${(0, t.asCssProp)(o.colors.light[100])};
    }
  `, _s = (0, i.gn)([(0, f.M)("gu-header-alert-bar")], _s);
        const Yt = (0, r.gridUnits)(5), qs = (0, r.gridUnits)(5), Ds = (0, r.gridUnits)(8), Ls = (0, r.gridUnits)(10),
            en = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    width: 100%;
    height: ${o.measurements.standardHeaderHeight}px;
    display: flex;
    justify-content: space-between;
    position: relative;
    padding: 0 calc(var(--vw) * 3);
  }

  .menuToggleButton {
    cursor: pointer;
    padding: 0 ${(0, t.asCssProp)(Yt)};
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(7))};
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    ${(0, t.asCssProp)(o.animation.slowTransition("transform"))};
  }

  .menuToggleButton--open {
    transform: rotate(180deg);
  }

  .notificationBubble {
    position: absolute;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(6.7))};
    left: ${(0, t.asCssProp)((0, r.gridUnits)(10.5))};
    opacity: 1;
    ${(0, t.asCssProp)(o.animation.slowTransition("opacity"))};
    background: var(--gu-yellow);
  }

  .notificationBubble--hide {
    opacity: 0;
  }

  .logoArea {
    display: none;
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      justify-content: space-between;
    }

    .notificationBubble {
      display: none;
    }

    .menuToggleButton,
    .logoArea__guWordMark {
      display: none;
    }
  }
`;
        var Ot = n(4390), tn = n(97223);
        const Us = "TOGGLE_NAV", Rs = "CLOSE_NAV", Bs = "TOGGLE_SUB_MENU", Gs = "UPDATE_CURRENT_ROUTE",
            Fs = "CLOSE_ALL_SUB_MENUS", Zs = "TOGGLE_USER_MENU", Ns = "CLOSE_USER_MENU", fs = () => ({type: Rs}),
            Tt = G => ({type: Gs, payload: G}),
            sn = {currentRoute: "", navMenuOpen: !1, navSubMenusOpen: {}, userMenuOpen: !1},
            St = (0, tn.MT)((G = sn, {type: c, payload: $}) => {
                switch (c) {
                    case Us:
                        return Object.assign(Object.assign({}, G), {navMenuOpen: !G.navMenuOpen, userMenuOpen: !1});
                    case Rs:
                        return Object.assign(Object.assign({}, G), {navSubMenusOpen: {}, navMenuOpen: !1});
                    case Bs:
                        return Object.assign(Object.assign({}, G), {navSubMenusOpen: {[$]: !G.navSubMenusOpen[$]}});
                    case Fs:
                        return Object.assign(Object.assign({}, G), {navSubMenusOpen: {}});
                    case Gs:
                        return Object.assign(Object.assign({}, G), {currentRoute: $});
                    case Zs:
                        return Object.assign(Object.assign({}, G), {userMenuOpen: !G.userMenuOpen, navMenuOpen: !1});
                    case Ns:
                        return Object.assign(Object.assign({}, G), {userMenuOpen: !1});
                    default:
                        return G
                }
            }, sn), On = {
                navigationItems: {type: Array},
                loggedIn: {type: Boolean},
                router: {type: Object},
                ngZone: {type: Object}
            };
        customElements.define("gu-header-bar", (0, we.x)({
            renderer: function ({navigationItems: G, router: c, ngZone: $}) {
                if (!G) return null;
                const z = (0, u.v9)({store: St, selector: wt => wt.navMenuOpen}),
                    re = (0, u.I0)(St), [ke, Be] = (0, te.eJ)(!1), Xe = () => {
                        re(fs()), (0, Ot.pR)(c, $, G.home.path), this.dispatchEvent(new CustomEvent("onLogoClick"))
                    };
                return (0, te.d4)(() => {
                    Be((() => {
                        if (!G) return !1;
                        let wt = !1;
                        e:for (const Lt of Object.keys(G)) {
                            const _t = G[Lt];
                            if (_t.children) {
                                for (const Me of Object.keys(_t.children)) if (_t.children[Me].showNotificationBubble) {
                                    wt = !0;
                                    break e
                                }
                            } else if (_t.showNotificationBubble) {
                                wt = !0;
                                break e
                            }
                        }
                        return wt
                    })())
                }, [G]), e.dy`
    <gu-icon
      class="menuToggleButton ${z ? "menuToggleButton--open" : ""}"
      iconLigature=${z ? "close_x" : "hamburger_menu"}
      @click=${wt => {
                    wt.cancelBubble = !0, re({type: Us})
                }}
      fillColor=${o.colors.gunmetal[100]}
    >
    </gu-icon>
    ${ke ? e.dy`
          <gu-notification-bubble class="notificationBubble ${z ? "notificationBubble--hide" : ""}">
          </gu-notification-bubble>
        ` : null}
    <div class="logoArea" @click=${() => Xe()}>
      <picture class="logoArea__guIcon">
        <source type="image/webp" srcset="/assets/images/internal-logos/logo--gods-unchained-icon.webp" />
        <source type="image/png" srcset="/assets/images/internal-logos/logo--gods-unchained-icon.png" />
        <img
          class="logoArea__guIcon__img"
          alt="A digital trading card game where you can trade cards you purchase or earn for real-world currency."
          src="/assets/images/internal-logos/logo--gods-unchained-icon.png"
        />
      </picture>

      <gu-heading-text
        class="logoArea__guWordMark"
        size="3x-small"
        .responsiveSize=${[{breakpoint: "2x-small", size: "2x-small"}]}
      >
        Gods Unchained
      </gu-heading-text>
    </div>

    <gu-menu .router=${c} .ngZone=${$} .navigationItems=${G}></gu-menu>

    <div class="userArea">
      <slot name="userArea"></slot>
    </div>
  `
            }, props: {properties: On, styles: en}
        }));
        var Tn = n(92198), Mn = n(11735);
        const $n = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    position: absolute;
    top: ${o.measurements.standardHeaderHeight}px;
    height: calc(100vh - ${o.measurements.standardHeaderHeight}px);
    width: 100%;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    list-style: none;
    margin: 0;
    padding: 0 ${(0, t.asCssProp)(Yt)};
    transform: translateX(-101%);
    ${(0, t.asCssProp)(o.animation.slowTransition("transform"))};
    display: flex;
    flex-direction: column;
    overflow: hidden;
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: ${(0, t.asCssProp)(o.colors.gunmetal[500])} ${(0, t.asCssProp)(o.colors.gunmetal[900])};
  }

  :host::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  :host::-webkit-scrollbar-track {
    background: var(--gu-blue-dark);
  }

  :host::-webkit-scrollbar-thumb {
    background: var(--gu-blue);
    box-shadow: none;
  }

  :host::-webkit-scrollbar-corner {
    background-color: var(--gu-blue-dark);
  }

  :host(.open) {
    transform: translateX(0);
  }

  .menuItem {
    flex-shrink: 0;
    flex-grow: 0;
    cursor: pointer;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(5))} 0;
    border-bottom: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    text-transform: uppercase;
    white-space: nowrap;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
  }

  .menuItem__icon {
    display: block;
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-1))};
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    line-height: 0;
  }

  .menuItem__longName + .menuItem__shortName {
    display: none;
  }

  .menuItem__caret {
    display: block;
    line-height: 0;
    transform-origin: center;
    ${(0, t.asCssProp)(o.animation.slowTransition("transform"))};
  }

  .menuItem__externalIcon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-1))};
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    line-height: 0;
  }

  .menuItem__caret--rotated {
    transform: rotate(180deg);
  }

  .menuItem > * {
    color: var(--gu-blue);
  }

  .menuItem--selected > *:not(gu-sub-menu):not(gu-notification-bubble) {
    background: var(--gu-yellow);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  gu-notification-bubble {
    position: absolute;
    right: 0;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(7))};
    ${(0, t.asCssProp)(o.animation.slowTransition("opacity"))};
  }
  
  .menuItem--opened gu-notification-bubble {
    opacity: 0;
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      position: relative;
      transform: translateX(0);
      background: transparent;
      flex-direction: row;
      top: auto;
      width: auto;
      height: auto;
      padding: 0;
      overflow: unset;
    }

    .menuItem {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(6.5))};
      padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))};
      border: none;
    }

    .menuItem--hasSubMenu {
      padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
    }

    .menuItem--isExternal {
      padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    }

    .menuItem:last-of-type {
      margin: 0;
    }

    .menuItem:hover > *,
    .menuItem--opened > * {
      color: var(--gu-blue-hover);
    }

    .menuItem__icon {
      margin: 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    }

    .menuItem__longName {
      display: none;
    }

    .menuItem__longName + .menuItem__shortName {
      display: block;
    }

    .menuItem__caret {
      position: absolute;
      right: 0;
      bottom: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
    }

    .menuItem__externalIcon {
      margin: 0;
      position: absolute;
      right: 0;
      bottom: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
      font-size: ${(0, t.asCssProp)((0, r.gridUnits)(2.75))};
    }

    gu-notification-bubble {
      top: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
      right: 50%;
      transform: translateX(150%);
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-large"])}) {
    .menuItem {
      flex-direction: row;
      padding: 0;
      margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    }

    .menuItem--hasSubMenu {
      padding-right: 0;
    }

    .menuItem__icon {
      position: static;
      margin: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))} ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0 0;
      top: unset;
      left: unset;
      transform: unset;
    }

    .menuItem--hasSubMenu .menuItem__caret {
      position: relative;
      right: auto;
      bottom: auto;
    }

    .menuItem__longName {
      display: block;
    }

    .menuItem__longName + .menuItem__shortName {
      display: none;
    }

    gu-notification-bubble {
      top: 50%;
      right: auto;
      left: ${(0, t.asCssProp)((0, r.gridUnits)(3.4))};
      transform: translate(0%, -170%);
    }

    .menuItem--hasSubMenu gu-notification-bubble {
      margin-right: 0;
    }
  }
`;
        customElements.define("gu-menu", (0, we.x)({
            renderer: function ({navigationItems: G, router: c, ngZone: $}) {
                const z = (0, u.v9)({store: St, selector: Me => Me.navMenuOpen}),
                    re = (0, u.v9)({store: St, selector: Me => Me.currentRoute}),
                    ke = (0, u.v9)({store: St, selector: Me => Me.navSubMenusOpen}), Be = (0, u.I0)(St);
                (0, te.d4)(() => {
                    Be(Tt(c.url));
                    const Me = c.events.pipe((0, Tn.h)(De => De instanceof Mn.m2)).subscribe(De => {
                        Be(Tt(De.url))
                    });
                    return () => {
                        Me.unsubscribe()
                    }
                }, []), (0, te.d4)(() => {
                    z ? this.classList.add("open") : this.classList.remove("open")
                }, [z]);
                const Xe = Me => {
                    this.dispatchEvent(new CustomEvent("onMenuDropDownOpen", {
                        detail: {navItem: Me},
                        bubbles: !0,
                        composed: !0
                    })), Be((G => ({type: Bs, payload: G}))(Me.path))
                }, Zt = Me => Me.children ? Xe(Me) : (Me => {
                    Me(), Be(fs())
                })(Me.url ? () => {
                    this.dispatchEvent((0, Ot.Cs)(Me)), (0, Ot.rb)(Me)
                } : () => (0, Ot.pR)(c, $, Me.path)), wt = Me => {
                    let De = !1;
                    const {children: It} = Me;
                    return ("/" === re && "home" === Me.shortName || -1 !== re.indexOf(Me.path) && "home" !== Me.shortName || !!It && (0, Ot.M0)(It, re)) && (De = !0), De
                }, Lt = Me => !!ke[Me.path];
                return e.dy`
    ${Object.keys(G).map(Me => {
                    const De = G[Me], It = !De.children && !!De.url;
                    return e.dy`
        <div
          class=${(0, P.$)({
                        menuItem: !0,
                        "menuItem--selected": wt(De),
                        "menuItem--opened": Lt(De),
                        "menuItem--hasSubMenu": !!De.children,
                        "menuItem--isExternal": It
                    })}
          @click=${() => Zt(De)}
        >
          <gu-icon class="menuItem__icon" iconLigature=${De.icon}> </gu-icon>
          ${De.longName ? e.dy`
                <gu-simple-text
                  class="menuItem__longName"
                  kind="large"
                  fontWeight="bold"
                  .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
                >
                  ${De.longName}
                </gu-simple-text>
              ` : null}

          <gu-simple-text
            class="menuItem__shortName"
            kind="large"
            fontWeight="bold"
            .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
          >
            ${De.shortName}
          </gu-simple-text>

          ${It ? e.dy` <gu-icon class="menuItem__externalIcon" iconLigature="leave_website"></gu-icon> ` : null}
          ${De.children ? e.dy`
                <gu-icon
                  class=${(0, P.$)({menuItem__caret: !0, "menuItem__caret--rotated": Lt(De)})}
                  iconLigature="caret_down"
                ></gu-icon>
                <gu-sub-menu
                  .router=${c}
                  .ngZone=${$}
                  .subMenuItems=${De.children}
                  .topLevelPath=${De.path}
                ></gu-sub-menu>
              ` : null}
          ${De.showNotificationBubble || (Me => !!Me.children && Object.keys(Me.children).reduce((De, It) => {
                        const ot = Me.children[It];
                        return !(!ot || !ot.showNotificationBubble) || De
                    }, !1))(De) ? e.dy` <gu-notification-bubble></gu-notification-bubble> ` : null}
        </div>
      `
                })}
  `
            },
            props: {
                properties: {navigationItems: {type: Array}, router: {type: Object}, ngZone: {type: Object}},
                styles: $n
            }
        }));
        const In = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: flex;
    flex-flow: column;
    color: ${(0, t.asCssProp)(o.colors.light[500])};
    overflow: hidden;
    max-height: 0px;
    padding-top: 0px;
    opacity: 0;
    width: 100%;
    ${(0, t.asCssProp)(o.animation.slowTransition("opacity"))};
    transition-property: max-height, padding, opacity;
  }

  .subMenu {
    margin: 0;
    padding: 0 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(7))};
    list-style: none;
  }

  .subMenu__item {
    padding-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    color: var(--gu-blue);
    line-height: 1;
    position: relative;
    white-space: normal;
  }

  .subMenu__item:last-of-type {
    padding-bottom: 0;
  }

  .subMenu__item--selected {
    ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
  }

  :host(.open) {
    max-height: calc(var(--maxHeight) + ${(0, t.asCssProp)((0, r.gridUnits)(5))});
    opacity: 1;
    padding-top: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
  }

  gu-notification-bubble {
    position: absolute;
    right: 0;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(1.75))};
  }

  .item__externalIcon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4.75))};
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      position: absolute;
      top: 100%;
      left: ${(0, t.asCssProp)((0, r.gridUnits)(-4))};
      width: ${(0, t.asCssProp)((0, r.gridUnits)(36))};
      padding: 0;
      z-index: 1;
    }

    :host::after {
      content: '';
      display: block;
      height: var(--maxHeight);
      width: 100%;
    }

    :host(.open) {
      max-height: var(--maxHeight);
      padding: 0;
    }

    .subMenu {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      padding: 0;
      background: var(--gu-blue-dark);
    }

    .subMenu__item,
    .subMenu__item:last-of-type {
      padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    }

    .subMenu__item:hover {
      color: var(--gu-blue-hover);
    }

    .subMenu__item--selected:hover {
      ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
    }

    .item__externalIcon {
      font-size: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
      margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
    }

    gu-notification-bubble {
      right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      top: 50%;
      transform: translateY(-50%);
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.large)}) {
    :host {
      left: 0;
    }
  }
`;
        customElements.define("gu-sub-menu", (0, we.x)({
            renderer: function ({topLevelPath: G, subMenuItems: c, router: $, ngZone: z}) {
                const re = (0, u.v9)({store: St, selector: ot => ot.navSubMenusOpen}),
                    ke = (0, u.v9)({store: St, selector: ot => ot.currentRoute}), Be = (0, u.I0)(St), Xe = ot => {
                        ot.url ? (this.dispatchEvent((0, Ot.Cs)(ot)), (0, Ot.rb)(ot)) : (Be(fs()), (0, Ot.pR)($, z, ot.path))
                    }, Zt = ot => ke.includes(ot.path), wt = ks()(() => {
                        this.style.setProperty("--maxHeight", `${_t.offsetHeight}px`)
                    }, 500), Lt = new s.do(ot => {
                        ot.forEach(() => wt())
                    });
                let _t;
                (0, te.d4)(() => (_t = this.shadowRoot.querySelector(".subMenu"), Lt.observe(_t), () => Lt.unobserve(_t)), []);
                const De = () => {
                    document.removeEventListener("click", It)
                }, It = ot => {
                    Be({type: Fs})
                };
                return (0, te.d4)(() => (re[G] ? (this.classList.add("open"), setTimeout(() => {
                    document.addEventListener("click", It)
                })) : (this.classList.remove("open"), De()), () => De()), [re]), e.dy`
    <ul class="subMenu">
      ${Object.keys(c).map(ot => {
                    const st = c[ot], Ut = {subMenu__item: !0, "subMenu__item--selected": Zt(st)};
                    return e.dy`
          <li
            class=${(0, P.$)(Ut)}
            @click=${Vn => {
                        Vn.cancelBubble = !0, Xe(st)
                    }}
          >
            ${st.longName ? e.dy`
                  <gu-simple-text
                    class="item__longName"
                    kind="large"
                    .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
                  >
                    ${st.longName}
                  </gu-simple-text>
                ` : null}

            <gu-simple-text
              class="item__shortName"
              kind="large"
              .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
            >
              ${st.shortName}
            </gu-simple-text>

            ${st.url ? e.dy` <gu-icon class="item__externalIcon" iconLigature="leave_website"></gu-icon> ` : null}
            ${st.showNotificationBubble ? e.dy` <gu-notification-bubble></gu-notification-bubble> ` : null}
          </li>
        `
                })}
    </ul>
  `
            },
            props: {
                properties: {
                    subMenuItems: {type: Array},
                    router: {type: Object},
                    ngZone: {type: Object},
                    topLevelPath: {type: String}
                }, styles: In
            }
        }));
        const on = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: block;
    height: ${gt.standardHeaderHeight}px;
  }

  .signedOutArea {
    height: 100%;
    display: flex;
    align-items: center;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(4))} 0;
    padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .signedOutArea__signInButton {
    cursor: pointer;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .signedOutArea__signInButton::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: ${(0, t.asCssProp)((0, r.gridUnits)(-2))};
    height: 100%;
    width: 1px;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }

  .signedOutArea__downloadButton {
    display: none;
  }

  .userDetailsArea {
    height: 100%;
    display: flex;
    align-items: center;
    cursor: pointer;
  }

  .userDetailsArea__imgContainer {
    display: none;
  }

  .userDetailsArea__imgContainer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gu-yellow);
    border-radius: 50%;
    z-index: 2;
  }

  .userDetailsArea__imgContainer__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 50%;
    position: relative;
    z-index: 2;
  }

  .userDetailsArea__imgContainer__bannerSide {
    width: ${(0, t.asCssProp)((0, r.gridUnits)(1.75))};
    height: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
    position: absolute;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    z-index: 1;
    bottom: 1px;
  }

  .userDetailsArea__imgContainer__bannerSide--left {
    left: 0;
    transform: translateX(-90%);
  }

  .userDetailsArea__imgContainer__bannerSide--right {
    right: 0;
    transform: translateX(90%);
  }

  .userDetailsArea__imgContainer__levelLabel {
    position: absolute;
    width: 58px;
    bottom: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
    left: 50%;
    transform: translateX(-50%);
    z-index: 3;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} 0;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
  }

  .userDetailsArea__imgContainer__tinyCorner {
    position: absolute;
    top: 50%;
    left: -3px;
    border: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))} solid transparent;
    border-bottom-color: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    z-index: 1;
  }

  .userDetailsArea__imgContainer__tinyCorner--right {
    left: auto;
    right: -3px;
  }

  gu-user-details {
    display: none;
  }

  gu-notification-bubble {
    position: absolute;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
    right: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
    ${(0, t.asCssProp)(o.animation.slowTransition("opacity"))};
  }

  .userDetailsArea--open gu-notification-bubble {
    opacity: 0;
  }
  .userDetailsArea--open .userDetailsArea__imgContainer::before {
    transform: rotate(-180deg);
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-small"])}) {
    .signedOutArea {
      padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    }
    .signedOutArea__signInButton {
      padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    }
    .signedOutArea__signInButton::after {
      left: ${(0, t.asCssProp)((0, r.gridUnits)(-3))};
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.large)}) {
    gu-user-details {
      display: flex;
      height: 100%;
      align-items: center;
    }

    .signedOutArea__downloadButton {
      display: flex;
      min-width: ${(0, t.asCssProp)((0, r.gridUnits)(45))};
    }

    .signedOutArea__signInButton {
      margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
      padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    }

    .signedOutArea__signInButton::after {
      right: 0;
      left: auto;
    }
  }
`;
        customElements.define("gu-header-user-area", (0, we.x)({
            renderer: function ({
                                    menuItems: G,
                                    router: c,
                                    ngZone: $,
                                    userProperties: z,
                                    downloadLauncherUrl: re,
                                    userStarsTotal: ke,
                                    userFluxTotal: Be
                                }) {
                if (!G) return null;
                const Xe = (0, u.v9)({store: St, selector: De => De.userMenuOpen}),
                    Ct = (0, u.I0)(St), [Zt, wt] = (0, te.eJ)(!1), Me = () => {
                        this.dispatchEvent(new CustomEvent("onUserDetailsClick"))
                    };
                return e.dy`
    ${z ? e.dy`
          <div
            class=${(0, P.$)({userDetailsArea: !0, "userDetailsArea--open": Xe})}
          >
            <gu-user-details
              .userProperties=${z}
              .userStarsTotal=${ke}
              .userFluxTotal=${Be}
              @click=${Me}
            ></gu-user-details>
            <div class="userDetailsArea__imgContainer" @click=${() => Ct({type: Zs})}>
              ${Zt ? e.dy`<gu-notification-bubble highPriority="true"></gu-notification-bubble>` : null}
              <img class="userDetailsArea__imgContainer__img" src=${z.image_url} alt="user avatar image" />
              <i class="userDetailsArea__imgContainer__bannerSide userDetailsArea__imgContainer__bannerSide--left"></i>
              <i class="userDetailsArea__imgContainer__bannerSide userDetailsArea__imgContainer__bannerSide--right"></i>
              <i class="userDetailsArea__imgContainer__tinyCorner"></i>
              <i class="userDetailsArea__imgContainer__tinyCorner userDetailsArea__imgContainer__tinyCorner--right"></i>
              <gu-simple-text kind="tag" class="userDetailsArea__imgContainer__levelLabel" align="center">
                LVL${z.level}
              </gu-simple-text>
            </div>
          </div>

          <gu-user-menu
            .userProperties=${z}
            .userStarsTotal=${ke}
            .userFluxTotal=${Be}
            .router=${c}
            .ngZone=${$}
            .menuItems=${G}
            @onUserDetailsClick=${Me}
          ></gu-user-menu>
        ` : e.dy`
          <div class="signedOutArea">
            <gu-simple-text kind="tag" @click=${() => {
                    this.dispatchEvent(new CustomEvent("onLoginModal"))
                }} class="signedOutArea__signInButton" data-test-id="signinButton">
              sign in
            </gu-simple-text>
            ${re ? e.dy`
                  <gu-primary-hex-button
                    class="signedOutArea__downloadButton"
                    size="large"
                    href=${re}
                    @click=${() => {
                    this.dispatchEvent(new CustomEvent("onRegisterModal"))
                }}
                  >
                    play now
                  </gu-primary-hex-button>
                ` : null}
          </div>
        `}
  `
            },
            props: {
                properties: {
                    menuItems: {type: Array},
                    router: {type: Object},
                    ngZone: {type: Object},
                    userProperties: {type: Object},
                    downloadLauncherUrl: {type: String},
                    userStarsTotal: {type: String},
                    userFluxTotal: {type: String}
                }, styles: on
            }
        }));
        const Ln = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    position: absolute;
    top: ${o.measurements.standardHeaderHeight}px;
    right: 0;
    width: ${(0, t.asCssProp)((0, r.gridUnits)(65))};
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    list-style: none;
    margin: 0;
    transform: translateX(101%);
    opacity: 0;
    display: flex;
    flex-direction: column;
    border-right: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    border-left: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    ${(0, t.asCssProp)(o.animation.slowTransition("all"))};
  }

  :host(.open) {
    transform: translateX(0);
    opacity: 1;
  }

  .menuItem {
    cursor: pointer;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(5))} ${(0, t.asCssProp)(Yt)};
    border-bottom: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    white-space: nowrap;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
  }

  .menuItem:hover {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }

  .menuItem__subMenu {
    display: flex;
    align-items: center;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    border-left: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[100])};
  }

  .menuItem__subMenu__item {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  gu-notification-bubble {
    position: absolute;
    right: ${(0, t.asCssProp)(Yt)};
    top: 50%;
    transform: translateY(-50%);
    ${(0, t.asCssProp)(o.animation.slowTransition("opacity"))};
  }

  gu-user-details {
    border-bottom: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    padding: 0;
    cursor: pointer;
  }

  gu-user-details:hover {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }

  @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.large)}) {
    gu-user-details {
      display: none;
    }
  }
`, an = new CustomEvent("onLogout", {bubbles: !0, composed: !0}),
            ln = new CustomEvent("onConnectWallet", {bubbles: !0, composed: !0}),
            bs = new CustomEvent("onShowTransactions", {bubbles: !0, composed: !0});
        customElements.define("gu-user-menu", (0, we.x)({
            renderer: function ({
                                    userProperties: G,
                                    router: c,
                                    ngZone: $,
                                    menuItems: z,
                                    userStarsTotal: re,
                                    userFluxTotal: ke
                                }) {
                const Be = (0, u.v9)({store: St, selector: st => st.userMenuOpen}), Xe = (0, u.I0)(St),
                    Ct = () => this.dispatchEvent(ln), Zt = () => this.dispatchEvent(an),
                    wt = () => this.dispatchEvent(bs), _t = () => {
                        document.removeEventListener("click", Me)
                    }, Me = st => {
                        Xe({type: Ns})
                    };
                return (0, te.d4)(() => (Be ? (this.classList.add("open"), setTimeout(() => {
                    document.addEventListener("click", Me)
                })) : (this.classList.remove("open"), _t()), () => _t()), [Be]), e.dy`
    <gu-user-details
      verticalLayout
      .userProperties=${G}
      .userStarsTotal=${re}
      .userFluxTotal=${ke}
      @click=${() => {
                    this.dispatchEvent(new CustomEvent("onUserDetailsClick"))
                }}
    ></gu-user-details>
    ${Object.keys(z).map(st => {
                    const Ut = z[st];
                    return Ut.visible ? e.dy`
            <div class="menuItem" @click=${() => (st => {
                        "Log Out" === st.shortName ? Zt() : "Connect Wallet" === st.shortName ? Ct() : "Transactions" === st.shortName ? wt() : st.url ? (0, Ot.rb)(st) : st.path && (0, Ot.pR)(c, $, st.path)
                    })(Ut)}>
              <gu-simple-text class="menuItem__shortName" kind="small"> ${Ut.shortName} </gu-simple-text>

              ${Ut.showNotificationBubble ? e.dy` <gu-notification-bubble highPriority="true"></gu-notification-bubble> ` : null}
              ${Ut.children ? e.dy`
                    <div class="menuItem__subMenu">
                      ${Object.keys(Ut.children).map(Vn => {
                        const oo = Ut.children[Vn];
                        return e.dy`
                          <gu-simple-text
                            kind="tag"
                            class="menuItem__subMenu__item"
                            @click=${po => ((st, Ut) => {
                            st.stopPropagation(), Ut.url ? (0, Ot.rb)(Ut) : Ut.path && (0, Ot.pR)(c, $, Ut.path)
                        })(po, oo)}
                            fillColor=${o.colors.gunmetal[100]}
                          >
                            ${oo.shortName}
                          </gu-simple-text>
                        `
                    })}
                    </div>
                  ` : null}
            </div>
          ` : null
                })}
  `
            },
            props: {
                properties: {
                    userProperties: {type: Object},
                    userStarsTotal: {type: Number},
                    userFluxTotal: {type: Number},
                    menuItems: {type: Object},
                    router: {type: Object},
                    ngZone: {type: Object}
                }, styles: Ln
            }
        }));
        const Un = e.iv`
  :host {
    display: flex;
  }

  .side {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
  }

  .side--left {
    position: relative;
    align-items: stretch;
    white-space: nowrap;
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    padding-left: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
  }

  .side--right {
    max-width: 190px;
    flex: 1;
    padding-top: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
    padding-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
  }

  .side--left:hover .side__hoverGradient {
    opacity: 1;
  }

  .side__border {
    position: absolute;
    right: 0;
    top: 25%;
    height: 50%;
    border-right: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
  }

  .side__hoverGradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(180deg, #0f1b27 0%, #1d2f41 51.56%, rgba(61, 90, 116, 0.75) 100%);
    opacity: 0;
    z-index: 0;
    border-radius: 4px;
  }

  .side__part {
    position: relative;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  .side__part > gu-icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
  }

  .row {
    display: flex;
    text-align: right;
  }

  .row--top {
    color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
    align-items: center;
  }

  .row--bottom {
    justify-content: flex-end;
  }

  .row__userName {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .row__rank {
    text-transform: uppercase;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
    padding-left: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
    border-left: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
  }

  :host(.verticalLayout) {
    flex-direction: column;
  }

  :host(.verticalLayout) .side__border {
    display: none;
  }

  :host(.verticalLayout) .side--left {
    order: 2;
    flex-direction: row;
    justify-content: flex-start;
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    padding-left: 0;
  }

  :host(.verticalLayout) .side--left:hover .side__hoverGradient {
    opacity: 0;
  }

  :host(.verticalLayout) .side--right {
    max-width: 100%;
    padding: 0;
  }

  :host(.verticalLayout) .side__part:first-child {
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
  }

  :host(.verticalLayout) .row {
    text-align: left;
  }

  :host(.verticalLayout) .row--bottom {
    justify-content: flex-start;
  }

  :host(.verticalLayout) .row__userName {
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
  }
`, Gt = {
            userProperties: {type: Object},
            userStarsTotal: {type: String},
            userFluxTotal: {type: String},
            verticalLayout: {type: Boolean}
        };
        customElements.define("gu-user-details", (0, we.x)({
            renderer: function ({
                                    userProperties: G,
                                    userStarsTotal: c = "0",
                                    userFluxTotal: $ = "0",
                                    verticalLayout: z
                                }) {
                return (0, te.d4)(() => {
                    z ? this.classList.add("verticalLayout") : this.classList.remove("verticalLayout")
                }, [z]), e.dy`
    <div class="side side--left">
      <gu-simple-text kind="small" fontWeight="bold" fillColor=${o.colors.gold[300]} class="side__part side__part--flux">
        <gu-icon iconLigature="flux_symbol" class="side__part__icon"></gu-icon>
        ${$ || "0"} FLUX
      </gu-simple-text>

      <gu-simple-text
        kind="small"
        fontWeight="bold"
        fillColor=${o.colors.apocyan[300]}
        class="side__part side__part--stars"
      >
        <gu-icon iconLigature="collectable_stars" class="side__part__icon"></gu-icon>
        ${c || "0"} STARS
      </gu-simple-text>
      <div class="side__hoverGradient"></div>
    </div>
  `
            }, props: {properties: Gt, styles: Un}
        }));
        const un = [824, 825, 826, 827, 828, 829];
        let Jt = class extends e.oi {
            constructor() {
                super(...arguments), this.videoId = 412954513, this.cropVideoFromTop = !0, this.randomChampionProto = un[parseInt("" + (Math.random() * un.length - 1), 10)]
            }

            connectedCallback() {
                super.connectedCallback(), this.style.setProperty("--headerAreaHeight", `${o.measurements.standardHeaderHeight}px`)
            }

            render() {
                return e.dy`
      <gu-background-vimeo-embed
        class="videoBackground"
        cropFromTop=${this.cropVideoFromTop}
        videoId=${this.videoId}
      ></gu-background-vimeo-embed>
      <picture class="fallbackImage">
        <source
          type="image/webp"
          sizes="100vw"
          srcset="
            //images.godsunchained.com/art2/250/${this.randomChampionProto}.webp   250w,
            //images.godsunchained.com/art2/375/${this.randomChampionProto}.webp   375w,
            //images.godsunchained.com/art2/500/${this.randomChampionProto}.webp   500w,
            //images.godsunchained.com/art2/720/${this.randomChampionProto}.webp   720w,
            //images.godsunchained.com/art2/1024/${this.randomChampionProto}.webp 1024w,
            //images.godsunchained.com/art2/1280/${this.randomChampionProto}.webp 1280w
          "
        />
        <source
          type="image/jpg"
          sizes="100vw"
          srcset="
            //images.godsunchained.com/art2/250/${this.randomChampionProto}.jpg    250w,
            //images.godsunchained.com/art2/375/${this.randomChampionProto}.jpg    375w,
            //images.godsunchained.com/art2/500/${this.randomChampionProto}.jpg   500w,
            //images.godsunchained.com/art2/720/${this.randomChampionProto}.jpg   720w,
            //images.godsunchained.com/art2/1024/${this.randomChampionProto}.jpg 1024w,
            //images.godsunchained.com/art2/1280/${this.randomChampionProto}.jpg 1280w
          "
        />
        <img src="//images.godsunchained.com/art2/720/827.jpg" alt="" class="fallbackImage__img" />
      </picture>
      <i class="overlaySkrimGradient"></i>
      <slot name="bannerLogo"></slot>
      <div class="slotContent">
        <slot name="bannerContent"></slot>
      </div>
    `
            }
        };
        Jt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}

    :host {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      position: relative;
      min-height: calc(100vh - var(--headerAreaHeight));
    }

    :host([centerContent='true']) {
      justify-content: center;
    }

    .overlaySkrimGradient {
      content: '';
      position: absolute;
      top: calc((100vh - var(--headerAreaHeight)) / 2);
      height: calc((100vh - var(--headerAreaHeight)) / 2);
      left: 0;
      right: 0;
      background: linear-gradient(
        to top,
        rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.dark[900]))}, 1) 0%,
        rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.dark[900]))}, 0) 100%
      );
    }

    .slotContent {
      position: relative;
    }

    .fallbackImage {
      position: absolute;
      top: 0;
      left: 0;
      height: calc(100vh - var(--headerAreaHeight));
      width: 100%;
    }

    .fallbackImage__img {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center top;
    }

    .videoBackground {
      display: none;
      position: absolute;
      top: 0;
      left: 0;
    }

    @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping.small)}) {
      .videoBackground {
        display: block;
      }
      .fallbackImage {
        display: none;
      }
      .overlaySkrimGradient {
        top: auto;
        bottom: 0;
        height: 50%;
      }
    }
  `, (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Jt.prototype, "videoId", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Jt.prototype, "cropVideoFromTop", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], Jt.prototype, "randomChampionProto", void 0), Jt = (0, i.gn)([(0, f.M)("gu-hero-video-banner")], Jt);
        var pn = n(66974);
        const gn = ["xx-small", "x-small", "small", "medium", "large"],
            ys = {"xx-small": "10px", "x-small": "12px", small: "14px", medium: "16px", large: "20px"},
            as = {"xx-small": "18px", "x-small": "20px", small: "22px", medium: "24px", large: "28px"},
            Hs = {light: 100, regular: 300, "semi-bold": 500, bold: 700, "extra-bold": 900};
        var Cs;
        let Mt = Cs = class extends e.oi {
            constructor() {
                super(...arguments), this.fontWeight = "regular", this.fontStyle = "regular", this.align = "center", this.plain = !1, this.responsiveSizes = []
            }

            static get styles() {
                return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: inline;
    font-family: 'Open Sans', sans-serif;
    ${(0, t.asCssProp)(m.uA.enhancedTextRenderingStyles)};
    font-size: ${(0, t.asCssProp)(ys.medium)};
  }

  :host:not([plain]) {
    line-height: ${(0, t.asCssProp)(as.medium)};
  }

  ${(0, t.asCssProp)(gn.map(G => e.iv`
          :host([size=${(0, t.asCssProp)(G)}]),
          :host([size=${(0, t.asCssProp)(G)}]) ::slotted(*) {
            font-size: ${(0, t.asCssProp)(ys[G])};
          }

          :host([size='${(0, t.asCssProp)(G)}]):not([plain']),
          :host([size='${(0, t.asCssProp)(G)}]):not([plain']) ::slotted(*) {
            line-height: ${(0, t.asCssProp)(as[G])};
          }
        `).join("\n"))}

  :host([fontStyle='italic']),
  :host([fontStyle='italic']) ::slotted(*) {
    font-style: italic;
  }

  ${(0, t.asCssProp)(Object.keys(Hs).map(G => e.iv`
          :host([fontWeight=${(0, t.asCssProp)(G)}]),
    :host([fontWeight=${(0, t.asCssProp)(G)}]) ::slotted(*) {
            font-weight: ${Hs[G]};
          }
        `).join("\n"))}

  ${(0, t.asCssProp)(pn.textAlignRules)}
  ${(0, t.asCssProp)(ft.fillColoringRules)}
`
            }

            static hasColoringPropertyChanged(c) {
                return c.has("fillColor") || c.has("fillGradient") || c.has("fillGradientTarget")
            }

            updated(c) {
                if (Cs.hasColoringPropertyChanged(c)) {
                    const {fillColor: $, fillGradient: z, fillGradientTarget: re} = this;
                    (0, g.updateColoringVariables)({
                        component: this,
                        fillColor: $,
                        fillGradient: z,
                        fillGradientTarget: re
                    })
                }
            }

            generateMediaQueries() {
                const {breakpointSizeMapping: c} = o.breakpoints, {asCssProp: $} = m.ZB;
                return this.responsiveSizes.length ? e.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveSizes.map(({breakpoint: z, size: re = "small"}) => e.iv`
                @media screen and (min-width: ${$(c[z])}) {
                  :host(.overWrite[size='${$(this.size)}']),
                  :host(.overWrite[size='${$(this.size)}']) ::slotted(*) {
                    font-size: ${$(ys[re])} !important;
                  }

                  :host(.overWrite[size='${$(this.size)}']):not([plain]),
                  :host(.overWrite[size='${$(this.size)}']):not([plain]) ::slotted(*) {
                    line-height: ${$(as[re])} !important;
                  }
                }
              `)}
          </style>
        ` : null
            }

            render() {
                return this.responsiveSizes.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), e.dy`
      ${this.generateMediaQueries()}
      <slot data-test-id="body-text-slot"></slot>
    `
            }
        };
        (0, i.gn)([(0, p.C)({
            type: String,
            reflect: !0
        }), (0, i.w6)("design:type", String)], Mt.prototype, "size", void 0), (0, i.gn)([(0, p.C)({
            type: String,
            reflect: !0
        }), (0, i.w6)("design:type", String)], Mt.prototype, "fontWeight", void 0), (0, i.gn)([(0, p.C)({
            type: String,
            reflect: !0
        }), (0, i.w6)("design:type", String)], Mt.prototype, "fontStyle", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Mt.prototype, "align", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Mt.prototype, "fillColor", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Mt.prototype, "fillGradient", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Mt.prototype, "fillGradientTarget", void 0), (0, i.gn)([(0, p.C)({
            type: Boolean,
            reflect: !0
        }), (0, i.w6)("design:type", Object)], Mt.prototype, "plain", void 0), (0, i.gn)([(0, p.C)({type: Array}), (0, i.w6)("design:type", Array)], Mt.prototype, "responsiveSizes", void 0), Mt = Cs = (0, i.gn)([(0, f.M)("gu-body-text")], Mt);

        class mt extends e.oi {
            constructor() {
                super(...arguments), this.disabled = !1, this.valid = void 0, this.dirty = !1, this.status = "initial", this.keyHandlers = {Escape: () => this.reset()}
            }

            static get styles() {
                return e.iv`
      :host([disabled]) {
        filter: grayscale(100%);
      }
    `
            }

            firstUpdated(c) {
                this.initialValue = this.value, this.dispatchEvent(new CustomEvent("registerFormControl", {
                    detail: {control: this},
                    bubbles: !0,
                    composed: !0
                })), super.firstUpdated(c)
            }

            connectedCallback() {
                super.connectedCallback(), this.addEventListener("keyup", this.handleKey), this.addEventListener("input", this.setDirty)
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.removeEventListener("keyup", this.handleKey), this.removeEventListener("input", this.setDirty)
            }

            setDirty() {
                this.dirty = !0
            }

            update(c) {
                this.status = this.disabled ? "disabled" : this.dirty ? this.valid ? "valid" : "invalid" : "initial", super.update(c)
            }

            handleKey(c) {
                if (this.disabled) return;
                const $ = this.keyHandlers[c.code];
                $ && $(c)
            }

            reset() {
                this.value = this.initialValue, this.dirty = !1
            }
        }

        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], mt.prototype, "name", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], mt.prototype, "value", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean
        }), (0, i.w6)("design:type", Object)], mt.prototype, "disabled", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Boolean)], mt.prototype, "valid", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], mt.prototype, "dirty", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], mt.prototype, "status", void 0);
        let ls = class extends mt {
            constructor() {
                super(...arguments), this.size = "normal"
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      :host {
        display: inline;
      }

      .checkbox__input {
        cursor: pointer;
        display: inline-block;
        width: 20px;
        height: 20px;
        appearance: none;
        border-radius: 2px;
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        margin: 0 8px 0 0;
        transition: background-size 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        outline: none;
        background-size: 0 0;
      }

      .checkbox__input:focus {
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      :host([size='large']) .checkbox__input {
        width: 24px;
        height: 24px;
        padding: 11px;
      }

      .checkbox__input:checked {
        background-image: url("data:image/svg+xml,%3Csvg width='10' height='8' viewBox='0 0 10 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M2 3L4 5L8 0L10 1L4 8L0 4L2 3Z' fill='%238BE1E0'%3E%3C/path%3E%3C/svg%3E");
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      .checkbox__input:indeterminate {
        background-image: linear-gradient(
          0deg,
          ${(0, t.asCssProp)(o.colors.gunmetal[900])} 45%,
          ${(0, t.asCssProp)(o.colors.apocyan[300])} 45%,
          ${(0, t.asCssProp)(o.colors.apocyan[300])} 55%,
          ${(0, t.asCssProp)(o.colors.gunmetal[900])} 55%
        );
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      .checkbox__label {
        position: relative;
        display: flex;
        place-content: center stretch;
        place-items: center;
        flex: 1 0 auto;
      }

      .checkbox__input:focus {
        box-shadow: 0 0 6px ${(0, t.asCssProp)(o.colors.apocyan[300])}, 0 0 2px ${(0, t.asCssProp)(o.colors.apocyan[300])} inset;
      }
    `
            }

            getInputHandler(c) {
                return $ => {
                    $.stopPropagation(), this.updateValue(c, $.target.checked), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
                }
            }

            onChange(c) {
                c.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
            }

            updateValue(c, $) {
                this.value = $
            }

            activate() {
                const c = this.renderRoot.querySelector("input");
                c && c.click()
            }

            unfocus(c) {
                c.x > 0 && c.y > 0 && c.target.blur()
            }

            render() {
                return e.dy`
      <input
        type="checkbox"
        class="checkbox__input"
        @input=${this.getInputHandler(!0)}
        @change=${this.onChange}
        @click=${this.unfocus}
        .checked=${this.value}
        .indeterminate="${void 0 === this.value}"
        .disabled=${this.disabled}
        data-test-id="checkbox-native-element"
      />
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], ls.prototype, "size", void 0), ls = (0, i.gn)([(0, f.M)("gu-checkbox")], ls);
        let xs = class extends ls {
            constructor() {
                super(...arguments), this.options = [], this.value = []
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      :host {
        display: flex;
        place-content: center space-between;
        margin: 8px 0 16px 0;
        gap: 8px;
      }

      :host([layout='vertical']) {
        flex-direction: column;
      }
    `
            }

            updateValue(c, $) {
                $ ? this.value.splice(this.value.push(c)) : this.value.splice(this.value.indexOf(c), 1)
            }

            activate() {
                const c = this.renderRoot.querySelector("input");
                c && c.focus()
            }

            render() {
                return e.dy`
      ${this.options.map(c => e.dy`
          <label class="checkbox__label">
            <input
              type="checkbox"
              class="checkbox__input"
              @input=${this.getInputHandler(c.value)}
              @change=${this.onChange}
              @click=${this.unfocus}
              .checked=${!!this.value.find($ => $ == c.value)}
              .disabled=${this.disabled}
              data-test-id="checkbox-native-element"
            />
            <gu-body-text size="medium" plain="true">${c.label}</gu-body-text>
          </label>
        `)}
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Array)], xs.prototype, "options", void 0), xs = (0, i.gn)([(0, f.M)("gu-checkbox-group")], xs);
        var js = n(30252);
        let x = class extends e.oi {
            constructor() {
                super(...arguments), this.controls = []
            }

            static get styles() {
                return e.iv`
      :host {
        display: block;
      }
    `
            }

            connectedCallback() {
                super.connectedCallback(), this.addEventListener("registerFormControl", this.registerControl), this.addEventListener("implicitSubmit", this.handleSubmissionRequest)
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.removeEventListener("registerFormControl", this.registerControl), this.removeEventListener("implicitSubmit", this.handleSubmissionRequest)
            }

            registerControl(c) {
                c.stopPropagation(), this.controls.push(c.detail.control)
            }

            handleSubmissionRequest(c) {
                c.stopPropagation();
                const $ = this.findInvalidControl();
                $ ? $.activate() : this.submit()
            }

            findInvalidControl() {
                return this.controls.find(c => !c.valid)
            }

            submit() {
                this.dispatchEvent(new CustomEvent("submit", {detail: {values: this.controls.reduce((c, $) => (c[$.name] = $.value, c), {})}}))
            }

            render() {
                return e.dy`<slot></slot>`
            }
        };
        (0, i.gn)([(0, js.v)("", !0), (0, i.w6)("design:type", Array)], x.prototype, "slotted", void 0), x = (0, i.gn)([(0, f.M)("gu-form")], x);
        let j = class extends e.oi {
            constructor() {
                super(...arguments), this.for = "", this.id = `gu-label-${(0, Es.v4)()}`
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        place-content: center flex-start;
        cursor: default;
        pointer-events: all;
      }
    `
            }

            connectedCallback() {
                super.connectedCallback(), this.addEventListener("click", this.onClick), this.associate()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.removeEventListener("click", this.onClick)
            }

            associate(c) {
                Promise.resolve().then(() => {
                    const $ = this.findTarget();
                    !$ || $ === this.target || (this.target && this.target.removeAttribute("aria-labelledby"), $.setAttribute("aria-labelledby", this.id), this.target = $)
                })
            }

            findTarget() {
                return this.for ? this.getRootNode().getElementById(this.for) : this.slotted ? this.slotted.find(c => c instanceof mt) : void 0
            }

            onClick(c) {
                const $ = this.target;
                $ && c.target !== $ && $.activate()
            }

            render() {
                return e.dy`<slot @slotchange=${this.associate} class="label__slot"></slot>`
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], j.prototype, "for", void 0), (0, i.gn)([(0, p.C)({reflect: !0}), (0, i.w6)("design:type", Object)], j.prototype, "id", void 0), (0, i.gn)([(0, js.v)("", !0), (0, i.w6)("design:type", Array)], j.prototype, "slotted", void 0), j = (0, i.gn)([(0, f.M)("gu-label")], j);
        const d = {
            email: "email",
            phone: "tel",
            name: "text",
            search: "search",
            text: "text",
            url: "url",
            number: "number"
        }, I = {invalid: "alert_triangle", valid: "checkbox_tick", initial: ""};
        let V = class extends mt {
            constructor() {
                super(...arguments), this.size = "normal", this.type = "text", this.placeholder = "", this.keyHandlers = {
                    Escape: () => this.reset(),
                    Enter: () => this.dispatchEvent(new CustomEvent("implicitSubmit", {
                        detail: {control: this},
                        bubbles: !0,
                        composed: !0
                    }))
                }
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      :host {
        display: flex;
        margin: 8px 0 16px 0;
        position: relative;
      }

      .input__input {
        appearance: none;
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        background: transparent;
        display: inline-block;
        height: 26px;
        border-radius: 2px;
        padding: 4px 28px 4px 8px;
        transition: background-color 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        flex: 1 1 auto;
        outline: none;
        color: ${(0, t.asCssProp)(o.colors.light[100])};
        font-size: 16px;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
      }

      .input__input::selection {
        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        color: ${(0, t.asCssProp)(o.colors.light[100])};
      }

      .input__input::placeholder {
        color: ${(0, t.asCssProp)(o.colors.light[700])};
      }

      .input__input--status-initial {
        padding-right: 8px;
      }

      .input__icon {
        position: absolute;
        display: flex;
        top: 0;
        right: 0;
        width: 36px;
        height: 36px;
        font-size: 24px;
        place-content: center;
        place-items: center;
        color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        transition: color 0.2s ease;
        pointer-events: none;
      }

      :host(:focus-within) .input__input {
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      :host(:focus-within) .input__icon {
        color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      .input__icon--status-initial {
        opacity: 0;
      }

      .input__input--status-invalid,
      :host(:focus-within) .input__input--status-invalid {
        border-color: ${(0, t.asCssProp)(o.colors.alert)};
      }

      .input__icon--status-invalid,
      :host(:focus-within) .input__icon--status-invalid {
        color: ${(0, t.asCssProp)(o.colors.alert)};
      }

      :host([size='large']) .input__input {
        height: 30px;
        font-size: 16px;
        padding: 4px 36px 4px 8px;
      }

      :host([size='large']) .input__icon {
        height: 38px;
        width: 38px;
        font-size: 28px;
      }
    `
            }

            onChange() {
                this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
            }

            onInput(c) {
                this.value = c.target.value, c.stopPropagation(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
            }

            activate() {
                this.input.focus()
            }

            getInputType() {
                return d[this.type]
            }

            renderIcon() {
                return e.dy`
      <gu-icon class="input__icon input__icon--status-${this.status}" iconLigature=${I[this.status]}></gu-icon>
    `
            }

            render() {
                var c;
                return e.dy`
      <input
        type=${this.getInputType()}
        .value=${null !== (c = this.value) && void 0 !== c ? c : ""}
        class="input__input input__input--status-${this.status}"
        @input="${this.onInput}"
        @change=${this.onChange}
        placeholder=${this.placeholder}
        .disabled=${this.disabled}
        data-test-id="input-native-element"
      />
      ${this.renderIcon()}
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], V.prototype, "size", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], V.prototype, "type", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], V.prototype, "placeholder", void 0), (0, i.gn)([(0, C.I)(".input__input"), (0, i.w6)("design:type", HTMLInputElement)], V.prototype, "input", void 0), V = (0, i.gn)([(0, f.M)("gu-input")], V);
        var h = n(61462);
        const L = {hidden: "password", visible: "text"},
            l = {visible: "action_showPassword", hidden: "action_hidePassword"};
        let O = class extends V {
            constructor() {
                super(...arguments), this.mode = "hidden"
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      .input__toggle {
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        width: 36px;
        height: 36px;
        outline: none;
        text-decoration: none;
      }

      .input__toggle:focus {
        box-shadow: 0 0 2px ${(0, t.asCssProp)(o.colors.apocyan[300])}, 0 0 8px ${(0, t.asCssProp)(o.colors.apocyan[300])} inset;
      }

      .input__icon--status-initial {
        opacity: 1;
      }

      :host([disabled]) .input__toggle {
        ${(0, t.asCssProp)((0, h.userSelect)("none"))};
      }
    `
            }

            toggleMode(c) {
                c.stopPropagation(), c.preventDefault(), !this.disabled && (this.mode = "hidden" === this.mode ? "visible" : "hidden", c.detail > 0 && this.input.focus())
            }

            getInputType() {
                return L[this.mode]
            }

            renderIcon() {
                return e.dy`
      <a
        class="input__toggle"
        href="javascript:void(0)"
        @click=${this.toggleMode}
        @keyup=${c => c.stopPropagation()}
        data-test-id="password-input-visibility-toggle"
      >
        <gu-icon
          class="input__icon input__icon--status-${this.status} input__icon--mode-${this.mode}"
          iconLigature=${l[this.mode]}
        ></gu-icon>
      </a>
    `
            }
        };
        (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", String)], O.prototype, "mode", void 0), O = (0, i.gn)([(0, f.M)("gu-password-input")], O);
        let Z = class extends mt {
            constructor() {
                super(...arguments), this.options = [], this.size = "normal"
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      :host {
        display: flex;
        place-content: center space-between;
        margin: 8px 0 16px 0;
        gap: 8px;
      }

      .radio-button__input {
        ${(0, t.asCssProp)((0, h.userSelect)("none"))}
        cursor: pointer;
        display: inline-block;
        width: 20px;
        height: 20px;
        appearance: none;
        border-radius: 50%;
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        margin: 0 8px 0 0;
        transition: background-size 0.2s ease, border-color 0.2s ease;
        outline: none;
        background: radial-gradient(
            circle at center,
            ${(0, t.asCssProp)(o.colors.apocyan[300])} 50%,
            ${(0, t.asCssProp)(o.colors.gunmetal[900])} 50%
          )
          no-repeat center;
        background-size: 0 0;
      }

      .radio-button__input:focus {
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      .radio-button__input:checked,
      :host([size='large']) .radio-button__input:checked {
        border-color: var(--gu-blue);
        background-size: 18px 18px;
      }

      :host([size='large']) .radio-button__input {
        width: 24px;
        height: 24px;
      }

      .radio-button__label {
        display: flex;
        place-content: center stretch;
        place-items: center;
        flex: 1 0 auto;
        color: ${(0, t.asCssProp)(o.colors.light[100])};
      }

      :host([layout='vertical']) {
        flex-direction: column;
      }
    `
            }

            getInputHandler(c) {
                return $ => {
                    $.stopPropagation(), this.value = c, this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
                }
            }

            onChange(c) {
                c.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
            }

            activate() {
                let c = this.renderRoot.querySelector("input:checked");
                c || (c = this.renderRoot.querySelector("input")), c.focus()
            }

            unfocus(c) {
                c.x > 0 && c.y > 0 && c.target.blur()
            }

            render() {
                return e.dy`
      ${this.options.map(c => e.dy`
          <label class="radio-button__label">
            <input
              type="radio"
              class="radio-button__input"
              @input=${this.getInputHandler(c.value)}
              @change=${this.onChange}
              @click=${this.unfocus}
              .checked=${this.value == c.value}
              .disabled=${this.disabled}
              data-test-id="radio-button-native-element"
            />
            <gu-body-text size="medium" plain="true">${c.label}</gu-body-text>
          </label>
        `)}
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Array)], Z.prototype, "options", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Z.prototype, "size", void 0), Z = (0, i.gn)([(0, f.M)("gu-radio-button-group")], Z);
        let X = class extends mt {
            constructor() {
                super(...arguments), this.value = 50, this.min = 0, this.max = 100, this.updateHelper = c => {
                    requestAnimationFrame(() => requestAnimationFrame(c))
                }
            }

            static get styles() {
                const c = e.iv`linear-gradient(90deg, #AFFAED 0%, #8BE1E0 50.34%, #54BBCD 100%)`, $ = e.iv`
      border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[900])};
      height: 26px;
      width: 8px;
      border-radius: 4px;
      background: ${(0, t.asCssProp)(o.colors.apocyan[100])};
      cursor: pointer;
    `, z = e.iv`
      width: 100%;
      height: 16px;
      cursor: pointer;
      border: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
      box-shadow: 0 0 6px rgba(0, 0, 0, 0.35);
      border-radius: 4px;
    `, re = e.iv`
      background: ${c}, ${(0, t.asCssProp)(o.colors.gunmetal[700])};
      background-size: var(--value, 0) 100%;
      background-repeat: no-repeat;
      transition: var(--transition, 'background-size') 0.5s ease;
    `;
                return e.iv`
      ${super.styles}

      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        margin: 8px 0 16px 0;
      }

      .range__input {
        -webkit-appearance: none;
        width: 100%;
        background: transparent;
        outline: none;
      }

      .range__input:focus {
        outline: none;
      }

      .range__input::-webkit-slider-thumb {
        -webkit-appearance: none;
        margin-top: -7px;
        ${$}
      }

      .range__input::-moz-range-thumb {
        ${$}
      }

      .range__input::-ms-thumb {
        ${$}
      }

      .range__input::-webkit-slider-runnable-track {
        ${z}
        ${re}
      }

      .range__input::-moz-range-track {
        ${z}
        ${re}
      }

      .range__input::-ms-track {
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        ${z}
      }

      .range__input::-ms-fill-lower {
        background: ${c};
        border: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
      }

      .range__input::-ms-fill-upper {
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])}
        border: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
      }

      .range__input:focus,
      .range__input:focus-within,
      .range__input:focus::-webkit-slider-thumb,
      .range__input:focus-within::-webkit-slider-thumb {
        box-shadow: 0 0 8px ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }
    `
            }

            updateSelectedRangeHighlight() {
                this.style.setProperty("--value", Math.min(100, Math.max(0, (this.value - this.min) / (this.max - this.min) * 100)) + "%")
            }

            onInput(c) {
                c.stopPropagation();
                const $ = c.target;
                void 0 !== $.value && (this.value = parseFloat($.value), this.updateSelectedRangeHighlight(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}})))
            }

            onChange(c) {
                c.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
            }

            update(c) {
                super.update(c), c.has("value") && this.updateHelper(this.updateSelectedRangeHighlight.bind(this))
            }

            firstUpdated(c) {
                super.firstUpdated(c), this.style.setProperty("--value", "0%"), this.updateHelper = $ => $(), this.style.setProperty("--transition", "background-size"), setTimeout(() => {
                    this.style.setProperty("--transition", "none")
                }, 500)
            }

            activate() {
                this.input.focus()
            }

            render() {
                return e.dy`
      <input
        type="range"
        class="range__input"
        .value=${this.value}
        min=${this.min}
        max=${this.max}
        @input=${this.onInput}
        @change=${this.onChange}
        .disabled=${this.disabled}
        data-test-id="range-input-native-element"
      />
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], X.prototype, "value", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], X.prototype, "min", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], X.prototype, "max", void 0), (0, i.gn)([(0, C.I)(".range__input"), (0, i.w6)("design:type", HTMLInputElement)], X.prototype, "input", void 0), X = (0, i.gn)([(0, f.M)("gu-range-input")], X);
        let be = class extends mt {
            constructor() {
                super(...arguments), this.placeholder = "", this.options = [], this.stretch = !1, this.open = !1
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      :host {
        display: flex;
        position: relative;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        margin: 8px 0 16px 0;
      }

      .select__container {
        position: absolute;

        display: flex;
        flex-direction: column;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[300])};
        border-radius: 2px;
        box-sizing: border-box;
        min-height: 36px;

        cursor: pointer;
      }

      :host([stretch]) .select__container {
        width: 100%;
      }

      .select__heading {
        display: flex;
        justify-content: space-between;
        align-items: center;
        vertical-align: center;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1.75))};
        height: 20px;
        line-height: 20px;
        outline: none;
        text-decoration: none;
      }

      .select__icon {
        margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      .select__menu {
        display: flex;
        flex-direction: column;
        max-height: 200px;
        overflow-y: auto;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        transition: max-height 0.2s ease;
      }

      .select__menu::-webkit-scrollbar {
        width: 12px;
        border: 2px solid transparent;
      }

      .select__menu::-webkit-scrollbar-thumb {
        background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        border-radius: 6px;
        background-clip: padding-box;
        border: 4px solid rgba(0, 0, 0, 0);
      }

      .select__menu--visibility-hidden {
        max-height: 0;
      }

      .select__option {
        width: 100%;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))} ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        box-sizing: border-box;
      }

      .select__option:hover {
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
      }

      .select__option--selected {
        font-weight: bold;
      }

      :host(:focus-within) .select__container {
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      :host([disabled]) .select__heading {
        ${(0, t.asCssProp)((0, h.userSelect)("none"))};
      }
    `
            }

            update(c) {
                var $;
                if (c.has("disabled") && this.disabled && (this.open = !1), c.has("options")) {
                    const z = this.findSelectedOption();
                    this.value = null !== ($ = null == z ? void 0 : z.value) && void 0 !== $ ? $ : void 0
                }
                (c.has("value") || c.has("options")) && this.notify(), super.update(c)
            }

            toggleOpen(c) {
                this.open = !this.disabled && (void 0 !== c ? c : !this.open)
            }

            getToggleIcon() {
                return this.open ? "chevron_up" : "chevron_down"
            }

            renderSelectOptions() {
                return e.dy`
      ${this.options.map(c => e.dy`<a
            href="javascript:void(0)"
            @click=${() => this.selectOption(c)}
            class=${(0, P.$)({select__option: !0, "select__option--selected": this.value === c.value})}
            ><gu-body-text
              size="medium"
              fillColor="colors.light.100"
              fontWeight=${this.value === c.value ? "bold" : "normal"}
              plain="true"
              >${c.label}</gu-body-text
            >
          </a>`)}
    `
            }

            selectOption(c) {
                this.value = c ? c.value : void 0, this.open = !1
            }

            notify() {
                this.dispatchEvent(new CustomEvent("input", {
                    composed: !0,
                    bubbles: !0,
                    detail: {value: this.value}
                })), this.dispatchEvent(new CustomEvent("change", {
                    composed: !0,
                    bubbles: !0,
                    detail: {value: this.value}
                }))
            }

            activate() {
                this.link.focus()
            }

            handleKeyPress(c) {
                if (!this.disabled) switch (c.code) {
                    case"Enter":
                    case"Space":
                        this.toggleOpen();
                        break;
                    case"Escape":
                        this.toggleOpen(!1)
                }
            }

            findSelectedOption() {
                return this.options.find(c => c.value === this.value)
            }

            render() {
                const c = this.findSelectedOption();
                return e.dy`
      <div class="select__container">
        <a
          href="javascript:void(0)"
          @click=${() => this.toggleOpen()}
          @keyup=${this.handleKeyPress}
          data-test-id="select.heading.anchor"
          class="select__heading"
          tabindex="0"
        >
          <gu-body-text size="medium" data-test-id="select.heading.text" fillColor="colors.light.300" plain="true">
            ${this.value && c ? c.label : this.placeholder}
          </gu-body-text>
          <gu-icon class="select__icon" iconLigature="${this.getToggleIcon()}" fillColor="colors.light.300"></gu-icon>
        </a>
        <div
          class=${(0, P.$)({select__menu: !0, "select__menu--visibility-hidden": !this.open})}
        >
          ${this.renderSelectOptions()}
        </div>
      </div>
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], be.prototype, "placeholder", void 0), (0, i.gn)([(0, p.C)({type: Array}), (0, i.w6)("design:type", Array)], be.prototype, "options", void 0), (0, i.gn)([(0, p.C)({
            type: Boolean,
            reflect: !0
        }), (0, i.w6)("design:type", Object)], be.prototype, "stretch", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], be.prototype, "open", void 0), (0, i.gn)([(0, C.I)(".select__heading"), (0, i.w6)("design:type", HTMLAnchorElement)], be.prototype, "link", void 0), be = (0, i.gn)([(0, f.M)("gu-select")], be);
        let Ie = class extends mt {
            constructor() {
                super(...arguments), this.size = "normal", this.placeholder = ""
            }

            static get styles() {
                return e.iv`
      ${super.styles}

      :host {
        display: flex;
        margin: 8px 0 16px 0;
        position: relative;
      }

      .textarea__input {
        appearance: none;
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        background: transparent;
        display: inline-block;
        height: 26px;
        border-radius: 2px;
        padding: 4px 8px 4px 8px;
        transition: background-color 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        flex: 1 1 auto;
        outline: none;
        color: ${(0, t.asCssProp)(o.colors.light[100])};
        font-size: 16px;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        min-height: 5em;
      }

      .textarea__input::selection {
        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        color: ${(0, t.asCssProp)(o.colors.light[100])};
      }

      .textarea__input::placeholder {
        color: ${(0, t.asCssProp)(o.colors.light[700])};
      }

      .textarea__input--status-initial {
        padding-right: 8px;
      }

      :host(:focus-within) .textarea__input {
        border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
      }

      .textarea__input--status-invalid,
      :host(:focus-within) .textarea__input--status-invalid {
        border-color: ${(0, t.asCssProp)(o.colors.alert)};
      }

      :host([size='large']) .textarea__input {
        height: 30px;
        font-size: 16px;
        padding: 4px 36px 4px 8px;
      }
    `
            }

            onChange() {
                this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
            }

            onInput(c) {
                this.value = c.target.value, c.stopPropagation(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
            }

            activate() {
                this.input.focus()
            }

            render() {
                var c;
                return e.dy`
      <textarea
        class="textarea__input textarea__input--status-${this.status}"
        @input="${this.onInput}"
        @change=${this.onChange}
        placeholder=${this.placeholder}
        .disabled=${this.disabled}
        data-test-id="textarea-native-element"
        .value=${null !== (c = this.value) && void 0 !== c ? c : ""}
      ></textarea>
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Ie.prototype, "size", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Ie.prototype, "placeholder", void 0), (0, i.gn)([(0, C.I)(".textarea__input"), (0, i.w6)("design:type", HTMLTextAreaElement)], Ie.prototype, "input", void 0), Ie = (0, i.gn)([(0, f.M)("gu-textarea")], Ie);
        let Re = class extends e.oi {
            constructor() {
                super(...arguments), this.errors = [], this.enabled = !1
            }

            static get styles() {
                return e.iv`
      :host {
        display: block;
        cursor: default;
        pointer-events: all;
        color: ${(0, t.asCssProp)(o.colors.alert)};
        margin: -12px 0 0 0;
        padding: 0 0 16px 0;
      }

      ::slotted(*) {
        display: block;
        max-height: 0;
        opacity: 0;
        transition: max-height 0.2s ease, opacity 0.2s ease;
        overflow: hidden;
      }

      ::slotted(.validation-errors--active) {
        max-height: 1.4em;
        opacity: 1;
      }
    `
            }

            updated(c) {
                super.updated(c), c.has("errors") && this.updateErrors()
            }

            updateErrors() {
                Promise.resolve().then(() => {
                    !this.slotted || this.slotted.forEach(c => c.classList.toggle("validation-errors--active", !(!this.enabled || !this.errors.find($ => $ === c.getAttribute("key")))))
                })
            }

            render() {
                return e.dy`<slot @slotchange=${this.updateErrors()}></slot>`
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Array)], Re.prototype, "errors", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Re.prototype, "enabled", void 0), (0, i.gn)([(0, js.v)("", !0, "[key]"), (0, i.w6)("design:type", Array)], Re.prototype, "slotted", void 0), Re = (0, i.gn)([(0, f.M)("gu-validation-errors")], Re);
        const it = (0, r.gridUnits)(.5), pt = e.iv`
  :host {
    width: 100%;
    display: flex;
  }

  .innerContainer {
    width: 100%;
    padding-bottom: 140%;
    margin: auto;
    position: relative;
    cursor: pointer;
  }

  .innerContainer__board {
    position: absolute;
    height: 71%;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
  }

  .innerContainer__trinkets {
    padding-top: ${(0, t.asCssProp)(it)};
    position: absolute;
    bottom: 0;
    left: 0;
    height: 28%;
    width: 100%;
    display: flex;
  }

  .innerContainer__trinkets__trinket,
  .innerContainer__trinkets__emptyTrinket {
    flex: 1;
    overflow: hidden;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
    position: relative;
  }

  .innerContainer__trinkets__emptyTrinket {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
  }

  .innerContainer__trinkets__trinket::after,
  .innerContainer__trinkets__emptyTrinket::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 1px rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.white))}, 0.15);
  }

  .innerContainer__trinkets__trinket--left {
    margin-right: ${(0, t.asCssProp)(it)};
    order: -1;
  }

  .innerContainer__trinkets__trinket--right {
    order: 2;
  }

  .innerContainer__trinkets__emptyTrinket:first-of-type:not(:last-of-type) {
    margin-right: ${(0, t.asCssProp)(it)};
  }
`;
        let ze = class extends e.oi {
            static get styles() {
                return pt
            }

            renderIcon() {
                return this.trinkets.length > 0 ? e.dy`` : e.dy`<gu-icon
      iconLigature="empty"
      class="innerContainer__trinkets__emptyTrinket"
      data-test-id="loadout-display-icon"
    ></gu-icon>`
            }

            render() {
                return e.dy`
      <div class="innerContainer">
        <gu-loadout-part
          class="innerContainer__board"
          .board=${this.board}
          ?owned=${!0}
          ?hideCount=${!0}
          ?noAspectRatio=${!0}
          ?hideText=${this.hideText}
          data-test-id="loadout-display-board"
        ></gu-loadout-part>
        <div class="innerContainer__trinkets">
          ${this.trinkets.map(c => e.dy`
              <gu-loadout-part
                class=${(0, P.$)({
                    innerContainer__trinkets__trinket: !0,
                    "innerContainer__trinkets__trinket--left": 1 === c.slot,
                    "innerContainer__trinkets__trinket--right": 2 === c.slot
                })}
                .trinket=${c}
                ?hideText=${!0}
                ?noAspectRatio=${!0}
                ?hideCount=${!0}
                data-test-id="loadout-display-trinket"
              ></gu-loadout-part>
            `)}
          ${this.renderIcon()}
        </div>
      </div>
    `
            }
        };
        (0, i.gn)([(0, p.C)({type: Object}), (0, i.w6)("design:type", Object)], ze.prototype, "board", void 0), (0, i.gn)([(0, p.C)({type: Array}), (0, i.w6)("design:type", Array)], ze.prototype, "trinkets", void 0), (0, i.gn)([(0, p.C)({type: Boolean}), (0, i.w6)("design:type", Boolean)], ze.prototype, "hideText", void 0), ze = (0, i.gn)([(0, f.M)("gu-loadout-display")], ze), n(90004);
        let ve = class extends e.oi {
            constructor() {
                super(...arguments), this.size = 40, this.type = "godsunchained", this.images = {
                    godsunchained: "/assets/images/logo--gods-unchained.svg",
                    "godsunchained-icon": "/assets/images/internal-logos/logo--gods-unchained-icon.png",
                    immutable: "/assets/images/internal-logos/logo--immutable.svg",
                    "immutable-icon": "/assets/images/logo--immutable-icon.svg"
                }
            }

            static get properties() {
                return {size: {type: Number}, type: {type: String}}
            }

            static get styles() {
                return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
      }

      .logo {
        max-width: var(--logoSize, 400px);
        width: 100%;

        /* Allow to make image non-interactable with host styles */
        -webkit-touch-callout: inherit;
        -webkit-user-drag: inherit;
      }

      .logo--icon {
        width: var(--logoSize, 40px);
      }
    `
            }

            render() {
                return this.size && this.style.setProperty("--logoSize", `${this.size}px`), e.dy`
      <img class="${this.size < 100 ? "logo--icon" : "logo"}" alt="Gods Unchained Logo" src="${this.images[this.size < 100 ? `${this.type}-icon` : this.type]}" />
    `
            }
        };
        ve = (0, i.gn)([(0, f.M)("gu-logo")], ve);
        const Pt = G => !G || G.length < 11 ? G : `${G.slice(0, 6)}...${G.slice(G.length - 4)}`;
        let bt = class extends e.oi {
            constructor() {
                super(...arguments), this.walletDropdownMenuOptions = [], this.onGuUnlinkClick = (() => {
                    this.dispatchEvent(new CustomEvent("onGuUnlinkClick", {
                        composed: !0,
                        bubbles: !0,
                        detail: {address: this.address}
                    }))
                }).bind(this), this.onDropdownSelect = (c => {
                    c.stopPropagation(), this.dispatchEvent(new CustomEvent("onDropdownSelect", {
                        composed: !0,
                        bubbles: !0,
                        detail: {address: this.address, menuItem: c.detail}
                    }))
                }).bind(this)
            }

            static get styles() {
                return e.iv`
      :host {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        background-color: ${(0, t.asCssProp)(o.colors.light[100])};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid ${(0, t.asCssProp)(o.colors.light[300])};
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      .defaultSticker {
        position: absolute;
        top: 0;
        left: 0;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
        background-color: ${(0, t.asCssProp)(o.colors.apocyan[500])};
        border-radius: 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0;
      }

      .address__text--regular {
        display: none;
      }

      .address__shortener {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(34))};
      }

      .action {
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(o.colors.dark[300])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        display: flex;
        justify-content: center;
        cursor: pointer;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        user-select: none;
      }

      .action:hover {
        background: ${(0, t.asCssProp)(o.colors.dark[300])};
      }

      .action:hover .action__icon {
        color: ${(0, t.asCssProp)(o.colors.light[100])};
      }

      .action__icon {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      .imxLinked_status {
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: default;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        margin-left: auto;
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(41.25))};
      }

      .imxLinked_status__tick {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        }
        .address__text--small {
          display: none;
        }
        .address__text--regular {
          display: unset;
        }
        .imxLinked_status {
          margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        }
      }
    `
            }

            render() {
                return e.dy`
      ${this.defaultWalletEnabled && this.defaultWallet ? e.dy` <gu-paragraph-text
            text="Default"
            data-test-id="wallet-display-default-sticker"
            kind="tag"
            class="defaultSticker"
            fillColor="${o.colors.light[100]}"
            align="center"
          >
          </gu-paragraph-text>` : null}

      <gu-paragraph-text
        title=${this.address}
        class="address"
        data-test-id="wallet-display-address"
        fillColor="colors.dark.500"
        kind="small"
        .responsiveKind=${[{breakpoint: "small", kind: "large"}]}
        fontWeight="bold"
        align="left"
      >
        <span class="address__text--regular"> ${this.address} </span>
        <span class="address__text--small"> ${Pt(this.address)} </span>
        <span></span>
      </gu-paragraph-text>

      ${this.imxLinked ? e.dy`
            <!-- Can't replace this with gu-standard-button as it's non standard -->
            <gu-plain-square-button
              backgroundFillColor="colors.light.300"
              borderColor="colors.light.300"
              fillColor="colors.dark.300"
              icon="immutableX"
              class="imxLinked_status"
              iconColor="colors.dark.300"
              data-test-id="wallet-display-imx-linked-status"
            >
              <gu-icon
                fillColor="colors.apocyan.500"
                iconLigature="checkbox_tick"
                class="imxLinked_status__tick"
              ></gu-icon>
              Linked to
            </gu-plain-square-button>
          ` : e.dy`
            <!-- Can't replace this with gu-standard-button as it's non standard -->
            <gu-plain-square-button
              backgroundFillColor="colors.light.300"
              borderColor="colors.light.300"
              fillColor="colors.light.500"
              class="imxLinked_status"
              data-test-id="wallet-display-imx-linked-status"
            >
              Unlinked
            </gu-plain-square-button>
          `}
      ${this.defaultWalletEnabled ? e.dy`
            <gu-dropdown-menu @onSelect=${this.onDropdownSelect} .items=${this.walletDropdownMenuOptions}>
              <div class="action" slot="dropdownControl">
                <gu-icon
                  class="action__icon"
                  data-test-id="wallet-display-action-icon"
                  fillColor="colors.dark.300"
                  iconLigature="action_kebabMenu"
                ></gu-icon>
              </div>
            </gu-dropdown-menu>
          ` : e.dy`
            <div class="action">
              <gu-icon
                @click=${this.onGuUnlinkClick}
                class="action__icon"
                data-test-id="wallet-display-action-icon"
                fillColor="colors.dark.300"
                iconLigature="action_trash"
              ></gu-icon>
            </div>
          `}
    `
            }
        };
        (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], bt.prototype, "address", void 0), (0, i.gn)([(0, p.C)({type: Boolean}), (0, i.w6)("design:type", Boolean)], bt.prototype, "imxLinked", void 0), (0, i.gn)([(0, p.C)({type: Boolean}), (0, i.w6)("design:type", Boolean)], bt.prototype, "defaultWalletEnabled", void 0), (0, i.gn)([(0, p.C)({type: Boolean}), (0, i.w6)("design:type", Boolean)], bt.prototype, "defaultWallet", void 0), (0, i.gn)([(0, p.C)({type: Array}), (0, i.w6)("design:type", Array)], bt.prototype, "walletDropdownMenuOptions", void 0), bt = (0, i.gn)([(0, f.M)("gu-wallet-display")], bt);
        let rt = class extends e.oi {
            constructor() {
                super(...arguments), this.userWallets = [], this.imxLinkLoading = !1, this.connectedWallet = "", this.connectedWalletGuLinked = !1, this.guLinkLoading = !1, this.walletActionLoading = "", this.defaultWalletEnabled = !1, this.walletDropdownMenuOptions = [], this.showEmptyState = !0, this.showImxLink = !1, this.allImxLinked = !1
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        width: 100%;
        background-color: ${(0, t.asCssProp)(o.colors.light[100])};
        border: ${(0, t.asCssProp)(o.colors.light[500])} solid ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        border-top: ${(0, t.asCssProp)(o.colors.gold[500])} solid ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(6))} ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
      }

      .emptyState {
        display: flex;
        flex-direction: column;
        width: 100%;
        justify-content: center;
        align-items: center;
      }

      .emptyState__icon {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      .emptyState__text {
        max-width: 450px;
      }

      .walletsList {
        display: flex;
        flex-direction: column;
        width: 100%;
      }

      .walletsList__header {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }

      .walletsList__header__ctaSection {
        display: flex;
        flex-direction: column;
      }

      .walletsList__header__ctaSection__helpButton {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(34))};
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      .walletsList__header__ctaSection__imxLinkButton {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(56))};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }

      .walletsList__header__text {
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }

      .walletsList__wallet {
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))} 0;
      }

      .walletsList__helpText {
      }
      .walletList__addWallet {
        display: flex;
        justify-content: center;
        align-items: center;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))} 0;
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
      }
      .walletList__addWallet--added {
        cursor: default;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(10))} ${(0, t.asCssProp)((0, r.gridUnits)(12.5))};
        }
        .walletsList__header {
          flex-direction: row;
        }
        .walletsList__header__ctaSection__imxLinkButton {
          margin-left: auto;
        }
        .walletsList__header__ctaSection {
          flex-direction: row;
        }

        .walletsList__header__ctaSection__helpButton {
          margin-top: 0;
        }
        .walletList__addWallet {
          height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        }
      }
    `
            }

            update(c) {
                this.showEmptyState = !(this.userWallets && this.userWallets.length || this.connectedWallet && this.connectedWallet.length), this.showImxLink = this.userWallets && this.userWallets.length > 0, this.allImxLinked = this.userWallets && this.userWallets.every($ => $.imx_linked), super.update(c)
            }

            onImxLinkClick() {
                this.dispatchEvent(new CustomEvent("onImxLinkClick", {composed: !0}))
            }

            onImxLinkHelpClick() {
                this.dispatchEvent(new CustomEvent("onImxLinkHelpClick", {composed: !0}))
            }

            onGuLinkClick() {
                this.dispatchEvent(new CustomEvent("onGuLinkClick", {bubbles: !1}))
            }

            renderDisconnected() {
                return e.dy`
      <gu-vertical-space class="emptyState" both="2x-large">
        <gu-icon class="emptyState__icon" fillColor="colors.dark.500" iconLigature="action_wallet"></gu-icon>
        <gu-paragraph-text align="center" class="emptyState__text" fillColor="colors.dark.300">
          No wallet detected. Connect your web wallet to get started.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
            }

            renderImxLink() {
                return this.showImxLink ? this.allImxLinked ? e.dy`
        <div class="walletsList__header__ctaSection">
          <gu-standard-button
            theme="light"
            icon="immutableX"
            iconPosition="right"
            class="walletsList__header__ctaSection__imxLinkButton"
            type="primary"
            .disabled=${!0}
          >
            All wallets linked to
          </gu-standard-button>
        </div>
      ` : e.dy`
      <div class="walletsList__header__ctaSection">
        <gu-standard-button
          theme="light"
          icon="immutableX"
          iconPosition="right"
          class="walletsList__header__ctaSection__imxLinkButton"
          type="primary"
          @click=${this.onImxLinkClick}
          .loading=${this.imxLinkLoading}
        >
          Link a wallet to
        </gu-standard-button>

        <gu-standard-button
          theme="light"
          class="walletsList__header__ctaSection__helpButton"
          type="secondary"
          @click=${this.onImxLinkHelpClick}
        >
          How to link?
        </gu-standard-button>
      </div>
    ` : e.dy``
            }

            renderWallet() {
                return this.connectedWallet && this.connectedWallet.length ? this.connectedWalletGuLinked ? e.dy`
        <!-- Can't replace this with gu-standard-button as it's non standard -->
        <gu-plain-square-button
          backgroundFillColor="colors.light.100"
          borderColor="colors.light.300"
          fillColor="colors.dark.300"
          iconColor="colors.god.nature.secondary"
          icon="checkbox_tick"
          leftIconPosition="true"
          class="walletList__addWallet walletList__addWallet--added"
        >
          Current wallet added
        </gu-plain-square-button>
      ` : e.dy`
      <!-- Can't replace this with gu-standard-button as it's non standard -->
      <gu-plain-square-button
        backgroundFillColor="colors.light.100"
        borderColor="colors.light.300"
        fillColor="colors.apocyan.500"
        class="walletList__addWallet"
        @click=${this.onGuLinkClick}
        icon="add_item"
        leftIconPosition="true"
        loading=${this.guLinkLoading ? "true" : "false"}
        loadingColor="apocyan"
      >
        Add wallet to GU
      </gu-plain-square-button>
    ` : e.dy``
            }

            render() {
                return this.showEmptyState ? this.renderDisconnected() : e.dy`
      <gu-vertical-space class="walletsList">
        <gu-vertical-space class="walletsList__header" bottom="large">
          <gu-paragraph-text class="walletsList__header__text" fillColor="colors.dark.300">
            Wallets connected to Gods Unchained account
          </gu-paragraph-text>
          ${this.renderImxLink()}
        </gu-vertical-space>
        ${this.userWallets.map(c => this.walletActionLoading === c.address ? e.dy`
              <div class="walletList__addWallet"><gu-rectangular-spinner color="apocyan"></gu-rectangular-spinner></div>
            ` : e.dy` <gu-wallet-display
            address=${c.address}
            .walletDropdownMenuOptions=${this.walletDropdownMenuOptions}
            ?imxLinked="${c.imx_linked}"
            ?defaultWallet="${c.is_default}"
            ?defaultWalletEnabled="${this.defaultWalletEnabled}"
            class="walletsList__wallet"
          ></gu-wallet-display>`)}
        ${this.renderWallet()}
        <gu-vertical-space top="large">
          <gu-paragraph-text align="left" class="walletsList__helpText" fillColor="colors.dark.300">
            If you have any questions, please contact
            <a target="_blank" href="https://support.godsunchained.com">support</a>.
          </gu-paragraph-text>
        </gu-vertical-space>
      </gu-vertical-space>
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Array)], rt.prototype, "userWallets", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], rt.prototype, "imxLinkLoading", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], rt.prototype, "connectedWallet", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], rt.prototype, "connectedWalletGuLinked", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], rt.prototype, "guLinkLoading", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], rt.prototype, "walletActionLoading", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], rt.prototype, "defaultWalletEnabled", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Array)], rt.prototype, "walletDropdownMenuOptions", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], rt.prototype, "showEmptyState", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], rt.prototype, "showImxLink", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], rt.prototype, "allImxLinked", void 0), rt = (0, i.gn)([(0, f.M)("gu-wallets-list")], rt);
        let $t = class extends e.oi {
            constructor() {
                super(...arguments), this.connectedWallet = "", this.webWalletConnecting = !1
            }

            onConnectBrowserWalletClick() {
                this.dispatchEvent(new CustomEvent("onConnectBrowserWalletClick", {bubbles: !1}))
            }

            onHardwareWalletClick() {
                this.dispatchEvent(new CustomEvent("onHardwareWalletClick", {bubbles: !1}))
            }

            onLearnMoreClick() {
                this.dispatchEvent(new CustomEvent("onLearnMoreClick", {bubbles: !1}))
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        flex-direction: column;
        width: 100%;
        background: ${(0, t.asCssProp)(o.colors.dark[900])};
        border-radius: 4px 4px 0 0;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(10))} ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        justify-content: space-between;
      }
      .leftSection {
        display: flex;
        flex-direction: column;
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      }
      .rightSection {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }
      .rightSection__button {
        min-width: ${(0, t.asCssProp)((0, r.gridUnits)(50))};
      }
      .rightSection__button--connectedWallet {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        cursor: default;
      }
      .rightSection__button--connectedWallet__connectedDot {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        border-radius: 50%;
        background: ${(0, t.asCssProp)(o.colors.god.nature.secondary)};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }
      .rightSection__button--walletAdded {
        cursor: default;
      }
      .rightSection__button__address {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(30))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-small"])}) {
        .rightSection {
          flex-direction: row;
          align-items: center;
        }
        .rightSection__button--connectedWallet {
          margin-bottom: 0;
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          flex-direction: row;
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(10))} ${(0, t.asCssProp)((0, r.gridUnits)(12.5))};
        }

        .leftSection {
          margin-bottom: 0;
        }
      }
    `
            }

            render() {
                return e.dy`
      <gu-vertical-space class="leftSection">
        <gu-heading-text fillGradient="gradients.gold.simple" fillGradientTarget="bottom" size="large">
          WALLETS
        </gu-heading-text>

        <gu-vertical-space class="leftSection__infoCtas">
          <gu-simple-text-button @click=${this.onLearnMoreClick}>
            Learn more about wallet linking
          </gu-simple-text-button>
          |
          <gu-simple-text-button @click=${this.onHardwareWalletClick}> Hardware Wallet? </gu-simple-text-button>
        </gu-vertical-space>
      </gu-vertical-space>
      <gu-vertical-space class="rightSection">
        ${this.connectedWallet ? e.dy`
              <!-- We need a dot icon before we can switch to using standard button -->
              <gu-plain-square-button
                backgroundFillColor="colors.dark.700"
                borderColor="colors.dark.700"
                iconColor="colors.god.nature.secondary"
                fillColor="colors.light.700"
                class="rightSection__button rightSection__button--connectedWallet"
                title=${this.connectedWallet}
              >
                <div class="rightSection__button--connectedWallet__connectedDot"></div>
                Current web wallet: ${Pt(this.connectedWallet)}
              </gu-plain-square-button>

              <!-- <gu-standard-button
                class="rightSection__button rightSection__button--connectedWallet"
                theme="dark"
                type="subtle"
                title=${this.connectedWallet}
              >
                <div class="rightSection__button--connectedWallet__connectedDot"></div>
                Current web wallet: ${Pt(this.connectedWallet)}
              </gu-standard-button> -->
            ` : e.dy`
              <gu-standard-button
                class="rightSection__button rightSection__button--connectedWallet"
                theme="dark"
                icon="action_wallet"
                class="rightSection__button"
                @click=${this.onConnectBrowserWalletClick}
                type="primary"
                .loading=${this.webWalletConnecting}
              >
                Connect Web Wallet
              </gu-standard-button>
            `}
      </gu-vertical-space>
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], $t.prototype, "connectedWallet", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], $t.prototype, "webWalletConnecting", void 0), $t = (0, i.gn)([(0, f.M)("gu-wallets-header")], $t);
        let Xt = class extends e.oi {
            constructor() {
                super(...arguments), this.goldBorder = null
            }

            static get properties() {
                return {goldBorder: {type: String}}
            }

            static get styles() {
                return e.iv`
      :host {
        position: absolute !important;
        height: 100%;
        width: 100%;
        background: ${(0, t.asCssProp)(o.gradients.gunmetal.mirror("left"))};
      }

      .border {
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        height: 100%;
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        position: relative;
      }

      .borderGoldTop:before {
        content: '';
        display: block;
        position: absolute;
        width: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(1))});
        left: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        top: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(o.gradients.gold.mirror("right"))};
        border-image-slice: 1;
        border-image-width: ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0 0 0;
      }
    `
            }

            render() {
                return e.dy`<div class="border ${"top" === this.goldBorder ? "borderGoldTop" : ""}"></div>`
            }
        };
        Xt = (0, i.gn)([(0, f.M)("gu-modal-background")], Xt);
        const yt = `\nlinear-gradient(\n  90deg,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.gunmetal[900]))}, 1) 0%,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.gunmetal[900]))}, 0.8) 25%,\n  rgba(0, 0, 0, 0) 50%,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.gunmetal[900]))}, 0.8) 75%,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.gunmetal[900]))}, 1) 100%\n)`;
        let Ss = class extends e.oi {
            static get properties() {
                return {background: {type: String}}
            }

            static get styles() {
                return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        position: relative;
        flex-direction: column;
        justify-content: center;
        width: 1200px;
        height: 800px;
        max-height: 85vh;
        border: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};

        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        background-size: cover;
      }

      :host([background='nature']) {
        background-image: ${(0, t.asCssProp)(yt)},
          url('https://images.godsunchained.com/god-art/1024/nature--aeona.webp');
        background-position-y: -238px;
      }

      :host([background='war']) {
        background-image: ${(0, t.asCssProp)(yt)},
          url('https://images.godsunchained.com/god-art/1024/war--auros.webp');
        background-position-y: -195px;
      }

      :host([background='magic']) {
        background-image: ${(0, t.asCssProp)(yt)},
          url('https://images.godsunchained.com/god-art/1024/magic--elyrian.webp');
        background-position-y: -195px;
      }

      :host([background='death']) {
        background-image: ${(0, t.asCssProp)(yt)},
          url('https://images.godsunchained.com/god-art/1024/death--malissus.webp');
        background-position-y: -330px;
      }

      :host([background='light']) {
        background-image: ${(0, t.asCssProp)(yt)},
          url('https://images.godsunchained.com/god-art/1024/light--thaeriel.webp');
        background-position-y: -267px;
      }

      :host([background='deception']) {
        background-image: ${(0, t.asCssProp)(yt)},
          url('https://images.godsunchained.com/god-art/1024/deception--ludia.webp');
        background-position-y: -336px;
      }

      :host([background='neutral']) {
        background-image: ${(0, t.asCssProp)(yt)}, url('/assets/images/misc-art/misc-art--C8-026.webp');
        background-position-y: -18px;
      }

      /* This could be improved by rendering any artId, something to look into later.
        Will be difficult though as each bg image will require a different background-position-y
      */
      :host([background='87055']) {
        background-image: ${(0, t.asCssProp)(yt)}, url('https://images.godsunchained.com/art2/1024/87055.webp');
        background-position-y: -180px;
      }

      .closeIcon {
        position: absolute;
        font-size: 24px;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        cursor: pointer;
      }
      .topSection {
        position: relative;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      .topSection__divider {
        position: absolute;
        bottom: 0;
        width: 100%;
      }

      .bottomSection {
        position: relative;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        overflow-y: auto;
        justify-content: center;
      }

      .bottomSection__cta {
        display: flex;
        justify-content: center;
      }

      .bottomSection__content {
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(24))};
        overflow-y: auto;
      }

      .bottomSection__background {
        background: #0f1b27;
        opacity: 0.9;
        width: 100%;
        height: 100%;
        position: absolute;
      }

      slot[name='bottomSectionContent']::slotted(*) {
        position: relative;
      }
    `
            }

            closeModal() {
                this.dispatchEvent(new CustomEvent("onCloseSealedDeckModal", {bubbles: !1}))
            }

            render() {
                return this.setAttribute("background", this.background), e.dy`
      <gu-vertical-space class="topSection">
        <gu-icon
          fillColor="colors.apocyan.300"
          iconLigature="close_x"
          class="closeIcon"
          @click=${this.closeModal}
        ></gu-icon>
        <slot name="topSectionSubtitle"></slot>
        <slot name="topSectionTitle"></slot>
        <slot name="topSectionHelptext"></slot>
        <img
          class="topSection__divider"
          src="/assets/images/ui-embellishments/ui--divider-simple-gradient.svg"
          alt="small divider"
        />
      </gu-vertical-space>
      <gu-vertical-space class="bottomSection">
        <div class="bottomSection__background"></div>
        <div class="bottomSection__content">
          <slot name="bottomSectionContent"></slot>
        </div>
        <gu-vertical-space class="bottomSection__cta" bottom="2x-large" top="large">
          <slot name="bottomSectionCta"></slot>
        </gu-vertical-space>
      </gu-vertical-space>
    `
            }
        };
        Ss = (0, i.gn)([(0, f.M)("gu-two-section-modal")], Ss);
        let Nt = class extends e.oi {
            constructor() {
                super(...arguments), this.entries = {}, this.active = [], this.visible = !0, this.type = "main"
            }

            static get styles() {
                return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        height: 100%;
        display: flex;
        justify-content: flex-end;
      }

      .navigation {
        width: 0;
        height: 100%;
        display: flex;
        flex-direction: column;
        place-items: flex-end flex-start;
        justify-content: space-between;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        border-right: 1px solid ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        overflow: hidden;
        transition: width ease 0.3s;
        margin-left: -1px;
      }

      .navigation__items {
        width: 100%;
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        padding: 0;
        margin: -1px 0;
        align-items: flex-end;
      }

      .navigation__item {
        width: 100%;
        padding: 0;
        margin: 0;
        cursor: pointer;
        border-bottom: 1px solid black;
        text-transform: uppercase;
        white-space: nowrap;
        overflow: hidden;
      }

      .navigation__item__link {
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        justify-content: center;
        text-decoration: none;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0;
        border-left: 2px solid transparent;
        border-right: 2px solid transparent;
        margin: -1px 0;
        box-sizing: border-box;

        -webkit-user-drag: none;
        -webkit-touch-callout: none;
      }

      .navigation--type-main.navigation--visible {
        width: 80px;
      }

      .navigation--type-main .navigation__items {
        width: 80px;
      }

      .navigation--type-main .navigation__item__link {
        color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        min-height: ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        align-items: center;
      }

      .navigation--type-sub.navigation--visible {
        width: 130px;
      }

      .navigation--type-sub .navigation__items {
        width: 130px;
      }

      .navigation--type-sub .navigation__item__link {
        color: white;
        min-height: ${(0, t.asCssProp)((0, r.gridUnits)(10))};
        padding: 0 8px;
      }

      .navigation__item__icon {
        display: block;
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(7))};
        line-height: 0;
      }

      .navigation__item__name {
        max-width: 100%;
      }

      .navigation__item--active {
        background: linear-gradient(
          90deg,
          ${(0, t.asCssProp)(o.colors.gunmetal[700] + "00")} 0%,
          ${(0, t.asCssProp)(o.colors.gunmetal[700] + "ff")} 100%
        );
      }

      .navigation__item--active .navigation__item__link {
        border-right: 2px solid #c6a052;
      }

      .navigation__item--active .navigation__item__icon,
      .navigation__item--active .navigation__item__name {
        ${(0, t.asCssProp)(o.gradients.textFill(o.gradients.gold.simple("bottom")))};
      }
    `
            }

            onClick(c) {
                this.dispatchEvent(new CustomEvent("navigation", {detail: c, bubbles: !0, composed: !0}))
            }

            renderIcon(c) {
                return c.logo ? e.dy` <gu-logo class="navigation__item__icon" type="${c.logo}" size="28"></gu-logo> ` : c.icon ? e.dy` <gu-icon class="navigation__item__icon" iconLigature=${c.icon}></gu-icon> ` : e.dy``
            }

            renderEntry(c) {
                const $ = "main" === this.type ? "micro" : "tag";
                return e.dy`
      <li
        class=${(0, P.$)({
                    navigation__item: !0,
                    "navigation__item--active": this.active && this.active.indexOf(c.key) > -1
                })}
      >
        <a
          class="navigation__item__link"
          href="javascript:void(0);"
          @click=${() => this.onClick(c)}
          data-test-id="navigation.item.link"
        >
          ${this.renderIcon(c)}

          <gu-simple-text class="navigation__item__name" kind="${$}" fontWeight="bold">
            ${c.name}
          </gu-simple-text>
        </a>
      </li>
    `
            }

            renderGroups(c) {
                return e.dy`
      ${Object.keys(c).map($ => e.dy`
          <ul class="navigation__items navigation__items--${$}">
            ${this.renderEntries(c[$])}
          </ul>
        `)}
    `
            }

            renderEntries(c) {
                return e.dy`
      ${Object.keys(c).map($ => this.renderEntry(Object.assign(Object.assign({}, c[$]), {key: $})))}
    `
            }

            render() {
                return e.dy`
      <nav
        class="${(0, P.$)({navigation: !0, [`navigation--type-${this.type}`]: !0, "navigation--visible": this.visible})}"
      >
        ${this.renderGroups(this.entries)}
        <slot></slot>
      </nav>
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Nt.prototype, "entries", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Nt.prototype, "active", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Nt.prototype, "visible", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Nt.prototype, "type", void 0), Nt = (0, i.gn)([(0, f.M)("gu-navigation")], Nt);
        let qt = class extends e.oi {
            constructor() {
                super(...arguments), this.highPriority = !1
            }

            static get styles() {
                return e.iv`
      :host {
        display: block;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        border-radius: 50%;
        background: var(--gu-yellow);
      }

      :host(.highPriority) {
        background: ${(0, t.asCssProp)(o.colors.god.war.primary)};
      }
    `
            }

            render() {
                return this.highPriority ? this.classList.add("highPriority") : this.classList.remove("highPriority"), e.dy``
            }
        };
        (0, i.gn)([(0, p.C)({type: Boolean}), (0, i.w6)("design:type", Object)], qt.prototype, "highPriority", void 0), qt = (0, i.gn)([(0, f.M)("gu-notification-bubble")], qt);
        let cs = class extends e.oi {
            constructor() {
                super(...arguments), this.progress = 0, this.coloring = "apocyan"
            }

            static get styles() {
                return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: block;
        border: solid 1px var(--gu-blue-hover);
        height: 20px;
        padding: 4px;
        position: relative;
        border-radius: 4px;
      }

      :host::before {
        content: '';
        position: absolute;
        top: 1px;
        left: 1.5px;
        height: calc(100% - 2px);
        width: calc(100% - 3px);
      }

      .progress-bar-border {
        position: absolute;
        top: 1px;
        left: 1px;
        bottom: 1px;
        right: 10px;
      }

      .progress-bar-border::before {
        content: '';
        display: block;
        height: 100%;
        width: var(--barWidth);
        border-radius: 2px;
      }

      .progress-bar {
        position: absolute;
        top: 1px;
        left: 0;
        bottom: 1px;
        right: 0;
      }

      .progress-bar::before {
        content: '';
        display: block;
        height: 100%;
        width: calc(var(--barWidth) - 1px);
        border-radius: 2px;
      }

      :host .progress-bar-border::before {
        background: var(--gu-blue);
      }

      :host .progress-bar::before {
        background: var(--gu-blue);
      }

      :host([size='small']) {
        height: 12px;
        padding: 2px 3px;
      }

      :host([size='small']) .progress-bar-border {
        top: 2px;
        left: 3px;
        bottom: 2px;
        right: 3px;
      }

      :host([size='small']) .progress-bar {
        top: 1px;
        left: 0;
        bottom: 1px;
        right: 0;
      }

      :host([size='small']) .progress-bar-border::before,
      :host([size='small']) .progress-bar::before {
        border-radius: 1px;
      }
    `
            }

            render() {
                return this.setAttribute("coloring", this.coloring), this.style.setProperty("--barWidth", `${this.progress}%`), e.dy`
      <div class="progress-bar-border">
        <div class="progress-bar" data-progress="${this.progress}" data-test-id="progress-bar"></div>
      </div>
    `
            }
        };
        (0, i.gn)([(0, p.C)({type: Number}), (0, i.w6)("design:type", Object)], cs.prototype, "progress", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], cs.prototype, "coloring", void 0), cs = (0, i.gn)([(0, f.M)("gu-hex-progress-bar")], cs);
        let hn = class extends e.oi {
            constructor() {
                super(...arguments), this.progress = 0, this.withLogo = !1
            }

            static get properties() {
                return {progress: {type: Number}, withLogo: {type: Boolean}}
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        width: 100%;
        flex: 1 1 auto;
        align-items: center;
      }

      .progress-bar {
        display: flex;
        border-radius: 5px;
        position: relative;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        height: 10px;
        width: 100%;
      }

      .progress-bar__fill {
        border-radius: 4px;
        height: 8px;
        background: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        margin: 1px;
        transition: width 500ms linear;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-large"])}) {
        .box__filling {
          /* Looks better at larger viewports like this. */
          margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
          height: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(2))});
        }
        .bridge {
          /* width: ${(0, t.asCssProp)((0, r.gridUnits)(4))}; */
        }
      }
    `
            }

            render() {
                return e.dy`
      ${this.withLogo ? e.dy`<gu-logo></gu-logo>` : ""}
      <div class="progress-bar">
        <div class="progress-bar__fill" style="width: ${(0, t.asCssProp)(this.progress.toString() + "%")};"></div>
      </div>
    `
            }
        };
        hn = (0, i.gn)([(0, f.M)("gu-progress-bar")], hn);

        class Zn extends e.oi {
            static animationStyles() {
                return e.iv`
      :host {
        opacity: 0;
        transform: translateY(60%);

        animation-duration: 0.3s;
        animation-name: scrollIn;
        animation-timing-function: ease-in;
        animation-fill-mode: forwards;
      }

      @keyframes scrollIn {
        from {
          opacity: 0;
          transform: translateY(60%);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }
    `
            }

            firstUpdated(c) {
                super.firstUpdated(c), setTimeout(() => {
                    this.dispatchEvent(new CustomEvent("complete", {bubbles: !0, composed: !0}))
                }, this.duration)
            }
        }

        let Vs = class extends Zn {
            constructor() {
                super(...arguments), this.progress = 0
            }

            get duration() {
                return 500
            }

            static get styles() {
                return e.iv`
      :host {
        width: 100%;
        display: flex;
        flex-direction: column;
        gap: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
      }

      .milestone-progress__rewards {
        display: flex;
        width: 100%;
        justify-content: center;
      }

      .milestone-progress__rewards-progress-text {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }

      .milestone-progress__rewards-titles {
        display: flex;
        width: 100%;
        justify-content: center;

        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
      }

      .milestone-progress__rewards-title {
        width: 20%;
      }

      .milestone-progress__previous-rewards ::slotted(*) {
        transform: translateX(50%);
      }

      .milestone-progress__next-rewards ::slotted(*) {
        transform: translateX(-50%);
      }

      .milestone-progress__rewards-spacer {
        display: flex;
        justify-content: center;
        width: ${(0, t.asCssProp)(this.progressWidth.toString())}%;
      }

      .milestone-progress__progress-bar-container {
        width: 100%;
        height: 16px;
        display: flex;

        box-sizing: border-box;
        padding: 2px 0 2px 0;
        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        border: 1px solid ${(0, t.asCssProp)(o.colors.gold[500])};
        border-left: 0;
        border-right: 0;
      }

      .milestone-progress__progress-bar-overlay {
        position: relative;
      }

      .milestone-progress__gradient {
        position: absolute;
        ${(0, t.inset)(0)};
        z-index: 2;
        background: linear-gradient(90deg, #0a0a0add 0%, #00000000 7%, #00000000 93%, #0a0a0add 100%);
      }

      .milestone-progress__extra {
        flex-grow: 1;
      }

      .milestone-progress__extra--first {
        background-color: ${(0, t.asCssProp)(o.colors.apocyan[500])};
      }

      .milestone-progress__extra--last {
        background-color: ${(0, t.asCssProp)(o.colors.apocyan[100])};
      }

      .milestone-progress__container {
        position: relative;
        width: ${(0, t.asCssProp)(`${this.progressWidth.toString()}%`)};
      }

      .milestone-progress__milestone-gem-outer {
        position: absolute;

        width: 18px;
        height: 18px;

        top: 50%;

        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        border: 2px solid ${(0, t.asCssProp)(o.colors.gold[500])};

        z-index: 2;
      }

      .milestone-progress__milestone-gem-outer::before {
        content: '';
        position: absolute;
        ${(0, t.inset)(2)}
        background-image: ${(0, t.asCssProp)(o.gradients.apocyan.simple())};
      }

      .milestone-progress__milestone-gem-inner {
        position: absolute;

        ${(0, t.inset)(4)}

        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};

        z-index: 3;
      }

      .milestone-progress__milestone-gem-inner::before {
        content: '';
        position: absolute;
        display: block;

        ${(0, t.inset)(2)}

        border: 2px solid ${(0, t.asCssProp)(o.colors.god.light.primary)};
        background-image: ${(0, t.asCssProp)(o.gradients.gold.simple("right"))};
        box-shadow: 0px 0px 3px rgba(175, 250, 237, 0.4);
      }

      .milestone-progress__milestone-gem-outer:first-child {
        left: 0;
        transform: translate(-50%, -50%) rotate(45deg);
      }

      .milestone-progress__milestone-gem-outer:last-child {
        right: 0;
        transform: translate(50%, -50%) rotate(45deg);
      }

      /** Unachineved milestone **/
      .milestone-progress__milestone-gem-outer--unachieved::before {
        background-color: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
        background-image: none;
      }

      .milestone-progress__milestone-gem-outer--unachieved .milestone-progress__milestone-gem-inner::before {
        border: 0;
        background-image: none;
        box-shadow: none;
      }

      .milestone-progress__progress-bar {
        position: absolute;
        ${(0, t.inset)(0)}

        z-index: 1;
      }

      .milestone-progress__progress-bar::before {
        content: '';
        position: absolute;
        ${(0, t.inset)(0)}

        width: var(--barWidth);

        border-radius: 4px;
        background-image: ${(0, t.asCssProp)(o.gradients.apocyan.simple("left"))};

        z-index: 1;
      }

      ${Zn.animationStyles()}
    `
            }

            render() {
                const c = this.progress >= 100 ? 100 : Math.min(this.progress, 98);
                return this.style.setProperty("--barWidth", `${c}%`), e.dy`
      <div class="milestone-progress__rewards">
        <div class="milestone-progress__previous-rewards">
          <slot name="previous-reward-icon"></slot>
        </div>
        <div class="milestone-progress__rewards-spacer">
          <slot name="next-rewards-text"></slot>
        </div>
        <div class="milestone-progress__next-rewards">
          <slot name="next-reward-icon"></slot>
        </div>
      </div>
      <div class="milestone-progress__progress-bar-overlay">
        <div class="milestone-progress__gradient"></div>
        <div class="milestone-progress__progress-bar-container">
          <div class="milestone-progress__extra milestone-progress__extra--first"></div>
          <div class="milestone-progress__container">
            <div
              data-test-id="milestone-progress-bar.gem-start"
              class=${(0, P.$)({
                    "milestone-progress__milestone-gem-outer": !0,
                    "milestone-progress__milestone-gem-outer--unachieved": 0 === this.progress
                })}
            >
              <div class="milestone-progress__milestone-gem-inner"></div>
            </div>
            <div class="milestone-progress__progress-bar" progress=${this.progress}></div>
            <div
              data-test-id="milestone-progress-bar.gem-end"
              class=${(0, P.$)({
                    "milestone-progress__milestone-gem-outer": !0,
                    "milestone-progress__milestone-gem-outer--unachieved": this.progress < 100
                })}
            >
              <div class="milestone-progress__milestone-gem-inner"></div>
            </div>
          </div>
          <div
            data-test-id="milestone-progress-bar.trail"
            class=${(0, P.$)({
                    "milestone-progress__extra": !0,
                    "milestone-progress__extra--last": this.progress >= 100
                })}
          ></div>
        </div>
      </div>
      <div class="milestone-progress__rewards-titles">
        <div class="milestone-progress__rewards-title milestone-progress__previous-rewards">
          <slot name="previous-reward-title"></slot>
        </div>
        <div class="milestone-progress__rewards-spacer"></div>
        <div class="milestone-progress__rewards-title  milestone-progress__next-rewards">
          <slot name="next-reward-title"></slot>
        </div>
      </div>
    `
            }
        };
        Vs.progressWidth = 60, (0, i.gn)([(0, p.C)({type: Number}), (0, i.w6)("design:type", Object)], Vs.prototype, "progress", void 0), Vs = (0, i.gn)([(0, f.M)("gu-milestone-progress-bar")], Vs);
        let mn = class extends e.oi {
            constructor() {
                super(...arguments), this.totalSteps = 9, this.filledSteps = 2, this.fillGradient = "gradients.apocyan.simple", this.fillGradientTarget = "bottom", this.bridgeColor = "colors.apocyan.300", this.squareSize = `${(0, r.gridUnits)(4)}`, this.squareBridgeRatio = "3/4"
            }

            static get properties() {
                return {
                    filledSteps: {type: Number},
                    totalSteps: {type: Number},
                    squareSize: {type: String},
                    fillGradient: {type: String},
                    fillGradientTarget: {type: String},
                    bridgeColor: {type: String}
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
      }

      .box {
        display: flex;
        position: relative;
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid;
        border-color: ${(0, t.asCssProp)(o.colors.gunmetal[300])};
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        position: relative;
        width: var(--squareSize);
        height: var(--squareSize);
        transform: rotate(45deg);
      }

      .box:last-child {
        margin-right: 0;
      }

      .box--filled {
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid;
        border-image-slice: 1;
        border-width: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        border-image-source: var(--backgroundFillGradient);
      }

      .box--filled .box__filling {
        display: block;
      }

      .box__filling {
        display: none;
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        background: var(--backgroundFillGradient);
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
        width: 100%;
        height: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(1.5))});
      }

      .bridge {
        margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(-3))};
        margin-right: 0px;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        margin-top: auto;
        margin-bottom: auto;
        /* width: ${(0, t.asCssProp)((0, r.gridUnits)(3))}; */
        width: var(--bridgeSize);

        background: ${(0, t.asCssProp)(o.colors.gunmetal[300])};
      }

      .bridge:last-child {
        display: none;
      }

      .bridge--filled {
        background: var(--backgroundFillColor);
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-large"])}) {
        .box__filling {
          /* Looks better at larger viewports like this. */
          margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
          height: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(2))});
        }
        .bridge {
          /* width: ${(0, t.asCssProp)((0, r.gridUnits)(4))}; */
        }
      }
    `
            }

            render() {
                return (0, g.setPropertyGradientFromVariable)(this.style, this.fillGradient, "--backgroundFillGradient", this.fillGradientTarget), (0, g.setPropertyColorFromVariable)(this.style, this.bridgeColor, "--backgroundFillColor"), this.style.setProperty("--squareSize", this.squareSize), this.style.setProperty("--bridgeSize", `calc(${this.squareSize} * ${this.squareBridgeRatio})`), e.dy`
      ${new Array(this.totalSteps).fill(0).map((c, $) => {
                    const z = $ < this.filledSteps;
                    return e.dy`
          <div class="box ${z ? "box--filled" : ""}">
            <div class="box__filling"></div>
          </div>
          <div class="bridge ${z ? "bridge--filled" : ""}"></div>
        `
                })}
    `
            }
        };
        mn = (0, i.gn)([(0, f.M)("gu-progress-step-counter")], mn);
        let _n = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: flex;
        flex-flow: column nowrap;
        position: relative;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} 0 0;
      }

      :host::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: 0;
        left: 0;
        width: 100%;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
      }

      :host::after {
        content: '';
        position: absolute;
        z-index: 2;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        left: 0;
        width: 100%;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        background: ${(0, t.asCssProp)(o.colors.gold[500])};
      }

      .sectionBackground,
      .sectionBackground__picture {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }

      .sectionBackground {
        background: ${(0, t.asCssProp)(o.colors.light[100])};
      }

      .sectionBackground__picture {
        opacity: 0.12;
        filter: grayscale(1);
      }

      .sectionBackground__picture__img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .ribbons {
        position: absolute;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        left: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(55))};
        display: none;
      }

      .ribbons--right {
        left: auto;
        right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      }

      .header {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .header__bodyCopy {
        width: 100%;
        margin: 0 auto;
        max-width: 800px;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(12))};
      }

      .slotContent {
        position: relative;
      }

      @media only screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
        .ribbons {
          display: block;
        }
      }
    `
            }

            render() {
                return e.dy`
      <div class="sectionBackground">
        <picture class="sectionBackground__picture">
          <source
            srcset="
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@3x.webp 2250w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@2x.webp 1500w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.webp  750w
            "
            type="image/webp"
          />
          <source
            srcset="
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@3x.jpg 2250w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@2x.jpg 1500w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.jpg  750w
            "
            type="image/jpg"
          />
          <img
            src="/assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.jpg"
            alt=""
            class="sectionBackground__picture__img"
          />
        </picture>
      </div>

      <img class="ribbons" src="/assets/images/ui-embellishments/ui--ribbons.svg" alt="Gold and black UI Ribbons" />

      <img
        class="ribbons ribbons--right"
        src="/assets/images/ui-embellishments/ui--ribbons-alt.svg"
        alt="Gold and black UI Ribbons"
      />

      <header class="header">
        <gu-vertical-space top="5x-large" bottom="medium">
          <gu-heading-text size="large" fillColor=${o.colors.dark[900]} align="center"> PRIZE DRAWS </gu-heading-text>
        </gu-vertical-space>

        <gu-paragraph-text class="header__bodyCopy" align="center" size="large" fillColor=${o.colors.dark[700]}>
          Earn draw tickets by purchasing Trial of the Gods packs for a chance to win some truly divine prizes including
          a one-of-a-kind Mythic Card.
        </gu-paragraph-text>

        <gu-vertical-space top="large">
          <gu-simple-text-button href="https://playgu.co/totg-prizes" target="_blank" fillColor=${o.colors.dark[700]}>
            View Prizes
          </gu-simple-text-button>
        </gu-vertical-space>
      </header>

      <div class="slotContent">
        <slot></slot>
      </div>
    `
            }
        };
        _n = (0, i.gn)([(0, f.M)("gu-raffles-and-prizes-section")], _n), n(28917), n(29939);
        let Ft = class extends e.oi {
            static get properties() {
                return {text: {type: String}, iconLigature: {type: String}, imageUrl: {type: String}}
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(46))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(80))};
        background: linear-gradient(180deg, rgba(255, 255, 255, 0.1) 0%, rgba(15, 27, 39, 0) 100%);
        border: 1px solid;
        border-color: rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.light[100]))}, 0.1);
      }

      .rewardGraphic {
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      }

      .fancyUnderscore {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(25))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(1))};

        /* Unable to use getColor here - it's colors.quality.diamond */
        box-shadow: 0px 0px 8px rgba(148, 230, 251, 0.5);
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        background: linear-gradient(
          270deg,
          rgba(0, 0, 0, 0) -1.52%,
          ${(0, t.asCssProp)(o.colors.apocyan[500])} 33.58%,
          ${(0, t.asCssProp)(o.colors.apocyan[100])} 48.76%,
          ${(0, t.asCssProp)(o.colors.apocyan[500])} 66.2%,
          rgba(0, 0, 0, 0) 102.27%
        );
      }

      .titleText {
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-large"])}) {
        :host {
          width: ${(0, t.asCssProp)((0, r.gridUnits)(57))};
          height: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
        }
      }
    `
            }

            render() {
                return e.dy`
      <gu-reward-graphic
        class="rewardGraphic"
        .imageUrl=${this.imageUrl}
        .iconLigature=${this.iconLigature}
      ></gu-reward-graphic>
      <div class="fancyUnderscore"></div>

      ${this.text ? e.dy`
            <gu-paragraph-text
              class="titleText"
              align="center"
              fillColor="colors.light.100"
              fontWeight="bold"
              kind="large"
              text=${this.text}
            >
            </gu-paragraph-text>
          ` : ""}
    `
            }
        };
        Ft = (0, i.gn)([(0, f.M)("gu-reward-display")], Ft);
        let fn = class extends e.oi {
            static get properties() {
                return {iconLigature: {type: String}, imageUrl: {type: String}}
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        position: relative;
        justify-content: center;
        align-items: center;
      }

      .outerSquare {
        display: flex;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        transform: rotate(45deg);

        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid;
        border-image-slice: 1;
        border-image-source: ${(0, t.asCssProp)(o.gradients.apocyan.simple("top"))};
        background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
      }

      .outerSquare__innerSquare {
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        width: 100%;
        background: ${(0, t.asCssProp)(o.colors.dark[900])};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)(o.colors.apocyan[500])} solid;
      }

      .icon {
        position: absolute;
        margin: auto;
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      }

      .rewardImage {
        position: absolute;
        margin: auto;
        width: 130%;
      }

      .rewardImage__img {
        width: 100%;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-large"])}) {
        .outerSquare {
          width: ${(0, t.asCssProp)((0, r.gridUnits)(30))};
          height: ${(0, t.asCssProp)((0, r.gridUnits)(30))};
        }
        .icon {
          font-size: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        }
      }
    `
            }

            render() {
                return e.dy`
      <div class="outerSquare">
        <div class="outerSquare__innerSquare"></div>
      </div>
      ${this.iconLigature ? e.dy`
            <gu-icon
              class="icon"
              iconLigature=${this.iconLigature}
              fillGradientTarget="top"
              fillGradient="gradients.apocyan.simple"
            ></gu-icon>
          ` : ""}
      ${this.imageUrl ? e.dy`
            <picture class="rewardImage">
              <source srcset=${this.imageUrl} type="image/png" />
              <source srcset=${this.imageUrl} type="image/png" />
              <img class="rewardImage__img" alt="image of the reward" src=${this.imageUrl} />
            </picture>
          ` : ""}
    `
            }
        };
        fn = (0, i.gn)([(0, f.M)("gu-reward-graphic")], fn);
        const vn = (0, t.asCssProp)((0, r.gridUnits)(3));
        let Kn = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: block;
        position: relative;
      }

      .ribbon-banner__left,
      .ribbon-banner__right {
        display: none;
        position: absolute;
        top: -${vn};
        width: calc(${vn} * 2);
        height: 100%;
        background: ${(0, t.asCssProp)(o.colors.gold[500])};
      }

      .ribbon-banner__left::before,
      .ribbon-banner__right::before {
        content: '';
        position: absolute;
        width: ${vn};
        height: ${vn};
        background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        top: 0;
        clip-path: polygon(0 100%, 0 0, 100% 100%);
      }

      .ribbon-banner__left {
        left: 0;
      }

      .ribbon-banner__left::before {
        right: 0;
        transform: rotate(-90deg);
      }

      .ribbon-banner__right::before {
        left: 0;
      }

      .ribbon-banner__right {
        right: 0;
      }

      .ribbon-banner__border {
        position: relative;
        background: ${(0, t.asCssProp)(o.colors.quality.mythic)};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
        border-image-slice: 1;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
      }

      .ribbon-banner__content {
        border: 1px solid;
        border-image-source: ${(0, t.asCssProp)(o.gradients.gold.simple("bottom"))};
        border-image-slice: 1;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(4))} 0 ${(0, t.asCssProp)((0, r.gridUnits)(5))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-small"])}) {
        :host {
          padding: 0 ${vn};
        }

        .ribbon-banner__left,
        .ribbon-banner__right {
          display: block;
        }
      }
    `
            }

            render() {
                return e.dy`
      <i class="ribbon-banner__left"></i>
      <i class="ribbon-banner__right"></i>
      <div class="ribbon-banner__border">
        <div class="ribbon-banner__content" part="innerContainer">
          <slot data-test-id="ribbon-banner-slot"></slot>
        </div>
      </div>
    `
            }
        };
        Kn = (0, i.gn)([(0, f.M)("gu-ribbon-banner")], Kn), n(65694);
        let Nn = class extends e.oi {
            static get styles() {
                return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        justify-content: center;
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(11))};
      }

      .socialButton {
        margin-right: 3vw;
        cursor: pointer;
      }

      .socialButton:last-child {
        margin: 0;
      }

      :host([smallIcons='true']) {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
      }
    `
            }

            gotoSocialLink(c) {
                window.location.href = c
            }

            render() {
                return e.dy`
      ${this.accounts.map(c => e.dy`
        <gu-icon
          class="socialButton"
          iconLigature="social_${c.name}"
          fillGradient=${o.gradients.gold.simple("bottom")}
          @click=${() => this.gotoSocialLink(c.link)}"
        ></gu-icon>
      `)}
    `
            }
        };
        (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", Object)], Nn.prototype, "accounts", void 0), (0, i.gn)([(0, p.C)(), (0, i.w6)("design:type", String)], Nn.prototype, "smallIcons", void 0), Nn = (0, i.gn)([(0, f.M)("gu-social-buttons-row")], Nn);
        const io = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
        let Yn = class extends e.oi {
            constructor() {
                super(...arguments), this.imageUrl = "", this.name = "", this.price = 0, this.title = "", this.showCountdown = !1
            }

            static get properties() {
                return {
                    imageUrl: {type: String},
                    name: {type: String},
                    title: {type: String},
                    price: {type: Number},
                    durationType: {type: String},
                    endTimestamp: {type: String},
                    showCountdown: {type: Boolean}
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        flex-basis: 51%;
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
        flex-direction: column;
        justify-content: center;
        background: var(--gu-blue-dark);
        border-radius: 4px;
        align-items: center;
        min-width: ${(0, t.asCssProp)((0, r.gridUnits)(85))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(85))};
        position: relative;
        padding-top: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping.medium)}) {
        :host {
          flex-basis: 34%;
          min-width: unset;
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping.large)}) {
        :host {
          flex-basis: 21%;
        }
      }

      .divider {
        max-width: 100%;
        margin-top: auto;
      }

      .image {
        max-width: 100%;
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))} ${(0, t.asCssProp)((0, r.gridUnits)(4))};
        flex-grow: 1;
      }

      .image__img {
        max-width: 100%;
      }

      .middleSection {
        display: flex;
        flex-direction: column;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(35))};
        align-items: center;
      }

      .middleSection__cta {
        margin-top: auto;
      }

      .middleSection__name {
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        text-transform: uppercase;
        margin: auto;
      }
      
      gu-primary-hex-button:hover .middleSection__cta__price {
        color: var(-gu-blue-hover);
      }

      .middleSection__cta__price {
        color: var(--gu-blue);
        display: flex;
        align-items: center;
      }

      .middleSection__cta__icon {
        display: inline-flex;
        font-size: 28px;
      }

      .bottomSection {
        margin-top: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0;
      }

      .helpIcon {
        position: absolute;
        top: 0;
        right: 0;
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        font-size: 20px;
        cursor: pointer;
      }

      .specialBanner {
        position: absolute;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(-2))};
        left: ${(0, t.asCssProp)((0, r.gridUnits)(-2))};
      }
    `
            }

            buyItem() {
                this.dispatchEvent(new CustomEvent("onBuyItem", {composed: !0}))
            }

            moreInfo() {
                this.dispatchEvent(new CustomEvent("onMoreInfo", {composed: !0}))
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.timer && clearInterval(this.timer)
            }

            figureOutTime() {
                this.endTimestampEpoch = Math.round(new Date(this.endTimestamp).getTime() / 1e3), this.endDate = new Date(this.endTimestamp);
                const $ = this.endTimestampEpoch - 86400, z = Math.round((new Date).getTime() / 1e3);
                if (z > $) return void (this.showCountdown = !0);
                const re = $ - z;
                this.timer && clearInterval(this.timer), this.timer = window.setInterval(() => {
                    this.showCountdown = !0
                }, 1e3 * re + 1e3)
            }

            render() {
                return this.figureOutTime(), e.dy`
      <gu-icon @click=${this.moreInfo} iconLigature="help" class="helpIcon"></gu-icon>

      <gu-star-store-special-banner
        class="specialBanner"
        durationType=${this.durationType}
      >
      ${this.title}
      </gu-star-store-special-banner>

      <picture class="image">
        <source srcset="${this.imageUrl}" type="image/jpg" />
        <img class="image__img" src="${this.imageUrl}" />
      </picture>

      <gu-vertical-space top="large" bottom="x-large" class="middleSection">
        <gu-paragraph-text
          kind="large"
          fontWeight="bold"
          align="center"
          fillColor="#FBC02D"
          class="middleSection__name"
          >${this.name}
        </gu-paragraph-text>

        <gu-primary-hex-button @click=${this.buyItem} class="middleSection__cta" size="large">
          BUY WITH&nbsp;<span class="middleSection__cta__price">
            ${this.price}
            <gu-icon
              class="middleSection__cta__icon"
              iconLigature="collectable_stars"
              fillColor="colors.apocyan.300"
            ></gu-icon
          </span>
        </gu-primary-hex-button>
      </gu-vertical-space>

      ${this.showCountdown ? e.dy`
              <gu-vertical-space class="bottomSection">
                <gu-simple-text kind="tag" align="center" fillColor="colors.light.100" class="name">
                  AVAILABLE FOR &nbsp;
                </gu-simple-text>
                <gu-countdown-timer
                  simpleTextDisplay=${!0}
                  simpleTextKind="tag"
                  .showFields=${["hours", "minutes", "seconds"]}
                  padZeroes=${!0}
                  targetTime=${this.endTimestampEpoch}
                ></gu-countdown-timer>
              </gu-vertical-space>
            ` : e.dy`
              <gu-vertical-space class="bottomSection">
                <gu-simple-text kind="tag" align="center" fillColor="colors.light.100" class="name">
                  AVAILABLE UNTIL ${this.endDate.getDate()} ${io[this.endDate.getUTCMonth()].slice(0, 3)}
                  ${this.endDate.getUTCFullYear()}
                </gu-simple-text>
              </gu-vertical-space>
            `}
    `
            }
        };
        Yn = (0, i.gn)([(0, f.M)("gu-star-store-sale-item")], Yn);
        let Qn = class extends e.oi {
            constructor() {
                super(...arguments), this.durationType = "daily"
            }

            static get properties() {
                return {durationType: {type: String}}
            }

            static get styles() {
                return e.iv`
      :host {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(56))};
        border-bottom: 2px solid var(--gu-blue-hover);
        border-right: solid 2px var(--gu-blue-hover);
        background: var(--gu-blue-dark);
        border-bottom-right-radius: 4px;
      }

      :host([durationType='monthly']) {
        background: ${(0, t.asCssProp)(o.gradients.gold.simple("right"))};
        border-color: ${(0, t.asCssProp)(o.colors.gold[100])};
      }

      gu-vertical-space {
        position: relative;
      }

      gu-paragraph-text {
        padding-left: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        text-transform: uppercase;
      }

      .border {
        height: 100%;
        width: 100%;
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-.25))};
        position: absolute;
      }

      .border:before {
        content: '';
        display: block;
        position: absolute;
        height: calc(100% + ${(0, t.asCssProp)((0, r.gridUnits)(.5))});
        width: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(1))});
        left: calc(${(0, t.asCssProp)((0, r.gridUnits)(-1.5))} - 1px);
        top: ${(0, t.asCssProp)((0, r.gridUnits)(-1))};
      }
    `
            }

            render() {
                return e.dy`
      <gu-vertical-space both="x-small">
        <div class="border"></div>
        <gu-paragraph-text
          kind="large"
          fontWeight="bold"
          fillColor="#90CAF9"
        >
          <slot></slot>
        </gu-paragraph-text>
      </gu-vertical-space>
    `
            }
        };
        Qn = (0, i.gn)([(0, f.M)("gu-star-store-special-banner")], Qn);
        let Jn = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: block;
        position: relative;
      }

      .stats-banner__content {
        max-width: 140px;
      }

      .stats-banner__middle {
        max-width: 360px;
      }

      .stats-banner__spacer {
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        box-shadow: inset 0 0 0 1.5px ${(0, t.asCssProp)(o.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        display: flex;
        transform: rotate(-45deg);
      }

      .stats-banner__spacer::before {
        content: '';
        width: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        background: ${(0, t.asCssProp)(o.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
      }

      .stats-banner__middle,
      .stats-banner__spacer-middle {
        display: none;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
        .stat--middle {
          display: block;
        }
        .stats-banner__spacer--middle {
          display: flex;
        }
      }
    `
            }

            render() {
                return e.dy`
      <gu-ribbon-banner>
        <div class="stats-banner__content">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "large"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            $17M+
          </gu-heading-text>
          <gu-paragraph-text kind="small" align="center" fillColor="colors.dark.500">
            Worth of cards exchanged
          </gu-paragraph-text>
        </div>

        <i class="stats-banner__spacer stats-banner__spacer-middle"></i>

        <div class="stat stats-banner__middle">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "small"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            <h2>Led by Chris Clay</h2>
          </gu-heading-text>
          <gu-paragraph-text
            kind="small"
            .responsiveKind=${[{breakpoint: "medium", kind: "large"}]}
            align="center"
            fillColor="colors.dark.500"
          >
            The Former Game Director of Magic: The Gathering Arena
          </gu-paragraph-text>
        </div>

        <i class="stats-banner__spacer"></i>

        <div class="stat">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "large"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            $570k
          </gu-heading-text>
          <gu-paragraph-text kind="small" align="center" fillColor="colors.dark.500">
            Tournament Prize Pool
          </gu-paragraph-text>
        </div>
      </gu-ribbon-banner>
    `
            }
        };
        Jn = (0, i.gn)([(0, f.M)("gu-stats-banner")], Jn);
        let Wn = class extends e.oi {
            constructor() {
                super(...arguments), this.selectedOptionIndex = 0
            }

            static get styles() {
                return e.iv`
      .two-value-switch__toggle {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        user-select: none;
      }
    `
            }

            onClick() {
                this.dispatchEvent(new CustomEvent("switched", {
                    composed: !0,
                    detail: {selectedOption: this.selectedOption}
                })), this.selectedOptionIndex = 0 === this.selectedOptionIndex ? 1 : 0
            }

            get selectedOption() {
                return this.options[this.selectedOptionIndex]
            }

            render() {
                return this.options && 2 === this.options.length ? e.dy`
      <a
        role="button"
        class="two-value-switch__toggle"
        @click=${() => this.onClick()}
        data-test-id="two-value-switch-toggle"
      >
        <gu-icon iconLigature="action_switch" fillColor="colors.light.500"></gu-icon>
        <gu-paragraph-text align="center" kind="tag" fillColor="colors.light.500" .text=${this.selectedOption.value}>
        </gu-paragraph-text>
      </a>
    ` : e.dy``
            }
        };
        (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Array
        }), (0, i.w6)("design:type", Array)], Wn.prototype, "options", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Number
        }), (0, i.w6)("design:type", Number)], Wn.prototype, "selectedOptionIndex", void 0), Wn = (0, i.gn)([(0, f.M)("gu-two-value-switch")], Wn);
        let bn = class extends e.oi {
            constructor() {
                super(...arguments), this.values = [], this.selectedIndex = 0, this.idPrefix = "", this.onClick = (c, $) => {
                    this.selectedIndex = $, this.dispatchEvent(new CustomEvent("onItemClicked", {
                        composed: !0,
                        detail: {index: $, value: c}
                    }))
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        flex-direction: row;
      }
      gu-square-selection-row-item:not(:last-child) {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }
    `
            }

            render() {
                return e.dy`
      ${this.values.map((c, $) => e.dy`<gu-square-selection-row-item
          .selected=${$ === this.selectedIndex}
          .value="${c}"
          @click=${() => this.onClick(c, $)}
          id=${`${this.idPrefix}item-${c}`}
        >
        </gu-square-selection-row-item>`)}
    `
            }
        };
        (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Array
        }), (0, i.w6)("design:type", Array)], bn.prototype, "values", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Number
        }), (0, i.w6)("design:type", Object)], bn.prototype, "selectedIndex", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: String
        }), (0, i.w6)("design:type", Object)], bn.prototype, "idPrefix", void 0), bn = (0, i.gn)([(0, f.M)("gu-square-selection-row")], bn);
        let zn = class extends e.oi {
            constructor() {
                super(...arguments), this.value = "", this.selected = !1
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        background: ${(0, t.asCssProp)(o.colors.gunmetal[700])};
        color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
      }

      :host(:hover) {
        background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        color: ${(0, t.asCssProp)(o.colors.light[300])};
      }

      :host([selected='true']) {
        background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        color: ${(0, t.asCssProp)(o.colors.light[300])};
        border-color: ${(0, t.asCssProp)(o.colors.gunmetal[300])};
      }
    `
            }

            render() {
                return e.dy` <gu-paragraph-text id=${this.id} kind="small" fontWeight="bold" .text=${this.value}>
    </gu-paragraph-text>`
            }
        };
        (0, i.gn)([(0, p.C)({reflect: !0}), (0, i.w6)("design:type", Object)], zn.prototype, "value", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], zn.prototype, "selected", void 0), zn = (0, i.gn)([(0, f.M)("gu-square-selection-row-item")], zn);
        var ro = n(39017);
        const Xn = G => new RegExp(`^.{${G},}$`), yn = {
            email: new RegExp(/(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/),
            phoneNumber: new RegExp(/\d+/),
            name: new RegExp(/^\D+$/),
            password: Xn(8),
            minLength: G => Xn(G),
            maxLength: G => (G => new RegExp(`^.{${G},${G + 1}}$`))(G),
            deckCode: G => (0, ro.Gu)(G)
        };
        let qn = class extends e.oi {
            constructor() {
                super(...arguments), this.labelText = "", this.initialHelpText = "", this.placeholderText = "", this.successHelpText = "", this.errorHelpText = "", this.align = "left", this.currentStatus = {
                    status: "initial",
                    helpText: this.initialHelpText
                }, this.inputValue = "", this.validateToPattern = [], this.obfuscateInputText = !1, this.updateValue = c => {
                    this.inputValue = c, this.dispatchEvent(new CustomEvent("onValueChange", {
                        detail: {
                            newValue: c,
                            valid: this.validateValue(c)
                        }
                    }))
                }, this.onInputChange = c => {
                    this.updateValue(c.target.value)
                }, this.onInputType = c => {
                    const $ = c.target, {value: z} = $;
                    this.updateValue(z), this.validateValue(z) && "error" === this.currentStatus.status && this.setCurrentStatus({
                        status: "initial",
                        helpText: this.initialHelpText
                    })
                }, this.onInputBlur = c => {
                    const $ = c.target, {value: z} = $;
                    return this.validateValue(z) ? this.setCurrentStatus({
                        status: "success",
                        helpText: this.successHelpText
                    }) : this.setCurrentStatus({status: "error", helpText: this.errorHelpText})
                }
            }

            static get properties() {
                return {
                    labelText: {type: String},
                    placeholderText: {type: String},
                    validateToPattern: {type: Array},
                    initialHelpText: {type: String},
                    successHelpText: {type: String},
                    errorHelpText: {type: String},
                    disabled: {type: String},
                    obfuscateInputText: {type: Boolean},
                    initialValue: {type: String},
                    align: {type: String}
                }
            }

            createRenderRoot() {
                return this
            }

            firstUpdated() {
                this.initialValue && (this.inputValue = this.initialValue, this.requestUpdate())
            }

            updated(c) {
                super.updated(c), "error" === this.currentStatus.status ? (this.classList.add("error"), this.classList.remove("success", "initial")) : "success" === this.currentStatus.status ? (this.classList.remove("error", "initial"), this.classList.add("success")) : (this.classList.remove("error", "success"), this.classList.add("initial"))
            }

            setCurrentStatus(c) {
                const {status: $, helpText: z} = c;
                this.currentStatus = {status: $, helpText: z}, this.requestUpdate()
            }

            resetCurrentStatus() {
                this.setCurrentStatus({status: "initial", helpText: this.initialHelpText})
            }

            get currentIcon() {
                switch (this.currentStatus.status) {
                    case"error":
                        return "alert_triangle";
                    case"success":
                        return "checkbox_tick";
                    default:
                        return "help"
                }
            }

            validateValue(c) {
                let $ = !0;
                return this.validateToPattern.map(z => {
                    if (!$) return !1;
                    if (z instanceof RegExp) $ = z.test(c); else if (-1 !== z.indexOf("not-")) {
                        const re = z.split("not-").pop();
                        $ = !yn[re].test(c)
                    } else $ = yn[z] && "function" == typeof yn[z] ? yn[z](c) : yn[z].test(c)
                }), $
            }

            render() {
                return e.dy`
      <style>
        gu-text-input {
          display: flex;
          flex-direction: column;
        }

        .labelText {
          color: ${(0, t.asCssProp)(o.colors.light[100])};
        }

        .inputArea {
          position: relative;
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;
        }

        .inputArea__input {
          width: 100%;
          background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
          border: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} ${(0, t.asCssProp)((0, r.gridUnits)(4))};
          ${(0, t.asCssProp)(pn.baseSimpleTextStyles)};
          font-size: ${(0, t.asCssProp)(o.typography.simpleTextSizeMapping.small)};
          color: ${(0, t.asCssProp)(o.colors.light[100])};
          box-sizing: border-box;
        }

        .inputArea__input::placeholder {
          color: ${(0, t.asCssProp)(o.colors.light[700])} !important;
        }

        .inputArea__icon {
          height: 100%;
          font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
          margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        }

        .helpText {
          margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        }

        /* ALIGN */
        gu-text-input[align='center'] .inputArea__input {
          text-align: center;
        }
        /* ERROR STATE COLORING */
        gu-text-input.error .inputArea__input {
          border-color: ${(0, t.asCssProp)(o.colors.god.war.primary)};
        }
        gu-text-input.error .inputArea__icon,
        gu-text-input.error .helpText {
          color: ${(0, t.asCssProp)(o.colors.god.war.primary)};
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        }

        /* SUCCESS STATE COLORING */
        gu-text-input.success .inputArea__input {
          border-color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
        }
        gu-text-input.success .inputArea__icon,
        gu-text-input.success .helpText {
          color: ${(0, t.asCssProp)(o.colors.apocyan[300])};
        }

        /* INITIAL STATE COLORING */
        gu-text-input.initial .inputArea__input {
          border-color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        }
        gu-text-input.initial .inputArea__icon,
        gu-text-input.initial .helpText {
          color: ${(0, t.asCssProp)(o.colors.gunmetal[100])};
        }

        /* DISABLED STATE COLORING */
        gu-text-input[disabled='true'] .labelText,
        gu-text-input[disabled='true'] .inputArea__icon,
        gu-text-input[disabled='true'] .helpText {
          color: ${(0, t.asCssProp)(o.colors.light[700])};
        }
        gu-text-input[disabled='true'] .inputArea__input {
          border-color: ${(0, t.asCssProp)(o.colors.light[700])};
        }
      </style>

      ${this.labelText ? e.dy` <gu-simple-text class="labelText" fontWeight="bold" kind="small"> ${this.labelText} </gu-simple-text> ` : null}
      <div class=${(0, P.$)({inputArea: !0})}>
        <input
          placeholder=${this.placeholderText ? this.placeholderText : ""}
          type=${this.obfuscateInputText ? "password" : "text"}
          class="inputArea__input"
          value=${this.inputValue}
          @blur=${this.onInputBlur}
          @input=${this.onInputType}
          part="textInput"
        />
        ${"help" !== this.currentIcon ? e.dy` <gu-icon iconLigature=${this.currentIcon} class="inputArea__icon"></gu-icon> ` : null}
      </div>
      ${this.currentStatus.helpText ? e.dy`
            <gu-paragraph-text class="helpText" kind="help" part="helpText">
              ${this.currentStatus.helpText}
            </gu-paragraph-text>
          ` : null}
    `
            }
        };
        qn = (0, i.gn)([(0, f.M)("gu-text-input")], qn);
        let eo = class extends e.oi {
            constructor() {
                super(...arguments), this.headerSize = "x-small", this.headerColor = o.colors.dark[900], this.headerAlign = "center", this.textKind = "small", this.textColor = o.colors.dark[500], this.textAlign = "center"
            }

            static get properties() {
                return {
                    image: {type: String},
                    header: {type: String},
                    headerSize: {type: String},
                    headerColor: {type: String},
                    headerAlign: {type: String},
                    text: {type: String},
                    textKind: {type: String},
                    textColor: {type: String},
                    textAlign: {type: String}
                }
            }

            static get styles() {
                return e.iv`
      .tile {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
      }

      .tile-img {
        width: auto;
        height: 100px;
        margin-bottom: 40px;
      }

      .tile-header {
        margin-bottom: 30px;
      }
    `
            }

            render() {
                return e.dy`
      <div class="tile-img-header-text tile">
        <img class="tile-img tile-img" src="${this.image}" />
        <gu-heading-text
          align="${this.headerAlign}"
          fillcolor="${this.headerColor}"
          size="${this.headerSize}"
          class="tile-header"
        >
          ${this.header}
        </gu-heading-text>
        <gu-paragraph-text align="${this.textAlign}" fillcolor="${this.textColor}" kind="${this.textKind}">
          ${this.text}
        </gu-paragraph-text>
      </div>
    `
            }
        };
        eo = (0, i.gn)([(0, f.M)("gu-tile-img-header-text")], eo);
        let to = class extends e.oi {
            static get styles() {
                return e.iv`
      :host {
        display: block;
        position: relative;
      }

      gu-ribbon-banner::part(innerContainer) {
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(7))} 0 ${(0, t.asCssProp)((0, r.gridUnits)(10))};
      }

      .will-you-survive-banner__spacer {
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        box-shadow: inset 0 0 0 1.5px ${(0, t.asCssProp)(o.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        transform: rotate(-45deg);
        display: none;
      }

      .will-you-survive-banner__spacer::before {
        content: '';
        width: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        background: ${(0, t.asCssProp)(o.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping["x-small"])}) {
        .statSpacer {
          display: flex;
        }
      }
    `
            }

            render() {
                return e.dy`
      <gu-ribbon-banner>
        <i class="will-you-survive-banner__spacer"></i>

        <gu-heading-text
          size="2x-small"
          .responsiveSize=${[{breakpoint: "small", size: "x-small"}]}
          fillColor="colors.dark.900"
          align="center"
        >
          WILL YOU SURVIVE THE TRIAL OF THE GODS?
        </gu-heading-text>

        <i class="will-you-survive-banner__spacer"></i>

        <slot></slot>
      </gu-ribbon-banner>
    `
            }
        };
        to = (0, i.gn)([(0, f.M)("gu-will-you-survive-banner")], to);
        let Hn = class extends e.oi {
            constructor() {
                super(...arguments), this.values = [], this.selectedIndex = 0, this.itemClicked = (c, $) => {
                    this.selectedIndex = $, this.dispatchEvent(new CustomEvent("onItemClicked", {
                        composed: !0,
                        detail: {index: $, value: c}
                    }))
                }
            }

            static get styles() {
                return e.iv`
      :host {
        display: flex;
        flex-direction: row;
        border-bottom: 3px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      gu-tabs-collection-item:not(:last-child) {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
      }
    `
            }

            render() {
                return e.dy`
      ${this.values.map((c, $) => e.dy`<gu-tabs-collection-item
          .selected=${$ === this.selectedIndex}
          .firstItem=${0 === $}
          .value="${c}"
          @click=${() => this.itemClicked(c, $)}
        >
        </gu-tabs-collection-item>`)}
    `
            }
        };
        (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Array
        }), (0, i.w6)("design:type", Array)], Hn.prototype, "values", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Number
        }), (0, i.w6)("design:type", Object)], Hn.prototype, "selectedIndex", void 0), Hn = (0, i.gn)([(0, f.M)("gu-tabs-collection")], Hn);
        let Cn = class extends e.oi {
            constructor() {
                super(...arguments), this.value = "", this.selected = !1, this.firstItem = !1
            }

            static get styles() {
                return e.iv`
  :host {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: ${(0, t.asCssProp)((0, r.gridUnits)(32.5))};
    height: ${(0, t.asCssProp)((0, r.gridUnits)(12.5))};
  }

  :host::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    z-index: -1;
    transform: skew(15deg);
  }

  :host([selected='true'])::after {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
  }
  :host([firstItem='true']) {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }
  :host([firstItem='true'])::before {
    content: '';
    position: absolute;
    width: 50%;
    height: 100%;
    top: 0;
    left: -6%;
    background: ${(0, t.asCssProp)(o.colors.gunmetal[900])};
    border-bottom: 3px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
    z-index: -1;
  }

  :host([selected='true'])::before {
    background: ${(0, t.asCssProp)(o.colors.gunmetal[500])};
  }
`
            }

            render() {
                return e.dy`
      ${this.selected ? e.dy`<gu-heading-text align="center" size="x-small" fillColor=${o.colors.light[100]}>
            ${this.value}
          </gu-heading-text>` : e.dy`<gu-heading-text align="center" size="x-small" fillColor=${o.colors.gunmetal[500]}>
            ${this.value}
          </gu-heading-text>`}
    `
            }
        };
        (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: String
        }), (0, i.w6)("design:type", Object)], Cn.prototype, "value", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], Cn.prototype, "selected", void 0), (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: Boolean,
            converter: W.b
        }), (0, i.w6)("design:type", Object)], Cn.prototype, "firstItem", void 0), Cn = (0, i.gn)([(0, f.M)("gu-tabs-collection-item")], Cn);
        let xn = class extends e.oi {
            static get styles() {
                return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      img {
        border: 2px solid rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.light[100]))}, 0.2);
        height: ${(0, t.asCssProp)((0, r.gridUnits)(50))};
        object-fit: cover;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping.small)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(58))};
        }

        .description {
          min-height: ${(0, t.asCssProp)((0, r.gridUnits)(42))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping.medium)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(75))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping.large)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(92))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(S.breakpointSizeMapping["x-large"])}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
        }
      }

      .card {
        border: 1px solid ${(0, t.asCssProp)(o.colors.dark[900])};
        display: flex;
        flex-direction: column;
        & > div {
          display: inline-block;
        }
        max-width: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
      }

      .description {
        background-color: ${(0, t.asCssProp)(o.colors.light[100])};
        color: ${(0, t.asCssProp)(o.colors.dark[900])};
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        max-width: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
      }

      .divider {
        height: 5px;
        background: ${(0, t.asCssProp)(o.gradients.gold.horizontal())};
        border-bottom: 1px solid ${(0, t.asCssProp)(o.colors.dark[900])};
        border-top: 1px solid ${(0, t.asCssProp)(o.colors.dark[900])};
      }
    `
            }

            render() {
                return e.dy`
    <div class="card">
      <img class="image" src="${this.imageSrc}" data-test-id="ascension-card-image"></img>
      <div class="divider"></div>
      <div class="description">
        <gu-heading-text
          align="center"
          fillColor="colors.dark.900"
          size="2x-small"
          data-test-id="ascension-card-title"
        >
          ${this.title}
        </gu-heading-text>
        <gu-vertical-space top="medium">
          <gu-paragraph-text align="center" kind="small" fillColor="colors.dark.500" data-test-id="ascension-card-description">
            ${this.description}
          </gu-paragraph-text>
        </gu-vertical-space>
      </div>
    </div>
  `
            }
        };
        (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], xn.prototype, "description", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], xn.prototype, "imageSrc", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], xn.prototype, "title", void 0), xn = (0, i.gn)([(0, f.M)("gu-x2-ascension-card")], xn);
        let so = class extends e.oi {
            static get properties() {
                return {heading: {type: String}, iconLigature: {type: String}, subheading: {type: String}}
            }

            static get styles() {
                return e.iv`
      gu-icon {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(27))};
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      }

      header {
        display: flex;
        align-items: center;
        flex-direction: column;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(o.breakpoints.breakpointSizeMapping.small)}) {
        gu-icon {
          margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        }
      }
    `
            }

            render() {
                return e.dy`
      <header>
        ${this.iconLigature ? e.dy` <gu-icon
              fillGradient="gradients.gold.simple"
              fillGradientTarget="bottom"
              iconLigature="${this.iconLigature}"
            ></gu-icon>` : null}
        <gu-heading-text
          align="center"
          fillGradient="gradients.gold.simple"
          size="small"
          .responsiveSize=${[{breakpoint: "small", size: "large"}, {
                    breakpoint: "medium",
                    size: "x-large"
                }, {breakpoint: "large", size: "2x-large"}]}
        >
          ${this.heading}
        </gu-heading-text>

        ${this.subheading ? e.dy`
      <gu-heading-text
        align="center"
        size="2x-small"
        .responsiveSize=${[{breakpoint: "small", size: "x-small"}]}
        >
          ${this.subheading}
        </gu-heading-text>
      </div>` : null}
      </header>
    `
            }
        };
        so = (0, i.gn)([(0, f.M)("gu-x2-section-header")], so);
        let no = class extends e.oi {
            constructor() {
                super(...arguments), this.size = "large", this.spinners = {
                    small: "/assets/images/loading-spinner/spin-1s-70px.svg",
                    medium: "/assets/images/loading-spinner/spin-1s-110px.svg",
                    large: "/assets/images/loading-spinner/spin-1s-135px.svg"
                }
            }

            static get properties() {
                return {size: {type: String}}
            }

            render() {
                return e.dy` <img alt="Loading..." src="${this.spinners[this.size]}" /> `
            }
        };
        no = (0, i.gn)([(0, f.M)("gu-loading-spinner")], no);
        let Ks = class extends e.oi {
            constructor() {
                super(...arguments), this.items = [], this.open = !1
            }

            connectedCallback() {
                super.connectedCallback(), window.addEventListener("click", c => this.onClick(c)), window.addEventListener("scroll", () => this.onScroll())
            }

            disconnectedCallback() {
                window.removeEventListener("click", c => this.onClick(c)), window.removeEventListener("scroll", () => this.onScroll()), super.disconnectedCallback()
            }

            static get styles() {
                return e.iv`
  :host {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .dropdown-menu--hidden {
    display: none;
  }

  .dropdown-menu-content {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    top: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    outline: 2px solid ${(0, t.asCssProp)(o.colors.dark[300])};
    border-radius: 2px;
    box-shadow: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(2))}
      rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(o.colors.black))}, 25%);
    padding: 0;
    margin: 0;
    z-index: ${gt.modalLayerZLevel};
  }
`
            }

            selectDropDownItem(c) {
                this.current = c, this.open = !1, this.dispatchEvent(new CustomEvent("onSelect", {
                    composed: !0,
                    bubbles: !0,
                    detail: Object.assign({}, this.current)
                }))
            }

            toggleOpen() {
                setTimeout(() => {
                    this.open = !this.open
                })
            }

            onClick(c) {
                !c.composedPath().includes(this) && this.open && (this.open = !1)
            }

            onScroll() {
                this.open && (this.open = !1)
            }

            render() {
                return e.dy`
      <slot name="dropdownControl" data-test-id="dropdown-control" @click=${this.toggleOpen}></slot>
      <ul
        class=${(0, P.$)({"dropdown-menu--hidden": !this.open, "dropdown-menu-content": this.open})}
      >
        ${this.items.map((c, $, z) => e.dy`
              <gu-dropdown-menu-item
                .align=${this.align}
                .item=${c}
                .last=${z.length - 1 === $}
                @click=${() => this.selectDropDownItem(c)}
              ></gu-dropdown-menu-item>
            `)}
      </ul>
    `
            }
        };
        (0, i.gn)([(0, p.C)({type: Array}), (0, i.w6)("design:type", Array)], Ks.prototype, "items", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Ks.prototype, "align", void 0), (0, i.gn)([(0, vt.S)(), (0, i.w6)("design:type", Object)], Ks.prototype, "open", void 0), (0, i.gn)([(0, vt.S)({hasChanged: (G, c) => (null == G ? void 0 : G.value) !== (null == c ? void 0 : c.value)}), (0, i.w6)("design:type", Object)], Ks.prototype, "current", void 0), Ks = (0, i.gn)([(0, f.M)("gu-dropdown-menu")], Ks);
        let Sn = class extends e.oi {
            constructor() {
                super(...arguments), this.item = {id: "", value: ""}, this.last = !1
            }

            static get styles() {
                return e.iv`
  :host {
    background: ${(0, t.asCssProp)(o.colors.light[100])};
  }

  .dropdown-menu-item:hover {
    background: ${(0, t.asCssProp)(o.colors.light[300])};
  }

  .dropdown-menu-item {
    display: flex;
    flex-direction: column;
  }

  .dropdown-menu-item__text {
    min-height: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    min-width: ${(0, t.asCssProp)((0, r.gridUnits)(44))};
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    display: block;
  }

  hr.solid {
    width: 100%;
    display: block;
    border: 0;
    border-top: 1px solid ${(0, t.asCssProp)(o.colors.light[300])};
    margin: 0;
    padding: 0;
    transform: scaleX(0.88);
    position: absolute;
  }

  .dropdown-menu-item:hover {
    background: ${(0, t.asCssProp)(o.colors.light[300])};
  }

  .dropdown-menu-item:hover + hr {
    display: none;
  }

  a {
    text-decoration: none;
  }
`
            }

            render() {
                return (0, g.updateColoringVariables)({component: this, fillColorHover: "colors.light.100"}), e.dy`
      <li class="dropdown-menu-item" role="dropdown-menu-item">
        <a href="javascript:void(0)">
          <gu-body-text
            class="dropdown-menu-item__text"
            align=${this.align}
            size="medium"
            fillColor=${o.colors.dark[500]}
          >
            ${this.item.value}
          </gu-body-text>
        </a>
      </li>

      ${this.last ? null : e.dy`<hr class="solid" />`}
    `
            }
        };
        (0, i.gn)([(0, p.C)({
            reflect: !0,
            type: String
        }), (0, i.w6)("design:type", Object)], Sn.prototype, "item", void 0), (0, i.gn)([(0, p.C)({type: String}), (0, i.w6)("design:type", String)], Sn.prototype, "align", void 0), (0, i.gn)([(0, p.C)({
            type: Boolean,
            reflect: !0
        }), (0, i.w6)("design:type", Object)], Sn.prototype, "last", void 0), Sn = (0, i.gn)([(0, f.M)("gu-dropdown-menu-item")], Sn)
    }, 14879: (oe, R, n) => {
        "use strict";
        n.d(R, {o: () => g});
        var u = n(70655), v = (n(1949), n(32830)), e = n(56418), f = n(98539), p = n(26711);

        class g extends v.oi {
            constructor() {
                super(...arguments), this.loading = !1, this.disabled = !1, this.expand = !1, this.iconPosition = "right", this.type = "secondary"
            }

            renderIcon(t) {
                return t ? v.dy`<gu-icon iconLigature=${t} class="button__icon"></gu-icon>` : v.dy``
            }

            renderText() {
                return v.dy`<slot class="button__text"></slot>`
            }

            renderContent(t, o) {
                return t ? v.dy`<gu-rectangular-spinner class="button__spinner" color="grey"></gu-rectangular-spinner>` : v.dy` ${this.renderIcon(o)} ${this.renderText()} `
            }

            getClassMap() {
                return {
                    button__content: !0,
                    [`button__content--icon-${this.iconPosition}`]: !0,
                    [`button__content--type-${this.type}`]: !0
                }
            }

            render() {
                return v.dy` <div class=${(0, f.$)(this.getClassMap())}> ${this.renderContent(this.loading, this.icon)} </div> `
            }
        }

        (0, u.gn)([(0, e.C)({
            reflect: !0,
            type: Boolean,
            converter: p.b
        }), (0, u.w6)("design:type", Object)], g.prototype, "loading", void 0), (0, u.gn)([(0, e.C)({
            reflect: !0,
            type: Boolean,
            converter: p.b
        }), (0, u.w6)("design:type", Object)], g.prototype, "disabled", void 0), (0, u.gn)([(0, e.C)({
            reflect: !0,
            type: Boolean,
            converter: p.b
        }), (0, u.w6)("design:type", Object)], g.prototype, "expand", void 0), (0, u.gn)([(0, e.C)(), (0, u.w6)("design:type", String)], g.prototype, "icon", void 0), (0, u.gn)([(0, e.C)(), (0, u.w6)("design:type", String)], g.prototype, "iconPosition", void 0), (0, u.gn)([(0, e.C)({reflect: !0}), (0, u.w6)("design:type", Object)], g.prototype, "type", void 0)
    }, 43977: (oe, R, n) => {
        "use strict";
        var u = n(70655), v = (n(61517), n(32830)), e = n(86041), f = n(80102), p = n(26532), g = n(65281);
        let r = class extends v.oi {
            static get styles() {
                return v.iv`
      :host {
        display: block;
        width: ${(0, p.asCssProp)((0, f.gridUnits)(7))};
        cursor: pointer;
        height: ${(0, p.asCssProp)((0, f.gridUnits)(7))};
        background: ${(0, p.asCssProp)(g.gradients.apocyan.simple("bottom"))};
        position: relative;
        border-radius: 50%;
      }

      .circular-close-button__background {
        position: absolute;
        left: ${(0, p.asCssProp)((0, f.gridUnits)(.5))};
        right: ${(0, p.asCssProp)((0, f.gridUnits)(.5))};
        top: ${(0, p.asCssProp)((0, f.gridUnits)(.5))};
        bottom: ${(0, p.asCssProp)((0, f.gridUnits)(.5))};
        background: ${(0, p.asCssProp)(g.colors.gunmetal[900])};
        border-radius: 50%;
        display: flex;
      }

      .circular-close-button__icon {
        margin: auto;
        font-size: ${(0, p.asCssProp)((0, f.gridUnits)(4))};
      }
    `
            }

            render() {
                return v.dy`
      <div class="circular-close-button__background">
        <gu-icon
          class="circular-close-button__icon"
          iconLigature="close_x"
          fillGradient=${g.gradients.apocyan.simple("bottom")}
        ></gu-icon>
      </div>
    `
            }
        };
        r = (0, u.gn)([(0, e.M)("gu-circular-close-button")], r)
    }, 89534: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(56418), e = n(72650), f = n(93270), p = n(14879), g = n(80102),
            r = n(26532), t = n(65281), o = n(40010);
        const D = i.iv`
  ${o.W2}

  .button__icon {
    font-size: ${(0, r.asCssProp)((0, g.gridUnits)(4))};
  }

  .button__text {
    color: inherit;
    text-shadow: 0 calc(var(--vh) * 0.2) calc(var(--vh) * 0.2) rgba(${(0, r.asCssProp)(t.colors.dark[900])}, 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    align-content: center;
    order: 1;
    gap: 8px;
  }

  /*  MOUSE-DOWN FX
    ----------------------------------------------------------------------------------- */
  :host(:active)::after {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, r.asCssProp)(t.gradients.apocyan.simple())};
    opacity: 0.2;
  }

  /* Primary */

  :host([type='primary']) {
    background: ${(0, r.asCssProp)(t.gradients.apocyan.simple("bottom"))};
  }

  .button__artwork {
    ${(0, r.asCssProp)(t.uifx.userSelect("none"))};
    position: absolute;
    z-index: 2;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
  }

  .button__artwork__side {
    position: absolute;
    left: 50%;
  }

  .button__artwork__side img {
    display: block;
    height: 100%;
  }

  .button__artwork__side--top {
    height: calc(${(0, r.asCssProp)("32px")} * 1.4);
    bottom: 36%;
    transform: translateX(-42%);
  }

  .button__artwork__side--bottom {
    height: calc(${(0, r.asCssProp)("32px")} * 2);
    top: 32%;
    transform: translateX(-58%);
  }

  :host([size='large']) .button__artwork__side--top {
    height: calc(${(0, r.asCssProp)("48px")} * 1.4);
  }

  :host([size='large']) .button__artwork__side--bottom {
    height: calc(${(0, r.asCssProp)("48px")} * 2);
  }

  :host([type='primary']:hover) {
    color: ${(0, r.asCssProp)(t.colors.light[100])};
  }

  :host([type='primary']:hover)::before {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[700])};
  }

  :host([type='primary']:hover) .artwork__side {
    opacity: 0.8;
  }

  /* Secondary */

  :host([type='secondary']) {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[100])};
  }

  :host([type='secondary'])::before {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[900])};
  }

  :host([type='secondary']:hover)::before {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[700])};
  }

  /* Subtle */

  :host([type='subtle']) {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[900])};
    text-transform: uppercase;
  }

  :host([type='subtle'])::before {
    display: none;
  }

  :host([type='subtle']) .button__text,
  :host([type='subtle']) .button__icon {
    color: ${(0, r.asCssProp)(t.colors.apocyan[100])};
  }

  :host([type='subtle']:hover) {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[700])};
  }
`;

        class _ extends p.o {
            constructor() {
                super(...arguments), this.type = "secondary"
            }

            static get styles() {
                return D
            }

            renderArtwork() {
                return "primary" !== this.type ? i.dy`` : i.dy`
      <div class="button__artwork">
        <picture class="button__artwork__side button__artwork__side--top">
          <source srcset="/assets/images/hex-button/hex-button--top-wave-art.webp" type="image/webp" />
          <source srcset="/assets/images/hex-button/hex-button--top-wave-art.png" type="image/png" />
          <img src="/assets/images/hex-button/hex-button--top-wave-art.png" />
        </picture>

        <picture class="button__artwork__side button__artwork__side--bottom">
          <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.webp" type="image/webp" />
          <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.png" type="image/png" />
          <img src="/assets/images/hex-button/hex-button--bottom-wave-art.png" />
        </picture>
      </div>
    `
            }

            renderText() {
                return i.dy`
      <gu-heading-text class="button__text" size="${"large" === this.size ? "2x-small" : "3x-small"}">
        <slot></slot>
      </gu-heading-text>
    `
            }

            render() {
                return i.dy`${this.renderArtwork()} ${super.render()}`
            }
        }

        (0, u.gn)([(0, v.C)({reflect: !0}), (0, u.w6)("design:type", String)], _.prototype, "type", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], _.prototype, "size", void 0), customElements.define("gu-hex-button", (0, e.b)((0, f.Z)(_)))
    }, 40010: (oe, R, n) => {
        "use strict";
        n.d(R, {W2: () => o});
        var u = n(32830), i = n(80102), v = n(26532), e = n(65281);
        const f = u.iv`
  :host {
    cursor: pointer;
    display: inline-flex;
    justify-self: center;
    justify-content: center;
    flex-grow: 0;
    color: ${(0, v.asCssProp)(e.colors.gunmetal[100])};
    border-radius: ${(0, v.asCssProp)((0, i.gridUnits)(1))};
    padding: 1px;
    overflow: hidden;
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .button__content {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: ${(0, v.asCssProp)((0, i.gridUnits)(1.5))} ${(0, v.asCssProp)((0, i.gridUnits)(3.5))};
    flex: 1;
    gap: 8px;
  }

  .button__icon {
    position: relative;
    z-index: 2;
    order: 2;
    font-size: ${(0, v.asCssProp)((0, i.gridUnits)(6))};
  }

  .button__text {
    position: relative;
    z-index: 2;
    text-decoration: none;
    order: 1;
    line-height: 20px;
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([expand='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .button__content--icon-left .button__icon {
    order: 0;
  }

  /* Button content when layout is square
  ----------------------------------------------------------------------------------- */
  .button__content--layout-square {
    padding: ${(0, v.asCssProp)((0, i.gridUnits)(1.5))};
  }

  /* Button content when layout is vertical
    ----------------------------------------------------------------------------------- */
  .button__content--layout-vertical {
    flex-direction: column;
    align-items: center;
    min-width: 70px;
    max-width: 80px;
    padding: ${(0, v.asCssProp)((0, i.gridUnits)(3))} ${(0, v.asCssProp)((0, i.gridUnits)(3))};
    gap: 0px;
  }

  .button__content--layout-vertical .button__icon {
    order: 0;
    margin: 0;
    font-size: ${(0, v.asCssProp)((0, i.gridUnits)(6))};
  }

  .button__content--layout-vertical .button__text {
    text-align: center;
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, v.asCssProp)(e.uifx.userSelect("none"))};
  }

  :host([disabled='true']) {
    filter: grayscale(100%);
  }
`, o = u.iv`
  ${f}

  :host {
    position: relative;
    white-space: nowrap;
    color: ${(0, v.asCssProp)(e.colors.light[100])};
    ${(0, v.asCssProp)(e.animation.standardTransition("all"))};

    /* NORMAL SIZING BY DEFAULT */
    min-width: 140px;
    height: ${(0, v.asCssProp)("32px")};
    line-height: ${(0, v.asCssProp)("32px")};
  }

  /* The background "fill" color of the button */
  :host::before {
    content: '';
    position: absolute;
    ${(0, v.inset)(2, 3)}
    z-index: 0;
    background: ${(0, v.asCssProp)(e.colors.gunmetal[900])};
    ${(0, v.asCssProp)(e.animation.standardTransition("all"))};
  }

  .button__content {
    padding: 0 ${(0, v.asCssProp)("20px")};
  }

  /* large size */

  :host([size='large']) {
    height: ${(0, v.asCssProp)("48px")};
    line-height: ${(0, v.asCssProp)("48px")};
  }

  :host([size='large']) .button__content {
    padding: 0 ${(0, v.asCssProp)("26px")};
  }

  :host([size='large']) .buttonContent__icon {
    font-size: ${(0, v.asCssProp)((0, i.gridUnits)(5.5))};
  }
`
    }, 62701: (oe, R, n) => {
        "use strict";
        n.d(R, {w: () => S});
        var u = n(70655), i = n(92436), v = n(87435), e = n(32830), f = n(86041), p = n(5284), g = n(26532),
            r = n(65281);
        const t = new i.do(w => {
            w.forEach(D => {
                D.target.handleResize()
            })
        }), o = new CustomEvent("onVideoEnd"), S = w => new Promise(D => {
            setTimeout(() => D(), w)
        });
        let T = class extends e.oi {
            constructor() {
                super(...arguments), this.muted = !1, this.autoPlay = !1, this.loopVideo = !1, this.showControls = !1, this.pauseOnEndFrame = !1, this.startPausedOnFirstFrame = !1, this.volume = 1, this.dimensions = {
                    width: 0,
                    height: 0
                }, this.hasSignalledEnd = !1, this.onVideoLoaded = () => {
                    console.log("VIDEO IS LOADED (not necessarily fully buffered though)", this.videoId);
                    const D = () => {
                        this.bindPlayListeners(), this.delayedEmitVideoReady(), this.setVolume()
                    };
                    this.startPausedOnFirstFrame ? this.gotoTimeAndPause(.02).then(() => D()) : D()
                }, this.onVideoUpdate = D => {
                    const {percent: _} = D;
                    this.dispatchEvent(new CustomEvent("onVideoProgress", {detail: {percent: _}})), this.pauseOnEndFrame && _ >= .88 && (this.pauseVideo(), this.hasSignalledEnd || (this.hasSignalledEnd = !0, this.dispatchEvent(o)))
                }, this.delayedEmitVideoReady = () => setTimeout(() => {
                    this.hasSignalledEnd = !1, this.classList.remove("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoReady"))
                }, 350)
            }

            static get styles() {
                return e.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        ${(0, g.asCssProp)(r.animation.standardTransition("opacity"))};
      }

      :host ::slotted(iframe) {
        width: 100%;
        height: 100%;
        display: block;
      }

      gu-rectangular-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
      }

      :host(.hideVideo) gu-rectangular-spinner {
        display: flex;
      }
    `
            }

            static get properties() {
                return {
                    videoId: {type: Number},
                    loopVideo: {type: Boolean},
                    autoPlay: {type: Boolean},
                    pauseOnEndFrame: {type: Boolean},
                    startPausedOnFirstFrame: {type: Boolean},
                    showControls: {type: Boolean},
                    volume: {type: Number},
                    muted: {type: Boolean}
                }
            }

            firstUpdated() {
                this.handleResize(), t.observe(this)
            }

            updated(D) {
                super.updated(D), D.has("videoId") && this.videoId ? this.handleVideoIdUpdated() : D.has("volume") && this.setVolume()
            }

            disconnectedCallback() {
                t.unobserve(this), this.vimeoControl && this.vimeoControl.destroy()
            }

            handleVideoIdUpdated() {
                return (0, u.mG)(this, void 0, void 0, function* () {
                    if (this.vimeoControl) {
                        const D = yield this.vimeoControl.getVideoId();
                        return console.log("@@@@@@@@@@@@", D, this.videoId), this.videoId === D ? this.reInitCurrentVideo() : this.loadNewVideoId()
                    }
                    this.initVideo()
                })
            }

            unBindEventsAndReset() {
                this.classList.add("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoLoading")), this.vimeoControl.off("timeupdate", this.onVideoUpdate), this.vimeoControl.off("loaded", this.onVideoLoaded)
            }

            reInitCurrentVideo() {
                console.log("@@@@@ RE-INIT CURRENT VIDEO @@@@@@"), this.unBindEventsAndReset(), this.onVideoLoaded()
            }

            loadNewVideoId() {
                console.log("@@@@@ LOAD NEW VIDEO ID @@@@@@"), this.unBindEventsAndReset(), this.vimeoControl.loadVideo(this.videoId).then(() => this.onVideoLoaded()).catch(D => console.log(D))
            }

            initVideo() {
                const D = {
                    title: !1,
                    byline: !1,
                    portrait: !1,
                    controls: this.showControls,
                    playsinline: !0,
                    autopause: !1,
                    muted: !0,
                    id: this.videoId,
                    loop: this.loopVideo,
                    autoplay: this.autoPlay
                };
                this.classList.add("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoLoading")), this.vimeoControl = new v.Z(this, D), this.vimeoControl.on("loaded", this.onVideoLoaded)
            }

            setVolume() {
                return !!this.vimeoControl && (this.muted ? this.vimeoControl.setMuted(!0) : this.vimeoControl.setVolume(this.volume))
            }

            bindPlayListeners() {
                this.vimeoControl.on("ended", () => {
                    this.dispatchEvent(o)
                }), this.vimeoControl.on("timeupdate", this.onVideoUpdate)
            }

            gotoTimeAndPause(D) {
                return (0, u.mG)(this, void 0, void 0, function* () {
                    try {
                        return console.log("gotoTimeAndPause(time)", D, this.videoId), yield this.vimeoControl.setMuted(!0), console.log("gotoTimeAndPause > this.vimeoControl.setMuted(true) resolved", this.videoId, D), yield this.vimeoControl.play(), console.log("gotoTimeAndPause > this.vimeoControl.play() resolved", this.videoId, D), p.I5.isSafari() && (yield S(350), console.log("gotoTimeAndPause > artificialDelay() resolved", this.videoId, D)), yield this.vimeoControl.pause(), console.log("gotoTimeAndPause > this.vimeoControl.pause() resolved", this.videoId, D), yield this.vimeoControl.setCurrentTime(D), console.log("gotoTimeAndPause > this.vimeoControl.setCurrentTime(time) resolved", this.videoId, D), this.setVolume(), console.log("gotoTimeAndPause > ALL STEPS resolved")
                    } catch (_) {
                        console.error("gotoTimeAndPause ERROR:", _)
                    }
                })
            }

            playVideo(D) {
                console.log("playVideo(time)", D);
                const _ = () => {
                    this.hasSignalledEnd = !1, this.vimeoControl.play()
                };
                return void 0 !== D ? this.gotoTimeAndPause(D).then(() => _()) : _()
            }

            pauseVideo() {
                this.vimeoControl.pause()
            }

            handleResize() {
                this.dimensions = {width: this.offsetWidth, height: this.offsetHeight}
            }

            destroyVideo() {
                this.vimeoControl.destroy()
            }

            render() {
                return e.dy`
      <slot></slot>
      <gu-rectangular-spinner></gu-rectangular-spinner>
    `
            }
        };
        T = (0, u.gn)([(0, f.M)("gu-controllable-vimeo-embed")], T)
    }, 99454: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(86041), e = n(26532), f = n(61462);
        let p = class extends i.oi {
            static get properties() {
                return {}
            }

            static get styles() {
                return i.iv`
      ${(0, e.asCssProp)((0, e.setBoxSizing)())}

      :host {
        display: block;
        position: relative;
      }

      /* @NOTE: The hidden submit button cannot be display: none,
      as this breaks the go-button / enter functionality in Safari */
      .formControl__hiddenSubmitInput {
        position: absolute;
        opacity: 0;
        top: 0;
        left: 0;
        ${(0, e.asCssProp)((0, f.userSelect)("none"))};
      }

      .formControl__fakeSlot {
        display: flex;
        flex-direction: column;
      }
    `
            }

            firstUpdated() {
                this.formDom = this.shadowRoot.querySelector(".formControl"), this.formDom.addEventListener("submit", this.formSubmitHandler)
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.formDom.removeEventListener("submit", this.formSubmitHandler)
            }

            formSubmitHandler(r) {
                r.preventDefault(), this.dispatchEvent(new CustomEvent("onFormSubmit", {bubbles: !0, composed: !0}))
            }

            onSlotChange() {
                const r = this.shadowRoot.querySelector(".formSlot"),
                    t = this.shadowRoot.querySelector(".formControl__fakeSlot");
                r.assignedElements().forEach(o => t.appendChild(o))
            }

            render() {
                return i.dy`
      <form class="formControl" action="">
        <input type="submit" class="formControl__hiddenSubmitInput" @click=${this.formSubmitHandler} />
        <div class="formControl__fakeSlot"></div>
      </form>
      <slot class="formSlot" @slotchange=${this.onSlotChange}></slot>
    `
            }
        };
        p = (0, u.gn)([(0, v.M)("gu-form-context")], p)
    }, 4390: (oe, R, n) => {
        "use strict";

        function u(p, g, r) {
            g.runTask(() => p.navigate([r]))
        }

        function i(p) {
            window.open(p.url, p._target)
        }

        function e(p, g) {
            return Object.keys(p).reduce((r, t) => -1 !== g.indexOf(p[t].path) || r, !1)
        }

        n.d(R, {pR: () => u, rb: () => i, M0: () => e, Cs: () => f});
        const f = p => new CustomEvent("onExternalNavItemClick", {detail: {navItem: p}, bubbles: !0, composed: !0})
    }, 61517: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(86041), e = n(5284), f = n(65171), p = n(26532), g = n(65281),
            r = n(91418);
        let t = class extends i.oi {
            constructor() {
                super(...arguments), this.iconLigature = "", this.fillGradientTarget = "top"
            }

            static get properties() {
                return {
                    iconLigature: {type: String},
                    fillColor: {type: String},
                    fillGradient: {type: String},
                    fillGradientTarget: {type: String}
                }
            }

            static get styles() {
                return i.iv`
      :host {
        display: inline-flex;
        font-weight: 400 !important;
        ${(0, p.asCssProp)(e.uA.enhancedTextRenderingStyles)};
        /*
          Adding fill coloring rules for textFillColor here.
          ${(0, p.asCssProp)(r.fillColoringRules)} didn't allow for the case
          where a fillColor wasn't passed a component input, but was
          controlled by a parent component via css variables.
        */
        color: var(--textFillColor);
        border-color: var(--textFillColor);
      }

      .icon {
        -webkit-user-select: none;
        user-select: none;

        margin: auto;
        ${(0, p.asCssProp)(g.typography.iconTextStyles)};
      }

      :host([fillGradient]) {
        display: inline;
        line-height: 0;
      }

      ${(0, p.asCssProp)(r.fillColoringRules)}
    `
            }

            render() {
                return (0, f.updateColoringVariables)({
                    component: this,
                    fillColor: this.fillColor,
                    fillGradient: this.fillGradient,
                    fillGradientTarget: this.fillGradientTarget
                }), i.dy`<i class="icon">${this.iconLigature}</i>`
            }
        };
        t = (0, u.gn)([(0, v.M)("gu-icon")], t)
    }, 1949: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(56418), e = n(86041), f = n(80102), p = n(26532), g = n(65281);
        let r = class extends i.oi {
            constructor() {
                super(...arguments), this.color = "grey"
            }

            static get styles() {
                return i.iv`
      :host {
        height: ${(0, p.asCssProp)((0, f.gridUnits)(6))};
        display: flex;
        background: none;
        position: relative;
        transform: translateZ(0) scale(1);
        backface-visibility: hidden;
        transform-origin: 0 0;
      }
      .rect {
        box-sizing: content-box;
        width: ${(0, p.asCssProp)((0, f.gridUnits)(1.5))};
        height: 100%;
        animation: opacityFade 1s cubic-bezier(0.5, 0, 0.5, 1) infinite;
      }
      .rect:not(:first-child) {
        margin-left: ${(0, p.asCssProp)((0, f.gridUnits)(1.5))};
      }
      .rect--1 {
        animation-delay: -0.6s;
      }
      .rect--2 {
        animation-delay: -0.4s;
      }
      .rect--3 {
        animation-delay: -0.2s;
      }
      .rect--4 {
        animation-delay: -1s;
      }
      .grey.rect--1 {
        background: #fafafa;
      }
      .grey.rect--2 {
        background: #f2f2f2;
      }
      .grey.rect--3 {
        background: #e5e5e5;
      }
      .grey.rect--4 {
        background: ${(0, p.asCssProp)(g.colors.light[300])};
      }
      .apocyan.rect--1 {
        background: ${(0, p.asCssProp)(g.colors.apocyan[300])};
      }
      .apocyan.rect--2 {
        background: #6edbdb;
      }
      .apocyan.rect--3 {
        background: #67d9e0;
      }
      .apocyan.rect--4 {
        background: ${(0, p.asCssProp)(g.colors.apocyan[500])};
      }
      @keyframes opacityFade {
        0% {
          opacity: 1;
        }
        50% {
          opacity: 0.5;
        }
        100% {
          opacity: 1;
        }
      }
    `
            }

            render() {
                return i.dy`
      <div class="rect rect--1 ${this.color}"></div>
      <div class="rect rect--2 ${this.color}"></div>
      <div class="rect rect--3 ${this.color}"></div>
      <div class="rect rect--4 ${this.color}"></div>
    `
            }
        };
        (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", Object)], r.prototype, "color", void 0), r = (0, u.gn)([(0, e.M)("gu-rectangular-spinner")], r)
    }, 90004: (oe, R, n) => {
        "use strict";
        var u = n(70655), e = (n(51256), n(52102), n(32830)), f = n(56418), p = n(86041), g = n(65281), r = n(65171),
            t = n(80102), o = n(26532);
        const b = (0, o.asCssProp)((0, t.gridUnits)(11)), S = e.iv`
  ${(0, o.asCssProp)((0, o.setBoxSizing)())}

  :host {
    display: flex;
    width: 100%;
    cursor: pointer;
    padding: ${(0, o.asCssProp)((0, t.gridUnits)(5))} 0 0;
  }

  .innerContainer {
    margin: auto;
    width: 100%;
    padding-bottom: 140%;
    position: relative;
  }

  .itemImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .itemImage--cryptoKittyHead,
  .itemImage--cryptoKitty {
    width: 80%;
    height: 80%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .itemImage--cryptoKitty {
    width: 85%;
    height: 85%;
  }

  .colorStrip {
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2.5%;
    background: ${(0, o.asCssProp)(g.colors.quality.plain)};
    box-shadow: 0px 1px 2px rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 0.5);
  }

  .gradientSkrim {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 1px rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.light[100]))}, 0.3);
    background: linear-gradient(
      to top,
      rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 1) 0%,
      rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 0) 70%
    );
  }

  .countDisplay {
    position: absolute;
    z-index: 2;
    left: 50%;
    top: ${(0, o.asCssProp)((0, t.gridUnits)(-5))};
    transform: translate(-50%, 0);
    width: ${b};
    height: ${b};
    line-height: ${b};
    background: url('/assets/images/ui-embellishments/ui--count-background-diamonds.svg') center no-repeat;
    background-size: contain;
  }

  .countDisplay__x {
    font-weight: normal;
    text-transform: none;
  }

  .textFields {
    position: absolute;
    bottom: ${(0, o.asCssProp)((0, t.gridUnits)(5))};
    left: 0;
    width: 100%;
    text-align: center;
    padding: 0 ${(0, o.asCssProp)((0, t.gridUnits)(4))};
  }

  .textFields__qualityName {
    text-shadow: 0px ${(0, o.asCssProp)((0, t.gridUnits)(1))} ${(0, o.asCssProp)((0, t.gridUnits)(1))}
      rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 0.5);
  }

  .textFields__qualityName,
  .textFields__itemName {
    display: block;
  }

  .textFields__qualityName {
    margin-bottom: ${(0, o.asCssProp)((0, t.gridUnits)(1))};
  }

  /*
    @NOTE: style for various UI states ...
  */
  :host(.hideCount) {
    padding: 0;
  }

  :host(:hover) .gradientSkrim {
    box-shadow: inset 0 0 0 ${(0, o.asCssProp)((0, t.gridUnits)(.25))} rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.apocyan[300]))}, 1);
  }

  :host(.noAspectRatio) {
    height: 100%;
  }

  :host(.noAspectRatio) .innerContainer {
    padding-bottom: 0%;
    height: 100%;
  }

  :host(.notOwned) .itemImage,
  :host([count='0']) .itemImage {
    opacity: 0.3;
  }

  :host(.equipped) .gradientSkrim {
    box-shadow: inset 0 0 0 ${(0, o.asCssProp)((0, t.gridUnits)(.5))} rgba(${(0, o.asCssProp)((0, r.hexToCssRgbString)(g.colors.apocyan[300]))}, 1);
  }

  :host(.hideBorder) .gradientSkrim {
    box-shadow: none;
  }
`;
        n(29939), n(28917);
        let C = class extends e.oi {
            static get styles() {
                return S
            }

            renderText() {
                var E, s, y, k;
                if (this.hideText) return e.dy``;
                const B = (null === (s = null === (E = this.board) || void 0 === E ? void 0 : E.class_properties) || void 0 === s ? void 0 : s.quality) || (null === (k = null === (y = this.board) || void 0 === y ? void 0 : y.class_properties) || void 0 === k ? void 0 : k.effort),
                    ee = this.trinket ? this.trinket.name : this.board ? this.board.name : "";
                return e.dy`
      <i class="gradientSkrim"></i>
      <div class="textFields">
        <gu-simple-text class="textFields__qualityName" kind="tag" fillColor=${g.colors.light[100]}>
          ${B}
        </gu-simple-text>
        <gu-heading-text class="textFields__itemName" size="2x-small" fillGradient=${g.gradients.gold.simple()}>
          ${ee}
        </gu-heading-text>
      </div>
    `
            }

            renderCount() {
                var E, s;
                let y;
                return !this.hideCount && void 0 !== this.count && (y = (null === (E = this.trinket) || void 0 === E ? void 0 : E.owned) || (null === (s = this.board) || void 0 === s ? void 0 : s.owned) ? this.count : 0), this.hideCount || void 0 === y ? e.dy`` : e.dy`
        <gu-simple-text class="countDisplay" align="center" kind="micro" data-test-id="loadout-part-count">
          x<strong>${Math.min(y, 99)}</strong>${y > 99 ? "+" : null}
        </gu-simple-text>
      `
            }

            render() {
                var E, s, P;
                return this.noAspectRatio ? this.classList.add("noAspectRatio") : this.classList.remove("noAspectRatio"), (null === (E = this.trinket) || void 0 === E ? void 0 : E.owned) || (null === (s = this.board) || void 0 === s ? void 0 : s.owned) ? this.classList.remove("notOwned") : this.classList.add("notOwned"), this.equipped ? this.classList.add("equipped") : this.classList.remove("equipped"), this.hideText ? this.classList.add("hideText") : this.classList.remove("hideText"), this.hideCount ? this.classList.add("hideCount") : this.classList.remove("hideCount"), this.hideBorder ? this.classList.add("hideBorder") : this.classList.remove("hideBorder"), e.dy`
      <div class="innerContainer">
        ${this.trinket ? ((P, E) => "Good Kitty Statue" === P.name ? ((P, E) => {
                    var s;
                    let y = "#6B6B70", k = "#B1AEB9", B = "#E1E1E1";
                    return (null === (s = null == P ? void 0 : P.properties) || void 0 === s ? void 0 : s.fur_color) && (y = P.properties.fur_color, k = P.properties.belly_color, B = P.properties.eyes_color), E ? e.dy`
      <gu-regular-crypto-kitty-head
        class="itemImage itemImage--trinket itemImage--cryptoKittyHead"
        .furColor=${y}
        .bellyColor=${k}
        .eyeColor=${B}
        data-test-id="loadout-part-trinket"
      ></gu-regular-crypto-kitty-head>
    ` : e.dy`
    <gu-regular-crypto-kitty
      class="itemImage itemImage--trinket itemImage--cryptoKitty"
      .furColor=${y}
      .bellyColor=${k}
      .eyeColor=${B}
      data-test-id="loadout-part-trinket"
    ></gu-regular-crypto-kitty>
  `
                })(P, E) : e.dy`<img
    class="itemImage itemImage--trinket"
    src="https://images.godsunchained.com/collectables/trinkets/${P.proto}--preview.webp"
    alt=""
    data-test-id="loadout-part-trinket"
  />`)(this.trinket, this.noAspectRatio) : null}
        ${this.board ? (P = this.board.proto, e.dy`
  <img
    class="itemImage itemImage--board"
    src="https://images.godsunchained.com/collectables/boards/${P}--thumb.webp"
    alt=""
    data-test-id="loadout-part-board"
  />
  <i class="colorStrip"></i>
`) : null} ${this.renderCount()} ${this.renderText()}
      </div>
    `
            }
        };
        (0, u.gn)([(0, f.C)({
            type: Number,
            reflect: !0
        }), (0, u.w6)("design:type", Number)], C.prototype, "count", void 0), (0, u.gn)([(0, f.C)({type: Object}), (0, u.w6)("design:type", Object)], C.prototype, "board", void 0), (0, u.gn)([(0, f.C)({type: Object}), (0, u.w6)("design:type", Object)], C.prototype, "trinket", void 0), (0, u.gn)([(0, f.C)({type: Boolean}), (0, u.w6)("design:type", Boolean)], C.prototype, "equipped", void 0), (0, u.gn)([(0, f.C)({type: Boolean}), (0, u.w6)("design:type", Boolean)], C.prototype, "noAspectRatio", void 0), (0, u.gn)([(0, f.C)({type: Boolean}), (0, u.w6)("design:type", Boolean)], C.prototype, "hideText", void 0), (0, u.gn)([(0, f.C)({type: Boolean}), (0, u.w6)("design:type", Boolean)], C.prototype, "hideCount", void 0), (0, u.gn)([(0, f.C)({type: Boolean}), (0, u.w6)("design:type", Boolean)], C.prototype, "hideBorder", void 0), C = (0, u.gn)([(0, p.M)("gu-loadout-part")], C)
    }, 29939: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(56418), e = n(86041), f = n(26532), p = n(65281);
        let g = class extends i.oi {
            static get styles() {
                return i.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
      }

      svg {
        flex: 1;
        max-height: 100%;
        max-width: 100%;
      }
    `
            }

            render() {
                return i.YP`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 204 240">
        <defs>
          <style>
            .furColor {
              fill: ${this.furColor};
            }

            .eyeColor {
              fill: ${this.eyeColor};
            }

            .bellyColor {
              fill: ${this.bellyColor};
            }

            .outlineColor {
              fill: ${(0, f.asCssProp)(p.colors.black)};
              fill-rule: evenodd;
            }
          </style>
        </defs>
        <path
          class="furColor"
          d="M143,209.9c71.5-8.69,66.29-85.92,29.35-129.73,1.14-5-.43-8.14-2.22-12.21-8.7-19.79-9.33-42.93-9.33-60.12a2.57,2.57,0,0,0-3.59-2.53c-13.6,6.29-34.1,29-36.52,44.34-1.45-.11-2.92-.17-4.39-.17-10.13,0-22.78.14-35.51,2.72-9.71-13.55-36.7-39.3-54.08-46a2.78,2.78,0,0,0-3.67,2.88c.34,11.36-1.94,22.37-4.2,33.35-4.29,20.78-8.55,41.43,5,64a5.64,5.64,0,0,0,.62.85A137.93,137.93,0,0,0,21.32,138,80.06,80.06,0,0,0,23,154.35C28.8,193.72,21.32,221.87,13,240H138.1C138.47,227.09,140.14,216.55,143,209.9Z"
        />
        <path class="eyeColor" d="M159.46,111.74l4.6,23.06,18.66-7.22,5.26-19L180.5,90.33l-13.31,6Z" />
        <path class="eyeColor" d="M76.19,133.35l-19.26-23L88.85,98.88l26.66,11.45L126,139.14l-24.1,3Z" />
        <path class="eyeColor" d="M140.43,150.43,142,154.9l11.69,8.49,3.47-.52s5.34-9.08,7.52-13.16l-2.09-3.27Z" />
        <path
          class="bellyColor"
          d="M153.8,60c-2.17-7.88-3.08-23.49,6.54-30.12,1.07,0,1.53,4.45,2,8.75.17,1.56.32,3.1.51,4.4.08.59.16,1.21.24,1.88a60.86,60.86,0,0,0,1.09,6.71A8.17,8.17,0,0,1,173,54a8.75,8.75,0,0,0-4.83,2.94,9.1,9.1,0,0,1-1.67,1.56c2.47-.77,5.31-.14,7.5,4a4,4,0,0,0-2.78,1.09,2.84,2.84,0,0,1-2.67.79c2.45.62,3.61,2.19,3.45,3.12a2.22,2.22,0,0,0-1.89.4c.41.87.85,1.77,1.31,2.69,1.83,3.66,1.69,5.17,1.29,6.78C166.65,70.36,160.05,64.17,153.8,60Z"
        />
        <path
          class="bellyColor"
          d="M42,51c-3.63-7.23-7.36-14.66-11.8-17.73a1,1,0,0,0-1.49.78c-.37,3.48-2,7.21-3.83,11.42C22.6,50.77,20,56.8,19.05,64.06A22.54,22.54,0,0,0,10.5,66.5a27.43,27.43,0,0,1,3.67,3.11,28.69,28.69,0,0,0,4.71,3.87c0,.19,0,.38.05.57-2.71.25-5.55,1.59-6.43,6.45a9.61,9.61,0,0,1,4.69.14,12,12,0,0,0,3,.34c.06.24.12.48.19.72-2.65,2.31-3.3,5-2.88,5.8a5.25,5.25,0,0,1,4.68-.31A75.85,75.85,0,0,0,28,99c1.91-4.67,11.17-21.5,24.25-29.94a1.34,1.34,0,0,0,0-2.1C48.6,64.16,45.35,57.69,42,51Z"
        />
        <path
          class="outlineColor"
          d="M101.91,142.1l-25.72-8.75-19.26-23L88.85,98.88l26.66,11.45L126,139.14Zm-22.2-13.89L67.05,113.07l21.6-7.75,22.11,9.5,7,19.29L102.54,136Z"
        />
        <path
          class="outlineColor"
          d="M163.78,143.69l3.79,5.91-.69,1.29c-1.11,2.09-3,5.41-4.62,8.18l-2.08,3.58-.64,1.08-.84,1.43-.91.14.25,10.17,10.56,6.71a1.87,1.87,0,0,1,.49,2.62,1.93,1.93,0,0,1-2.64.75l-9.85-6.26-13.29,11.78a1.94,1.94,0,0,1-2.66-.39,1.85,1.85,0,0,1,0-2.6l13.41-11.88-.25-10.3L153,166l-13.15-9.55-2.79-8Zm-7.92,16.43-.26.45-1.28.19-10.23-7.42-.33-1,17.62-3.18.39.62c-1.07,2-2.54,4.5-3.84,6.75C157.13,158,156.4,159.21,155.86,160.12Z"
        />
        <path
          class="outlineColor"
          d="M146.64,214.45c-1.69,5.11-4,17.05-3.14,25.55H136c-.5-6.5.66-14.46,1.55-19.26-21.53,2.62-58.9-8.61-71.69-15.82q-4-1.57-7.73-3.44l1.33.42h0c7.27,2.35,33.35,10.77,71.56,7.1q5.43-.36,11.08-1l.58-.06c1.1-.14,2.17-.28,3.23-.45C157.3,205.7,166.45,202,173.66,197a49.09,49.09,0,0,0,11.72-11.44,50,50,0,0,0,3.83-6.14l.07-.14.05-.1,0-.06c.65-1.25,1.25-2.52,1.8-3.82a62.17,62.17,0,0,0,4.36-16.93c0-.4.1-.79.14-1.2q.24-2.4.33-4.86a96,96,0,0,0-3.86-29.69c-1-3.6-2.24-7.19-3.64-10.72-.28-.7-.56-1.41-.86-2.11l-4.91,17.78-18.66,7.22-4.6-23.06,7.73-15.45L178,91.44q-2.13-3.33-4.49-6.5c-1.32-1.77-2.69-3.51-4.11-5.18l-.06-.08c-1.56-1.85-3.18-3.63-4.84-5.34-12.86-13.2-28.62-22-45.55-22.79-.88,0-1.76-.07-2.65-.07a199.22,199.22,0,0,0-29.21,1.65q-2.94.43-5.9,1l-1.27.25-.76-1C74.45,46.75,65.39,37,55.32,28.13S34.35,11.28,26,8.07a.57.57,0,0,0-.59.1,1.07,1.07,0,0,0-.36.86c.34,11.59-2,22.8-4.22,33.7l0,.11a215.77,215.77,0,0,0-3.68,21.45,19.89,19.89,0,0,0-2.05.45,20.52,20.52,0,0,0-2,.63l-.09,0a27.16,27.16,0,0,0-2.52,1.1,21.89,21.89,0,0,1,3.44,2.88l.76.73,0,0c.65.6,1.31,1.2,2,1.75,0,.89,0,1.79,0,2.68a6.06,6.06,0,0,0-3,2.63A8.45,8.45,0,0,0,13,78.64a2.47,2.47,0,0,0-.1.29,10.92,10.92,0,0,0-.39,1.57A6.84,6.84,0,0,1,15,80.29a18.87,18.87,0,0,1,2,.32q.26,2.31.69,4.62a3.12,3.12,0,0,0-.25,2.27,6.31,6.31,0,0,1,.66-.29,61.43,61.43,0,0,0,7.38,18.25,4.52,4.52,0,0,0,.4.56l.67.76-.22,1a130,130,0,0,0-3,25c0,1.69-.08,3.42-.08,5.18,0,2.12.08,4.2.23,6.22a74.67,74.67,0,0,0,1.36,9.74V154h0q.38,1.73.81,3.39c.13,2.13.26,4.13.38,6C28.65,187.86,28,217,17.5,240H8c8.5-14.5,15.68-46.52,10-84.77A84.8,84.8,0,0,1,16.32,138a146.59,146.59,0,0,1,2.8-29.74,68,68,0,0,1-8.29-22.06L6.14,87.52l1.44-7.91a14.77,14.77,0,0,1,2.09-5.48c0-.64,0-1.27,0-1.91a11.73,11.73,0,0,0-1.82-1.48L.29,66l8-4c.74-.37,1.47-.7,2.21-1,.82-6.64,2.17-13.16,3.47-19.48l0-.12c2.29-11.07,4.42-21.52,4.1-32.19-.14-4.79,4.51-10,10.46-7.7C38.09,5.23,49.75,13.85,60,22.88a193.53,193.53,0,0,1,23,23.83c12.19-2.12,24-2.23,33.38-2.23h.49c2.46-7.91,8-16.4,14.16-23.63C138.32,12.2,147.4,4.34,155.13.77a7.35,7.35,0,0,1,7.46.69,7.91,7.91,0,0,1,3.22,6.21c0,.38,0,1.16,0,2.26-.1,5.88-.36,21.08,2.49,36.58.35,0,.7.09,1.06.16a12.57,12.57,0,0,1,7.42,4l5.12,5.84L177.07,58a17.92,17.92,0,0,1,1.35,2.16l3.75,7.09-5.15.16a6.52,6.52,0,0,1-.1,1l-.3,1.69a20.37,20.37,0,0,1,1,8.71c17.69,22.75,28,53.44,24.88,80.16-1.59,13.8-6.76,26.71-16.52,36.76C176.75,205.22,163.72,211.85,146.64,214.45Zm26.07-137a15.73,15.73,0,0,0-.52-4.86,1.55,1.55,0,0,0-.07-.23,10.73,10.73,0,0,0-.61-1.6l-.09-.17c-.22-.44-.43-.88-.64-1.31s-.45-.92-.67-1.38a1.81,1.81,0,0,1,.87-.41,3.18,3.18,0,0,1,1,0v0h0a1.61,1.61,0,0,0,0-.43,3.83,3.83,0,0,0-2.28-2.25l-.2-.08a6.22,6.22,0,0,0-.95-.31,4.69,4.69,0,0,0,.8.05,2.8,2.8,0,0,0,1.87-.84,4.11,4.11,0,0,1,1.51-.89,4.76,4.76,0,0,1,1.27-.2,12,12,0,0,0-1-1.65,8.65,8.65,0,0,0-.77-.89,5.81,5.81,0,0,0-2.3-1.48h0a5.42,5.42,0,0,0-3.38,0,9.1,9.1,0,0,0,1.67-1.56l.2-.22a8.41,8.41,0,0,1,4.15-2.57L173,54a8.36,8.36,0,0,0-6.19-2.58,13.34,13.34,0,0,0-2.61.18,149,149,0,0,1-2.85-19.92c-.2-1.32-.47-4.74-.77-8.59h0c-.55-6.93-1.21-15.25-1.76-15.26a.83.83,0,0,0-.31-.68.48.48,0,0,0-.19-.08.59.59,0,0,0-.25,0c-6.43,3-14.73,10-21.77,18.27a89.1,89.1,0,0,0-7.09,9.51c-2.08,4.07-2,13.09-.58,13.89,14.51,3.1,27.76,11.47,38.75,22.76Q170.14,74.37,172.71,77.45Zm5,45.62-9.19,3.56-2.8-14,5.85-11.7,5.7-2.55,4.35,10.6Z"
        />
      </svg>
    `
            }
        };
        (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], g.prototype, "furColor", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], g.prototype, "bellyColor", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], g.prototype, "eyeColor", void 0), g = (0, u.gn)([(0, e.M)("gu-regular-crypto-kitty-head")], g)
    }, 28917: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(56418), e = n(86041), f = n(26532), p = n(65281);
        let g = class extends i.oi {
            static get styles() {
                return i.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: flex-start;
      }

      svg {
        flex: 1;
        max-height: 100%;
        max-width: 100%;
      }
    `
            }

            render() {
                return i.YP`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 299.94 497.53">
        <defs>
          <style>
            .furColor {
              fill: ${this.furColor};
            }

            .eyeColor {
              fill: ${this.eyeColor};
            }

            .bellyColor {
              fill: ${this.bellyColor};
            }

            .outlineColor {
              fill: ${(0, f.asCssProp)(p.colors.black)};
              fill-rule: evenodd;
            }
          </style>
        </defs>
        <path
          class="furColor"
          d="M253.37,80.11c36.94,43.81,42.15,121-29.35,129.73-5.11,11.79-6.39,35.79-3.45,63.61,1.68-11.47,3.46-22.64,11.69-28.58,18.77-13.57,47.23,2.88,48.4,23.84,1.5,27-24.38,20.89-28,19.59,9.82,41.51,2.15,83.51-18,90.64a8.61,8.61,0,0,1-5.17.17,115.46,115.46,0,0,1-5.68,15.95c9.76-1,17.9-1.49,23.62-1.12,10,.64,17.87,4.13,23.58,9.12,16.23-.65,18.25,14.75,19,20.7a10.07,10.07,0,0,0,.39,2.18c-2.24-.6-4.34-1.37-6.35-2.11h0l-2.29-.83a29.09,29.09,0,0,1,.24,3.49c7.65,14-.78,19.81-7.88,24.66-2.81,1.93-5.4,3.71-6.71,5.8a24.06,24.06,0,0,1-1.15-6.51l-.68.27c-14,12.27-34.76,5.12-36.67-8.76,7.65.59,11.67.83,15.21-1.83,7.74-6.29,8.31-21.09-7.21-24.67-5.8-1.34-15.22.9-27.31,4.72-.69.78-1.39,1.52-2.06,2.25-3.32,3.57-6.2,6.67-5.81,11,13,0,23.5,8.33,21,26.5-4.12,3.92-12.76,6.17-22.36,7a37.44,37.44,0,0,1-3.27,11.29c-23,9.8-67.55,8.24-65.87-11.26.48-5.53.22-13.8-.68-23.78-2.7.5-5.41,1-8.15,1.38,10,14.32,3.52,26.26-1.17,29.9-6.23,4.85-51,7-60.13-4.16.8-8.91-1.27-17.87-4.61-26.56C18.74,435.91,5,415.3,5,395.94c0-13.64,7-22.16,14.27-31.09C24,359,28.91,353.06,32.11,345.39a85.83,85.83,0,0,1,3-11.38c8.59-25.37,18.11-36.79,29-49.8a234.53,234.53,0,0,0,19.26-25.65v-.14c.43-.67.88-1.35,1.33-2.07,3.2-5.18,6.51-11.07,9.92-17.92,8.32-18.14,15.23-44.77,9.39-84.15a79.51,79.51,0,0,1-1.64-16.36,137.9,137.9,0,0,1,3.12-30.65,6.36,6.36,0,0,1-.62-.85c-13.51-22.61-9.25-43.26-5-64.05,2.26-11,4.54-22,4.2-33.34a2.78,2.78,0,0,1,3.67-2.88c17.38,6.69,44.37,32.43,54.08,46,12.73-2.57,25.38-2.71,35.51-2.71,1.47,0,2.94.06,4.39.17,2.42-15.32,22.92-38.06,36.52-44.34a2.56,2.56,0,0,1,3.38,1.33,2.48,2.48,0,0,1,.21,1.2c0,17.19.63,40.33,9.33,60.12C252.94,72,254.51,75.08,253.37,80.11Z"
        />
        <path class="eyeColor" d="M240.46,111.68l4.6,23.06,18.66-7.22,5.26-19L261.5,90.27l-13.31,6Z" />
        <path class="eyeColor" d="M157.19,133.29l-19.26-23,31.92-11.44,26.66,11.44L207,139.08l-24.1,3Z" />
        <path class="eyeColor" d="M221.43,150.37l1.56,4.47,11.69,8.49,3.47-.53s5.34-9.07,7.52-13.15l-2.09-3.27Z" />
        <path
          class="bellyColor"
          d="M234.8,59.92c-2.17-7.87-3.08-23.48,6.54-30.11,1.07,0,1.53,4.45,2,8.74.17,1.56.32,3.1.51,4.4.08.6.16,1.22.24,1.88a61.07,61.07,0,0,0,1.09,6.72A8.16,8.16,0,0,1,254,53.94a8.75,8.75,0,0,0-4.83,2.94,9.15,9.15,0,0,1-1.67,1.56c2.47-.77,5.31-.14,7.5,4a4,4,0,0,0-2.78,1.09,2.81,2.81,0,0,1-2.67.78c2.45.63,3.61,2.2,3.45,3.13a2.17,2.17,0,0,0-1.89.4c.41.87.85,1.76,1.31,2.69,1.83,3.65,1.69,5.17,1.29,6.78C247.65,70.3,241.05,64.1,234.8,59.92Z"
        />
        <path
          class="bellyColor"
          d="M123,51c-3.63-7.23-7.36-14.66-11.8-17.74a1,1,0,0,0-1.36.38.83.83,0,0,0-.13.41c-.37,3.48-2,7.21-3.83,11.42C103.6,50.71,101,56.73,100,64a22.61,22.61,0,0,0-8.54,2.44,27.39,27.39,0,0,1,3.68,3.11,29.06,29.06,0,0,0,4.7,3.87,2.12,2.12,0,0,0,0,.56c-2.71.25-5.55,1.6-6.43,6.46a9.43,9.43,0,0,1,4.69.14,12.12,12.12,0,0,0,3,.34c.06.24.12.48.19.72-2.65,2.3-3.3,5-2.88,5.8a5.25,5.25,0,0,1,4.68-.31A76.35,76.35,0,0,0,109,98.94c1.91-4.67,11.17-21.5,24.25-29.94a1.34,1.34,0,0,0,.22-1.88,1.52,1.52,0,0,0-.22-.22C129.6,64.1,126.35,57.62,123,51Z"
        />
        <path
          class="bellyColor"
          d="M228.32,335.92c5.89,46.14-19.2,96.25-50.26,95.09-7.54-21-11.13-53.22-10-70.21s4-38.63,2.95-59.32c5.4-27.6,12.12-46.36,26.79-48.06C210.26,252,222.32,288.92,228.32,335.92Z"
        />
        <path
          class="outlineColor"
          d="M182.91,142l-25.72-8.75-19.26-23,31.92-11.44,26.66,11.44L207,139.08Zm-22.2-13.89L148.05,113l21.6-7.75,22.11,9.49,7,19.3-15.25,1.87Z"
        />
        <path
          class="outlineColor"
          d="M244.78,143.62l3.79,5.92-.69,1.29c-1.11,2.08-3,5.41-4.62,8.18l-2.08,3.57-.64,1.09-.84,1.43-.91.13.25,10.18,10.56,6.71a1.86,1.86,0,0,1,.51,2.58l0,0a1.92,1.92,0,0,1-2.6.78l0,0-9.85-6.26L224.31,191a1.94,1.94,0,0,1-2.66-.39,1.85,1.85,0,0,1,0-2.6l13.41-11.89-.25-10.29L234,166l-13.15-9.55-2.79-8Zm-7.92,16.44-.26.45-1.28.19-10.23-7.42-.33-1,17.62-3.17.39.62c-1.07,2-2.54,4.5-3.84,6.74C238.13,157.89,237.4,159.15,236.86,160.06Z"
        />
        <path
          class="outlineColor"
          d="M27.31,343.92c-2.89,6.68-7.21,12-11.91,17.76l-.27.34C8,370.77,0,380.51,0,395.94a45.28,45.28,0,0,0,13,31.67A60.46,60.46,0,0,0,26.9,438.3C11.8,444.35,3,451.64,3,459.47c0,21,63.28,38.06,141.34,38.06s141.34-17,141.34-38.06a13,13,0,0,0-3.26-8.16,23.55,23.55,0,0,0,5.67-6.7,18,18,0,0,0,1.19-13.82l10.66,2.84-4.73-9.45v-.76l-.07-.48c-.38-3-1.19-9.14-4.33-14.53a20.56,20.56,0,0,0-7.41-7.55A21.66,21.66,0,0,0,273,398.05,44.78,44.78,0,0,0,247.82,389a121,121,0,0,0-16.27.38c.59-1.63,1.15-3.28,1.68-5a12.77,12.77,0,0,0,3.17-.71c6.43-2.28,11.49-7.21,15.28-13.45s6.5-14.06,8.18-22.74c3-15.33,2.85-34-.7-52.82a32.34,32.34,0,0,0,10.65-.69,20,20,0,0,0,11.7-7.73c3.1-4.38,4.56-10.28,4.14-17.79-.7-12.66-9.53-23.38-20.27-29s-24.74-6.78-36,1.4a24.21,24.21,0,0,0-5.31,5.24q0-5.34.25-10.16c.49-9.1,1.68-16.4,3.37-21.51,17.08-2.61,30.11-9.23,39.35-18.76,9.76-10,14.93-23,16.52-36.76,3.07-26.72-7.19-57.41-24.88-80.16a20.45,20.45,0,0,0-1-8.71l.3-1.69a6.64,6.64,0,0,0,.1-1l5.15-.16-3.75-7.09a18.69,18.69,0,0,0-1.35-2.17l4.81-1.44-5.12-5.84a12.56,12.56,0,0,0-7.42-4l-1.06-.15c-2.85-15.5-2.59-30.7-2.49-36.58V7.64a7.89,7.89,0,0,0-3.22-6.2,7.32,7.32,0,0,0-7.46-.69c-7.77,3.53-16.85,11.39-24.17,20-6.14,7.22-11.7,15.72-14.16,23.63h-.49c-9.34,0-21.19.11-33.38,2.23a193.27,193.27,0,0,0-23-23.83c-10.22-9-21.87-17.66-31.44-21.34-6-2.29-10.6,2.91-10.46,7.7.32,10.67-1.81,21.11-4.1,32.18v.13C93.64,47.8,92.29,54.33,91.47,61c-.74.3-1.47.63-2.21,1l-8,4,7.56,4.73a10.81,10.81,0,0,1,1.82,1.48v1.91a14.53,14.53,0,0,0-2.09,5.47L87.11,87.5l4.69-1.33a68.13,68.13,0,0,0,8.29,22,147.08,147.08,0,0,0-2.8,29.75A84.57,84.57,0,0,0,99,155.16c5.65,38.25-1.06,63.85-9,81.11-3.33,6.67-6.54,12.4-9.65,17.42-.44.7-.87,1.37-1.29,2l-.23.37-.07.14A229,229,0,0,1,60.17,281l-.12.14c-10.94,13.13-20.87,25.12-29.72,51.25A89.64,89.64,0,0,0,27.31,343.92Zm216.5,88.52a9,9,0,0,0,.59-4.85c-.45-2.67-2.45-5.88-8.52-7.28-1.87-.43-4.85-.37-9.25.47a132.52,132.52,0,0,0-14.14,3.74l-1.18,1.27h0l-.11.13A286.78,286.78,0,0,1,243.81,432.44ZM94,65.34a25.61,25.61,0,0,0-2.52,1.1,21.53,21.53,0,0,1,3.44,2.88l.77.73h0c.65.61,1.31,1.21,2,1.76v2.68a6,6,0,0,0-3,2.63A7.8,7.8,0,0,0,94,78.58a2.47,2.47,0,0,0-.1.29,10.59,10.59,0,0,0-.39,1.57A7.2,7.2,0,0,1,96,80.22a17,17,0,0,1,2,.33q.25,2.31.69,4.62a3.09,3.09,0,0,0-.25,2.27q.33-.16.66-.3a61.15,61.15,0,0,0,7.38,18.25,3.78,3.78,0,0,0,.4.56l.67.77-.22,1a129.87,129.87,0,0,0-3,25c0,1.69-.08,3.42-.08,5.18q0,3.18.23,6.22a74.19,74.19,0,0,0,1.36,9.73v.06h0c.24,1.14.51,2.28.8,3.39q.19,3.19.38,6c2.54,24.51,0,43.8-4.4,59a122.71,122.71,0,0,1-6,16.18v.16c-.25.54-.5,1.07-.76,1.61-1.64,3.49-3.33,6.66-5,9.54l.21-.61c-1.6,2.8-3.3,5.66-5.13,8.71h0c-7.35,11.82-14.17,20-20.49,27.59l-2.38,2.87C53.4,300.15,44.8,311.47,37,334.65c-3.36,9.91-5,22.28-4.83,34.5s2.23,24.12,6.11,33.09c2,4.55,4.62,9.49,7.5,14.79l.62,1.15c2.68,4.93,5.51,10.15,8.07,15.52,5.37,11.28,9.67,23.53,8.82,35.86,2,2,5.72,3.63,10.76,4.79a86.36,86.36,0,0,0,15.78,1.92c1.43-3.66,3.07-11.07-1-18.07,6.76,3,8.51,13.23,6.56,18.17a119.33,119.33,0,0,0,15-1c.74-.11,1.46-.21,2.14-.33,1.58-3.71,4.55-12.06-.27-19.36,6.24,3.72,7.57,13,5.89,18.06a7.46,7.46,0,0,0,2-.94c2.61-2,6.22-7.5,5.59-14.83s-5.42-16.72-20.44-26.68l-1-.62.08-1.69c.36-7.53,1.12-23.44-1.31-40.62-2.5-17.67-8.65-35.89-21.4-48.21C77.3,336,75.16,330,74,323.74a55.16,55.16,0,0,0,12.26,16.45C100,353.44,104.48,369.87,107,387.84a216,216,0,0,1,1.42,39.79,102,102,0,0,0,14.9,3.69l-.09-.07c2.57-6.79-4.88-47.67-8.8-68.16-2.5-9.81-5.25-19.26-8.19-27.85h0c5.39,3.53,8,12.31,10,19.61h.06c4,14.59,7.42,30.23,10.15,45.21,5.13,28.16,7.81,54.3,6.72,66.92-.34,3.93,1.56,7,5.43,9.51s9.73,4.17,16.49,4.95A82.32,82.32,0,0,0,164,482c1.61-4,4.25-12.94-.41-20,6.43,3.84,7.31,14.86,5.34,19.91a94,94,0,0,0,16.61-2.23c1.27-9.21,1.56-14.34-3.52-22,6.48,3.87,9.52,10.49,8,20.89,2-.59,3.86-1.24,5.61-1.95,2.36-5.29,3.66-12,2.62-17.74a15.35,15.35,0,0,0-3.56-7.71,15.11,15.11,0,0,0-8.36-4.52,12.45,12.45,0,0,1-6.88-4.7,36.19,36.19,0,0,1-5-8.94c-2.89-7-5.07-16.11-6.67-25.47-3.18-18.7-4.73-40.34-3.89-48.4.33-4.92.74-10,1.16-15.06h0c2-25.12,4.23-52-2.08-75.58,7.28,7.59,7.83,27.15,8.15,38.31,0,.88,0,1.71.08,2.48.42,12.83-.79,24.76-1.87,35.37h0c-.52,5.15-1,10-1.27,14.48-.78,13.7.52,29.22,3.67,47.73,1.55,9.1,3.63,17.74,6.3,24.33h.27c18.8-.09,34.67-17.29,43.45-40.57.63-1.58,1.22-3.21,1.79-4.88,9-26.51,9.88-62.84-2.65-104.35v-.26q-4.16-26-3.83-44a99.83,99.83,0,0,1,1.48-16.46c-21.53,2.63-58.9-8.6-71.69-15.81-2.67-1.05-5.24-2.2-7.73-3.44l1.33.42h0c7.27,2.35,33.35,10.77,71.56,7.1q5.43-.36,11.08-1l.58-.07c1.1-.13,2.17-.28,3.23-.44,11.39-1.78,20.54-5.45,27.75-10.47a49.16,49.16,0,0,0,11.72-11.44,50.55,50.55,0,0,0,3.83-6.15l.07-.13.05-.1v-.06c.65-1.25,1.25-2.52,1.8-3.83a62.28,62.28,0,0,0,4.36-16.92c.05-.4.1-.8.14-1.2q.24-2.4.33-4.86a96.14,96.14,0,0,0-3.86-29.69,106.54,106.54,0,0,0-3.64-10.72c-.28-.7-.56-1.41-.85-2.11l-4.92,17.78L245,134.72l-4.6-23.06,7.73-15.45L259,91.38q-2.13-3.33-4.49-6.5-2-2.67-4.11-5.19l-.06-.07c-1.56-1.85-3.18-3.63-4.84-5.34-12.86-13.21-28.62-22-45.55-22.8-.88,0-1.76-.06-2.65-.06a198.1,198.1,0,0,0-29.21,1.65q-2.94.43-5.9,1l-1.27.26-.76-1C155.43,46.67,146.37,37,136.3,28s-21-16.82-29.3-20a.54.54,0,0,0-.59.1,1,1,0,0,0-.36.86c.34,11.59-2,22.8-4.22,33.7v.11a215.94,215.94,0,0,0-3.68,21.45,18.7,18.7,0,0,0-2,.44c-.64.18-1.31.39-2,.64Zm159.69,12a15.7,15.7,0,0,0-.52-4.87.31.31,0,0,0-.07-.23,11.33,11.33,0,0,0-.61-1.59l-.09-.17c-.22-.44-.43-.88-.64-1.31l-.67-1.38a1.89,1.89,0,0,1,.87-.41,3.35,3.35,0,0,1,1,0h0a1.55,1.55,0,0,0,0-.43,3.81,3.81,0,0,0-2.28-2.25l-.2-.08a8.16,8.16,0,0,0-.95-.32,3.55,3.55,0,0,0,.8.06,2.75,2.75,0,0,0,1.87-.84,4.3,4.3,0,0,1,1.51-.9,4.94,4.94,0,0,1,1.27-.19,11.5,11.5,0,0,0-1-1.65,11.06,11.06,0,0,0-.77-.9,6,6,0,0,0-2.3-1.48h0a5.42,5.42,0,0,0-3.38,0,9.15,9.15,0,0,0,1.67-1.56l.2-.22a8.41,8.41,0,0,1,4.15-2.57l.48-.15a8.35,8.35,0,0,0-6.19-2.58,12.69,12.69,0,0,0-2.61.18,148.75,148.75,0,0,1-2.85-19.93c-.2-1.31-.47-4.73-.77-8.58h0c-.55-6.92-1.21-15.24-1.76-15.25a.82.82,0,0,0-.31-.68.46.46,0,0,0-.19-.08.53.53,0,0,0-.25,0c-6.43,3-14.73,10-21.77,18.27a90,90,0,0,0-7.09,9.51c-2.08,4.07-2,13.09-.58,13.89,14.51,3.1,27.76,11.47,38.75,22.75,1.82,1.95,3.59,3.94,5.3,6ZM20.9,366c1.46-1.79,3-3.61,4.41-5.51,2.38.09,2.54,3.37,2.65,5.75a11.21,11.21,0,0,0,.16,1.83h0v1.14c.2,12.56,2.28,25,6.44,34.62,2,4.74,4.79,9.83,7.65,15.11l.61,1.13c1.9,3.49,3.85,7.07,5.71,10.73a1,1,0,0,0,0,.16h0c.49,1.52,1.64,5.07-2.08,8.12A74.57,74.57,0,0,1,25.28,429C12.18,419.68,7,407.53,7,395.94c0-12.84,6.49-20.86,13.82-29.83Zm198.47,49.24-1.82.49a39.66,39.66,0,0,0,3.12-4.68c2.89-4.77,6.79-11.2,13.19-14.87a106.87,106.87,0,0,1,13.51-.26c9.58.62,17,3.95,22.39,8.64l.6.52h.8a15.52,15.52,0,0,1,8.63,1.85,13.65,13.65,0,0,1,4.87,5c2.17,3.72,2.92,8.11,3.34,11.14-1.06-.36-2.11-.74-3.16-1.13h0l-2.31-.84-3.07-1.1.41,3.21a27.15,27.15,0,0,1,.22,3.25v.5l.24.44c3.6,6.6,3.22,10.82,1.59,13.87-1.77,3.29-5.19,5.69-8.84,8.18h0c-1.37.94-2.78,1.91-4,2.91l-.45.38c-.12-.82-.2-1.64-.24-2.47l-.12-2.84-2.64,1.08c-.2.09-.42.17-.63.25l-.33.13-.27.24a22.65,22.65,0,0,1-21,5c-5.67-1.58-10.09-5.29-11.75-10.06,5.93.41,10.11.36,13.83-2.43h0a16.52,16.52,0,0,0,5.83-15.24c-1-5.84-5.41-11-13.85-12.94-4.58-1-10.83-.08-18.09,1.79Zm-8,47.89a64.41,64.41,0,0,1-8.72,1.53,29.3,29.3,0,0,0-.39-6.48,19.41,19.41,0,0,0-4.52-9.67,19.13,19.13,0,0,0-10.51-5.77,8.5,8.5,0,0,1-4.6-3.29,25.37,25.37,0,0,1-2.7-4.24c2.41.76,15.08-.86,19.88-4.44a13.67,13.67,0,0,0,0,2.86l.2,1.78h1.78c6.1,0,11.37,1.95,14.83,5.78s5.27,9.45,4.29,17.72a19.9,19.9,0,0,1-6,3.17c1-2.84,1-8.32-5.31-11.54,4.75,5.21,3.15,9.75,2.1,12.51l-.18.05ZM251.94,353c-3.57,10.58-13.47,16.36-19.87,15.6,4.38-24.74,2.78-54.93-7.24-88.21q-.92-5.76-1.6-11.09a83.06,83.06,0,0,1,2-9.5c1.62-5.67,4-10.26,8.22-13.28,8.61-6.23,19.58-5.66,28.7-.87s16,13.6,16.53,23.2a32.11,32.11,0,0,1-.11,5.46,12.36,12.36,0,0,0-4.68-6.16A18.74,18.74,0,0,1,276.62,281q-.33.58-.69,1.11a11.88,11.88,0,0,1-5.25,4.23c-.05-.43-.1-.84-.15-1.25-.77-6.33-1.32-10.92-8-15.49a31.73,31.73,0,0,1,3.93,18l-.95.14c-1.48.14-3.57.24-5.87.27h-1.15a17.32,17.32,0,0,0-8.17-15.25c.32.79.69,1.57,1.07,2.38A24.94,24.94,0,0,1,254.31,288a42,42,0,0,1-8.14-1c-5.62-1.5-10.15-4.46-10.94-5.79a11,11,0,0,0,3.7,6.24c3.4,3.92,10.25,9.26,14.08,9.2,3.58,18.4,3.51,36.19.47,50.46C253,349.09,252.51,351.07,251.94,353Zm6.8-230-9.19,3.56-2.8-14,5.85-11.7,5.7-2.55,4.35,10.6Z"
        />
      </svg>
    `
            }
        };
        (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], g.prototype, "furColor", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], g.prototype, "bellyColor", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], g.prototype, "eyeColor", void 0), g = (0, u.gn)([(0, e.M)("gu-regular-crypto-kitty")], g)
    }, 65694: (oe, R, n) => {
        "use strict";
        var u = n(70655), g = (n(90004), n(51256), n(11015), n(61517), n(43977), n(32830)), r = n(56418), t = n(7302),
            o = n(86041), b = n(98539), S = n(65281), T = n(65171), w = n(80102), D = n(26532);
        const _ = g.iv`
  :host {
    display: block;
    width: 100%;
  }

  .innerContainer {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
  }

  .gradientSkrim {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: linear-gradient(
      to top,
      rgba(${(0, D.asCssProp)((0, T.hexToCssRgbString)(S.colors.dark[900]))}, 1) 0%,
      rgba(${(0, D.asCssProp)((0, T.hexToCssRgbString)(S.colors.dark[900]))}, 0) 70%
    );
  }

  .trinket {
    width: 100%;
    height: 100%;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 50%;
    border: ${(0, D.asCssProp)((0, w.gridUnits)(.5))} solid ${(0, D.asCssProp)(S.colors.gunmetal[500])};
    background: ${(0, D.asCssProp)(S.colors.gunmetal[900])};
    overflow: hidden;
    box-shadow: 0px 0px ${(0, D.asCssProp)((0, w.gridUnits)(2))} rgba(${(0, D.asCssProp)((0, T.hexToCssRgbString)(S.colors.dark[900]))}, 0.65);
  }

  .trinketName {
    position: absolute;
    bottom: 13%;
    left: 50%;
    width: 70%;
    transform: translateX(-50%);
  }

  .clearButton {
    position: absolute;
    top: 6%;
    right: 6%;
    cursor: pointer;
  }

  .uiTextArea {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    color: ${(0, D.asCssProp)(S.colors.gunmetal[500])};
  }

  .uiTextArea__icon {
    font-size: ${(0, D.asCssProp)((0, w.gridUnits)(7))};
    margin-bottom: ${(0, D.asCssProp)((0, w.gridUnits)(1))};
  }

  .uiTextArea__text--choose {
  }

  .uiTextArea__text--replace {
    display: none;
  }

  /*

    @NOTE: Handle various UI states:

  */

  /*
    HIGHLIGHT STATES:
  */
  .innerContainer--highlight {
    cursor: pointer;
  }

  .innerContainer--highlight .trinket {
    border-color: ${(0, D.asCssProp)(S.colors.gold[300])};
  }

  .innerContainer--highlight:hover .trinket {
    border-color: ${(0, D.asCssProp)(S.colors.apocyan[300])};
  }

  .innerContainer--highlight .uiTextArea {
    color: ${(0, D.asCssProp)(S.colors.light[100])};
  }

  /*
    EQUIPPED STATES:
  */
  .innerContainer--equipped .uiTextArea__icon,
  .innerContainer--equipped .uiTextArea__text--choose,
  .innerContainer--equipped .uiTextArea__text--replace {
    display: none;
  }
  .innerContainer--equipped:hover .uiTextArea__icon {
    display: inline-flex;
  }
  .innerContainer--equipped:hover .uiTextArea__text--replace {
    display: block;
  }
`;
        let M = class extends g.oi {
            constructor() {
                super(...arguments), this.highlight = !1, this.hideNameText = !1
            }

            static get styles() {
                return _
            }

            update(P) {
                P.has("highlight") && !P.get("highlight") && (this.hideNameText = !1), super.update(P)
            }

            renderTrinketName() {
                return this.hideNameText ? g.dy`` : g.dy`
      <gu-heading-text
        fillGradient=${S.gradients.gold.simple()}
        class="trinketName"
        align="center"
        size="2x-small"
        data-test-id="selected-trinket-name"
      >
        ${this.trinket.name}
      </gu-heading-text>
    `
            }

            renderTrinket() {
                return this.trinket ? g.dy`
      <div class="gradientSkrim"></div>
      ${this.renderTrinketName()}
      <gu-circular-close-button
        class="clearButton"
        @click=${() => this.dispatchEvent(new CustomEvent("xButtonClick", {bubbles: !0, composed: !0}))}
        data-test-id="selected-trinket-close-button"
      ></gu-circular-close-button>
    ` : g.dy``
            }

            renderInstructions() {
                return this.highlight ? g.dy`
        <gu-icon class="uiTextArea__icon" iconLigature="add_item"></gu-icon>
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--choose" kind="tag" align="center">
          choose slot
        </gu-paragraph-text>
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--replace" kind="tag" align="center">
          replace
        </gu-paragraph-text>
      ` : this.trinket ? g.dy`` : g.dy`
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--empty" kind="tag" align="center">
          select a trinket
        </gu-paragraph-text>
      `
            }

            onClick() {
                this.dispatchEvent(new CustomEvent("trinketClick", {bubbles: !0, composed: !0}))
            }

            onMouseEnter() {
                this.trinket && this.highlight && (this.hideNameText = !0)
            }

            onMouseLeave() {
                this.trinket && this.highlight && (this.hideNameText = !1)
            }

            render() {
                return g.dy`
      <div
        class=${(0, b.$)({
                    innerContainer: !0,
                    "innerContainer--highlight": this.highlight,
                    "innerContainer--equipped": !!this.trinket
                })}
        @click=${this.onClick}
        @mouseenter=${this.onMouseEnter}
        @mouseleave=${this.onMouseLeave}
        data-test-id="selected-trinket-container"
      >
        <gu-loadout-part
          class="trinket"
          .trinket=${this.trinket}
          ?noAspectRatio=${!0}
          ?hideCount=${!0}
          ?hideBorder=${!0}
          ?hideText=${!0}
        ></gu-loadout-part>
        ${this.renderTrinket()}
        <div class="uiTextArea">${this.renderInstructions()}</div>
      </div>
    `
            }
        };
        (0, u.gn)([(0, r.C)({type: Object}), (0, u.w6)("design:type", Object)], M.prototype, "trinket", void 0), (0, u.gn)([(0, r.C)({type: Boolean}), (0, u.w6)("design:type", Object)], M.prototype, "highlight", void 0), (0, u.gn)([(0, t.S)(), (0, u.w6)("design:type", Object)], M.prototype, "hideNameText", void 0), M = (0, u.gn)([(0, o.M)("gu-selected-trinket")], M)
    }, 69039: (oe, R, n) => {
        "use strict";
        n.d(R, {Q: () => v});
        var u = n(30109);
        const v = (0, u.XM)(class extends u.Xe {
            constructor(f) {
                super(f)
            }

            update(f, [p]) {
                p.current = f.element
            }

            render(f) {
            }
        })
    }, 25297: (oe, R, n) => {
        "use strict";
        n.d(R, {J: () => f});
        var u = n(84876), i = n(69800), v = n(32830);
        const e = Promise.resolve().then.bind(Promise.resolve());
        window.fakeComponentToFoolBuildOptimizer = (0, i.z)(() => {
        });

        class f extends v.oi {
            constructor() {
                super(), this.haunted = new u.ZM(() => this.requestUpdate(), this)
            }

            update(g) {
                this.haunted.run(() => {
                    super.update(g)
                })
            }

            updated(g) {
                super.updated(g), this.haunted.runLayoutEffects(), e(() => this.haunted.runEffects())
            }

            disconnectedCallback() {
                this.haunted.teardown(), super.disconnectedCallback()
            }
        }
    }, 65171: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            componentToHex: () => i,
            loopForVariable: () => v,
            rgbToHex: () => e,
            hexToRgb: () => f,
            hexToCssRgbString: () => p,
            setPropertyGradientFromVariable: () => g,
            setPropertyGradient: () => r,
            setPropertyColorFromVariable: () => t,
            setPropertyColor: () => o,
            setBorderColorHoverFromVariable: () => b,
            setBorderColorHover: () => S,
            setBackgroundFillHoverFromVariable: () => T,
            setBackgroundFillHover: () => w,
            updateColoringVariables: () => D
        });
        var u = n(65281);
        const i = _ => {
            const M = _.toString(16);
            return 1 === M.length ? "0" + M : M
        }, v = _ => {
            const M = _.split(".");
            let C = u;
            for (let P = 0; P < M.length; P++) C = C[M[P]];
            return C
        }, e = (_, M, C) => `#${i(_)}${i(M)}${i(C)}`, f = _ => {
            const M = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(_);
            return M ? {r: parseInt(M[1], 16), g: parseInt(M[2], 16), b: parseInt(M[3], 16)} : void 0
        }, p = _ => {
            const M = f(_);
            return M ? `${M.r}, ${M.g}, ${M.b}` : void 0
        }, g = (_, M, C, P) => {
            const s = v(M)(P).replace(/;/gm, "");
            _.setProperty(C, s)
        }, r = (_, M, C) => {
            _.setProperty(C, M.replace(/;/gm, ""))
        }, t = (_, M, C) => {
            const P = v(M);
            _.setProperty(C, P)
        }, o = (_, M, C) => {
            _.setProperty(C, M)
        }, b = (_, M) => {
            const C = v(M);
            _.setProperty("--borderColorHover", C)
        }, S = (_, M) => {
            _.setProperty("--borderColorHover", M)
        }, T = (_, M) => {
            const C = v(M);
            _.setProperty("--backgroundFillColorHover", C)
        }, w = (_, M) => {
            _.setProperty("--backgroundFillColorHover", M)
        }, D = ({
                    component: _,
                    fillColor: M,
                    fillColorHover: C,
                    fillGradient: P,
                    fillGradientTarget: E,
                    borderColor: s,
                    borderColorHover: y,
                    backgroundFillColor: k,
                    backgroundFillColorHover: B,
                    backgroundFillGradient: ee,
                    backgroundFillGradientTarget: pe,
                    iconColor: ce
                }) => {
            M && (_.setAttribute("fillColor", M), /colors\./.test(M) ? t(_.style, M, "--textFillColor") : o(_.style, M, "--textFillColor")), C && (_.setAttribute("fillColorHover", C), /colors\./.test(C) ? t(_.style, C, "--textFillColorHover") : o(_.style, C, "--textFillColorHover")), s && (_.setAttribute("borderColor", s), /colors\./.test(s) ? t(_.style, s, "--borderColor") : o(_.style, s, "--borderColor")), y && (_.setAttribute("borderColorHover", y), /colors\./.test(y) ? t(_.style, y, "--borderColorHover") : o(_.style, y, "--borderColorHover")), y && (_.setAttribute("borderColorHover", y), /colors\./.test(y) ? b(_.style, y) : S(_.style, y)), k && (_.setAttribute("backgroundFillColor", k), /colors\./.test(k) ? t(_.style, k, "--backgroundFillColor") : o(_.style, k, "--backgroundFillColor")), B && (_.setAttribute("backgroundFillColorHover", B), /colors\./.test(B) ? t(_.style, B, "--backgroundFillColorHover") : o(_.style, B, "--backgroundFillColorHover")), ce && (_.setAttribute("iconColor", ce), /colors\./.test(ce) ? t(_.style, ce, "--iconColor") : o(_.style, ce, "--iconColor")), B && (_.setAttribute("backgroundFillColorHover", B), /colors\./.test(B) ? T(_.style, B) : w(_.style, B)), ee && (_.setAttribute("backgroundFillGradient", ee), /gradients\./.test(ee) ? g(_.style, ee, "--backgroundFillGradient", pe) : r(_.style, ee, "--backgroundFillGradient")), P && (_.setAttribute("fillGradient", P), /gradients\./.test(P) ? g(_.style, P, "--textFillGradient", E) : r(_.style, P, "--textFillGradient"))
        }
    }, 5284: (oe, R, n) => {
        "use strict";
        n.d(R, {gt: () => v, I5: () => u, dz: () => p, ZB: () => r, uA: () => i});
        var u = {};
        n.r(u), n.d(u, {isIos: () => e, isSafari: () => f});
        var i = {};
        n.r(i), n.d(i, {enhancedTextRenderingStyles: () => S, stringContainsEmoji: () => b, uppercaseWord: () => T});
        var v = n(65171);

        function e() {
            return ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document
        }

        const f = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
        var p = n(80102), r = (n(26711), n(26532)), t = n(89747), o = n.n(t);
        const b = w => o()().test(w),
            S = "\n  /* Get fonts to look slightly nicer where possible */\n  -webkit-font-smoothing: subpixel-antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility\n",
            T = w => w.charAt(0).toUpperCase() + w.slice(1)
    }, 80102: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            gridUnits: () => u,
            checkOutOfBounds: () => i,
            getOuterHeight: () => v,
            waitForImageToLoad: () => e
        });
        const u = f => 4 * f + "px", i = ({
                                              x: f,
                                              y: p,
                                              left: g,
                                              top: r,
                                              width: t,
                                              height: o,
                                              tolerance: b = 2
                                          }) => (window.scrollY >= r && (r -= window.scrollY, o += window.scrollY), p >= Math.floor(o + r - b) || p <= r + b || f >= Math.floor(t + g - b) || f <= g + b),
            v = f => {
                const p = window.getComputedStyle(f), g = parseInt(p.getPropertyValue("margin-top")),
                    r = parseInt(p.getPropertyValue("margin-bottom"));
                return f.offsetHeight + g + r
            }, e = f => new Promise((p, g) => {
                const r = () => {
                    f.removeEventListener("load", o), f.removeEventListener("error", t)
                }, t = b => {
                    console.error("Awww snap! <img> or <picture> LOAD ERROR:", b, f.src), r(), g()
                }, o = () => {
                    r(), p()
                };
                f.complete ? p() : (f.addEventListener("load", o), f.addEventListener("error", t))
            })
    }, 26711: (oe, R, n) => {
        "use strict";
        n.d(R, {b: () => u});
        const u = {fromAttribute: i => i && "false" !== i, toAttribute: i => i ? "true" : "false"}
    }, 26532: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            asCssProp: () => v,
            drawHexShapePolygonMask: () => e,
            drawBottomHexShapePolygonMask: () => f,
            setBoxSizing: () => p,
            fadeReveal: () => g,
            listReveal: () => r,
            styleScrollbars: () => t,
            inset: () => o
        });
        var u = n(32830), i = n(65281);
        const v = b => u.iv`${(0, u.$m)(b)}`,
            e = (b, S, T = 0) => ``,
            f = b => `\n  clip-path: polygon(\n    0% 0%,\n    100% 0%,\n    100% calc(100% - ${b}),\n    50% 100%,\n    0% calc(100% - ${b}),\n    0% 0%\n  );\n  -webkit-clip-path: polygon(\n    0% 0%,\n    100% 0%,\n    100% calc(100% - ${b}),\n    50% 100%,\n    0% calc(100% - ${b}),\n    0% 0%\n  );\n`,
            p = (b = "border-box") => `\n  :host,\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: ${b};\n  }\n`,
            g = (b, S, T = "initial", w = .3, D = 0) => `\n  ${b} {\n    opacity: 0;\n    height: 0;\n    transition: opacity ${w}s ease, height 0s ${w}s, transform ${w}s ease;\n    ${D ? `transform: translateY(${D}px);` : ""}\n  }\n  ${S} {\n    opacity: 1;\n    height: ${T};\n    transition: opacity ${w}s ease, height 0s 0s, transform ${w}s ease;\n    ${D ? "transform: translateY(0);" : ""}\n  }\n`,
            r = (b, S = .3, T = 10) => `\n  ${b} {\n    animation: listReveal ${S}s ease-out backwards;\n    animation-delay: ${.1 * T}s;\n  }\n\n  ${[...Array(T).keys()].map(w => `\n      ${b}:nth-of-type(${w}) {\n        animation-delay: ${.1 * w}s;\n      }\n    `).join("\n")}\n\n  @keyframes listReveal {\n    from {\n      transform: translateY(12px);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n`,
            t = (b = "") => `\n  ${b}::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ${b}::-webkit-scrollbar-thumb {\n    width: 4px;\n    background: ${i.colors.gunmetal[500]};\n    border-radius: 2px;\n  }\n`,
            o = (b, S = b, T = b, w = S) => u.iv`
  top: ${b}px;
  right: ${S}px;
  bottom: ${T}px;
  left: ${w}px;
`
    }, 39029: (oe, R, n) => {
        "use strict";
        n.d(R, {x1: () => i.x, I0: () => f, v9: () => e, Rl: () => g}), n(25297);
        var i = n(58672), v = n(84876);
        const e = ({store: o, selector: b}) => {
            const [S, T] = (0, v.eJ)(b(o.getState()));
            return (0, v.d4)(() => o.subscribe(() => {
                const w = b(o.getState());
                T(w)
            }), [b]), S
        }, f = o => b => o.dispatch(b);
        n(5284);
        var g = n(65281);
        n(72985), n(69039)
    }, 72650: (oe, R, n) => {
        "use strict";
        n.d(R, {b: () => g});
        var u = n(70655), i = n(46461), e = n(56418);
        const f = {
            default: {
                ogg: "/assets/audio/buttons/hover--primary.ogg",
                mp3: "/assets/audio/buttons/hover--primary.mp3"
            }
        }, p = {
            primary: {
                ogg: "/assets/audio/buttons/click--primary.ogg",
                mp3: "/assets/audio/buttons/click--primary.mp3"
            },
            secondary: {
                ogg: "/assets/audio/buttons/click--secondary.ogg",
                mp3: "/assets/audio/buttons/click--secondary.mp3"
            }
        }, g = r => {
            class t extends r {
                constructor() {
                    super(...arguments), this.audibleHover = "", this.audibleClick = "", this.howl = i.Howl
                }

                updated(b) {
                    super.updated(b), this.updateHoverSound(), this.updateClickSound()
                }

                disconnectedCallback() {
                    super.disconnectedCallback(), this.disconnectHover(), this.disconnectClick()
                }

                handleHover(b) {
                    b.preventDefault(), this.hoverControl.play()
                }

                handleClick(b) {
                    b.preventDefault(), this.clickControl.play()
                }

                updateHoverSound() {
                    this.audibleHover && !this.hoverControl ? this.connectHover() : !this.audibleHover && this.hoverControl && this.disconnectHover()
                }

                updateClickSound() {
                    this.audibleClick ? this.connectClick() : !this.audibleClick && this.clickControl && this.disconnectClick()
                }

                connectHover() {
                    this.hoverControl = new this.howl({src: [f[this.audibleHover].ogg, f[this.audibleHover].mp3]}), this.addEventListener("mouseover", this.handleHover)
                }

                connectClick() {
                    this.clickControl && this.disconnectClick(), this.clickControl = new this.howl({src: [p[this.audibleClick].ogg, p[this.audibleClick].mp3]}), this.addEventListener("mousedown", this.handleClick), this.addEventListener("touchstart", this.handleClick)
                }

                disconnectHover() {
                    !this.hoverControl || (this.hoverControl.unload(), this.hoverControl = void 0, this.removeEventListener("mouseover", this.handleHover))
                }

                disconnectClick() {
                    !this.clickControl || (this.clickControl.unload(), this.clickControl = void 0, this.removeEventListener("mousedown", this.handleClick), this.removeEventListener("touchstart", this.handleClick))
                }
            }

            return (0, u.gn)([(0, e.C)({type: String}), (0, u.w6)("design:type", Object)], t.prototype, "audibleHover", void 0), (0, u.gn)([(0, e.C)({type: String}), (0, u.w6)("design:type", Object)], t.prototype, "audibleClick", void 0), t
        }
    }, 72985: (oe, R, n) => {
        "use strict";
        n.d(R, {Am: () => f, lH: () => g, Xg: () => i, s: () => u});
        const u = t => class extends t {
            update(o) {
                this.setAttribute("disabled", `${this.disabled}`), this.setAttribute("loading", `${this.loading}`), this.setAttribute("horizontalStretch", `${this.horizontalStretch}`), super.update(o)
            }
        }, i = t => class extends t {
            constructor() {
                super(...arguments), this.clickLinkListenerBound = !1
            }

            update(o) {
                this.href && !this.clickLinkListenerBound ? (this.addEventListener("click", this.clickLinkHandler), this.clickLinkListenerBound = !0) : !this.href && this.clickLinkListenerBound && (this.removeEventListener("click", this.clickLinkHandler), this.clickLinkListenerBound = !1), super.update(o)
            }

            disconnectedCallback() {
                this.removeEventListener("click", this.clickLinkHandler)
            }

            clickLinkHandler() {
                const {target: o, href: b} = this;
                o ? window.open(b, o) : window.location.href = b
            }
        };
        var v = n(46461);
        const e = {
            "GU-SPECIAL-HEX-BUTTON": {
                ogg: "/assets/audio/buttons/click--primary.ogg",
                mp3: "/assets/audio/buttons/click--primary.mp3"
            },
            "GU-SPECIAL-HEX-FLAT-BUTTON": {
                ogg: "/assets/audio/buttons/click--primary.ogg",
                mp3: "/assets/audio/buttons/click--primary.mp3"
            },
            "GU-PRIMARY-HEX-BUTTON": {
                ogg: "/assets/audio/buttons/click--primary.ogg",
                mp3: "/assets/audio/buttons/click--primary.mp3"
            },
            "GU-SECONDARY-HEX-BUTTON": {
                ogg: "/assets/audio/buttons/click--secondary.ogg",
                mp3: "/assets/audio/buttons/click--secondary.mp3"
            },
            "GU-SUBTLE-HEX-BUTTON": {
                ogg: "/assets/audio/buttons/click--secondary.ogg",
                mp3: "/assets/audio/buttons/click--secondary.mp3"
            }
        }, f = t => class extends t {
            constructor() {
                super(...arguments), this.clickSoundListenerBound = !1
            }

            updated(o) {
                super.updated(o), this.checkToEnableClickSound()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.destroyClickSound(), this.destroyClickEvents()
            }

            clickSoundHandler(o) {
                o.preventDefault(), this.clickSoundControl.play()
            }

            checkToEnableClickSound() {
                this.enableSounds && !this.clickSoundListenerBound ? (this.initClickEvents(), this.initClickSound()) : !this.enableSounds && this.clickSoundListenerBound && (this.destroyClickSound(), this.destroyClickEvents())
            }

            initClickSound() {
                this.clickSoundControl = new v.Howl({src: [e[this.nodeName].ogg, e[this.nodeName].mp3]})
            }

            initClickEvents() {
                this.addEventListener("mousedown", this.clickSoundHandler), this.addEventListener("touchstart", this.clickSoundHandler), this.clickSoundListenerBound = !0
            }

            destroyClickSound() {
                this.clickSoundControl && this.clickSoundControl.unload()
            }

            destroyClickEvents() {
                this.removeEventListener("mousedown", this.clickSoundHandler), this.removeEventListener("touchstart", this.clickSoundHandler), this.clickSoundListenerBound = !1
            }
        }, g = t => class extends t {
            constructor() {
                super(...arguments), this.hoverSoundListenerBound = !1
            }

            updated(o) {
                super.updated(o), this.checkToEnableHoverSound()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.destroyHoverSound(), this.removeEventListener("mouseover", this.hoverSoundHandler)
            }

            hoverSoundHandler(o) {
                o.preventDefault(), this.hoverSoundControl.play()
            }

            checkToEnableHoverSound() {
                this.enableSounds && !this.hoverSoundListenerBound ? (this.addEventListener("mouseover", this.hoverSoundHandler), this.hoverSoundListenerBound = !0, this.initHoverSound()) : !this.enableSounds && this.hoverSoundListenerBound && (this.removeEventListener("mouseover", this.hoverSoundHandler), this.hoverSoundListenerBound = !1, this.destroyHoverSound())
            }

            initHoverSound() {
                this.hoverSoundControl = new v.Howl({src: ["/assets/audio/buttons/hover--primary.ogg", "/assets/audio/buttons/hover--primary.mp3"]})
            }

            destroyHoverSound() {
                this.hoverSoundControl && this.hoverSoundControl.unload()
            }
        };
        n(72650)
    }, 93270: (oe, R, n) => {
        "use strict";
        n.d(R, {Z: () => v});
        var u = n(70655), i = n(56418);
        const v = e => {
            class f extends e {
                constructor() {
                    super(...arguments), this.href = "", this.target = "", this.bound = !1, this.window = window
                }

                updated(g) {
                    super.updated(g), this.href && !this.bound ? (this.addEventListener("click", this.handleClick), this.bound = !0) : !this.href && this.bound && this.removeListener()
                }

                disconnectedCallback() {
                    super.disconnectedCallback(), this.removeListener()
                }

                removeListener() {
                    this.bound && this.removeEventListener("click", this.handleClick)
                }

                handleClick() {
                    const {target: g, href: r} = this;
                    g ? this.window.open(r, g) : this.window.location.href = r
                }
            }

            return (0, u.gn)([(0, i.C)({type: String}), (0, u.w6)("design:type", Object)], f.prototype, "href", void 0), (0, u.gn)([(0, i.C)({type: String}), (0, u.w6)("design:type", Object)], f.prototype, "target", void 0), f
        }
    }, 47925: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {breakpointSizeMapping: () => u});
        const u = {
            "2x-small": "360px",
            "x-small": "512px",
            small: "768px",
            medium: "960px",
            large: "1200px",
            "x-large": "1400px",
            "2x-large": "1600px"
        }
    }, 91418: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            gunmetal: () => u,
            light: () => i,
            white: () => v,
            black: () => e,
            dark: () => f,
            apocyan: () => p,
            yellow: () => g,
            gold: () => r,
            aqua: () => t,
            card: () => o,
            alert: () => b,
            quality: () => S,
            rarity: () => T,
            god: () => w,
            fillColoringRules: () => D
        });
        const u = {100: "#90CAF9", 300: "#527493", 500: "#3D5A74", 700: "#1D2F41", 900: "#0F1B27"},
            i = {100: "#F6F6F6", 300: "#D7D7D7", 500: "#B6B6B6", 700: "#979797", 900: "#7F7F7F"}, v = "#ffffff",
            e = "#000000", f = {100: "#7F7F7F", 300: "#646464", 500: "#464646", 700: "#272727", 900: "#0A0A0A"},
            p = {100: "#AFFAED", 300: "#03A9F4", 500: "#54BBCD"}, g = {100: "#FCF7D4", 300: "#F7EA9B", 500: "#F2DC63"},
            r = {100: "#FFF2D8", 300: "#FBC02D", 500: "#C6A052"}, t = {200: "#affaed", 300: "#8be1e0", 500: "#54bbcd"},
            o = {creature: "#ebd08a", spell: "#76b5ad", weapon: "#7a608c"}, b = "#FF8B01", S = {
                plain: "#8295A2",
                bronze: "#6A8B35",
                iron: "#3D91B9",
                meteorite: "#84343E",
                shadow: "#B461C5",
                gold: "#E5D93C",
                diamond: "#94E6FB",
                mythic: "#ffffff"
            }, T = {common: "#6D6C6D", rare: "#3C8ED2", epic: "#6D1FC4", legendary: "#D8A638", mythic: "#D02C3A"}, w = {
                deception: {primary: "#FA77FC", secondary: "#CA3FD8", tertiary: "#8F189B"},
                war: {primary: "#FF8B01", secondary: "#D73333", tertiary: "#99011A"},
                death: {primary: "#9C4EF9", secondary: "#35145B", tertiary: "#35145B"},
                magic: {primary: "#50BCFF", secondary: "#3884DE", tertiary: "#1752BA"},
                nature: {primary: "#9DE764", secondary: "#5AC33F", tertiary: "#4C772F"},
                light: {primary: "#FBE29F", secondary: "#FFD76E", tertiary: "#FAB248"}
            },
            // fillGradients!
            D = "\n  /* Styles to use when there is a gradientFill set ... */\n  :host([fillGradient]),\n  :host([fillGradient]) ::slotted(*) {\n    background: var(--gu-yellow);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  /* Styles to use when there is a simple fill color set ... */\n  :host([fillColor]),\n  :host([fillColor]) ::slotted(*) {\n    color: var(--textFillColor);\n\n    /* Use the text coloring for border color, and allow it to be over-written */\n    border-color: var(--textFillColor);\n  }\n\n  /* Styles to use when there is a simple fill color hover set ... */\n  :host([fillColorHover]:hover),\n  :host([fillColorHover]:hover) ::slotted(*) {\n    color: var(--textFillColorHover);\n\n    /* Use the text coloring for border color, and allow it to be over-written */\n    border-color: var(--textFillColorHover);\n  }\n\n  /* Styles to use when there is a simple border color set ... */\n  :host([borderColor]),\n  :host([borderColor]) ::slotted(*) {\n    border-color: var(--borderColor);\n  }\n\n  /* Styles to use when there is a simple border color hover set ... */\n  :host([borderColorHover]:hover),\n  :host([borderColorHover]:hover) ::slotted(*) {\n    border-color: var(--borderColorHover);\n  }\n\n  /* Styles to use when there is a simple background color fill set ... */\n  :host([backgroundFillColor]),\n  :host([backgroundFillColor]) ::slotted(*) {\n    background-color: var(--backgroundFillColor);\n  }\n\n  /* Styles to use when there is a simple background color fill hover set ... */\n  :host([backgroundFillColorHover]:hover),\n  :host([backgroundFillColorHover]:hover) ::slotted(*) {\n    background-color: var(--backgroundFillColorHover);\n  }\n"
    }, 65281: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            animation: () => u,
            breakpoints: () => r,
            colors: () => t,
            gradients: () => i,
            measurements: () => C,
            typography: () => P,
            uifx: () => E
        });
        var u = {};
        n.r(u), n.d(u, {
            slowTransition: () => g,
            slowTransitionDuration: () => f,
            standardTransition: () => p,
            standardTransitionDuration: () => v,
            standardTransitionEasing: () => e
        });
        var i = {};
        n.r(i), n.d(i, {
            apocyan: () => T,
            dark: () => w,
            god: () => _,
            gold: () => o,
            gunmetal: () => b,
            light: () => D,
            textFill: () => M,
            yellow: () => S
        });
        const v = "150ms", e = "ease-in-out", f = "300ms", p = s => `\n  transition: ${s} ${v}\n  ${e};\n`,
            g = s => `\n  transition: ${s} ${f}\n  ${e};\n`;
        var r = n(47925), t = n(91418);
        const o = {
                simple: (s = "bottom") => `var(--gu-yellow)`,
                mirror: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[500]} 0%,\n    ${t.gold[100]} 50%,\n    ${t.gold[500]} 100%\n  );\n`,
                complex: (s = "top") => `\n  linear-gradient(\n    to ${s},\n    #FFFDF0 0%,\n    #FBEBC1 14%,\n    #E6C675 25%,\n    #F6DF6E 40%,\n    #B27E18 60%,\n    #DEAB61 73%,\n    #A67B4B 85%,\n    #664320 100%\n  );\n`,
                horizontal: (s = "right") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[500]} 3%,\n    ${t.gold[300]} 25%,\n    ${t.gold[100]} 50%,\n    ${t.gold[300]} 75%,\n    ${t.gold[500]} 97%\n  );\n`
            }, b = {
                simple: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gunmetal[900]} 0%,\n    ${t.gunmetal[700]} 100%\n  );`,
                mirror: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gunmetal[900]} 0%,\n    ${t.gunmetal[700]} 50%,\n    ${t.gunmetal[900]} 100%\n  );\n`
            },
            S = {simple: (s = "top") => `\n  linear-gradient(\n    to ${s},\n    ${t.yellow[100]} 0%,\n    ${t.yellow[300]} 50%,\n    ${t.yellow[500]} 100%\n  );\n`},
            T = {
                simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.apocyan[100]} 0%,\n    ${t.apocyan[500]} 100%\n  );`,
                mirror: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.apocyan[500]} 0%,\n    ${t.apocyan[100]} 50%,\n    ${t.apocyan[500]} 100%\n  );`
            },
            w = {simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.dark[500]} 100%,\n    ${t.dark[900]} 100%\n  );`},
            D = {simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.light[100]} 100%,\n    ${t.light[300]} 100%\n  );`},
            _ = {
                deception: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.deception.primary} 0%,\n      ${t.god.deception.secondary} 50%,\n      ${t.god.deception.tertiary} 100%\n    )`,
                war: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.war.primary} 0%,\n      ${t.god.war.secondary} 50%,\n      ${t.god.war.tertiary} 100%\n    )`,
                death: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.death.primary} 0%,\n      ${t.god.death.secondary} 50%,\n      ${t.god.death.tertiary} 100%\n    )`,
                magic: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.magic.primary} 0%,\n      ${t.god.magic.secondary} 50%,\n      ${t.god.magic.tertiary} 100%\n    )`,
                nature: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.nature.primary} 0%,\n      ${t.god.nature.secondary} 50%,\n      ${t.god.nature.tertiary} 100%\n    )`,
                light: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.light.primary} 0%,\n      ${t.god.light.secondary} 50%,\n      ${t.god.light.tertiary} 100%\n    )`
            },
            M = s => `background: ${s};\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;`;
        var C = n(49219), P = n(66974), E = n(61462)
    }, 49219: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            spacingAmountMapping: () => i,
            standardTransitionDuration: () => v,
            standardTransitionEasing: () => e,
            standardBorderSize: () => f,
            draggableTitleBarHeight: () => p,
            standardHeaderHeight: () => g,
            standardHeaderHeightInCss: () => r,
            standardHeaderAlertBarHeight: () => t,
            headerBarZLevel: () => o,
            electronMenuBarZLevel: () => b,
            modalLayerZLevel: () => S,
            electronTitleBarHeight: () => T,
            imageQualities: () => w
        });
        var u = n(80102);
        const i = {
                "2x-small": "2px",
                "x-small": "4px",
                small: "8px",
                medium: "12px",
                large: "16px",
                "x-large": "24px",
                "2x-large": "32px",
                "3x-large": "40px",
                "4x-large": "56px",
                "5x-large": "72px",
                "6x-large": "96px",
                "7x-large": "128px",
                "8x-large": "192px",
                "9x-large": "320px"
            }, v = "150ms", e = "ease-in-out", f = "1px", p = (0, u.gridUnits)(7), g = 80, r = "80px", t = 50, o = 22,
            b = 23, S = 22, T = (0, u.gridUnits)(7), w = {small: 128, normal: 256, high: 512, xHigh: 720, best: 1024}
    }, 66974: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {
            iconTextStyles: () => u,
            headingFont: () => i,
            simpleFont: () => v,
            textAlignRules: () => e,
            headingSizeMapping: () => f,
            simpleTextSizeMapping: () => p,
            baseSimpleTextStyles: () => g
        });
        const u = "\n  font-family: 'gu-cons';\n  font-feature-settings: 'liga' 1;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  vertical-align: middle;\n  letter-spacing: 0;\n  line-height: 1;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n",
            i = "\n  font-family: 'Unchained', serif;\n", v = "\n  font-family: 'Open Sans', sans-serif;\n",
            e = "\n  :host([align='center']),\n  :host([align='center']) ::slotted(*) {\n    text-align: center;\n  }\n\n  :host([align='left']),\n  :host([align='left']) ::slotted(*) {\n    text-align: left;\n  }\n\n  :host([align='right']),\n  :host([align='right']) ::slotted(*) {\n    text-align: right;\n  }\n",
            f = {
                "3x-small": "14px",
                "2x-small": "18px",
                "x-small": "24px",
                small: "32px",
                large: "40px",
                "x-large": "48px",
                "2x-large": "72px"
            }, p = {large: "20px", small: "16px", help: "14px", tag: "12px", micro: "10px"},
            g = `\n  ${v}\n  line-height: 1.1;\n`
    }, 61462: (oe, R, n) => {
        "use strict";
        n.r(R), n.d(R, {userSelect: () => u});
        const u = i => `\n    -webkit-user-select: ${i};\n    user-select: ${i};\n    pointer-events: ${i};\n  `
    }, 58672: (oe, R, n) => {
        "use strict";
        n.d(R, {x: () => i});
        var u = n(25297);

        function i({renderer: v, baseClass: e = u.J, props: f = {}}) {
            const p = class extends e {
                render() {
                    return v.call(this, this)
                }
            };
            return Object.entries(f).forEach(([g, r]) => p[g] = r), p
        }
    }, 51256: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(56418), e = n(86041), f = n(5284), p = n(65171), g = n(26532),
            r = n(65281), t = n(47925), o = n(91418);
        let b = class extends i.oi {
            constructor() {
                super(...arguments), this.size = "small", this.align = "center", this.responsiveSize = []
            }

            static get styles() {
                return i.iv`
      :host {
        display: block;
        ${(0, g.asCssProp)(f.uA.enhancedTextRenderingStyles)};
      }

      :host,
      ::slotted(*) {
        ${(0, g.asCssProp)(r.typography.headingFont)};
        color: ${(0, g.asCssProp)(r.colors.light[100])};
        line-height: 1.2;
        font-weight: 700;
        text-transform: uppercase;
        margin: 0;
      }

      ${(0, g.asCssProp)(r.typography.textAlignRules)}

      :host([size='2x-large']),
      :host([size='2x-large']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["2x-large"])} !important;
      }

      :host([size='x-large']),
      :host([size='x-large']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["x-large"])} !important;
      }

      :host([size='large']),
      :host([size='large']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping.large)} !important;
      }

      /* 'Small' size is the default size... */
      :host,
      :host ::slotted(*),
      :host([size='small']),
      :host([size='small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping.small)} !important;
      }

      :host([size='x-small']),
      :host([size='x-small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["x-small"])} !important;
      }

      :host([size='2x-small']),
      :host([size='2x-small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["2x-small"])} !important;
      }

      :host([size='3x-small']),
      :host([size='3x-small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["3x-small"])} !important;
      }

      ${(0, g.asCssProp)(o.fillColoringRules)}
    `
            }

            generateMediaQueries() {
                return this.responsiveSize.length ? i.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveSize.map(({breakpoint: T, size: w}) => i.iv`
                @media screen and (min-width: ${(0, g.asCssProp)(t.breakpointSizeMapping[T])}) {
                  :host(.overWrite[size='${(0, g.asCssProp)(this.size)}']),
                  :host(.overWrite[size='${(0, g.asCssProp)(this.size)}']) ::slotted(*) {
                    font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping[w])} !important;
                  }
                }
              `)}
          </style>
        ` : null
            }

            render() {
                const {fillColor: T, fillGradient: w, fillGradientTarget: D} = this;
                return (0, p.updateColoringVariables)({
                    component: this,
                    fillColor: T,
                    fillGradient: w,
                    fillGradientTarget: D
                }), this.setAttribute("size", this.size), this.responsiveSize.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), i.dy`
      ${this.generateMediaQueries()}
      <slot></slot>
    `
            }
        };
        (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], b.prototype, "size", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], b.prototype, "align", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], b.prototype, "fillColor", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], b.prototype, "fillGradient", void 0), (0, u.gn)([(0, v.C)({type: String}), (0, u.w6)("design:type", String)], b.prototype, "fillGradientTarget", void 0), (0, u.gn)([(0, v.C)({type: Array}), (0, u.w6)("design:type", Array)], b.prototype, "responsiveSize", void 0), b = (0, u.gn)([(0, e.M)("gu-heading-text")], b)
    }, 11015: (oe, R, n) => {
        "use strict";
        var u = n(70655), i = n(32830), v = n(86041), e = n(52102);
        let f = class extends e._ {
            static get styles() {
                return i.iv`
      ${super.styles}

      :host {
        display: block;
      }

      :host,
      :host ::slotted(*) {
        line-height: 1.375;
      }

      :host([kind='large']) ::slotted(*) {
        line-height: 1.4;
      }

      :host([kind='small']) ::slotted(*) {
        line-height: 1.5;
      }

      :host([kind='help']) ::slotted(*) {
        line-height: 1.43;
      }

      :host([kind='tag']) ::slotted(*) {
        line-height: 1.67;
      }
    `
            }
        };
        f = (0, u.gn)([(0, v.M)("gu-paragraph-text")], f)
    }, 52102: (oe, R, n) => {
        "use strict";
        n.d(R, {_: () => T});
        var u = n(70655), i = n(32830), v = n(56418), e = n(86041), f = n(5284), p = n(65281), g = n(26532),
            r = n(91418), t = n(66974), o = n(61462);
        const b = `\n  font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.tag)};\n  font-weight: 700;\n  text-transform: uppercase;\n`;
        let T = class extends i.oi {
            constructor() {
                super(...arguments), this.align = "center", this.fontStyle = "regular", this.responsiveKind = []
            }

            static get styles() {
                return i.iv`
  ${(0, g.asCssProp)((0, g.setBoxSizing)())}

  :host,
    :host ::slotted(*) {
    ${(0, g.asCssProp)(f.uA.enhancedTextRenderingStyles)};
    ${(0, g.asCssProp)(t.baseSimpleTextStyles)};
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.small)};

    ${(0, g.asCssProp)((0, o.userSelect)("inherit"))};
  }

  :host([kind='large']),
  :host([kind='large']) ::slotted(*) {
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.large)};
  }

  :host([kind='small']),
  :host([kind='small']) ::slotted(*) {
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.small)};
  }

  :host([kind='micro']),
  :host([kind='micro']) ::slotted(*) {
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.micro)};
  }

  :host([kind='help']),
  :host([kind='help']) ::slotted(*) {
    font-style: italic;
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.help)};
  }

  :host([kind='tag']),
  :host([kind='tag']) ::slotted(*) {
    ${(0, g.asCssProp)(b)};
  }

  :host([fontStyle='italic']),
  :host([fontStyle='italic']) ::slotted(*) {
    font-style: italic;
  }

  :host([fontWeight='bold']),
  :host([fontWeight='bold']) ::slotted(*) {
    font-weight: 700;
  }

  ${(0, g.asCssProp)(p.typography.textAlignRules)}
  ${(0, g.asCssProp)(r.fillColoringRules)}
`
            }

            generateMediaQueries() {
                const {breakpointSizeMapping: D} = p.breakpoints, {asCssProp: _} = f.ZB, {simpleTextSizeMapping: M} = p.typography;
                return this.responsiveKind.length ? i.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveKind.map(({breakpoint: C, kind: P = "small"}) => i.iv`
                @media screen and (min-width: ${_(D[C])}) {
                  :host(.overWrite[kind='${_(this.kind)}']),
                  :host(.overWrite[kind='${_(this.kind)}']) ::slotted(*) {
                    font-size: ${_(M[P])} !important;
                    ${_("tag" !== P ? "bold" === this.fontWeight ? "font-weight: 700" : "font-weight: 400" : "")};
                    ${_("tag" === P ? b : "")};
                    ${_("help" === P ? "font-style: italic" : "")};
                  }
                }
              `)}
          </style>
        ` : null
            }

            render() {
                const {updateColoringVariables: D} = f.gt, {
                    fillColor: _,
                    fillGradient: M,
                    fillGradientTarget: C,
                    borderColor: P,
                    fillColorHover: E
                } = this;
                return D({
                    component: this,
                    fillColor: _,
                    fillColorHover: E,
                    fillGradient: M,
                    fillGradientTarget: C,
                    borderColor: P
                }), this.setAttribute("kind", this.kind), this.responsiveKind.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), i.dy`
      ${this.generateMediaQueries()} ${this.text ? this.text : ""}
      <slot></slot>
    `
            }
        };
        (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "kind", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "align", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "fontStyle", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "fontWeight", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "text", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "fillColor", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "fillColorHover", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "borderColor", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "fillGradient", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", String)], T.prototype, "fillGradientTarget", void 0), (0, u.gn)([(0, v.C)(), (0, u.w6)("design:type", Array)], T.prototype, "responsiveKind", void 0), T = (0, u.gn)([(0, e.M)("gu-simple-text")], T)
    }, 56302: (oe, R, n) => {
        "use strict";
        n.d(R, {X8: () => u, IU: () => f, Qo: () => r});
        var u = (() => {
            return (t = u || (u = {})).FETCH_USER_WALLET = "[Account] Fetch User Wallet", t.FETCH_USER_WALLET_SUCCESS = "[Account] Fetch User Wallet Success", t.FETCH_USER_WALLET_ERROR = "[Account] Fetch User Wallet Error", t.UPDATE_USER_ETH_BALANCE = "[Account] Update User Eth Balance", t.FETCH_USER_ACCOUNT = "[Account] Fetch User Account", t.FETCH_USER_ACCOUNT_SUCCESS = "[Account] Fetch User Account Success", t.FETCH_USER_ACCOUNT_ERROR = "[Account] Fetch User Account Error", u;
            var t
        })();

        class f {
            constructor() {
                this.type = u.FETCH_USER_WALLET
            }
        }

        class r {
            constructor(o) {
                this.payload = o, this.type = u.UPDATE_USER_ETH_BALANCE
            }
        }
    }, 43991: (oe, R, n) => {
        "use strict";
        n.d(R, {z: () => T});
        var u = n(40520), i = n(73307), v = n(61377), e = n(52909), f = n(591), p = n(30567), g = n(72986),
            r = n(24850), t = (() => {
                return (w = t || (t = {})).CARD = "card", w.DECK = "deck", w.PACKAGE = "package", w.TOME = "tome", w.CARD_BACK = "cardback", w.BOARD = "board", w.TRINKET = "trinket", w.EMOTE = "emote", w.ICON = "icon", t;
                var w
            })(), S = n(5e3);
        let T = (() => {
            class w {
                constructor(_, M, C, P) {
                    this.authService = _, this.marketplaceApiService = M, this.authHostService = C, this.guApiService = P, this.dataStore = {
                        usersSoldCards: [],
                        userHasNewSoldCards: !1
                    }, this._usersSoldCards = new f.X([]), this._userHasNewSoldCards = new f.X(!1), console.log("@Cerberus/AssetsService constructor")
                }

                get usersSoldCards$() {
                    return this._usersSoldCards.asObservable()
                }

                get userHasNewSoldCards$() {
                    return this._userHasNewSoldCards.asObservable()
                }

                getBoardsAndTrinkets() {
                    const _ = this.authService.getUserId();
                    return this.marketplaceApiService.get(`/user/${_}/asset?type=board&type=trinket`)
                }

                getAssetFilters(_) {
                    return this.marketplaceApiService.get("/property", {params: this.appendFilterParams(_)})
                }

                getAssetGroups(_, M) {
                    return this.marketplaceApiService.get("/assetgroup", {params: this.appendSearchParams(_, M)})
                }

                appendSearchParams(_, M) {
                    let C = new u.LE;
                    if (M.sortBy && (C = C.append("sort", M.sortBy)), M.orderBy && (C = C.append("order", M.orderBy)), M.groupBy) {
                        switch (C = C.append("group", M.groupBy), M.assetType) {
                            case t.CARD:
                                C = C.append("group", "quality_name"), C = C.append("group", "quality");
                                break;
                            case t.BOARD:
                                C = C.append("group", "level");
                                break;
                            case t.TRINKET:
                                C = C.append("group", "heads");
                                break;
                            default:
                                C = C.append("group", "quality_name"), C = C.append("group", "quality")
                        }
                        C = C.append("group", "proto")
                    }
                    return M.splitBy && (C = C.append("split", M.splitBy)), M.currentPage && (C = C.append("page", M.currentPage.toString())), M.perPage && (C = C.append("perPage", M.perPage.toString())), M.assetType && (C = C.append("asset_type", M.assetType)), _.owner && (C = C.append("owner", _.owner)), _.token_id && (C = C.append("token_id", _.token_id)), _.contract && (C = C.append("contract", _.contract)), _.properties && _.properties.length > 0 && (C = C.append("properties", this.stringifyMetaDataFilters(_.properties))), _.class_properties && _.class_properties.length > 0 && (C = C.append("class_properties", this.stringifyMetaDataFilters(_.class_properties))), C
                }

                appendFilterParams(_) {
                    let M = new u.LE;
                    return _.owner && (M = M.append("owner", _.owner)), _.asset_type && (M = M.append("asset_type", _.asset_type)), _.token_id && (M = M.append("token_id", _.token_id)), _.contract && (M = M.append("contract", _.contract)), _.properties && _.properties.length > 0 && (console.log("properties", this.stringifyMetaDataFilters(_.properties)), M = M.append("properties", this.stringifyMetaDataFilters(_.properties))), _.class_properties && _.class_properties.length > 0 && (M = M.append("class_properties", this.stringifyMetaDataFilters(_.class_properties))), M
                }

                stringifyMetaDataFilters(_) {
                    const M = JSON.stringify(_);
                    return encodeURI(M)
                }

                getSoldAssets({userId: _ = this.authService.getUserId(), showNotifications: M = !0} = {}) {
                    console.log("@Cerberus/AssetsService.getSoldAssets({ userId, showNotifications })", _, M), this.marketplaceApiService.get(`/user/${_}/sold`).pipe((0, g.q)(1)).subscribe(C => {
                        M && this.checkForNewCards(C) && (this.dataStore.userHasNewSoldCards = !0, this._userHasNewSoldCards.next(this.dataStore.userHasNewSoldCards)), this.dataStore.usersSoldCards = C, this._usersSoldCards.next([...this.dataStore.usersSoldCards])
                    })
                }

                checkForNewCards(_) {
                    return !(!_[0] || this.dataStore.usersSoldCards[0] && this.cardsAreTheSame(_[0], this.dataStore.usersSoldCards[0]))
                }

                cardsAreTheSame(_, M) {
                    return _.address === M.address && _.token_id === M.token_id
                }

                getProtoDetails(_) {
                    return this.guApiService.get(`/proto/${_}`)
                }

                clearNewSoldCards() {
                    this.dataStore.userHasNewSoldCards = !1, this._userHasNewSoldCards.next(this.dataStore.userHasNewSoldCards)
                }

                getSellingAssets$(_ = 1, M = 31, C = this.authService.getUserId()) {
                    return this.marketplaceApiService.get(`/user/${C}/selling?page=${_}&perPage=${M}`)
                }

                getUsernamesFromAddresses(_) {
                    const M = [];
                    for (let C = 0; C < _.length; C++) M.push(this.getUsernameFromAddress(_[C].owner).pipe((0, r.U)(P => P)));
                    return (0, p.D)(M)
                }

                getUsernameFromAddress(_) {
                    return this.authHostService.get(`/account/${_}/username`)
                }

                mapPriceHistory(_) {
                    return _ ? _.map(M => {
                        const P = new Date(0).setUTCSeconds(M.block_timestamp), E = e.O$.from(10).pow(18);
                        return {price: e.O$.from(M.taker_asset_amount).div(E).toNumber(), timestamp: P}
                    }) : []
                }

                getAssetGroupPriceHistory(_, M, C, P) {
                    console.log(M, C);
                    let E = {};
                    switch (P) {
                        case t.CARD:
                            E = JSON.stringify({proto: parseInt(M, 10), quality: parseInt(C, 10)});
                            break;
                        case t.TRINKET:
                            E = void 0 !== C && "undefined" !== C ? JSON.stringify({heads: parseInt(C, 10)}) : JSON.stringify({});
                            break;
                        case t.BOARD:
                            E = JSON.stringify({level: parseInt(C, 10)});
                            break;
                        default:
                            E = JSON.stringify({})
                    }
                    return this.marketplaceApiService.get(`/asset/${_}/price`, {
                        params: {
                            type: P,
                            asset_group: E
                        }
                    }).pipe((0, r.U)(s => this.mapPriceHistory(s)))
                }

                getAssetPriceHistory(_, M) {
                    return this.marketplaceApiService.get(`/asset/${_}/${M}/price`).pipe((0, r.U)(C => this.mapPriceHistory(C)))
                }

                getOwnedAssets$(_ = 1, M = 31, C = this.authService.getUserId()) {
                    return this.marketplaceApiService.get(`/user/${C}/asset/ethereumgroup?page=${_}&perPage=${M}`)
                }

                getOwnedAssets(_, M, C = this.authService.getUserId()) {
                    return this.marketplaceApiService.get(`/user/${C}/asset/ethereumgroup`, {params: this.appendSearchParams(_, M)})
                }

                getOwnedAssetFilters(_, M = this.authService.getUserId()) {
                    return this.marketplaceApiService.get(`/user/${M}/asset/ethereum/property`, {params: this.appendFilterParams(_)})
                }
            }

            return w.\u0275fac = function (_) {
                return new (_ || w)(S.LFG(i.mI), S.LFG(v._q), S.LFG(i.LI), S.LFG(v.Ho))
            }, w.\u0275prov = S.Yz7({token: w, factory: w.\u0275fac}), w
        })()
    }, 40886: (oe, R, n) => {
        "use strict";
        n.d(R, {Y: () => u, t: () => i});
        const u = 3, i = 1
    }, 72224: (oe, R, n) => {
        "use strict";
        n.d(R, {v: () => u});
        const u = 2147483647
    }, 69181: (oe, R, n) => {
        "use strict";
        n.d(R, {$: () => u});
        const u = [{name: "twitter", link: "https://twitter.com/GodsUnchained"}, {
            name: "reddit",
            link: "https://www.reddit.com/r/GodsUnchained/"
        }, {name: "facebook", link: "https://www.facebook.com/godsunchained/"}, {
            name: "instagram",
            link: "https://www.instagram.com/godsunchained/?hl=en"
        }, {name: "discord", link: "https://discordapp.com/invite/godsunchained"}, {
            name: "youtube",
            link: "https://www.youtube.com/channel/UCGQ1oWpKFfjsLYiTYALAlSA"
        }, {name: "twitch", link: "https://www.twitch.tv/godsunchained/videos"}]
    }, 94057: (oe, R, n) => {
        "use strict";
        n.d(R, {gv: () => v, zy: () => u, CF: () => i});
        var u = {};
        n.r(u), n.d(u, {Y: () => e});
        var i = {};
        n.r(i), n.d(i, {J: () => xe, Y: () => We});
        var v = {};
        n.r(v), n.d(v, {routeContent: () => Ve, userMenuItemsContent: () => ft});
        const e = [{
            name: "lysander",
            title: "Lysander: Champion of Light",
            description: "Lysander of Parthon was a respected Olympian military leader, a father, and a man of faith. All that changed the day he was confronted by an overwhelming enemy force led by a daemonic entity.",
            byline: "Wield the might of Lysander's cards by collecting Trial of the Gods packs.",
            link: "https://blog.godsunchained.com/2020/01/29/chapter-2-lysanders-origin-broken/",
            protoId: 824
        }, {
            name: "neferu",
            title: "Neferu: Champion of Death",
            description: "Neferu served with distinction in the Anubian army, fighting to reclaim ancestral land from the hated Olympians. She thought she was the embodiment of death herself, until she met her fate on the Mukhnod fields.",
            byline: "Unearth the fury of Neferu's cards by collecting Trial of the Gods packs.",
            link: "https://blog.godsunchained.com/2020/02/04/chapter-3-neferus-origin-blessed-rest/",
            protoId: 828
        }, {
            name: "pallas",
            title: "Pallas: Champion of Magic",
            description: "Growing up in a commune of mages, Pallas always seemed to defy categorization: style of magic, philosophy, even gender. This made Evaluation at the Academy of Mystical Arts more complicated than even they expected.",
            byline: "Channel the power of Pallas' cards by collecting Trial of the Gods packs.",
            link: "https://blog.godsunchained.com/2020/02/13/chapter-4-pallas-origin-all-is-magic/",
            protoId: 825
        }, {
            name: "orfeo",
            title: "Orfeo: Champion of Deception",
            description: "Orphaned at a young age, Orfeo quickly learned that one face wasn't enough to survive on the streets of Ronella. But managing multiple lives was never going to be easy, especially when it\u2019s uncertain who is really pulling the strings.",
            byline: "Unveil the skill behind Orfeo's cards by collecting Trial of the Gods packs.",
            link: "https://blog.godsunchained.com/2020/03/05/chapter-5-orfeos-origin-masks/",
            protoId: 829
        }, {
            name: "selena",
            title: "Selena: Champion of Nature",
            description: "As a child, many of the Amazons of Agrodor saw Selena a frail young boy... but she knew better. She was a warrior at heart and \u2013 even though she was less athletic than her peers \u2013 she was determined to prove her skills.",
            byline: "Discover the strength of Selena's cards by collecting Trial of the Gods packs.",
            link: "https://blog.godsunchained.com/2020/03/19/chapter-6-selenas-origin-truth-is-told-by-moonlight/",
            protoId: 826
        }, {
            name: "valka",
            title: "Valka: Champion of War",
            description: "Battle-hardened and proud, Valka endured devastating adversity before she was selected by Auros to become the Champion of War.",
            byline: "Unleash the wrath of Valka's cards by collecting Trial of the Gods packs.",
            link: "https://blog.godsunchained.com/2020/04/02/chapter-7-valkas-origin-a-traitors-blood/",
            protoId: 827
        }];
        n(69181), n(94417), n(40520), n(591), n(8929), n(36053), n(21086), n(61737), n(24850), n(2994), n(72986), n(61709), n(27221), n(61377);
        var P = n(73175);
        n(73307), n(5e3), new P.N0, n(40886), n(52909), n(67806), n(26959), n(74323), n(47760), n(18499), n(45425), n(5254), n(68896), n(56498), n(92198), n(56302), n(96727), n(11735), n(43991);
        var we = n(1025);
        const xe = {
            home: {
                shortName: "home",
                path: "",
                icon: "nav_arena",
                pageTitle: "Gods Unchained",
                keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game,CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn",
                description: "The ultimate digital trading card game that gives players true ownership of their collection. Play for free, play for keeps, or trade on open marketplaces. Download now. "
            },
            expansions: {
                shortName: "expansions",
                path: "expansions",
                icon: "set_order",
                children: {
                    trial: {
                        shortName: "trial of the gods",
                        path: "expansions/trial-of-the-gods",
                        pageTitle: "Trial of the Gods"
                    },
                    divineOrder: {shortName: "divine order", path: "expansions/divine-order", pageTitle: "Divine Order"}
                }
            },
            buyPacks: {
                shortName: "buy packs",
                path: "buy-packs",
                icon: "trader_package",
                pageTitle: "Buy new card packs"
            },
            market: {
                shortName: "market",
                path: "market_trader",
                icon: "nav_market",
                children: {
                    imxMarketplace: {
                        shortName: "Buy & Sell",
                        url: "https://market.ropsten.x.immutable.com/assets?collection=0xc6185055ea9891d5d9020c927ff65229baebdef2",
                        _target: "_blank"
                    }, starStore: {shortName: "star store", path: "star-store", pageTitle: "Star Store"}
                }
            },
            learn: {
                shortName: "learn", path: "learn", icon: "nav_library", children: {
                    cards: {
                        shortName: "cards",
                        path: "learn/cards",
                        angularRouterPath: "cards",
                        pageTitle: "Learn: Explore the cards",
                        keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, gu cards, gods unchained cards, card info",
                        description: "A complete list of collectable cards in Gods Unchained. Build your deck, trade and play using core and Genesis cards."
                    },
                    faq: {
                        shortName: "faq",
                        path: "learn/faq",
                        angularRouterPath: "faq",
                        pageTitle: "Learn: Frequently asked questions",
                        keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, faq, frequently asked questions",
                        description: "What is Gods Unchained? How do I play? Is it free-to-play? Can I play on mobile? When is the World Championship? Everything you need to know about Gods Unchained. "
                    },
                    lore: {shortName: "lore", url: "//blog.godsunchained.com/category/lore", _target: "_blank"},
                    blog: {shortName: "blog", url: "//blog.godsunchained.com", _target: "_blank"},
                    guide: {shortName: "guide", url: "//blog.godsunchained.com/learn-to-play", _target: "_blank"},
                    spgp: {
                        shortName: "Stay. Play. Get Paid.",
                        path: "learn/spgp",
                        angularRouterPath: "spgp",
                        pageTitle: "Learn: Stay Play Get Paid",
                        keywords: "",
                        description: "",
                        featureFlag: we.v.spgpEnabled
                    },
                    referrals: {
                        shortName: "Referrals",
                        path: "learn/referrals",
                        angularRouterPath: "referrals",
                        pageTitle: "Learn: Referrals",
                        keywords: "",
                        description: "",
                        featureFlag: we.v.referralsEnabled
                    }
                }
            },
            collections: {
                shortName: "collections",
                path: "collections",
                icon: "nav_inventory",
                pageTitle: "Collections: Your collections",
                keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, gu inventory, gods unchained inventory",
                description: "View your Gods Unchained collection."
            },
            openPacks: {
                shortName: "open packs",
                path: "open-packs",
                icon: "nav_temple",
                pageTitle: "Open Gods Unchained card packs you've purchased.",
                keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, temple, gods unchained temple, gu card packs, open card packs, gu temple",
                description: "Open Gods Unchained card packs you've purchased."
            },
            token: {
                shortName: "$GODS token",
                path: "token",
                icon: "GUToken",
                children: {
                    about: {
                        shortName: "About",
                        path: "token/about",
                        pageTitle: "Learn about GODS token",
                        featureFlag: we.v.tokenEnabled
                    },
                    airdrop: {
                        shortName: "Claim",
                        path: "token/claim",
                        pageTitle: "Claim GODS token",
                        featureFlag: we.v.claimAirdropEnabled
                    },
                    staking: {
                        shortName: "Staking",
                        path: "token/staking",
                        pageTitle: "Staking $GODS token",
                        featureFlag: we.v.stakingEnabled
                    }
                }
            }
        }, We = {
            manageWallets: {
                shortName: "Manage Wallets",
                path: "manage-wallets",
                pageTitle: "Connect a wallet to your GodsUnchained user account",
                visible: !0
            }, logOut: {shortName: "Log Out", visible: !0}
        }, Ve = Te => ({
            home: {
                shortName: "arena",
                path: "game/gu/game-modes",
                icon: "nav_arena",
                pageTitle: "Gods Unchained homepage"
            },
            market: {
                shortName: "market",
                path: "market_trader",
                icon: "nav_market",
                children: {
                    imxMarketplace: {
                        shortName: "Buy & Sell",
                        url: `${Te.immutableXMarketplaceUrlGUCollection}`,
                        _target: "_blank"
                    }, starStore: {shortName: "star store", path: "game/gu/star-store", pageTitle: "Star Store"}
                }
            },
            collections: {
                shortName: "collections",
                path: "game/gu/inventory",
                icon: "nav_inventory",
                pageTitle: "Collections: Your collections"
            },
            workshop: {shortName: "workshop", path: "game/gu/my-decks", icon: "nav_workshop"},
            forge: {path: "game/gu/forge", icon: "nav_forge", shortName: "forge", featureFlag: we.v.forgeEnabled},
            openPacks: {shortName: "open packs", path: "game/gu/temple", icon: "nav_temple"},
            learn: {
                shortName: "learn",
                icon: "nav_library",
                path: "learn",
                children: {
                    cards: {shortName: "cards", url: `${Te.guWebsite}/${xe.learn.children.cards.path}`},
                    faq: {shortName: "faq", url: `${Te.guWebsite}/${xe.learn.children.faq.path}`},
                    lore: {shortName: "lore", url: "//blog.godsunchained.com/category/lore"},
                    blog: {shortName: "blog", url: "//blog.godsunchained.com"},
                    guide: {shortName: "guide", url: "//blog.godsunchained.com/learn-to-play"},
                    spgp: {shortName: "Stay. Play. Get Paid.", path: "game/gu/spgp"},
                    referrals: {shortName: "Referrals", path: "game/gu/referrals"}
                }
            },
            buyPacks: {
                shortName: "buy packs",
                icon: "trader_package",
                url: `${Te.guWebsite}/${xe.buyPacks.path}`,
                external: !0
            }
        }), ft = Te => ({
            playToEarn: {
                shortName: "Play to Earn",
                path: "game/gu/play-to-earn",
                featureFlag: we.v.playToEarnEnabled,
                visible: !0
            },
            manageWallets: {
                shortName: "Manage Wallets",
                url: `${Te.guWebsite}/${We.manageWallets.path}`,
                pageTitle: "Connect a wallet to your GodsUnchained user account",
                visible: !0
            },
            logOut: {shortName: "Log Out", visible: !0}
        })
    }, 52886: (oe, R, n) => {
        "use strict";
        n.d(R, {Zb: () => v, nE: () => S, nJ: () => u, Xl: () => i, PE: () => T});
        var u = (() => {
            return (C = u || (u = {}))[C.DIAMOND = 1] = "DIAMOND", C[C.GOLD = 2] = "GOLD", C[C.SHADOW = 3] = "SHADOW", C[C.METEORITE = 4] = "METEORITE", C[C.PLAIN = 5] = "PLAIN", u;
            var C
        })();
        const i = {
            [u.DIAMOND]: "diamond",
            [u.GOLD]: "gold",
            [u.SHADOW]: "shadow",
            [u.METEORITE]: "meteorite",
            [u.PLAIN]: "plain"
        };

        class v {
            constructor(P, E, s, y, k) {
                this.id = P, this.proto = E, this.quality = s, this.protoCard = y, this.status = k
            }
        }

        var S = (() => {
            return (C = S || (S = {}))[C.All = -1] = "All", C[C.Owned = 0] = "Owned", C[C.Unowned = 1] = "Unowned", C[C.Processing = 2] = "Processing", S;
            var C
        })(), T = (() => {
            return (C = T || (T = {}))[C.AscID = 0] = "AscID", C[C.DescID = 1] = "DescID", C[C.AscQuality = 2] = "AscQuality", C[C.DescQuality = 3] = "DescQuality", C[C.AscMana = 4] = "AscMana", C[C.DescMana = 5] = "DescMana", C[C.AscScarcity = 6] = "AscScarcity", C[C.AscHealth = 7] = "AscHealth", C[C.DescHealth = 8] = "DescHealth", C[C.AscAttack = 9] = "AscAttack", C[C.DescAttack = 10] = "DescAttack", C[C.AscTribe = 11] = "AscTribe", C[C.DescTribe = 12] = "DescTribe", C[C.AscRarity = 13] = "AscRarity", C[C.DescRarity = 14] = "DescRarity", C[C.AscType = 15] = "AscType", C[C.DescType = 16] = "DescType", C[C.AscGod = 17] = "AscGod", C[C.DescGod = 18] = "DescGod", C[C.AscSet = 19] = "AscSet", C[C.DescSet = 20] = "DescSet", T;
            var C
        })()
    }, 28510: (oe, R, n) => {
        "use strict";
        n.d(R, {mX: () => v.mX, Qz: () => u.Q, Zd: () => e});
        var u = n(55943), i = n(5e3), v = n(46688);
        let e = (() => {
            class f {
            }

            return f.\u0275fac = function (g) {
                return new (g || f)
            }, f.\u0275mod = i.oAB({type: f}), f.\u0275inj = i.cJS({providers: [u.Q]}), f
        })()
    }, 46688: (oe, R, n) => {
        "use strict";
        n.d(R, {m3: () => u, mX: () => i, x0: () => v});

        class u {
            constructor(f, p, g) {
                this.nodes = f, this.viewRef = p, this.componentRef = g
            }
        }

        class i {
            close(f) {
            }

            dismiss(f) {
            }
        }

        class v {
            constructor(f, p, g, r) {
                this.windowComponentRef = f, this.contentRef = p, this.backdropComponentRef = g, this._beforeDismiss = r, f.instance.dismissEvent.subscribe(t => {
                    this.dismiss(t)
                }), this.result = new Promise((t, o) => {
                    this.resolve = t, this.reject = o
                }), this.result.then(null, () => {
                })
            }

            get componentInstance() {
                if (this.contentRef && this.contentRef.componentRef) return this.contentRef.componentRef.instance
            }

            close(f) {
                this.windowComponentRef && (this.resolve(f), this.removeModalElements())
            }

            dismissModal(f) {
                this.reject(f), this.removeModalElements()
            }

            dismiss(f) {
                if (this.windowComponentRef) if (this._beforeDismiss) {
                    const p = this._beforeDismiss();
                    p && p.then ? p.then(g => {
                        !1 !== g && this.dismissModal(f)
                    }, () => {
                    }) : !1 !== p && this.dismissModal(f)
                } else this.dismissModal(f)
            }

            removeModalElements() {
                const f = this.windowComponentRef.location.nativeElement;
                if (f.parentNode.removeChild(f), this.windowComponentRef.destroy(), this.backdropComponentRef) {
                    const p = this.backdropComponentRef.location.nativeElement;
                    p.parentNode.removeChild(p), this.backdropComponentRef.destroy()
                }
                this.contentRef && this.contentRef.viewRef && this.contentRef.viewRef.destroy(), this.windowComponentRef = null, this.backdropComponentRef = null, this.contentRef = null
            }
        }
    }, 55943: (oe, R, n) => {
        "use strict";
        n.d(R, {Q: () => Ze});
        var u = n(69808), i = n(5e3), v = n(8929), e = n(23753), f = n(7625), p = n(24850), g = n(92198), r = n(87168),
            t = (() => {
                return (W = t || (t = {}))[W.Tab = 9] = "Tab", W[W.Enter = 13] = "Enter", W[W.Escape = 27] = "Escape", W[W.Space = 32] = "Space", W[W.PageUp = 33] = "PageUp", W[W.PageDown = 34] = "PageDown", W[W.End = 35] = "End", W[W.Home = 36] = "Home", W[W.ArrowLeft = 37] = "ArrowLeft", W[W.ArrowUp = 38] = "ArrowUp", W[W.ArrowRight = 39] = "ArrowRight", W[W.ArrowDown = 40] = "ArrowDown", t;
                var W
            })();
        const o = ["a[href]", "button:not([disabled])", 'input:not([disabled]):not([type="hidden"])', "select:not([disabled])", "textarea:not([disabled])", "[contenteditable]", '[tabindex]:not([tabindex="-1"])'].join(", ");

        function b(W) {
            const he = Array.from(W.querySelectorAll(o)).filter(Q => -1 !== Q.tabIndex);
            return [he[0], he[he.length - 1]]
        }

        var T = n(46688);

        function E(W) {
            return null != W
        }

        "undefined" != typeof Element && !Element.prototype.closest && (Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest = function (W) {
            let he = this;
            if (!document.documentElement.contains(he)) return null;
            do {
                if (he.matches(W)) return he;
                he = he.parentElement || he.parentNode
            } while (null !== he && 1 === he.nodeType);
            return null
        });
        var ee = n(73307);
        let pe = (() => {
            class W {
                constructor(Q) {
                    this._environment = Q
                }

                ngOnInit() {
                    this.modalEnviornment = this._environment.clientType
                }
            }

            return W.\u0275fac = function (Q) {
                return new (Q || W)(i.Y36(ee.Ho))
            }, W.\u0275cmp = i.Xpm({
                type: W,
                selectors: [["cerberus-modal-backdrop"]],
                hostVars: 2,
                hostBindings: function (Q, te) {
                    2 & Q && i.Tol("cerberusModal__backdrop" + (te.backdropClass ? " " + te.backdropClass : ""))
                },
                inputs: {backdropClass: "backdropClass"},
                decls: 0,
                vars: 0,
                template: function (Q, te) {
                },
                encapsulation: 2
            }), W
        })();
        var ce = n(2994), Ee = n(87545), F = n(72986), Y = (() => {
            return (W = Y || (Y = {}))[W.BACKDROP_CLICK = 0] = "BACKDROP_CLICK", W[W.ESC = 1] = "ESC", Y;
            var W
        })();
        const ae = ["dialog"], J = ["*"];
        let fe = (() => {
            class W {
                constructor(Q, te, ge, ue) {
                    this.environment = Q, this.document = te, this.elRef = ge, this.zone = ue, this.closed$ = new v.xQ, this.backdrop = !0, this.keyboard = !0, this.defaultStylings = !0, this.dismissEvent = new i.vpe
                }

                dismiss(Q) {
                    this.dismissEvent.emit(Q)
                }

                ngOnInit() {
                    this.elWithFocus = this.document.activeElement, this.modalEnviornment = this.environment.clientType
                }

                ngAfterViewInit() {
                    const {nativeElement: Q} = this.elRef;
                    if (this.zone.runOutsideAngular(() => {
                        (0, e.R)(Q, "keydown").pipe((0, f.R)(this.closed$), (0, g.h)(ge => ge.which === t.Escape && this.keyboard)).subscribe(ge => requestAnimationFrame(() => {
                            ge.defaultPrevented || this.zone.run(() => this.dismiss(Y.ESC))
                        }));
                        let te = !1;
                        (0, e.R)(this._dialogEl.nativeElement, "mousedown").pipe((0, f.R)(this.closed$), (0, ce.b)(() => te = !1), (0, Ee.w)(() => (0, e.R)(Q, "mouseup").pipe((0, f.R)(this.closed$), (0, F.q)(1))), (0, g.h)(({target: ge}) => Q === ge)).subscribe(() => {
                            te = !0
                        }), (0, e.R)(Q, "click").pipe((0, f.R)(this.closed$)).subscribe(({target: ge}) => {
                            !0 === this.backdrop && Q === ge && !te && this.zone.run(() => this.dismiss(Y.BACKDROP_CLICK)), te = !1
                        })
                    }), !Q.contains(document.activeElement)) {
                        const te = Q.querySelector("[ngbAutofocus]"), ge = b(Q)[0];
                        (te || ge || Q).focus()
                    }
                }

                ngOnDestroy() {
                    const Q = this.document.body, te = this.elWithFocus;
                    let ge;
                    ge = te && te.focus && Q.contains(te) ? te : Q, this.zone.runOutsideAngular(() => {
                        setTimeout(() => ge.focus()), this.elWithFocus = null
                    }), this.closed$.next()
                }
            }

            return W.\u0275fac = function (Q) {
                return new (Q || W)(i.Y36(ee.Ho), i.Y36(u.K0), i.Y36(i.SBq), i.Y36(i.R0b))
            }, W.\u0275cmp = i.Xpm({
                type: W,
                selectors: [["cerberus-modal-window"]],
                viewQuery: function (Q, te) {
                    if (1 & Q && i.Gf(ae, 7), 2 & Q) {
                        let ge;
                        i.iGM(ge = i.CRH()) && (te._dialogEl = ge.first)
                    }
                },
                hostAttrs: ["role", "dialog", "tabindex", "-1"],
                hostVars: 4,
                hostBindings: function (Q, te) {
                    2 & Q && (i.uIk("aria-modal", !0)("aria-labelledby", te.ariaLabelledBy), i.Tol("cerberusModal" + (te.windowClass ? " " + te.windowClass : "")))
                },
                inputs: {
                    ariaLabelledBy: "ariaLabelledBy",
                    backdrop: "backdrop",
                    centered: "centered",
                    keyboard: "keyboard",
                    scrollable: "scrollable",
                    size: "size",
                    windowClass: "windowClass",
                    defaultStylings: "defaultStylings"
                },
                outputs: {dismissEvent: "dismiss"},
                ngContentSelectors: J,
                decls: 4,
                vars: 4,
                consts: [["role", "document"], ["dialog", ""]],
                template: function (Q, te) {
                    1 & Q && (i.F$t(), i.TgZ(0, "div", 0, 1), i.TgZ(2, "div"), i.Hsn(3), i.qZA(), i.qZA()), 2 & Q && (i.Tol("cerberusModal__dialog" + (te.size ? " cerberus-modal-" + te.size : "") + (te.defaultStylings ? " cerberusModal__dialog--defaultStylings" : "") + (te.centered ? " cerberusModal__dialog--centered" : "") + (te.scrollable ? " cerberusModal__dialog--scrollable" : "") + (te.modalEnviornment ? " cerberusModal__dialog--" + te.modalEnviornment : "")), i.xp6(2), i.Tol("cerberusModal__content" + (te.defaultStylings ? " cerberusModal__content--defaultStylings" : "")))
                },
                styles: ['.cerberusModal__open{overflow:hidden;height:100vh;width:100vw;user-select:none;pointer-events:none}.cerberusModal__open .cerberusModal{overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch;user-select:auto;pointer-events:auto}.cerberusModal{position:fixed;top:0;left:0;z-index:22;width:100%;height:100%;overflow:hidden;outline:0;display:flex;justify-content:center;align-items:flex-start}.cerberusModal__dialog{position:relative;width:auto;pointer-events:none;justify-content:center;display:flex}.cerberusModal__dialog--scrollable{display:flex;max-height:calc(100% - 16px)}.cerberusModal__dialog--scrollable .cerberusModal__content{max-height:calc(100vh - 16px);overflow:hidden}.cerberusModal__dialog--scrollable .cerberusModal__header .cerberusModal__footer{flex-shrink:0}.cerberusModal__dialog--scrollable .cerberusModal__body{overflow-y:auto}.cerberusModal__dialog--defaultStylings{margin:8px}.cerberusModal__dialog--centered{display:flex;align-items:center;min-height:calc(100% - 16px);align-self:center}.cerberusModal__dialog--centered:before{display:block;height:calc(100vh - 16px);height:min-content;content:""}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable{flex-direction:column;justify-content:center;height:100%}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable .cerberusModal__content{max-height:none}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable:before{content:none}.cerberusModal__content{position:relative;flex-direction:column;display:flex;width:100%;pointer-events:auto;background-clip:padding-box;outline:0}.cerberusModal__content--defaultStylings{border:2px solid white;border:1px solid rgba(0,0,0,.2);background-color:#fff}.cerberusModal__backdrop{position:fixed;top:0;left:0;z-index:22;width:100vw;height:100vh;background-color:#000;opacity:.5}.cerberusModal__header{display:flex;align-items:flex-start;justify-content:space-between;padding:16px;border-bottom:1px solid #dee2e6}.cerberusModal__header .close{padding:16px;margin:-16px -16px -16px auto}.cerberusModal__title{margin-bottom:0;line-height:1.5}.cerberusModal__body{position:relative;flex:1 1 auto;padding:16px}.cerberusModal__footer{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-end;padding:12px;border-top:1px solid #dee2e6}.cerberusModal__footer>*{margin:4px}.cerberusModal__scrollbarMeasure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}\n', "cerberus-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}.cerberusModal__dialog--defaultStylings.cerberusModal__dialog--website{top:96px}.cerberusModal__dialog--defaultStylings.cerberusModal__dialog--desktop{top:calc(var(--vh) * 9)}\n"],
                encapsulation: 2
            }), W
        })();
        const N = () => {
        };
        let de = (() => {
            class W {
                constructor(Q) {
                    this._document = Q
                }

                compensate() {
                    const Q = this._getWidth();
                    return this._isPresent(Q) ? this._adjustBody(Q) : N
                }

                _adjustBody(Q) {
                    const te = this._document.body, ge = te.style.paddingRight,
                        ue = parseFloat(window.getComputedStyle(te)["padding-right"]);
                    return te.style["padding-right"] = `${ue + Q}px`, () => te.style["padding-right"] = ge
                }

                _isPresent(Q) {
                    const te = this._document.body.getBoundingClientRect();
                    return window.innerWidth - (te.left + te.right) >= Q - .1 * Q
                }

                _getWidth() {
                    const Q = this._document.createElement("div");
                    Q.className = "cerberusModal__scrollbarMeasure";
                    const te = this._document.body;
                    te.appendChild(Q);
                    const ge = Q.getBoundingClientRect().width - Q.clientWidth;
                    return te.removeChild(Q), ge
                }
            }

            return W.\u0275fac = function (Q) {
                return new (Q || W)(i.LFG(u.K0))
            }, W.\u0275prov = i.Yz7({token: W, factory: W.\u0275fac, providedIn: "root"}), W
        })(), _e = (() => {
            class W {
                constructor(Q, te, ge, ue, we, xe) {
                    this.applicationRef = Q, this.injector = te, this.document = ge, this.scrollBar = ue, this.rendererFactory = we, this.ngZone = xe, this.activeWindowComponentHasChanged = new v.xQ, this.ariaHiddenValues = new Map, this.backdropAttributes = ["backdropClass"], this.modalRefs = [], this.windowAttributes = ["ariaLabelledBy", "backdrop", "centered", "keyboard", "scrollable", "size", "windowClass", "defaultStylings"], this.windowComponents = [], this.activeWindowComponentHasChanged.subscribe(() => {
                        if (this.windowComponents.length) {
                            const We = this.windowComponents[this.windowComponents.length - 1];
                            ((W, he, Q, te = !1) => {
                                this.ngZone.runOutsideAngular(() => {
                                    const ge = (0, e.R)(he, "focusin").pipe((0, f.R)(Q), (0, p.U)(ue => ue.target));
                                    (0, e.R)(he, "keydown").pipe((0, f.R)(Q), (0, g.h)(ue => ue.which === t.Tab), (0, r.M)(ge)).subscribe(([ue, we]) => {
                                        const [xe, We] = b(he);
                                        (we === xe || we === he) && ue.shiftKey && (We.focus(), ue.preventDefault()), we === We && !ue.shiftKey && (xe.focus(), ue.preventDefault())
                                    }), te && (0, e.R)(he, "click").pipe((0, f.R)(Q), (0, r.M)(ge), (0, p.U)(ue => ue[1])).subscribe(ue => ue.focus())
                                })
                            })(0, We.location.nativeElement, this.activeWindowComponentHasChanged), this.revertAriaHidden(), this.setAriaHidden(We.location.nativeElement)
                        }
                    })
                }

                open(Q, te, ge, ue) {
                    const we = ue.container instanceof HTMLElement ? ue.container : E(ue.container) ? this.document.querySelector(ue.container) : this.document.body,
                        xe = this.rendererFactory.createRenderer(null, null), We = this.scrollBar.compensate(),
                        Ve = () => {
                            this.modalRefs.length || (xe.removeClass(this.document.querySelector("html"), "cerberusModal__open"), this.revertAriaHidden())
                        };
                    if (!we) throw new Error(`The specified modal container "${ue.container || "body"}" was not found in the DOM.`);
                    const ft = new T.mX, Bt = this.getContentRef(Q, ue.injector || te, ge, ft, ue);
                    let Te = !1 !== ue.backdrop ? this.attachBackdrop(Q, we) : null,
                        He = this.attachWindowComponent(Q, we, Bt), A = new T.x0(He, Bt, Te, ue.beforeDismiss);
                    return this.registerModalRef(A), this.registerWindowComponent(He), A.result.then(We, We), A.result.then(Ve, Ve), ft.close = ne => {
                        A.close(ne)
                    }, ft.dismiss = ne => {
                        A.dismiss(ne)
                    }, this.applyWindowOptions(He.instance, ue), 1 === this.modalRefs.length && xe.addClass(this.document.querySelector("html"), "cerberusModal__open"), Te && Te.instance && this.applyBackdropOptions(Te.instance, ue), A
                }

                dismissAll(Q) {
                    this.modalRefs.forEach(te => te.dismiss(Q))
                }

                hasOpenModals() {
                    return this.modalRefs.length > 0
                }

                attachBackdrop(Q, te) {
                    let ue = Q.resolveComponentFactory(pe).create(this.injector);
                    return this.applicationRef.attachView(ue.hostView), te.appendChild(ue.location.nativeElement), ue
                }

                attachWindowComponent(Q, te, ge) {
                    let we = Q.resolveComponentFactory(fe).create(this.injector, ge.nodes);
                    return this.applicationRef.attachView(we.hostView), te.appendChild(we.location.nativeElement), we
                }

                applyWindowOptions(Q, te) {
                    this.windowAttributes.forEach(ge => {
                        E(te[ge]) && (Q[ge] = te[ge])
                    })
                }

                applyBackdropOptions(Q, te) {
                    this.backdropAttributes.forEach(ge => {
                        E(te[ge]) && (Q[ge] = te[ge])
                    })
                }

                getContentRef(Q, te, ge, ue, we) {
                    return ge ? ge instanceof i.Rgc ? this.createFromTemplateRef(ge, ue) : function (W) {
                        return "string" == typeof W
                    }(ge) ? this.createFromString(ge) : this.createFromComponent(Q, te, ge, ue, we) : new T.m3([])
                }

                createFromTemplateRef(Q, te) {
                    const ue = Q.createEmbeddedView({
                        $implicit: te, close(we) {
                            te.close(we)
                        }, dismiss(we) {
                            te.dismiss(we)
                        }
                    });
                    return this.applicationRef.attachView(ue), new T.m3([ue.rootNodes], ue)
                }

                createFromString(Q) {
                    const te = this.document.createTextNode(`${Q}`);
                    return new T.m3([[te]])
                }

                createFromComponent(Q, te, ge, ue, we) {
                    const xe = Q.resolveComponentFactory(ge),
                        We = i.zs3.create({providers: [{provide: T.mX, useValue: ue}], parent: te}), Ve = xe.create(We),
                        ft = Ve.location.nativeElement;
                    return we.scrollable && ft.classList.add("component-host-scrollable"), this.applicationRef.attachView(Ve.hostView), new T.m3([[ft]], Ve.hostView, Ve)
                }

                setAriaHidden(Q) {
                    const te = Q.parentElement;
                    te && Q !== this.document.body && (Array.from(te.children).forEach(ge => {
                        ge !== Q && "SCRIPT" !== ge.nodeName && (this.ariaHiddenValues.set(ge, ge.getAttribute("aria-hidden")), ge.setAttribute("aria-hidden", "true"))
                    }), this.setAriaHidden(te))
                }

                revertAriaHidden() {
                    this.ariaHiddenValues.forEach((Q, te) => {
                        Q ? te.setAttribute("aria-hidden", Q) : te.removeAttribute("aria-hidden")
                    }), this.ariaHiddenValues.clear()
                }

                registerModalRef(Q) {
                    const te = () => {
                        const ge = this.modalRefs.indexOf(Q);
                        ge > -1 && this.modalRefs.splice(ge, 1)
                    };
                    this.modalRefs.push(Q), Q.result.then(te, te)
                }

                registerWindowComponent(Q) {
                    this.windowComponents.push(Q), this.activeWindowComponentHasChanged.next(), Q.onDestroy(() => {
                        const te = this.windowComponents.indexOf(Q);
                        te > -1 && (this.windowComponents.splice(te, 1), this.activeWindowComponentHasChanged.next())
                    })
                }
            }

            return W.\u0275fac = function (Q) {
                return new (Q || W)(i.LFG(i.z2F), i.LFG(i.zs3), i.LFG(u.K0), i.LFG(de), i.LFG(i.FYo), i.LFG(i.R0b))
            }, W.\u0275prov = i.Yz7({token: W, factory: W.\u0275fac, providedIn: "root"}), W
        })(), Ae = (() => {
            class W {
                constructor() {
                    this.backdrop = !0, this.keyboard = !0
                }
            }

            return W.\u0275fac = function (Q) {
                return new (Q || W)
            }, W.\u0275prov = i.Yz7({token: W, factory: W.\u0275fac, providedIn: "root"}), W
        })(), Ze = (() => {
            class W {
                constructor(Q, te, ge, ue) {
                    this.moduleCFR = Q, this.injector = te, this.modalStack = ge, this.config = ue
                }

                open(Q, te = {}) {
                    const ge = Object.assign({}, this.config, te);
                    return this.modalStack.open(this.moduleCFR, this.injector, Q, ge)
                }

                dismissAll(Q) {
                    this.modalStack.dismissAll(Q)
                }

                hasOpenModals() {
                    return this.modalStack.hasOpenModals()
                }
            }

            return W.\u0275fac = function (Q) {
                return new (Q || W)(i.LFG(i._Vd), i.LFG(i.zs3), i.LFG(_e), i.LFG(Ae))
            }, W.\u0275prov = i.Yz7({token: W, factory: W.\u0275fac, providedIn: "root"}), W
        })()
    }, 51395: (oe, R, n) => {
        "use strict";
        n.d(R, {W: () => pe, F: () => w});
        var u = n(73307), i = n(61377), v = n(591), e = n(21086), f = n(36053), p = n(72986), g = n(24850), r = n(2994),
            t = n(87545), o = n(92198), b = n(61709), S = n(27221), T = n(5e3);
        let w = (() => {
            class ce {
                constructor(F, Y, ae, J, fe, N) {
                    this.authService = F, this.gameApi = Y, this.guApi = ae, this.ethService = J, this.cardsService = fe, this.filterService = N, this._unopenedPacks$ = new v.X([]), this._currentRaffleTicketTotal$ = new v.X(0), this.dataStore = {
                        unopenedPacks: [],
                        currentRaffleTicketTotal: 0
                    }
                }

                get unopenedPacks$() {
                    return this._unopenedPacks$.asObservable()
                }

                get currentRaffleTicketTotal$() {
                    return this._currentRaffleTicketTotal$.asObservable()
                }

                fetchUnopenedPacks() {
                    this.fetchUnopenedPacksById().pipe((0, p.q)(1)).subscribe()
                }

                fetchUnopenedPacksById() {
                    const F = this.authService.getUserId();
                    return F ? this.gameApi.get(`/user/${F}/allpacks`).pipe((0, p.q)(1), (0, g.U)(Y => this.formatPacks(Y, !0)), (0, g.U)(Y => this.fixGodAlignments(Y)), (0, r.b)(Y => {
                        this.dataStore.unopenedPacks = Y, this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                    })) : (0, e.of)([])
                }

                fetchUnopenedPacksByAddress() {
                    return this.ethService.getAccount().pipe((0, t.w)(F => this.guApi.get(`/user/${F}/allpacks`)), (0, p.q)(1), (0, g.U)(F => this.formatPacks(F, !1)), (0, r.b)(F => {
                        this.dataStore.unopenedPacks = F, this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                    }))
                }

                fetchCurrentTotalRaffleTickets({userId: F, wallet: Y}) {
                    return F || Y ? this.gameApi.get(`/user/${F || Y}/tickets`).pipe((0, p.q)(1)).subscribe(ae => {
                        this.dataStore.currentRaffleTicketTotal = ae, this._currentRaffleTicketTotal$.next(ae)
                    }) : console.error("no wallet or userId supplied")
                }

                formatPacks(F, Y = !1) {
                    return F.map(ae => Object.assign(Object.assign({}, ae), {
                        rarity: this.updateRarity(ae),
                        raffleTickets: this.updatePackRaffleTickets(ae),
                        requiresAuthentication: Y
                    }))
                }

                updateScarcityAndRarity$(F) {
                    return (0, f.aj)([this.cardsService.protoCards$, this.cardsService.qualityCounts$]).pipe((0, o.h)(([Y, ae]) => Y && Y.size > 0 && ae && ae.size > 0), (0, p.q)(1), (0, g.U)(([Y, ae]) => F.map(J => Object.assign(Object.assign({}, J), {cards: this.updateScarcityAndRarity(J.cards, Y, ae)}))))
                }

                fixGodAlignments(F) {
                    return F.map(Y => Object.assign(Object.assign({}, Y), {god: "all" === Y.god || "core" === Y.god ? "neutral" : Y.god}))
                }

                updatePackRaffleTickets(F) {
                    if (F && F.extra) {
                        const Y = F.extra.find(ae => "tickets" === ae.name);
                        return Y ? Y.value : void 0
                    }
                }

                updateRarity(F) {
                    return "shiny" === F.rarity ? "shiny-legendary" : F.rarity
                }

                updateScarcityAndRarity(F, Y, ae) {
                    const J = ["epic", "legendary", "mythic"];
                    return F.map(fe => {
                        const N = Y.get(fe.proto);
                        return !N || (fe.rarity = N.rarity, "core" === N.set) || ("mythic" === fe.rarity ? fe.scarcity = 1 : (J.includes(fe.rarity) || fe.quality < 5) && (fe.scarcity = this.filterService.calcScarcity(fe.proto, fe.quality, ae))), fe
                    })
                }

                openPackAuthenticated$(F, Y = !0) {
                    const ae = this.authService.getUserId();
                    return this.authService.fetchSession().pipe((0, p.q)(1), (0, b.VS)(J => this.gameApi.put(`/user/${ae}/allpacks?session=${J}`, F)), (0, r.b)(J => {
                        this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(N => N.pack_id !== F.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks]);
                        const fe = this.packToInventoryCardsMap(F);
                        this.cardsService.addCardsToInventory(fe)
                    }), (0, S.K)(J => 401 === J.status && Y ? this.authService.refreshToken().pipe((0, b.VS)(fe => this.openPackAuthenticated$(F, !1))) : (0, e.of)(J)))
                }

                dummyOpenPack(F) {
                    return this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(Y => Y.pack_id !== F.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks]), (0, e.of)(!0)
                }

                openPackUnauthenticated$(F) {
                    return this.ethService.getAccount().pipe((0, p.q)(1), (0, t.w)(Y => this.gameApi.put(`/user/${Y}/allpacks`, F)), (0, r.b)(Y => {
                        this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(ae => ae.pack_id !== F.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                    }))
                }

                openPack$(F) {
                    return F.requiresAuthentication ? this.openPackAuthenticated$(F) : this.openPackUnauthenticated$(F)
                }

                packToInventoryCardsMap(F) {
                    const Y = {};
                    return F.cards.forEach(ae => {
                        const J = {q: ae.quality, id: ae.id};
                        Y[ae.proto] ? Y[ae.proto].push(J) : Y[ae.proto] = [J]
                    }), Y
                }

                generateRandomDummyPacks(F) {
                    return Array.from({length: F}, (Y, ae) => ({
                        cards: this.generateRandomDummyCards(5),
                        god: this.chooseRandomGod(),
                        set: "core",
                        rarity: "rare",
                        pack_id: 234423 + ae,
                        pack_source: "reward",
                        raffleTickets: Math.abs(Math.floor(5e4 * Math.random()))
                    }))
                }

                generateRandomDummyCards(F) {
                    return Array.from({length: F}, (Y, ae) => ({
                        proto: this.generateCardProto(),
                        id: ae + 1,
                        rarity: this.chooseRandomCardRarity(),
                        quality: Math.ceil(5 * Math.random()),
                        scarcity: Math.ceil(2e3 * Math.random())
                    }))
                }

                chooseRandomPackRarity() {
                    const F = ["rare", "legendary"];
                    return F[Math.ceil(Math.random() * F.length - 1)]
                }

                chooseRandomCardRarity() {
                    const F = ["common", "rare", "epic", "legendary"];
                    return F[Math.ceil(Math.random() * F.length - 1)]
                }

                chooseRandomGod() {
                    const F = ["nature", "death", "nature", "war", "neutral", "deception", "light", "magic"];
                    return F[Math.ceil(Math.random() * F.length - 1)]
                }

                generateCardProto() {
                    const F = Math.ceil(384 * Math.random());
                    return [382, 383, 384, 378, 379].includes(F) ? this.generateCardProto() : F
                }
            }

            return ce.\u0275fac = function (F) {
                return new (F || ce)(T.LFG(u.mI), T.LFG(i.Ft), T.LFG(i.Ho), T.LFG(u.ux), T.LFG(i.dK), T.LFG(i.iZ))
            }, ce.\u0275prov = T.Yz7({token: ce, factory: ce.\u0275fac, providedIn: "root"}), ce
        })();
        var D = n(40886), _ = (() => {
            return (ce = _ || (_ = {}))[ce.RARE_GENESIS = 0] = "RARE_GENESIS", ce[ce.RARE_TRIAL = 1] = "RARE_TRIAL", ce[ce.LEGENDARY_GENESIS = 2] = "LEGENDARY_GENESIS", ce[ce.LEGENDARY_TRIAL = 3] = "LEGENDARY_TRIAL", _;
            var ce
        })(), M = n(52909), C = n(18499), P = n(13989), E = n(45425), s = n(5254), y = n(61737), k = n(7203);
        const B = n(45861), ee = n(92916);
        let pe = (() => {
            class ce {
                constructor(F, Y) {
                    if (this.environment = F, this.ethService = Y, this._chests$ = new v.X([]), console.log("ChestService->constructor()"), "desktop" !== this.environment.clientType) {
                        try {
                            this.setupGenesis()
                        } catch (ae) {
                            console.log("ChestService->constructor() error setting up genesis chests", ae)
                        }
                        try {
                            this.setupTrial()
                        } catch (ae) {
                            console.log("ChestService->constructor() error setting up trial chests", ae)
                        }
                        this.dataStore = {chests: this.chestData()}, this._chests$.next([...this.dataStore.chests])
                    }
                }

                get chests$() {
                    return this._chests$.asObservable()
                }

                setupGenesis() {
                    this.RareGenesis = this.ethService.artifactsToContract(B, "0xEE85966b4974d3C6F71A2779cC3B6F53aFbc2B68"), this.LegendaryGenesis = this.ethService.artifactsToContract(B, "0x20D4Cec36528e1C4563c1BFbE3De06aBa70b22B4"), this.Vault = this.ethService.artifactsToContract(ee, ee.networks[1]), this.VaultInfura = this.ethService.infuraContract(ee, ee.networks[1]), this.LegendaryGenesisInfura = this.ethService.infuraContract(B, "0x20D4Cec36528e1C4563c1BFbE3De06aBa70b22B4")
                }

                setupTrial() {
                    const F = this.environment.production ? k.np.Production : k.np.Staging,
                        Y = this.environment.production ? "https://eth-mainnet.alchemyapi.io/v2/ICJe8nw_i-gl_3E6V6I942RRJ3PMs5vB" : "https://eth-ropsten.alchemyapi.io/v2/ICJe8nw_i-gl_3E6V6I942RRJ3PMs5vB",
                        ae = this.environment.production ? D.t : D.Y, J = (0, C.getGodsUnchainedAddresses)(ae, F),
                        N = ((0, C.getGodsUnchainedAddresses)(ae, F), (0, C.getGodsUnchainedAddresses)(ae, F).seasonOne.capAddress);
                    if (window.ethereum) {
                        const _e = new P.Qg(window.ethereum).getSigner();
                        console.log("ChestService->setup() signer", _e), this.RareTrial = C.Chest.at(_e, J.seasonOne.rareChestAddress), console.log("ChestService->setup() RareTrial", this.RareTrial), this.LegendaryTrial = C.Chest.at(_e, J.seasonOne.legendaryChestAddress), console.log("ChestService->setup() LegendaryTrial", this.LegendaryTrial), this.S1Cap = C.S1Cap.at(_e, N), console.log("ChestService->setup() S1Cap", this.S1Cap)
                    }
                    const de = new P.r6(Y, ae);
                    this.RareTrialAlchemy = C.Chest.at(de, J.seasonOne.rareChestAddress), this.LegendaryTrialAlchemy = C.Chest.at(de, J.seasonOne.legendaryChestAddress), this.S1CapAlchemy = C.S1Cap.at(de, N)
                }

                s1CapCap() {
                    return (0, s.D)(this.S1Cap.cap()).pipe((0, S.K)(F => (0, s.D)(this.S1CapAlchemy.cap())))
                }

                s1CapCurrent() {
                    return (0, s.D)(this.S1Cap.current()).pipe((0, S.K)(F => (0, s.D)(this.S1CapAlchemy.current())))
                }

                s1CapProgressPercentage() {
                    return (0, f.aj)([this.s1CapCurrent(), this.s1CapCap()]).pipe((0, p.q)(1), (0, g.U)(([F, Y]) => {
                        try {
                            const ae = F.toNumber(), J = Y.toNumber();
                            return (J - ae) / J * 100
                        } catch (ae) {
                            return 100
                        }
                    }))
                }

                soldTrial(F) {
                    return (0, s.D)(this.getContractTrial(F).sold()).pipe((0, S.K)(Y => (0, s.D)(this.getContractTrialAlchemy(F).sold())))
                }

                capTrial(F) {
                    return (0, s.D)(this.getContractTrial(F).productCap()).pipe((0, S.K)(Y => (0, s.D)(this.getContractTrialAlchemy(F).productCap())))
                }

                balanceOfTrial(F, Y) {
                    const ae = this.getContractTrial(F);
                    return (0, f.aj)([ae.balanceOf(Y), (0, s.D)(ae.decimals())]).pipe((0, g.U)(([J, fe]) => {
                        const N = new E.ethers.utils.BigNumber(10).pow(fe);
                        return J.div(N)
                    }))
                }

                getContractTrial(F) {
                    switch (F) {
                        case _.RARE_TRIAL:
                            return this.RareTrial;
                        case _.LEGENDARY_TRIAL:
                            return this.LegendaryTrial
                    }
                }

                getContractTrialAlchemy(F) {
                    switch (F) {
                        case _.RARE_TRIAL:
                            return this.RareTrialAlchemy;
                        case _.LEGENDARY_TRIAL:
                            return this.LegendaryTrialAlchemy
                    }
                }

                fetchChests() {
                    this.ethService.getAccount().pipe((0, p.q)(1), (0, b.VS)(F => (0, f.aj)([this.balanceOf(_.RARE_GENESIS, F), this.balanceOf(_.LEGENDARY_GENESIS, F), this.balanceOfTrial(_.RARE_TRIAL, F), this.balanceOfTrial(_.LEGENDARY_TRIAL, F)]))).subscribe(([F, Y, ae, J]) => {
                        console.log("fetched Num Bundles rare leg", F, Y), this.dataStore.chests = this.chestData(F.toNumber(), Y.toNumber(), Math.floor(ae.toNumber()), Math.floor(J.toNumber())), this._chests$.next([...this.dataStore.chests])
                    })
                }

                percentageSold(F) {
                    return (0, f.aj)([this.soldTrial(F), this.capTrial(F)]).pipe((0, g.U)(([Y, ae]) => this.progressPercentage(Y, ae)))
                }

                progressPercentage(F, Y) {
                    try {
                        const ae = F.toNumber(), J = Y.toNumber();
                        return (J - ae) / J * 100
                    } catch (ae) {
                        return 100
                    }
                }

                balanceOf(F, Y) {
                    return this.getContract(F).pipe((0, b.VS)(ae => ae.balanceOf(Y)), (0, g.U)(ae => ae), (0, r.b)(ae => {
                        console.log("ChestService->balanceOf() BALANCE", F, ae)
                    }), (0, S.K)(ae => (console.log("error getting balanceOf ", F, ae), (0, e.of)(M.O$.from(0)))))
                }

                open(F, Y) {
                    return this.getContract(F).pipe((0, b.VS)(ae => ae.open(Y)), (0, r.b)(ae => {
                        this.dataStore.chests.find(fe => fe.type === F).amount -= Y, this._chests$.next([...this.dataStore.chests])
                    }))
                }

                cap(F) {
                    return this.getContract(F).pipe((0, b.VS)(Y => Y.productCap()), (0, g.U)(Y => Y))
                }

                sold(F) {
                    return this.getContract(F).pipe((0, b.VS)(Y => Y.sold()), (0, g.U)(Y => Y), (0, S.K)(Y => this.soldInfura(F)))
                }

                soldInfura(F) {
                    return this.getContractInfura(F).pipe((0, b.VS)(Y => Y.sold()), (0, g.U)(Y => Y))
                }

                vaultBalance() {
                    return (0, s.D)(this.Vault.deployed()).pipe((0, b.VS)(F => F.total()), (0, g.U)(F => F), (0, S.K)(F => this.vaultBalanceInfura()))
                }

                vaultBalanceInfura() {
                    return (0, s.D)(this.VaultInfura.deployed()).pipe((0, b.VS)(F => F.total()), (0, g.U)(F => F))
                }

                vaultCap() {
                    return (0, e.of)(M.O$.from("33333000000000000000000"))
                }

                getContract(F) {
                    switch (F) {
                        case _.RARE_GENESIS:
                            return (0, s.D)(this.RareGenesis.deployed());
                        case _.LEGENDARY_GENESIS:
                            return (0, s.D)(this.LegendaryGenesis.deployed());
                        case _.RARE_TRIAL:
                            return (0, e.of)(this.RareTrial);
                        case _.LEGENDARY_TRIAL:
                            return (0, e.of)(this.LegendaryTrial)
                    }
                    return (0, y._)("invalid bundle pack type")
                }

                getContractInfura(F) {
                    return F === _.LEGENDARY_GENESIS ? (0, s.D)(this.LegendaryGenesisInfura.deployed()) : (0, y._)("invalid bundle pack type")
                }

                chestData(F = 0, Y = 0, ae = 0, J = 0) {
                    return [{
                        type: _.RARE_GENESIS,
                        set: "genesis",
                        rarity: "rare",
                        amount: F
                    }, {type: _.LEGENDARY_GENESIS, set: "genesis", rarity: "legendary", amount: Y}, {
                        type: _.RARE_TRIAL,
                        set: "trial",
                        rarity: "rare",
                        amount: ae
                    }, {type: _.LEGENDARY_TRIAL, set: "trial", rarity: "legendary", amount: J}]
                }
            }

            return ce.\u0275fac = function (F) {
                return new (F || ce)(T.LFG(u.Ho), T.LFG(u.ux))
            }, ce.\u0275prov = T.Yz7({token: ce, factory: ce.\u0275fac, providedIn: "root"}), ce
        })()
    }, 61377: (oe, R, n) => {
        "use strict";
        n.d(R, {
            jt: () => Ee,
            yD: () => fe,
            QF: () => Q,
            f1: () => ft,
            dK: () => Bt.d,
            tX: () => Te,
            ai: () => We.a,
            iZ: () => A,
            vU: () => We.v,
            TJ: () => $e,
            pH: () => at,
            Ho: () => Le,
            Of: () => N,
            Ft: () => q.F,
            pO: () => Ke,
            n2: () => he,
            _q: () => Fe._,
            LE: () => Ve.L,
            fY: () => Ye.f,
            C_: () => At,
            xd: () => Qe,
            $c: () => le,
            cM: () => Ne,
            $: () => Ue.$
        });
        var u = n(52408), i = n(21086), v = n(52886), e = n(7203);
        const p = {
            request_id: "request_id",
            catalog_item: "forge-common",
            user_id: 1077441,
            address: "address",
            flux_amount: 10,
            token_amount: "200000000000000000",
            status: e.Og.FLUX_PAID,
            source_assets: [{
                id: 1688181,
                proto: 1e3,
                quality: v.nJ.SHADOW,
                owner: "1124932",
                rarity: "rare",
                set: "core",
                name: "Dryder Sailweaver"
            }, {
                id: 1688182,
                proto: 1e3,
                quality: v.nJ.SHADOW,
                owner: "1124932",
                rarity: "rare",
                set: "core",
                name: "Dryder Sailweaver"
            }],
            target_assets: [{
                id: 0,
                proto: 1e3,
                quality: v.nJ.METEORITE,
                owner: "0x06debe71584bcdc776bace99abc87b48db4f29d8",
                rarity: "rare",
                set: "core",
                name: "Dryder Sailweaver"
            }],
            created_at: "2021-10-10T00:00:00Z",
            modified_at: "2021-10-10T00:00:00Z",
            imx_tx_id: 0,
            token_contract: "token_contract",
            token_payment_address: "token_payment_address"
        };
        Object.assign(Object.assign({}, p), {imx_tx_id: 123, status: e.Og.TOKENS_PAID});
        Object.assign(Object.assign({}, p), {
            imx_tx_id: 125,
            status: e.Og.COMPLETED
        }), Object.assign(Object.assign({}, p), {
            imx_tx_id: 125,
            status: e.Og.COMPLETED
        }), Object.assign(Object.assign({}, p), {imx_tx_id: 0, status: e.Og.CARDS_DELETED});
        var C = n(85111), P = n(69808), E = n(5e3), s = n(73307), k = n(60870);
        let Ee = (() => {
            class H {
                constructor(a, m, U, se) {
                    this.deviceDetectorService = a, this.environment = m, this.authService = U, this.storage = se, this.brand = "godsunchained", this.appVersion = "0.13.3", this.initAnalyticsProperties(), this.initDeviceProperties(), this.initSessionProperties(), this.initUserProperties()
                }

                initAnalyticsProperties() {
                    this.appName = "website" === this.environment.clientType ? "com.immutable.guweb" : "com.immutable.gudesktop", this.appPlatform = this.environment.clientType, "desktop" === this.environment.clientType && (this.branch = this.storage.get(["game", "1", "branch"]) || "beta")
                }

                initDeviceProperties() {
                    const m = this.getDeviceId();
                    this.deviceProperties = {
                        device_id: m && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(m) ? m : n(66926)(),
                        os_name: this.deviceDetectorService.os,
                        os_version: this.deviceDetectorService.os_version,
                        app_platform: window.navigator.platform
                    }, this.storage.set(["device_id"], m)
                }

                getDeviceId() {
                    return this.storage.get(["device_id"])
                }

                initSessionProperties() {
                    this.sessionProperties = {session_id: +new Date}
                }

                initUserProperties() {
                    this.userId = this.authService.getUserId(), this.isUserSignedIn = !!this.userId, this.authService.account$.subscribe(a => {
                        this.isUserSignedIn = !!a, this.userId = this.isUserSignedIn ? `${this.authService.getUserId()}` : ""
                    })
                }

                get producer() {
                    return "website" === this.environment.clientType ? "web" : "client"
                }

                sendEvent(a) {
                    try {
                        window.akuma(a)
                    } catch (m) {
                        console.error(m)
                    }
                }

                postScreenEvent(a, m, U, se, Ce, ct) {
                    const jt = this.buildEvent("Screen", `${a}${m}${U}_${se}`, this.isUserSignedIn ? `${this.userId}` : `${ct}`, Ce);
                    this.sendEvent(jt)
                }

                postControlEvent(a, m, U, se, Ce, ct, et, Ht) {
                    const ts = this.buildEvent("Control", `${a}${m}${U}_${se}${Ce}_${ct}`, this.isUserSignedIn ? `${this.userId}` : `${Ht}`, et);
                    this.sendEvent(ts)
                }

                postFlowEvent(a, m, U, se) {
                    const et = this.buildEvent("Flow", `_${a}_${m}`, this.isUserSignedIn ? `${this.userId}` : `${se}`, U);
                    this.sendEvent(et)
                }

                buildEvent(a, m, U, se) {
                    return {
                        appBrand: this.brand,
                        appName: this.appName,
                        appPlatform: this.appPlatform,
                        appVersion: this.appVersion,
                        deviceProperties: this.deviceProperties,
                        eventProperties: se,
                        eventName: m,
                        eventType: a,
                        sessionProperties: this.sessionProperties,
                        userId: U,
                        userProperties: this.userProperties,
                        realm: this.branch
                    }
                }

                postEvent(a, m, U, se) {
                    const ct = this.buildEvent(a, m, this.isUserSignedIn ? `${this.userId}` : `${se}`, U);
                    this.sendEvent(ct)
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(k.x0), E.LFG(s.Ho), E.LFG(s.mI), E.LFG(s.qy))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var F = n(40520), Y = n(59633);
        const ae = "website";
        let fe = (() => {
            class H {
                constructor(a, m, U, se) {
                    this.deviceDetectorService = a, this.httpClient = m, this.environment = U, this.storage = se, this.headers = new F.WM({"X-Chaff": this.environment.production ? "" : "test"});
                    const Ce = this.getDeviceId();
                    this.brand = "gods_unchained", this.device_id = Ce && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(Ce) ? Ce : n(66926)(), this.event_id = 0, this.native = this.environment.clientType !== ae, this.platform = window.navigator.platform, this.producer = this.deviceDetectorService.isDesktop() ? "desktop" : "mobile", this.os_name = this.deviceDetectorService.os, this.os_version = this.deviceDetectorService.os_version, this.service = this.environment.clientType === ae ? ae : "launcher", this.session_id = this.generateSessionId(), this.storage.set(["device_id"], this.device_id)
                }

                generateSessionId() {
                    return +new Date
                }

                getUserId() {
                    return this.storage.get(["user_id"])
                }

                getUTM() {
                    return {
                        ad_id: this.storage.get(["ad_id"]),
                        utm_campaign: this.storage.get(["utm_campaign"]),
                        utm_content: this.storage.get(["utm_content"]),
                        utm_hash: this.storage.get(["utm_hash"]),
                        utm_medium: this.storage.get(["utm_medium"]),
                        utm_source: this.storage.get(["utm_source"])
                    }
                }

                getDeviceId() {
                    return this.storage.get(["device_id"])
                }

                postEvent(a, m) {
                    const se = new Y.Event({
                        brand: this.brand,
                        device_id: this.device_id,
                        event_id: this.event_id = this.event_id + 1,
                        event_properties: a,
                        native: this.native,
                        os_name: this.os_name,
                        os_version: this.os_version,
                        platform: this.platform,
                        producer: this.producer,
                        service: this.service,
                        session_id: this.session_id,
                        user_id: parseInt(this.getUserId(), 10),
                        user_properties: m
                    }).toObject();
                    return Object.assign(se.event_properties, this.getUTM()), this.httpClient.post(this.environment.analyticsHost, JSON.stringify(se), {headers: this.headers}).toPromise()
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(k.x0), E.LFG(F.eN), E.LFG(s.Ho), E.LFG(s.qy))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
        })(), N = (() => {
            class H {
                constructor() {
                }

                setCurrentProvider(a) {
                    try {
                        ga("set", "dimension1", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setAccount(a) {
                    try {
                        ga("set", "dimension2", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setReferrer(a) {
                    try {
                        ga("set", "dimension3", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setClientId(a) {
                    try {
                        ga("set", "dimension4", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setSessionId(a) {
                    try {
                        ga("set", "dimension5", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setUserId(a) {
                    try {
                        ga("set", "dimension6", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setHitTimestamp(a) {
                    try {
                        ga("set", "dimension7", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                setAbVersion(a) {
                    try {
                        ga("set", "dimension8", a)
                    } catch (m) {
                        console.log(m)
                    }
                }

                triggerOutboundLinkEvent(a, m) {
                    try {
                        let U = "";
                        U = U.split("?")[0], ga("send", "event", "Outbound Link", "click", U, a)
                    } catch (U) {
                        console.log("could not track ga", U)
                    }
                }

                triggerButtonClickEvent(a, m) {
                    try {
                        let U = "";
                        U = U.split("?")[0], ga("send", "event", "Button", "click", U, a)
                    } catch (U) {
                        console.log("could not track ga", U)
                    }
                }

                triggerPageDeferLoadEvent(a, m) {
                    try {
                        let U = "";
                        U = U.split("?")[0], ga("send", "event", "Page", "defer load", U, a)
                    } catch (U) {
                        console.log("could not track ga", U)
                    }
                }

                sendEvent(a, m, U, se, Ce) {
                    try {
                        console.log(`GA Event: send, event, ${a}, ${m}, ${U}, ${se}, ${Ce}`), ga("send", "event", a, m, U, se, Ce)
                    } catch (ct) {
                        console.log("Error tracking GA", ct)
                    }
                }

                buyPackBanneCountry() {
                    this.sendEvent("buy", "pack", "banned_country")
                }

                buyPackType(a) {
                    this.sendEvent("buy", "pack_type", a)
                }

                buyPackTypeNumber(a, m, U) {
                    this.sendEvent("buy", `${a}_number`, m, U)
                }

                buyPurchase(a, m) {
                    this.sendEvent("buy", "purchase", a, m)
                }

                buyConfirmation(a, m) {
                    this.sendEvent("buy", "confirmation", a, m)
                }

                buyStatus(a) {
                    this.sendEvent("buy", "status", a)
                }

                templeOpenPacks() {
                    this.sendEvent("temple", "open_packs")
                }

                templePurchase(a, m) {
                    this.sendEvent("temple", "purchase", a, m)
                }

                templeShareDiscord() {
                    this.sendEvent("temple", "share", "discord")
                }

                inventoryInventoryType(a) {
                    this.sendEvent("inventory", "inventory_type", a)
                }

                inventory(a, m, U) {
                    this.sendEvent("inventory", a, m, U)
                }

                inventorySearchStart() {
                    this.sendEvent("inventory", "search_start")
                }

                inventorySearchEnd(a, m) {
                    this.sendEvent("inventory", "search_end", a, m)
                }

                inventoryPageUp(a, m) {
                    this.sendEvent("inventory", "page_up", a, m)
                }

                inventoryPageDown(a, m) {
                    this.sendEvent("inventory", "page_down", a, m)
                }

                inventoryPageSelect(a, m) {
                    this.sendEvent("inventory", "page_select", a, m)
                }

                inventoryViewCard(a, m) {
                    this.sendEvent("inventory", "view_card", a + "", m)
                }

                inventoryViewCollectable(a, m) {
                    this.sendEvent("inventory", "view_collectable", a, m)
                }

                navigateHeader(a) {
                    this.sendEvent("navigate", "header", a)
                }

                navigate(a, m) {
                    this.sendEvent("navigate", a, m)
                }

                outbound(a, m) {
                    this.sendEvent("outbound", a, m)
                }

                navigateExit(a) {
                    this.sendEvent("navigate", "exit", a)
                }

                helpOpenHelp() {
                    this.sendEvent("help", "open_help")
                }

                helpEndHelp() {
                    this.sendEvent("help", "end_help")
                }

                helpSearchStart() {
                    this.sendEvent("help", "search_start")
                }

                helpSearchEnd(a) {
                    this.sendEvent("help", "search_end", a)
                }

                helpSelectFaq(a) {
                    this.sendEvent("help", "select_faq", a)
                }

                cryptokittiesPurchaseRareRandom() {
                    this.sendEvent("cryptokitties", "purchase", "rare_random")
                }

                cryptokittiesPurchaseRare(a) {
                    this.sendEvent("cryptokitties", "purchase", "rare", a)
                }

                cryptokittiesInventoryType(a) {
                    this.sendEvent("cryptokitties", "inventory_type", a)
                }

                cryptokittiesSearchStartStart() {
                    this.sendEvent("cryptokitties", "search_start", "start")
                }

                cryptokittiesSearchEnd(a) {
                    this.sendEvent("cryptokitties", "search_end", a)
                }

                cryptokittiesPageUp(a) {
                    this.sendEvent("cryptokitties", "page_up", a)
                }

                cryptokittiesPageDown(a) {
                    this.sendEvent("cryptokitties", "page_down", a)
                }

                cryptokittiesPageSelect(a) {
                    this.sendEvent("cryptokitties", "page_select", a)
                }

                cryptokittiesSelect(a) {
                    this.sendEvent("cryptokitties", "select", a)
                }

                cryptokittiesDeselect(a) {
                    this.sendEvent("etherbots", "deselect", a)
                }

                etherbotsPurchaseRareRandom() {
                    this.sendEvent("etherbots", "purchase", "rare_random")
                }

                etherbotsPurchaseRare(a) {
                    this.sendEvent("etherbots", "purchase", "rare", a)
                }

                etherbotsInventoryType(a) {
                    this.sendEvent("etherbots", "inventory_type", a)
                }

                etherbotsSearchStartStart() {
                    this.sendEvent("etherbots", "search_start", "start")
                }

                etherbotsSearchEnd(a) {
                    this.sendEvent("etherbots", "search_end", a)
                }

                etherbotsPageUp(a) {
                    this.sendEvent("etherbots", "page_up", a)
                }

                etherbotsPageDown(a) {
                    this.sendEvent("etherbots", "page_down", a)
                }

                etherbotsPageSelect(a) {
                    this.sendEvent("etherbots", "page_select", a)
                }

                etherbotsSelect(a) {
                    this.sendEvent("etherbots", "select", a)
                }

                etherbotsDeselect(a) {
                    this.sendEvent("etherbots", "deselect", a)
                }

                inventoryViewStatue(a) {
                    this.sendEvent("inventory", "view_statue", a)
                }

                walletConnect(a, m) {
                    this.sendEvent("wallet", "connect", a, m)
                }

                videoPlay(a) {
                    this.sendEvent("video", "play", a)
                }

                videoPause(a, m) {
                    this.sendEvent("video", "pause", a, m)
                }

                videoComplete25(a) {
                    this.sendEvent("video", "complete_25", a)
                }

                videoComplete50(a) {
                    this.sendEvent("video", "complete_50", a)
                }

                videoComplete75(a) {
                    this.sendEvent("video", "complete_75", a)
                }

                videoComplete100(a) {
                    this.sendEvent("video", "complete_100", a)
                }

                videoWatchLater(a) {
                    this.sendEvent("video", "watch_later", a)
                }

                videoShare(a, m) {
                    this.sendEvent("video", `share_${a}`, m)
                }

                apolloRegisterBegin(a) {
                    this.sendEvent("apollo_register", `${a}_onboard`)
                }

                apolloRegisterFieldStart(a) {
                    this.sendEvent("apollo_register", `${a}_start`)
                }

                apolloRegisterFieldComplete(a, m) {
                    this.sendEvent("apollo_register", `${a}_complete`, void 0, m)
                }

                apolloRegisterStagesTime(a, m) {
                    this.sendEvent("apollo_register", `${a}_time`, void 0, m)
                }

                apolloRegisterComplete() {
                    this.sendEvent("apollo_register", "register", "register_complete")
                }

                apolloLoginComplete() {
                    this.sendEvent("apollo_register", "login", "login_complete")
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var de = n(61737), _e = n(27221);
        let Ae = (() => {
            class H {
                constructor() {
                }

                autoRetryApiOnFail(a, m = 1) {
                    return a.pipe((0, _e.K)(U => m > 0 && U.status >= 400 && U.status < 600 ? this.autoRetryApiOnFail(a, m - 1) : (0, de._)(U)))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var Ze = n(46461), W = n(591);
        let he = (() => {
            class H {
                constructor() {
                    this._storage = window.localStorage
                }

                set(a, m) {
                    return this._storage.setItem(a.join("."), m)
                }

                get(a) {
                    return this._storage.getItem(a.join("."))
                }

                delete(a) {
                    return this._storage.removeItem(a.join("."))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })(), Q = (() => {
            class H {
                constructor(a) {
                    this.storage = a, this.arenaCancel = this.loadHowl("desktop/Launcher_Arena_Cancel.ogg"), this.arenaClickStart = this.loadHowl("desktop/Launcher_Arena_Click_Start.ogg"), this.arenaCycleMode = this.loadHowl("desktop/Launcher_Arena_CycleMode.ogg"), this.arenaHoverStart = this.loadHowl("desktop/Launcher_Arena_Hover_Start.ogg"), this.returnToLauncher = this.loadHowl("desktop/Launcher_Return.ogg"), this.loginToLauncher = this.loadHowl("desktop/Launcher_Login.ogg"), this.clickItemV1 = this.loadHowl("desktop/Launcher_Click_Item_V1.ogg"), this.clickItemV2 = this.loadHowl("desktop/Launcher_Click_Item_V2.ogg"), this.clickMediumV1 = this.loadHowl("desktop/Launcher_Click_Medium_V1.ogg"), this.clickMediumV2 = this.loadHowl("desktop/Launcher_Click_Medium_V2.ogg"), this.clickTinyV1 = this.loadHowl("desktop/Launcher_Click_Tiny_V1.ogg"), this.clickTinyV2 = this.loadHowl("desktop/Launcher_Click_Tiny_V2.ogg"), this.hoverHex = this.loadHowl("desktop/Launcher_Hover_Hexagon.ogg"), this.hoverItem = this.loadHowl("desktop/Launcher_Hover_Item.ogg"), this.transitionWorkshop = this.loadHowl("desktop/Launcher_Transition_Workshop.ogg"), this.workshopCustomize = this.loadHowl("desktop/Launcher_Workshop_Customize.ogg"), this.workshopDelete = this.loadHowl("desktop/Launcher_Workshop_Delete.ogg"), this.forgeAmbience = this.loadHowl("desktop/Launcher_Forge_Ambience.ogg", {loop: !0}), this.forgeHeatingUp = this.loadHowl("desktop/Launcher_Forge_HeatingUp.ogg"), this.forgeSelectCard = this.loadHowl("desktop/Launcher_Forge_SelectCard.ogg"), this.ForgeFuseAnvil1 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_1.ogg"), this.ForgeFuseAnvil2 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_2.ogg"), this.ForgeFuseAnvil3 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_3.ogg"), this.ForgeFuseAnvil4 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_4.ogg"), this.ForgeFuseAnvil5 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_5.ogg"), this.ForgeFuseShimmer = this.loadHowl("desktop/Launcher_Forge_Fuse_Shimmer.ogg"), this.ForgeFuseContinue = this.loadHowl("desktop/Launcher_Forge_Fuse_Continue.ogg"), this._currentVolume$ = new W.X(null), this.setInitialVolume()
                }

                get currentVolume$() {
                    return this._currentVolume$.asObservable()
                }

                setGlobalVolume(a) {
                    Ze.Howler.volume(a), this._currentVolume$.next(a), this.storage.set(["gu-audioVolume"], a)
                }

                setInitialVolume() {
                    this.initialVolume = parseFloat(this.storage.get(["gu-audioVolume"])), isNaN(this.initialVolume) && (this.initialVolume = .9), this.setGlobalVolume(this.initialVolume)
                }

                loadHowl(a, m) {
                    return m || (m = {}), m.src = `/assets/audio/${a}`, new Ze.Howl(m)
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(he))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var te = n(8929), ge = n(87168), ue = n(24850), we = n(7625), xe = n(87545), We = n(1025), Ve = n(77535);
        let ft = (() => {
            class H {
                constructor(a, m, U) {
                    this.http = a, this.destroyed$ = new te.xQ, this.apolloEndpoint$ = m.loadConfigurations().pipe((0, ge.M)(U.get(We.v.newEnvironmentAuthLegacyApi)), (0, ue.U)(([se, Ce]) => Ce ? se.legacyAuthHost : se.authHost), (0, we.R)(this.destroyed$))
                }

                get(a, m, U) {
                    return this.apolloEndpoint$.pipe((0, xe.w)(se => this.http.get(se + a, {headers: U, params: m})))
                }

                put(a, m, U, se) {
                    return this.apolloEndpoint$.pipe((0, xe.w)(Ce => this.http.put(Ce + a, m, {
                        headers: se,
                        params: U
                    })))
                }

                post(a, m, U) {
                    return this.apolloEndpoint$.pipe((0, xe.w)(se => this.http.post(se + a, m, {headers: U})))
                }

                delete(a) {
                    return this.apolloEndpoint$.pipe((0, xe.w)(m => this.http.delete(m + a)))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(F.eN), E.LFG(Ve.L), E.LFG(We.a))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var Bt = n(69439);
        let Te = (() => {
            class H {
                constructor() {
                }

                copyText(a) {
                    const m = document.createElement("input");
                    document.body.appendChild(m), m.value = a, m.select(), document.execCommand("copy"), document.body.removeChild(m)
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
        })();
        var He = n(61709);

        class A {
            constructor(K) {
                this.cardsService = K, this.typeOrder = ["spell", "creature", "weapon"], this.godOrder = ["death", "deception", "light", "magic", "nature", "war", "neutral"], this.rarityOrder = ["legendary", "epic", "rare", "common", "mythic"]
            }

            static displayable(...K) {
                return K.map(a => {
                    const m = "All" === a ? "" : a.toLowerCase();
                    return {display: a, value: m}
                })
            }

            static enumerated(...K) {
                return K.map((a, m) => ({display: a, value: m - 1}))
            }

            static standardProtoFilters(K, a, m) {
                return {mana: -1, rarity: "", tribe: "", god: "", name: "", sort: a, ownership: K, type: "", set: m}
            }

            static standardCardFilters(K, a, m, U = "") {
                return {
                    mana: -1,
                    rarity: "",
                    tribe: "",
                    god: U,
                    name: "",
                    sort: a,
                    ownership: K,
                    type: "",
                    set: m,
                    quality: ""
                }
            }

            calcScarcity(K, a, m) {
                let U = 1;
                try {
                    const se = m.get(K)[a];
                    U = void 0 === se ? 1 : Number(se)
                } catch (se) {
                }
                return U
            }

            getSort(K, a) {
                switch (K) {
                    case v.PE.AscID:
                        return (m, U) => m.proto - U.proto;
                    case v.PE.DescID:
                        return (m, U) => U.proto - m.proto;
                    case v.PE.AscQuality:
                        return (m, U) => m.quality - U.quality;
                    case v.PE.DescQuality:
                        return (m, U) => U.quality - m.quality;
                    case v.PE.AscMana:
                        return (m, U) => Number(m.protoCard.mana) - Number(U.protoCard.mana);
                    case v.PE.DescMana:
                        return (m, U) => Number(U.protoCard.mana) - Number(m.protoCard.mana);
                    case v.PE.AscHealth:
                        return (m, U) => Number(m.protoCard.health) - Number(U.protoCard.health);
                    case v.PE.DescHealth:
                        return (m, U) => Number(U.protoCard.health) - Number(m.protoCard.health);
                    case v.PE.AscAttack:
                        return (m, U) => Number(m.protoCard.attack) - Number(U.protoCard.attack);
                    case v.PE.DescAttack:
                        return (m, U) => Number(U.protoCard.attack) - Number(m.protoCard.attack);
                    case v.PE.AscTribe:
                        return (m, U) => m.protoCard.tribe < U.protoCard.tribe ? -1 : 1;
                    case v.PE.DescTribe:
                        return (m, U) => m.protoCard.tribe > U.protoCard.tribe ? -1 : 1;
                    case v.PE.AscRarity:
                        return (m, U) => this.getRarityId(m.rarity) < this.getRarityId(U.rarity) ? -1 : 1;
                    case v.PE.DescRarity:
                        return (m, U) => this.getRarityId(m.rarity) > this.getRarityId(U.rarity) ? -1 : 1;
                    case v.PE.AscScarcity:
                        return (m, U) => {
                            if (!a) throw new Error("qualityCounts required for scarcity search");
                            const ct = this.calcScarcity(m.proto, m.quality, a) - this.calcScarcity(U.proto, U.quality, a);
                            return 0 === ct ? U.quality - m.quality : ct
                        }
                }
                return (m, U) => 0
            }

            sortLegacy(K, a, m) {
                return K ? K.sort(this.getSort(a, m)) : []
            }

            sort(K, a, m) {
                return K ? K.sort(this.tiebreak(this.getSort(a, m))) : []
            }

            tiebreak(K) {
                return (a, m) => {
                    const U = K(a, m);
                    return 0 === U ? this.tiebreakProtoType(a.protoCard, m.protoCard) : U
                }
            }

            getSortProtos(K, a) {
                switch (K) {
                    case v.PE.AscID:
                        return (m, U) => m.proto - U.proto;
                    case v.PE.DescID:
                        return (m, U) => U.proto - m.proto;
                    case v.PE.AscQuality:
                        return (m, U) => m.quality - U.quality;
                    case v.PE.DescQuality:
                        return (m, U) => U.quality - m.quality;
                    case v.PE.AscMana:
                        return (m, U) => Number(m.mana) - Number(U.mana);
                    case v.PE.DescMana:
                        return (m, U) => Number(U.mana) - Number(m.mana);
                    case v.PE.AscHealth:
                        return (m, U) => Number(m.health) - Number(U.health);
                    case v.PE.DescHealth:
                        return (m, U) => Number(U.health) - Number(m.health);
                    case v.PE.AscAttack:
                        return (m, U) => Number(m.attack) - Number(U.attack);
                    case v.PE.DescAttack:
                        return (m, U) => Number(U.attack) - Number(m.attack);
                    case v.PE.AscTribe:
                        return (m, U) => m.tribe < U.tribe ? -1 : 1;
                    case v.PE.DescTribe:
                        return (m, U) => m.tribe > U.tribe ? -1 : 1;
                    case v.PE.AscRarity:
                        return (m, U) => this.getRarityId(m.rarity) < this.getRarityId(U.rarity) ? -1 : 1;
                    case v.PE.DescRarity:
                        return (m, U) => this.getRarityId(m.rarity) > this.getRarityId(U.rarity) ? -1 : 1;
                    case v.PE.AscType:
                        return (m, U) => m.type < U.type ? -1 : 1;
                    case v.PE.DescType:
                        return (m, U) => m.type > U.type ? -1 : 1;
                    case v.PE.AscGod:
                        return (m, U) => m.god < U.god ? -1 : 1;
                    case v.PE.DescGod:
                        return (m, U) => m.god > U.god ? -1 : 1;
                    case v.PE.AscSet:
                        return (m, U) => m.set < U.set ? -1 : 1;
                    case v.PE.DescSet:
                        return (m, U) => m.set > U.set ? -1 : 1
                }
                return (m, U) => 0
            }

            sortProtos(K, a, m) {
                return K ? K.sort(this.tiebreakProto(this.getSortProtos(a, m))) : []
            }

            tiebreakProto(K) {
                return (a, m) => {
                    const U = K(a, m);
                    return 0 === U ? this.tiebreakProtoType(a, m) : U
                }
            }

            tiebreakProtoType(K, a) {
                const m = this.typeOrder.indexOf(K.type) - this.typeOrder.indexOf(a.type);
                return 0 === m ? this.tiebreakProtoGod(K, a) : m
            }

            tiebreakProtoGod(K, a) {
                const m = this.godOrder.indexOf(K.god) - this.godOrder.indexOf(a.god);
                return 0 === m ? this.tiebreakProtoRarity(K, a) : m
            }

            tiebreakProtoRarity(K, a) {
                const m = this.rarityOrder.indexOf(K.rarity) - this.rarityOrder.indexOf(a.rarity);
                return 0 === m ? this.tiebreakProtoHealth(K, a) : m
            }

            tiebreakProtoHealth(K, a) {
                const m = Number(K.health) - Number(a.health);
                return 0 === m ? this.tiebreakProtoAttack(K, a) : m
            }

            tiebreakProtoAttack(K, a) {
                const m = Number(K.attack) - Number(a.attack);
                return 0 === m ? this.tiebreakProtoName(K, a) : m
            }

            tiebreakProtoName(K, a) {
                return K.name < a.name ? -1 : 1
            }

            filter(K, a) {
                return K ? K.filter(m => this.matches(a, m)) : []
            }

            matches(K, a) {
                if (null == K) return !0;
                if (null == a || "" !== K.rarity && K.rarity !== a.rarity || "" !== K.set && K.set !== a.set || "" !== K.god && K.god !== a.god || "" !== K.tribe && ("none" === K.tribe && a.tribe || "none" !== K.tribe && K.tribe !== a.tribe)) return !1;
                if (-1 != +K.mana) if (10 == +K.mana) {
                    if (a.mana < 10) return !1
                } else if (+K.mana !== a.mana) return !1;
                if (K.name.length > 0) {
                    const m = K.name.toLowerCase().trim();
                    if (-1 === a.name.toLowerCase().indexOf(m)) return !1
                }
                return !0
            }

            isMythic(K) {
                return 378 === K || 379 === K || 383 === K
            }

            getRarityId(K) {
                switch (K) {
                    case"common":
                    default:
                        return 0;
                    case"rare":
                        return 1;
                    case"epic":
                        return 2;
                    case"legendary":
                        return 3;
                    case"mythic":
                        return 4
                }
            }

            cardsMatch(K, a, m) {
                return null == K || !(this.filterQualities(m.qualities, K.quality) || +K.ownership === v.nE.Owned && !m.owned || +K.ownership === v.nE.Unowned && m.owned || +K.ownership === v.nE.Processing && "escrow" !== m.status || !this.matches(K, a))
            }

            filterCards(K, a) {
                return null == K ? (0, i.of)(null) : this.cardsService.protoCards$.pipe((0, He.VS)(m => {
                    const U = K.filter(se => this.cardsMatch(a, m.get(se.proto), se));
                    return (0, i.of)(U)
                }))
            }

            filterQualities(K, a) {
                const m = this.getQualityByName(a);
                return -1 !== m && 0 === K[m]
            }

            getQualityByName(K) {
                switch (K.toLowerCase()) {
                    case"plain":
                        return v.nJ.PLAIN;
                    case"meteorite":
                        return v.nJ.METEORITE;
                    case"shadow":
                        return v.nJ.SHADOW;
                    case"gold":
                        return v.nJ.GOLD;
                    case"diamond":
                        return v.nJ.DIAMOND;
                    default:
                        return -1
                }
            }
        }

        A.rarityOptions = A.displayable("All", "Common", "Rare", "Epic", "Legendary", "Mythic"), A.qualityOptions = A.displayable("All", "Plain", "Meteorite", "Shadow", "Gold", "Diamond"), A.godOptions = A.displayable("All", "Neutral", "Nature", "War", "Death", "Light", "Magic", "Deception"), A.manaOptions = A.enumerated("All", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10+"), A.tribeOptions = A.displayable("All", "None", "Viking", "Amazon", "Anubian", "Aether", "Nether", "Atlantean", "Olympian", "Dragon", "Guild", "Mystic", "Structure", "Wild"), A.ownershipOptions = A.enumerated("All", "Owned", "Not Owned", "Processing"), A.setOptions = A.displayable("All", "Genesis", "Core", "Etherbots", "Promo", "Mythic", "Trial", "Welcome", "Order"), A.defaultFilters = [{
            name: "Ownership",
            options: A.ownershipOptions
        }, {name: "Quality", options: A.qualityOptions}, {name: "Rarity", options: A.rarityOptions}, {
            name: "Tribe",
            options: A.tribeOptions
        }, {name: "Mana", options: A.manaOptions}, {name: "God", options: A.godOptions}, {
            name: "Set",
            options: A.setOptions
        }], A.\u0275fac = function (K) {
            return new (K || A)(E.LFG(Bt.d))
        }, A.\u0275prov = E.Yz7({token: A, factory: A.\u0275fac, providedIn: "root"});
        var ne = n(72986), q = n(43834);
        let $e = (() => {
            class H {
                constructor(a, m) {
                    this.gameApi = a, this.authService = m, this.unsubscribe = new te.xQ, this.dataStore = {fluxInfo: null}, this._fluxInfo$ = new W.X(null)
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                get fluxInfo$() {
                    return this._fluxInfo$.asObservable()
                }

                fetchFluxInfo() {
                    const a = this.authService.getUserId();
                    a ? this.gameApi.get(`/user/${a}/flux`).pipe((0, ne.q)(1)).subscribe(m => {
                        this.emitFluxInfo(m)
                    }, m => {
                        this.emitFluxInfo()
                    }) : this.emitFluxInfo()
                }

                emitFluxInfo(a = {flux_available: 0, flux_spent: 0, locked: !1}) {
                    this.dataStore.fluxInfo = a, this._fluxInfo$.next(Object.assign({}, this.dataStore.fluxInfo))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(q.F), E.LFG(s.mI))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })(), at = (() => {
            class H {
                constructor(a, m) {
                    this.moduleConfigService = a, this.http = m, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
                }

                getFusingRequest(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(({fusingHost: m}) => this.http.get(`${m}/forge`, {params: {request_id: a}})))
                }

                getFusingLatestsRequests(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(({fusingHost: m}) => this.http.get(`${m}/forge/latest`, {params: {user_id: a}})))
                }

                fusingValidator(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(({fusingHost: m}) => this.http.post(`${m}/forge/validation`, a)))
                }

                fusingInitiator(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(({fusingHost: m}) => this.http.post(`${m}/forge`, a)))
                }

                fusingTokensPaid(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(({fusingHost: m}) => this.http.post(`${m}/forge/paid`, a)))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(Ve.L), E.LFG(F.eN))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var je = n(70655);
        let qe = (() => {
            class H {
                constructor(a, m) {
                    this.moduleConfigService = a, this.http = m, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
                }

                getRegisteredUserStarkKeys(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(({imxApiHost: m}) => this.http.get(`${m}/users/${a}`)))
                }

                getUserListOfBalance(a, m = "GODS") {
                    return this.moduleConfig$.pipe((0, xe.w)(({imxApiHostV2: U}) => this.http.get(`${U}/balances/${a}`, {params: {symbols: m}})))
                }

                setLinkIframeOptions(a) {
                    this.linkIframeOptions = a
                }

                getLink() {
                    return this.moduleConfig$.pipe((0, ue.U)(({imxLinkHost: a}) => new u.rUS(a, this.linkIframeOptions)))
                }

                connect() {
                    return (0, je.mG)(this, void 0, void 0, function* () {
                        const {address: a} = yield this.getLink().pipe((0, ue.U)(m => m.setup({}))).toPromise();
                        return a.toLowerCase()
                    })
                }

                transfer(a, m) {
                    return (0, je.mG)(this, void 0, void 0, function* () {
                        return this.getLink().pipe((0, ue.U)(U => U.transfer([{
                            type: u.S9Z.ETH,
                            amount: `${a}`,
                            toAddress: m
                        }]))).toPromise()
                    })
                }

                transferByArray(a) {
                    return (0, je.mG)(this, void 0, void 0, function* () {
                        return this.getLink().pipe((0, ue.U)(m => m.transfer(a))).toPromise()
                    })
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(Ve.L), E.LFG(F.eN))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })(), Ke = (() => {
            class H {
                constructor(a) {
                    this.imxService = a, this.dataStore = {godsInfo: null}, this._godsInfo$ = new W.X(null)
                }

                get godsInfo$() {
                    return this._godsInfo$.asObservable()
                }

                fetchGodsInfo(a) {
                    this.imxService.getUserListOfBalance(a).pipe((0, ne.q)(1)).subscribe(m => {
                        const {result: [U]} = m;
                        this.emitGodsInfo(U)
                    }, () => {
                        this.emitGodsInfo()
                    })
                }

                emitGodsInfo(a = {symbol: "GODS", balance: "0", preparing_withdrawal: "0", withdrawable: "0"}) {
                    this.dataStore.godsInfo = a, this._godsInfo$.next(Object.assign({}, this.dataStore.godsInfo))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(qe))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })(), Le = (() => {
            class H {
                constructor(a, m) {
                    this.http = a, this.moduleConfigService = m, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
                }

                get(a, m) {
                    return this.moduleConfig$.pipe((0, xe.w)(U => this.http.get(`${U.guHost}${a}`, m)))
                }

                put(a, m) {
                    return this.moduleConfig$.pipe((0, xe.w)(U => this.http.put(`${U.guHost}${a}`, m)))
                }

                post(a, m) {
                    return this.moduleConfig$.pipe((0, xe.w)(U => this.http.post(`${U.guHost}${a}`, m)))
                }

                delete(a) {
                    return this.moduleConfig$.pipe((0, xe.w)(m => this.http.delete(`${m.guHost}${a}`)))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(F.eN), E.LFG(Ve.L))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var Ue = n(90868);
        let Ge = (() => {
            class H {
                constructor(a, m, U) {
                    this.httpClient = a, this.moduleConfigService = m, this.tokenRefreshService = U
                }

                get(a, m, U) {
                    return this.moduleConfigService.loadConfigurations().pipe((0, xe.w)(se => this.tokenRefreshService.autoRefreshToken(this.httpClient.get(`${se.guAuthHost}${a}`, {
                        headers: U,
                        params: m
                    }))))
                }

                put(a, m, U, se) {
                    return this.moduleConfigService.loadConfigurations().pipe((0, xe.w)(Ce => this.tokenRefreshService.autoRefreshToken(this.httpClient.put(`${Ce.guAuthHost}${a}`, m, {
                        headers: se,
                        params: U
                    }))))
                }

                post(a, m, U) {
                    return this.moduleConfigService.loadConfigurations().pipe((0, xe.w)(se => this.tokenRefreshService.autoRefreshToken(this.httpClient.post(`${se.guAuthHost}${a}`, m, {headers: U}))))
                }

                delete(a) {
                    return this.moduleConfigService.loadConfigurations().pipe((0, xe.w)(m => this.tokenRefreshService.autoRefreshToken(this.httpClient.delete(`${m.guAuthHost}${a}`))))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(F.eN), E.LFG(Ve.L), E.LFG(Ue.$))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
        })(), Oe = (() => {
            class H {
                constructor(a, m, U) {
                    this.http = a, this.dds = m, this.authService = U, this._downloadUrl$ = new W.X(null)
                }

                get downloadUrl$() {
                    return this._downloadUrl$.asObservable()
                }

                fetchLauncherURL() {
                    return this.fetchLauncherURLAsync().pipe((0, ne.q)(1)).subscribe(a => {
                        this.downloadUrl = a, this._downloadUrl$.next(a)
                    })
                }

                fetchLauncherURLAsync() {
                    const a = this.dds.getDeviceInfo(), m = this.authService.getUserId();
                    return "mac" !== a.os.toLowerCase() && "windows" !== a.os.toLowerCase() ? (0, de._)("linux") : this.http.get(`https://util.apollo.gg/launcher?os=${a.os}&user_id=${m}`)
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(F.eN), E.LFG(k.x0), E.LFG(s.mI))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        var Fe = n(29840), Ye = n(78812);
        let At = (() => {
            class H {
                constructor(a) {
                    this.authHost = a
                }

                getUserReferralsStatus(a) {
                    return this.authHost.get(`/campaign/${a}/referral`)
                }

                getReferralCode(a) {
                    return this.authHost.get(`/account/${a}/code/referral`)
                }

                createReferralCode(a) {
                    return this.authHost.post(`/account/${a}/code/referral`, {}).pipe((0, xe.w)(m => this.getReferralCode(a)), (0, _e.K)(m => {
                        if ("already created" === m.error.error) return this.getReferralCode(a)
                    }))
                }

                updatePayoutAddress(a, m) {
                    return this.authHost.put(`/account/${a}/code/referral`, {referral_payout_address: m})
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(ft))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
        })();
        var ie = n(19444);
        let le = (() => {
            class H {
                constructor(a, m, U) {
                    this.environment = a, this.authService = m, this.moduleConfigService = U, this.RETRY_SECONDS = 4e3, this.PING_PONG_INTERVAL_DURATION = 6e3, this.MAX_UNANSWERED_PING_COUNT = 2, this.unsubscribe = new te.xQ, this.connections = {}, this._connectionEstablished$ = new te.xQ, this.moduleConfigService.loadConfigurations().subscribe(se => {
                        this.socketEndpoints = {
                            marketplaceCart: Ce => `${se.marketplaceSocketBaseURL}/${Ce}/socket`,
                            chatAndFriends: Ce => `${se.chatAndFriendsSocketBaseUrl}/${Ce}/chat`,
                            forge: Ce => `${se.marketplaceSocketBaseURL}/${Ce}/socket`
                        }
                    })
                }

                get connectionEstablished$() {
                    return this._connectionEstablished$.asObservable()
                }

                connect({socketName: a, url: m}) {
                    return new Promise((U, se) => {
                        console.log("SOCKET CONNECTING: ", a), this.connections[a] = this.createConnection(m), this.connectListeners(a, U, se)
                    })
                }

                getOpenedConnection(a) {
                    if (this.connections[a] && this.connections[a].isAlive) return this.connections[a]
                }

                ngOnDestroy() {
                    this.disconnectAllSockets(), this.unsubscribe.next(), this.unsubscribe.complete()
                }

                onConnect(a, m) {
                    console.log("SOCKET CONNECTED:", m), this.connections[m].isAlive = !0, this.checkToStartPingPongInterval(), this.killReconnectTimer(m)
                }

                onClose(a, m) {
                    console.log("SOCKET CLOSED:", m, a), this.connections[m].isAlive = !1, a.wasClean || this.reconnectSocket(m)
                }

                onError(a, m) {
                    console.log("SOCKET ERRORED:", m, a), this.connections[m].isAlive = !1, console.log("tokenIsExpired: ", this.authService.tokenIsExpired()), this.authService.tokenIsExpired() ? this.authService.refreshToken().pipe((0, ne.q)(1)).subscribe(() => this.reconnectSocket(m)) : this.reconnectSocket(m)
                }

                onMessage(a, m) {
                    const U = JSON.parse(a.data);
                    console.log("socket onMessage!", m, U), "HEARTBEAT_PONG" === U.text ? this.onPongMessage(m, U) : this.connections[m].messages.next(U)
                }

                connectListeners(a, m, U) {
                    const se = this.connections[a];
                    se.eventHandlers.open = Ce => {
                        this.onConnect(Ce, a), m && m(se.messages)
                    }, se.eventHandlers.error = Ce => {
                        this.onError(Ce, a), U && U(se.messages)
                    }, se.eventHandlers.close = Ce => {
                        this.onClose(Ce, a)
                    }, se.eventHandlers.message = Ce => {
                        this.onMessage(Ce, a)
                    }, se.socket.addEventListener("open", se.eventHandlers.open), se.socket.addEventListener("close", se.eventHandlers.close), se.socket.addEventListener("error", se.eventHandlers.error), se.socket.addEventListener("message", se.eventHandlers.message)
                }

                disconnectListeners(a) {
                    const m = this.connections[a];
                    m.socket.removeEventListener("open", m.eventHandlers.open), m.socket.removeEventListener("close", m.eventHandlers.close), m.socket.removeEventListener("error", m.eventHandlers.error), m.socket.removeEventListener("message", m.eventHandlers.message)
                }

                checkToStartPingPongInterval() {
                    this.pingPongInterval || (this.pingPongInterval = window.setInterval(() => {
                        console.log("PING PONG INTERVAL FIRING"), Object.keys(this.connections).forEach(a => this.checkPingList(a))
                    }, this.PING_PONG_INTERVAL_DURATION))
                }

                killPingPongInterval() {
                    clearInterval(this.pingPongInterval), this.pingPongInterval = null
                }

                killReconnectTimer(a) {
                    clearTimeout(this.connections[a].reconnectTimer), this.connections[a].reconnectTimer = null
                }

                killAllReconnectTimers() {
                    Object.keys(this.connections).forEach(a => this.killReconnectTimer(a))
                }

                checkToKillPingPongInterval() {
                    0 === Object.keys(this.connections).length ? this.killPingPongInterval() : Object.keys(this.connections).find(m => this.connections[m].isAlive) || this.killPingPongInterval()
                }

                createConnection(a) {
                    const m = "desktop" === this.environment.clientType ? window.bridge.authAccess : this.authService.getAuthToken().access;
                    return {
                        url: a,
                        messages: new te.xQ,
                        socket: new WebSocket(`${a}?token=${m}`),
                        pingList: [],
                        isAlive: !1,
                        reconnectTimer: null,
                        disconnectPromise: null,
                        eventHandlers: {
                            open: () => {
                            }, close: () => {
                            }, error: () => {
                            }, message: () => {
                            }
                        }
                    }
                }

                reconnectSocket(a) {
                    const m = this.connections[a], U = () => {
                        const se = this.createConnection(m.url);
                        this.connections[a].isAlive = se.isAlive, this.connections[a].pingList = se.pingList, this.connections[a].socket = se.socket, this.connections[a].url = se.url, this.connections[a].eventHandlers = se.eventHandlers, this.connectListeners(a)
                    };
                    switch (this.killReconnectTimer(a), this.checkToKillPingPongInterval(), m.socket.readyState) {
                        case WebSocket.CONNECTING:
                        case WebSocket.CLOSING:
                            console.log("SKIPPING RECONNECT TIMER:", a, "connection ready state:", m.socket.readyState);
                            break;
                        case WebSocket.OPEN:
                            m.disconnectPromise = this.disconnect({
                                socketName: a,
                                cleanup: !1
                            }), m.reconnectTimer = window.setTimeout(() => {
                                m.disconnectPromise.then(() => {
                                    console.log("SOCKET DISCONNECTED, NOW RECONNECTING SOCKET"), U()
                                })
                            }, this.RETRY_SECONDS);
                            break;
                        case WebSocket.CLOSED:
                            m.reconnectTimer = window.setTimeout(() => {
                                U()
                            }, this.RETRY_SECONDS)
                    }
                }

                sendMessage(a, m) {
                    this.connections[a] && this.connections[a].socket.send(JSON.stringify(m))
                }

                sendPing(a) {
                    console.log("SOCKET PING:", a);
                    const m = {text: "HEARTBEAT_PING", user_id: this.authService.getUserId(), msg_id: (0, ie.v4)()};
                    this.connections[a].pingList.push(m), this.sendMessage(a, m)
                }

                onPongMessage(a, m) {
                    console.log("SOCKET PONG:", a);
                    const U = this.connections[a], se = U.pingList.findIndex(Ce => Ce.msg_id === m.msg_id);
                    -1 !== se && U.pingList.splice(se, 1)
                }

                checkPingList(a) {
                    this.connections[a].pingList.length >= this.MAX_UNANSWERED_PING_COUNT ? this.reconnectSocket(a) : this.sendPing(a)
                }

                disconnect({socketName: a, cleanup: m = !0}) {
                    const U = this.connections[a], se = () => {
                        U && this.disconnectListeners(a), m && delete this.connections[a]
                    };
                    return new Promise(Ce => {
                        if (!U) return this.checkToKillPingPongInterval(), se(), Ce();
                        this.killReconnectTimer(a), U.isAlive ? (U.socket.addEventListener("close", () => {
                            se(), this.checkToKillPingPongInterval(), Ce()
                        }), U.socket.close()) : (console.log("SOCKET IS IN A TRANSITION STATE, BUT TRY AND CLOSE ANYWAY"), U.socket && U.socket.close(), se(), Ce())
                    })
                }

                disconnectAllSockets() {
                    return this.killAllReconnectTimers(), Promise.all(Object.keys(this.connections).map(a => this.disconnect({socketName: a})))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(s.Ho), E.LFG(s.mI), E.LFG(Ve.L))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
        })();
        var Se = n(2994);
        let Ne = (() => {
            class H {
                constructor(a, m, U, se) {
                    this.gameApiService = a, this.authService = m, this.cardsService = U, this.environment = se, this.storeItems = [], this.dataStore = {userStarsTotal: 0}, this._userStarTotal$ = new W.X(0), console.log("@cerberus/StarService constructor")
                }

                get userStarTotal$() {
                    return this._userStarTotal$.asObservable()
                }

                fetchUserStarsRewards(a) {
                    return this.gameApiService.get(`/game/${a}/rewards/${this.authService.getUserId()}`)
                }

                fetchUserStarsTotal() {
                    const a = this.authService.getUserId();
                    !a || this.gameApiService.get(`/user/${a}/stars`).pipe((0, ne.q)(1)).subscribe(m => {
                        this.dataStore.userStarsTotal = m, this._userStarTotal$.next(this.dataStore.userStarsTotal)
                    }, m => {
                        this.dataStore.userStarsTotal = 0, this._userStarTotal$.next(this.dataStore.userStarsTotal)
                    })
                }

                purchaseItem$(a, m, U = !0) {
                    return this.authService.fetchSession().pipe((0, ne.q)(1), (0, He.VS)(se => this.gameApiService.post(`/user/${this.authService.getUserId()}/shop?session=${se}`, {asset_group: a})), (0, _e.K)(se => 401 === se.status && U ? this.authService.refreshToken().pipe((0, He.VS)(Ce => this.purchaseItem$(a, m, !1))) : (0, i.of)(se)), (0, Se.b)(se => {
                        (!se || !se.error) && this.handlePurchaseSuccess()
                    }))
                }

                handlePurchaseSuccess() {
                    this.fetchUserStarsTotal(), "desktop" === this.environment.clientType && this.cardsService.fetchInventory()
                }

                addEpochTimestamp(a) {
                    return Object.assign(Object.assign({}, a), {
                        start_timestamp_epoch: new Date(a.start_timestamp).getTime(),
                        end_timestamp_epoch: new Date(a.end_timestamp).getTime()
                    })
                }

                getScreenOrder(a) {
                    const U = this.storeItems.filter(se => this.isCurrentItem(se)).indexOf(a);
                    return Object.assign(Object.assign({}, a), {screen_order: U})
                }

                isCurrentItem(a) {
                    const m = (new Date).getTime();
                    return a.end_timestamp_epoch > m && a.start_timestamp_epoch < m
                }

                fetchStarStoreItems$() {
                    return this.gameApiService.get(`/user/${this.authService.getUserId()}/shop`).pipe((0, ne.q)(1), (0, ue.U)(a => a.map(m => this.addEpochTimestamp(m))), (0, Se.b)(a => this.storeItems = a))
                }
            }

            return H.\u0275fac = function (a) {
                return new (a || H)(E.LFG(q.F), E.LFG(s.mI), E.LFG(Bt.d), E.LFG(s.Ho))
            }, H.\u0275prov = E.Yz7({token: H, factory: H.\u0275fac}), H
        })();
        const ut = (H, K) => () => Promise.all([H.loadConfigurations().toPromise(), K.waitUntilReady()]);
        let Qe = (() => {
            class H {
            }

            return H.\u0275fac = function (a) {
                return new (a || H)
            }, H.\u0275mod = E.oAB({type: H}), H.\u0275inj = E.cJS({
                providers: [Ve.L, {
                    provide: s.Hd,
                    deps: [s.Ho],
                    useFactory: K => (0, C.j2)(K.launchDarklyKey, {anonymous: !0, key: "anonymous"})
                }, {
                    provide: E.ip1,
                    useFactory: ut,
                    multi: !0,
                    deps: [Ve.L, s.Hd]
                }, Ee, Ae, ft, We.a, $e, at, N, Ke, Le, Ge, qe, Oe, he, Fe._, le, Ne, Ue.$], imports: [[P.ez]]
            }), H
        })()
    }, 69439: (oe, R, n) => {
        "use strict";
        n.d(R, {d: () => P});
        var u = n(8929), i = n(591), v = n(36053), e = n(7625), f = n(92198), p = n(75613), g = n(24850), r = n(87545),
            t = n(72986), o = n(2994), b = n(27221), S = n(73307), T = n(52886), w = n(1025), D = n(43834),
            _ = n(29840), M = n(90868), C = n(5e3);
        let P = (() => {
            class E {
                constructor(y, k, B, ee, pe, ce) {
                    this.environment = y, this.authService = k, this.gameApiService = B, this.marketplaceApiService = ee, this.tokenRefreshService = pe, this.featureFlagsService = ce, this.unsubscribe = new u.xQ, this.dataStore = {
                        protoCards: new Map,
                        inventory: {},
                        inventoryCards: [],
                        qualityCounts: new Map,
                        newInventoryCardCount: 0
                    }, this._protoCards = new i.X(new Map), this._inventory = new i.X({}), this._qualityCounts = new i.X(new Map), this._inventoryCards = new i.X([]), this._newInventoryCardCount = new i.X(0), this.watchForLogout()
                }

                watchForLogout() {
                    "desktop" === this.environment.clientType && this.authService.account$.pipe((0, e.R)(this.unsubscribe), (0, f.h)(y => null === y)).subscribe(y => {
                        this.dataStore.inventory = {}, this._inventory.next(Object.assign({}, this.dataStore).inventory), this.dataStore.qualityCounts = new Map, this._qualityCounts.next(Object.assign({}, this.dataStore).qualityCounts), this.dataStore.inventoryCards = [], this._inventoryCards.next(Object.assign({}, this.dataStore).inventoryCards), this.dataStore.newInventoryCardCount = 0, this._newInventoryCardCount.next(Object.assign({}, this.dataStore).newInventoryCardCount)
                    })
                }

                get protoCards$() {
                    return this._protoCards.asObservable()
                }

                get inventory$() {
                    return this._inventory.asObservable()
                }

                get qualityCounts$() {
                    return this._qualityCounts.asObservable()
                }

                get inventoryCards$() {
                    return this._inventoryCards.asObservable()
                }

                get newInventoryCardCount$() {
                    return this._newInventoryCardCount.asObservable()
                }

                getProtoCard(y) {
                    return this.protoCards$.pipe((0, p.sE)(k => k.has(y)), (0, g.U)(k => k.get(y)))
                }

                fetchProtoCardsApi() {
                    const y = this.authService.getUserId();
                    return this.authService.fetchSession().pipe((0, r.w)(k => this.gameApiService.get(`/user/${y || 1}/proto?format=flat${k ? `&session=${k}` : ""}`)), (0, t.q)(1), (0, g.U)(k => this.dictionaryToMap(k)), (0, g.U)(k => (k.forEach((B, ee) => {
                        B.proto = ee
                    }), k)))
                }

                getProtoCards$() {
                    return this.tokenRefreshService.autoRefreshToken(this.fetchProtoCardsApi())
                }

                fetchProtoCards() {
                    this.getProtoCards$().subscribe(y => {
                        this.handleProtoCardsSuccess(y)
                    })
                }

                handleProtoCardsSuccess(y) {
                    this.dataStore.protoCards = y, this._protoCards.next(Object.assign({}, this.dataStore).protoCards)
                }

                fetchInventory() {
                    const y = this.authService.getUserId();
                    return this.fetchInventoryCardsMap(y).pipe((0, t.q)(1), (0, o.b)(k => {
                        this.dataStore.inventory = k, this._inventory.next(Object.assign({}, this.dataStore).inventory)
                    })).subscribe()
                }

                addCardsToInventory(y) {
                    let k = 0;
                    Object.entries(y).forEach(([B, ee]) => {
                        if (this.dataStore.inventory[B]) {
                            const pe = ee.filter(ce => !this.dataStore.inventory[B].some(Ee => Ee.id === ce.id));
                            this.dataStore.inventory[B] = [...this.dataStore.inventory[B], ...pe], k += pe.length
                        } else this.dataStore.inventory[B] = ee, k += ee.length
                    }), this._inventory.next(Object.assign({}, this.dataStore.inventory)), this.dataStore.newInventoryCardCount = k, this._newInventoryCardCount.next(k)
                }

                fetchQualityCount() {
                    return this.gameApiService.get("/quality_count").pipe((0, t.q)(1), (0, o.b)(y => {
                        this.dataStore.qualityCounts = this.dictionaryToMap(y), this._qualityCounts.next(Object.assign({}, this.dataStore).qualityCounts)
                    }), (0, b.K)(y => y)).subscribe()
                }

                loadInventoryCards() {
                    return (0, v.aj)([this.protoCards$, this.inventory$]).pipe((0, o.b)(([y, k]) => {
                        this.dataStore.inventoryCards = this.convertToCards(y, k), this._inventoryCards.next(Object.assign({}, this.dataStore).inventoryCards)
                    }))
                }

                convertToCards(y, k) {
                    const B = [];
                    return y.forEach((ee, pe) => {
                        if (k[pe]) for (const ce of k[pe]) {
                            const Ee = new T.Zb(ce.id, pe, ce.q, ee, ce.status);
                            B.push(Ee)
                        }
                    }), B
                }

                forgeUpdate(y, k, B) {
                    this.forgeRemoveIds(y, k), this._inventory.next(Object.assign({}, this.dataStore.inventory)), this.dataStore.newInventoryCardCount = 1, this._newInventoryCardCount.next(1)
                }

                forgeRemoveIds(y, k) {
                    this.dataStore.inventory[k] = this.dataStore.inventory[k].filter(B => !y.some(ee => B.id === ee))
                }

                setNewInventoryCardCount(y) {
                    this.dataStore.newInventoryCardCount = y, this._newInventoryCardCount.next(y)
                }

                dictionaryToMap(y) {
                    return Object.entries(y).map(([k, B]) => ({
                        key: k,
                        val: B
                    })).reduce((k, B) => k.set(Number(B.key), B.val), new Map)
                }

                fetchInventoryCardsMapV2(y, k) {
                    const B = k ? `&owner=${k}` : "";
                    return this.marketplaceApiService.get(`/v2/asset?type=card${B}${B ? "" : `&user_id=${y}`}`)
                }

                inventoryCardsMapV2ToV1(y) {
                    const k = {};
                    return Object.entries(y.protos).forEach(([B, ee]) => {
                        const pe = ee.assets.map(ce => ({
                            id: ce.id,
                            q: ce.properties.quality,
                            status: ce.minting_status
                        }));
                        k[B] = pe
                    }), k
                }

                fetchInventoryCardsMap(y) {
                    return this.gameApiService.get(`/user/${y}/card?caller=${"desktop" === this.environment.clientType ? "client" : "website"}`)
                }

                checkToRefreshInventory() {
                    this.featureFlagsService.get(w.v.refetchInventoryEnabled).pipe((0, t.q)(1)).subscribe(y => {
                        y && this.fetchInventory()
                    })
                }
            }

            return E.\u0275fac = function (y) {
                return new (y || E)(C.LFG(S.Ho), C.LFG(S.mI), C.LFG(D.F), C.LFG(_._), C.LFG(M.$), C.LFG(w.a))
            }, E.\u0275prov = C.Yz7({token: E, factory: E.\u0275fac, providedIn: "root"}), E
        })()
    }, 1025: (oe, R, n) => {
        "use strict";
        n.d(R, {v: () => g, a: () => t});
        var u = n(36053), i = n(21086), v = n(591), e = n(87545), f = n(73307), p = n(5e3), g = (() => {
            return (o = g || (g = {})).buyPagePaused = "buy-page-paused", o.claimAirdropButtonEnabled = "temp-claim-airdrop-button-enabled", o.claimAirdropEnabled = "temp-claim-airdrop-enabled", o.claimFluxEnabled = "temp-claim-flux-enabled", o.coinbasePaused = "temp-coinbase-paused", o.controllableBannerData = "controllable-banner-data", o.deckCodesEnabled = "temp-deck-codes-enabled", o.defaultWalletEnabled = "temp-default-wallet-enabled", o.forgeEnabled = "temp-forge-enabled", o.fusingNextStepEnabled = "temp-fusing-next-step-enabled", o.godsTokenBlocked = "gods-token-blocked", o.outageBannerEnabled = "temp-outage-banner-enabled", o.rankedWeekendCancelledBannerEnabled = "temp-ranked-weekend-cancelled-banner-enabled", o.referralsEnabled = "temp-referrals-enabled", o.refetchInventoryEnabled = "refetch-inventory-enabled", o.showControllableBanner = "show-controllable-banner", o.spgpBannerEnabled = "temp-spgp-banner-enabled", o.spgpEnabled = "temp-spgp-enabled", o.spgpPaused = "temp-spgp-paused", o.stakingEnabled = "temp-staking-enabled", o.tokenEnabled = "temp-token-enabled", o.x2BuyPageEnabled = "temp-x-2-buy-page-enabled", o.newEnvironmentMarketplaceLegacyApi = "temp-new-env-marketplace-legacy-api-enabled", o.newEnvironmentGameLegacyApi = "temp-new-env-game-legacy-api-enabled", o.newEnvironmentAuthLegacyApi = "temp-new-env-auth-legacy-api-enabled", o.noWalletWarningRankedGame = "temp-no-wallet-warning-ranked-game", o.playToEarnEnabled = "temp-play-to-earn-enabled", g;
            var o
        })();
        const r = Object.seal({
            [g.buyPagePaused]: !1,
            [g.claimAirdropButtonEnabled]: !1,
            [g.claimAirdropEnabled]: !1,
            [g.claimFluxEnabled]: !1,
            [g.coinbasePaused]: !1,
            [g.controllableBannerData]: {},
            [g.deckCodesEnabled]: !1,
            [g.defaultWalletEnabled]: !1,
            [g.fusingNextStepEnabled]: !1,
            [g.godsTokenBlocked]: !0,
            [g.outageBannerEnabled]: !1,
            [g.rankedWeekendCancelledBannerEnabled]: !1,
            [g.referralsEnabled]: !1,
            [g.refetchInventoryEnabled]: !1,
            [g.showControllableBanner]: !1,
            [g.spgpBannerEnabled]: !1,
            [g.spgpEnabled]: !1,
            [g.spgpPaused]: !1,
            [g.stakingEnabled]: !1,
            [g.tokenEnabled]: !1,
            [g.x2BuyPageEnabled]: !1,
            [g.newEnvironmentMarketplaceLegacyApi]: !1,
            [g.newEnvironmentGameLegacyApi]: !1,
            [g.newEnvironmentAuthLegacyApi]: !1,
            [g.noWalletWarningRankedGame]: !1,
            [g.playToEarnEnabled]: !1
        });
        let t = (() => {
            class o {
                constructor(S, T) {
                    this.ldClient = S, this.environment = T, this.flags = {}, this.flagChange = {}, this.flags = Object.assign({}, r), this.ldClient.on("change", w => {
                        for (const D in w) this.set(D, w[D].current)
                    }), this.ldClient.waitUntilReady().then(() => {
                        const w = this.ldClient.allFlags();
                        for (const D in w) this.set(D, w[D])
                    })
                }

                getMany(S) {
                    const T = [];
                    return S.forEach(w => {
                        T.push(this.get(w))
                    }), (0, u.aj)(T).pipe((0, e.w)(w => {
                        const D = {};
                        return S.forEach((_, M) => {
                            D[_] = w[M]
                        }), (0, i.of)(D)
                    }))
                }

                get(S) {
                    return this.flagChange[S] = this.flagChange[S] || new v.X(this.flags[S]), this.flagChange[S].asObservable()
                }

                setContext(S) {
                    this.ldClient.identify({
                        key: !0 === S.anonymous ? "anonymous" : S.userID,
                        email: S.email,
                        name: S.name,
                        anonymous: S.anonymous,
                        country: S.country,
                        custom: {clientType: this.environment.clientType}
                    })
                }

                set(S, T) {
                    this.flags[S] = T, this.flagChange[S] && this.flagChange[S].next(T)
                }
            }

            return o.\u0275fac = function (S) {
                return new (S || o)(p.LFG(f.Hd), p.LFG(f.Ho))
            }, o.\u0275prov = p.Yz7({token: o, factory: o.\u0275fac}), o
        })()
    }, 43834: (oe, R, n) => {
        "use strict";
        n.d(R, {F: () => o});
        var u = n(8929), i = n(87168), v = n(24850), e = n(7625), f = n(87545), p = n(1025), g = n(77535), r = n(5e3),
            t = n(40520);
        let o = (() => {
            class b {
                constructor(T, w, D) {
                    this.http = T, this.moduleConfigService = w, this.featureFlagService = D, this.destroyed$ = new u.xQ, this.gameEndpoint$ = this.moduleConfigService.loadConfigurations().pipe((0, i.M)(this.featureFlagService.get(p.v.newEnvironmentGameLegacyApi)), (0, v.U)(([_, M]) => M ? _.legacyGameHost : _.gameHost), (0, e.R)(this.destroyed$))
                }

                ngOnDestroy() {
                    this.destroyed$.next(), this.destroyed$.complete()
                }

                get(T, w) {
                    return this.gameEndpoint$.pipe((0, f.w)(D => this.http.get(D + T, w)))
                }

                put(T, w) {
                    return this.gameEndpoint$.pipe((0, f.w)(D => this.http.put(D + T, w)))
                }

                post(T, w) {
                    return this.gameEndpoint$.pipe((0, f.w)(D => this.http.post(D + T, w)))
                }

                delete(T) {
                    return this.gameEndpoint$.pipe((0, f.w)(w => this.http.delete(w + T)))
                }
            }

            return b.\u0275fac = function (T) {
                return new (T || b)(r.LFG(t.eN), r.LFG(g.L), r.LFG(p.a))
            }, b.\u0275prov = r.Yz7({token: b, factory: b.\u0275fac, providedIn: "root"}), b
        })()
    }, 29840: (oe, R, n) => {
        "use strict";
        n.d(R, {_: () => o});
        var u = n(8929), i = n(87168), v = n(24850), e = n(7625), f = n(87545), p = n(1025), g = n(77535), r = n(5e3),
            t = n(40520);
        let o = (() => {
            class b {
                constructor(T, w, D) {
                    this.http = T, this.moduleConfigService = w, this.featureFlagService = D, this.destroyed$ = new u.xQ, this.marketplaceEndpoint$ = this.moduleConfigService.loadConfigurations().pipe((0, i.M)(this.featureFlagService.get(p.v.newEnvironmentMarketplaceLegacyApi)), (0, v.U)(([_, M]) => M ? _.legacyMarketplaceHost : _.marketplaceHost), (0, e.R)(this.destroyed$))
                }

                ngOnDestroy() {
                    this.destroyed$.next(), this.destroyed$.complete()
                }

                get(T, w) {
                    return this.marketplaceEndpoint$.pipe((0, f.w)(D => this.http.get(`${D}${T}`, w)))
                }

                put(T, w) {
                    return this.marketplaceEndpoint$.pipe((0, f.w)(D => this.http.put(`${D}${T}`, w)))
                }

                post(T, w) {
                    return this.marketplaceEndpoint$.pipe((0, f.w)(D => this.http.post(`${D}${T}`, w)))
                }

                delete(T) {
                    return this.marketplaceEndpoint$.pipe((0, f.w)(w => this.http.delete(`${w}${T}`)))
                }
            }

            return b.\u0275fac = function (T) {
                return new (T || b)(r.LFG(t.eN), r.LFG(g.L), r.LFG(p.a))
            }, b.\u0275prov = r.Yz7({token: b, factory: b.\u0275fac}), b
        })()
    }, 77535: (oe, R, n) => {
        "use strict";
        n.d(R, {L: () => p});
        var u = n(2994), i = n(5154), v = n(73307), e = n(5e3), f = n(40520);
        let p = (() => {
            class g {
                constructor(t, o, b) {
                    this.http = t, this.environment = o, this.storageService = b, this.configURL = this.environment.appConfig, "desktop" === this.environment.clientType && this.useDevApis() && (this.configURL = this.environment.appConfigDev)
                }

                useDevApis() {
                    const t = this.storageService.get(["game", "1", "branch"]), o = RegExp(/beta/);
                    return t && !o.test(t)
                }

                loadConfigurations() {
                    return this.configuration$ || (this.configuration$ = this.http.get(`${this.configURL}`, {headers: {"cache-control": ["no-cache", "no-store"]}}).pipe((0, u.b)(t => this.configData = t), (0, i.d)(1))), this.configuration$
                }

                getConfig() {
                    return this.configData ? this.configData : null
                }
            }

            return g.\u0275fac = function (t) {
                return new (t || g)(e.LFG(f.eN), e.LFG(v.Ho), e.LFG(v.qy))
            }, g.\u0275prov = e.Yz7({token: g, factory: g.\u0275fac}), g
        })()
    }, 78812: (oe, R, n) => {
        "use strict";
        n.d(R, {f: () => g});
        var u = n(1025), i = n(8929), v = n(591), e = n(7625), f = n(49219), p = n(5e3);
        let g = (() => {
            class r {
                constructor(o) {
                    this.featureFlagService = o, this.dataStore = {
                        navigationItems: null,
                        userMenuItems: null,
                        userEthAccount: null,
                        activeHeaderAlertBar: null,
                        headerAreaHeight: f.standardHeaderHeight
                    }, this.unsubscribe = new i.xQ, this._navigationItems$ = new v.X(null), this._userMenuItems$ = new v.X(null), this._activeHeaderAlertBar$ = new v.X(null), this.checkFeatureFlagToEnableAlertHeaderBar()
                }

                get navigationItems$() {
                    return this._navigationItems$.asObservable()
                }

                get userMenuItems$() {
                    return this._userMenuItems$.asObservable()
                }

                get activeHeaderAlertBar$() {
                    return this._activeHeaderAlertBar$.asObservable()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                storeNavigationItems(o) {
                    this.dataStore.navigationItems = o, this.emitNavItems(this.dataStore.navigationItems)
                }

                storeUserMenuItems(o) {
                    this.dataStore.userMenuItems = o, this.emitUserMenuItems(this.dataStore.userMenuItems)
                }

                emitNavItems(o) {
                    this._navigationItems$.next(Object.assign({}, o))
                }

                emitUserMenuItems(o) {
                    this._userMenuItems$.next(Object.assign({}, o))
                }

                toggleNotifyCollections(o) {
                    const b = Object.assign({}, this.dataStore.navigationItems);
                    b.collections.showNotificationBubble = !!o, this.emitNavItems(b)
                }

                toggleNotifyOpenPacks(o) {
                    const b = Object.assign({}, this.dataStore.navigationItems);
                    b.openPacks.showNotificationBubble = !!o, this.emitNavItems(b)
                }

                toggleNotifyMarketSell(o) {
                    const b = Object.assign({}, this.dataStore.navigationItems);
                    b.market.children.sell.showNotificationBubble = !!o, this.emitNavItems(b)
                }

                toggleNotifyMarketBuy(o) {
                    const b = Object.assign({}, this.dataStore.navigationItems);
                    b.market.children.buy.showNotificationBubble = !!o, this.emitNavItems(b)
                }

                connectedWalletState() {
                    const o = this.dataStore.userMenuItems;
                    o.connectWallet.visible = !1, o.disconnectWallet.visible = !0, this.emitUserMenuItems(o)
                }

                disconnectedWalletState() {
                    const o = this.dataStore.userMenuItems;
                    o.connectWallet.visible = !0, o.disconnectWallet.visible = !1, this.emitUserMenuItems(o)
                }

                checkFeatureFlagToEnableAlertHeaderBar() {
                    this.featureFlagService.get(u.v.spgpBannerEnabled).pipe((0, e.R)(this.unsubscribe)).subscribe(o => {
                        this.dataStore.activeHeaderAlertBar = o || null, this._activeHeaderAlertBar$.next(this.dataStore.activeHeaderAlertBar)
                    })
                }
            }

            return r.\u0275fac = function (o) {
                return new (o || r)(p.LFG(u.a))
            }, r.\u0275prov = p.Yz7({token: r, factory: r.\u0275fac, providedIn: "root"}), r
        })()
    }, 90868: (oe, R, n) => {
        "use strict";
        n.d(R, {$: () => g});
        var u = n(73307), i = n(61737), v = n(27221), e = n(72986), f = n(61709), p = n(5e3);
        let g = (() => {
            class r {
                constructor(o) {
                    this.authService = o
                }

                autoRefreshToken(o, b = 1) {
                    return o.pipe((0, v.K)(S => 401 === S.status && b > 0 ? this.authService.refreshToken().pipe((0, e.q)(1), (0, f.zg)(() => this.autoRefreshToken(o, b - 1))) : (0, i._)(S)))
                }
            }

            return r.\u0275fac = function (o) {
                return new (o || r)(p.LFG(u.mI))
            }, r.\u0275prov = p.Yz7({token: r, factory: r.\u0275fac}), r
        })()
    }, 7203: (oe, R, n) => {
        "use strict";
        n.d(R, {np: () => r, Og: () => p, oS: () => g, Se: () => i, PW: () => f});
        const i = "X-Skip-Interceptor", f = ["diamond", "gold", "shadow", "meteorite", "plain"];
        var p = (() => {
            return (t = p || (p = {})).INITIATED = "initiated", t.FLUX_PAID = "flux_paid", t.CARDS_DELETED = "cards_deleted", t.TOKENS_PAID = "tokens_paid", t.VALIDATING_PAYMENT = "validating_payment", t.COMPLETED = "completed", p;
            var t
        })();
        const g = {
            [p.INITIATED]: "Pending",
            [p.FLUX_PAID]: "Pending",
            [p.CARDS_DELETED]: "Pending",
            [p.TOKENS_PAID]: "Pending",
            [p.VALIDATING_PAYMENT]: "Validating",
            [p.COMPLETED]: "completed"
        };
        var r = (() => {
            return (t = r || (r = {})).Development = "development", t.Staging = "staging", t.Production = "production", r;
            var t
        })()
    }, 98590: (oe, R, n) => {
        "use strict";
        n.d(R, {I: () => r});
        var u = n(67876), i = n(28510), v = n(5e3), e = n(69808), f = n(87745);

        function p(t, o) {
            if (1 & t && (v.TgZ(0, "gu-vertical-space", 7), v._UZ(1, "gu-icon", 8), v.qZA()), 2 & t) {
                const b = v.oxw();
                v.xp6(1), v.Q6J("fillColor", b.iconFillColor)("iconLigature", b.iconLigature)
            }
        }

        function g(t, o) {
            if (1 & t) {
                const b = v.EpF();
                v.ynx(0), v.TgZ(1, "gu-secondary-hex-button", 9), v.NdJ("click", function () {
                    return v.CHM(b), v.oxw().ctaClick()
                }), v.qZA(), v.BQk()
            }
            if (2 & t) {
                const b = v.oxw();
                v.xp6(1), v.Q6J("text", b.ctaText)
            }
        }

        let r = (() => {
            class t {
                constructor(b) {
                    this.activeModal = b, this.onCtaClick = u.Z
                }

                ctaClick() {
                    this.onCtaClick(), this.activeModal.close()
                }
            }

            return t.\u0275fac = function (b) {
                return new (b || t)(v.Y36(i.mX))
            }, t.\u0275cmp = v.Xpm({
                type: t,
                selectors: [["cerberus-alert-modal"]],
                inputs: {
                    title: "title",
                    text: "text",
                    iconLigature: "iconLigature",
                    iconFillColor: "iconFillColor",
                    ctaText: "ctaText",
                    onCtaClick: "onCtaClick"
                },
                decls: 10,
                vars: 7,
                consts: [["goldBorder", "top"], ["top", "4x-large", 4, "ngIf"], ["top", "large"], ["align", "center", "kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100", 1, "heading"], ["align", "center", "kind", "large", "fillColor", "colors.light.100", 1, "text", 3, "innerHTML"], ["top", "2x-large", "bottom", "4x-large"], [4, "ngIf"], ["top", "4x-large"], [1, "alertIcon", 3, "fillColor", "iconLigature"], ["size", "large", 1, "cta", 3, "text", "click"]],
                template: function (b, S) {
                    1 & b && (v._UZ(0, "gu-modal-background", 0), v.YNc(1, p, 2, 2, "gu-vertical-space", 1), v.TgZ(2, "gu-vertical-space", 2), v.TgZ(3, "gu-paragraph-text", 3), v._uU(4), v.qZA(), v.qZA(), v.TgZ(5, "gu-vertical-space", 2), v._UZ(6, "gu-paragraph-text", 4), v.ALo(7, "safe"), v.qZA(), v.TgZ(8, "gu-vertical-space", 5), v.YNc(9, g, 2, 1, "ng-container", 6), v.qZA()), 2 & b && (v.xp6(1), v.Q6J("ngIf", S.iconLigature), v.xp6(3), v.hij(" ", S.title, " "), v.xp6(2), v.Q6J("innerHTML", v.xi3(7, 4, S.text, "html"), v.oJD), v.xp6(3), v.Q6J("ngIf", S.ctaText))
                },
                directives: [e.O5],
                pipes: [f.y],
                styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:640px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.alertIcon[_ngcontent-%COMP%]{font-size:80px}.heading[_ngcontent-%COMP%]{text-transform:uppercase}"]
            }), t
        })()
    }, 53161: (oe, R, n) => {
        "use strict";
        n.d(R, {j: () => i});
        var u = n(5e3);
        let i = (() => {
            class v {
            }

            return v.\u0275fac = function (f) {
                return new (f || v)
            }, v.\u0275mod = u.oAB({type: v}), v.\u0275inj = u.cJS({}), v
        })()
    }, 39765: (oe, R, n) => {
        "use strict";
        n.d(R, {w: () => g}), n(61377);
        var i = n(8929), v = n(7625), e = n(24850), f = n(73307), p = n(5e3);
        let g = (() => {
            class r {
                constructor(o, b, S) {
                    this.templateRef = o, this.viewContainer = b, this.featureFlagsService = S, this.unsubscribe = new i.xQ
                }

                set featureFlagIf(o) {
                    this.featureFlagsService.get(o).pipe((0, v.R)(this.unsubscribe), (0, e.U)(b => !!b)).subscribe(b => {
                        b ? this.viewContainer.createEmbeddedView(this.templateRef) : this.viewContainer.clear()
                    })
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }
            }

            return r.\u0275fac = function (o) {
                return new (o || r)(p.Y36(p.Rgc), p.Y36(p.s_b), p.Y36(f.B3))
            }, r.\u0275dir = p.lG2({
                type: r,
                selectors: [["", "featureFlagIf", ""]],
                inputs: {featureFlagIf: "featureFlagIf"}
            }), r
        })()
    }, 37371: (oe, R, n) => {
        "use strict";
        n.d(R, {M: () => P});
        var u = n(28510), v = (n(89534), n(70655)), e = n(32830), f = n(56418), p = n(38872), g = n(86041),
            r = n(80102), t = n(26532), o = n(65281);
        let b = class extends e.oi {
            constructor() {
                super(...arguments), this.type = "none", this.promise = new Promise(s => {
                    this.finished = s
                })
            }

            static get styles() {
                return e.iv`
      :host {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        box-shadow: 0px 2px 16px rgba(0, 0, 0, 0.5);
      }

      .modal-dialog__panel {
        min-height: 240px;
        height: 100%;
        width: 520px;
        background: ${(0, t.asCssProp)(o.gradients.gunmetal.mirror("left"))};
        border: 2px solid ${(0, t.asCssProp)(o.colors.gunmetal[500])};
        display: flex;
        flex-direction: column;
        place-content: stretch center;
        place-items: center;
        padding: 40px;
        box-sizing: border-box;
      }

      ${(0, t.asCssProp)((0, t.fadeReveal)(":host .modal-dialog__panel", ":host(.open) .modal-dialog__panel", "100%", .3, 16))}

      .modal-dialog__border {
        height: 4px;
        display: block;
        position: absolute;
        width: calc(100% + 4px);
        left: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        top: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        background: ${(0, t.asCssProp)(o.gradients.gold.mirror("right"))};
      }

      .modal-dialog__border--type-info {
        background: ${(0, t.asCssProp)(o.gradients.gold.mirror("right"))};
      }

      .modal-dialog__border--type-error {
        background: linear-gradient(270deg, #d73333 0%, #ff8b01 50%, #d73333 100%);
      }

      .modal-dialog__border--type-success {
        background: ${(0, t.asCssProp)(o.gradients.apocyan.mirror("right"))};
      }

      .modal-dialog__icon {
        position: absolute;
        left: 50%;
        top: 0;
        color: white;
        width: 72px;
        height: 64px;
        transform: translate(-50%, -50%);
      }
    `
            }

            notifyState(s) {
                const y = {modal: this, closed: this.promise};
                "modalOpened" === s && (y.close = () => this.close()), this.dispatchEvent(new CustomEvent(s, {
                    detail: y,
                    bubbles: !0,
                    composed: !1
                }))
            }

            close() {
                return requestAnimationFrame(() => requestAnimationFrame(() => {
                    this.panel.addEventListener("transitionend", () => {
                        this.notifyState("modalClosed"), this.finished()
                    }), this.classList.remove("open")
                })), this.promise
            }

            firstUpdated(s) {
                super.firstUpdated(s), this.notifyState("modalOpened"), requestAnimationFrame(() => requestAnimationFrame(() => this.classList.add("open")))
            }

            renderIcon() {
                const s = {
                    info: e.YP`<path d="M53.4917 55.817C52.4717 55.613 51.8087 55.4218 51.5027 55.2433C51.0947 55.0138 50.8907 54.797 50.8907 54.593V39.5H49.125H46.875C46.875 39.5 44.316 39.4235 43.5 39.5L43.4702 41.3203C44.3117 41.4478 44.8217 41.5498 45.0002 41.6263C45.3317 41.6518 45.6122 41.8175 45.8417 42.1235C45.9692 42.3275 46.033 42.6462 46.033 43.0798V54.593C46.033 54.848 45.829 55.0648 45.421 55.2433C44.9365 55.4473 44.2862 55.6385 43.4702 55.817V57.5H53.4917V55.817ZM51.235 32.408C51.235 32.051 51.184 31.7578 51.082 31.5283C50.98 31.2988 50.776 31.082 50.47 30.878C50.2405 30.725 49.96 30.6103 49.6285 30.5337C49.297 30.4573 48.94 30.4063 48.5575 30.3807C48.0475 30.3552 47.6267 30.4062 47.2952 30.5337C47.0147 30.6357 46.6705 30.8398 46.2625 31.1458C45.9055 31.5028 45.6887 31.7833 45.6122 31.9872C45.4847 32.3442 45.3955 32.714 45.3445 33.0965C45.319 33.4025 45.3955 33.7085 45.574 34.0145C45.7015 34.244 45.9055 34.4608 46.186 34.6648C46.4665 34.8688 46.7597 34.9963 47.0657 35.0473C47.4737 35.1237 47.8052 35.1492 48.0602 35.1237C48.5192 35.1237 48.9272 35.06 49.2842 34.9325C49.6667 34.805 50.011 34.6265 50.317 34.397C50.6485 34.142 50.8907 33.8615 51.0437 33.5555C51.1712 33.275 51.235 32.8925 51.235 32.408Z" fill="#EBC98B"></path>`,
                    error: e.YP`<path fill-rule="evenodd" clip-rule="evenodd" d="M46.375 49.4999L43 31.4999H52L48.625 49.4999H46.375ZM45.1212 57.5037C45.7854 58.1679 46.5783 58.4999 47.5 58.4999C48.4217 58.4999 49.2146 58.1679 49.8788 57.5037C50.5429 56.8395 50.875 56.0466 50.875 55.1249C50.875 54.2032 50.5429 53.4103 49.8788 52.7462C49.2146 52.082 48.4217 51.7499 47.5 51.7499C46.5783 51.7499 45.7854 52.082 45.1212 52.7462C44.4571 53.4103 44.125 54.2032 44.125 55.1249C44.125 56.0466 44.4571 56.8395 45.1212 57.5037Z" fill="#FF8B01"></path>`,
                    success: e.YP`<path d="M43.3389 49.5082L37.1517 43.3211L34.5001 45.9727L43.3389 54.8115L59.2488 38.9016L56.5971 36.25L43.3389 49.5082Z" fill="#8BE1E0"></path>`
                };
                return s[this.type] ? e.YP`
      <svg width="95" height="80" viewBox="0 0 95 80" fill="none" xmlns="http://www.w3.org/2000/svg" class="modal-dialog__icon">
        <path d="M47.5 10.7472L82.3727 66H12.6273L47.5 10.7472Z" stroke="url(#${this.type}_gradient)" stroke-width="4" style="stroke-linecap: round; stroke-linejoin: round;" fill="#1D2F41" filter="url(#drop_shadow)"></path>
        ${s[this.type]}
        <defs>
          <filter id="drop_shadow" x="0.624023" y="0.747192" width="93.7518" height="79.2528" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
            <feOffset dy="2"></feOffset>
            <feGaussianBlur stdDeviation="5"></feGaussianBlur>
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.85 0"></feColorMatrix>
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
          </filter>
          <linearGradient id="info_gradient" x1="9" y1="7" x2="9" y2="68" gradientUnits="userSpaceOnUse">
            <stop stop-color="#FFF2D8"></stop>
            <stop offset="0.5034" stop-color="#EBC98B"></stop>
            <stop offset="1" stop-color="#C6A052"></stop>
          </linearGradient>
          <linearGradient id="error_gradient" x1="47.6608" y1="90.0638" x2="47.6617" y2="7.01299" gradientUnits="userSpaceOnUse">
            <stop stop-color="#D73333"></stop>
            <stop offset="1" stop-color="#FF8B01"></stop>
          </linearGradient>
          <linearGradient id="success_gradient" x1="9" y1="7" x2="9" y2="68" gradientUnits="userSpaceOnUse">
            <stop stop-color="#AFFAED"></stop>
            <stop offset="0.5034" stop-color="#8BE1E0"></stop>
            <stop offset="1" stop-color="#54BBCD"></stop>
          </linearGradient>
        </defs>
      </svg>
    ` : e.dy``
            }

            render() {
                return e.dy`
      <div class="modal-dialog__panel" data-test-id="modal-dialog-panel">
        <div class="modal-dialog__border modal-dialog__border--type-${this.type}"></div>
        ${this.renderIcon()}
        <slot></slot>
      </div>
    `
            }
        };
        (0, v.gn)([(0, f.C)(), (0, v.w6)("design:type", Object)], b.prototype, "type", void 0), (0, v.gn)([(0, p.I)(".modal-dialog__panel"), (0, v.w6)("design:type", HTMLElement)], b.prototype, "panel", void 0), b = (0, v.gn)([(0, g.M)("gu-modal-dialog")], b), n(51256), n(11015);
        var w = n(5e3), D = n(69808), _ = n(87745);

        function M(E, s) {
            if (1 & E) {
                const y = w.EpF();
                w.TgZ(0, "gu-hex-button", 8), w.NdJ("click", function () {
                    w.CHM(y);
                    const B = w.oxw();
                    return B.buttonClick(B.secondaryButton)
                }), w._uU(1), w.qZA()
            }
            if (2 & E) {
                const y = w.oxw();
                w.xp6(1), w.hij(" ", y.secondaryButton.text, " ")
            }
        }

        function C(E, s) {
            if (1 & E) {
                const y = w.EpF();
                w.TgZ(0, "gu-hex-button", 9), w.NdJ("click", function () {
                    w.CHM(y);
                    const B = w.oxw();
                    return B.buttonClick(B.primaryButton)
                }), w.ALo(1, "safe"), w.qZA()
            }
            if (2 & E) {
                const y = w.oxw();
                w.Q6J("innerHTML", w.xi3(1, 1, y.primaryButton.text, "html"), w.oJD)
            }
        }

        let P = (() => {
            class E {
                constructor(y) {
                    this.activeModal = y
                }

                buttonClick(y) {
                    y.onClick && "function" == typeof y.onClick && y.onClick(), y.closeOnClick && this.activeModal.close()
                }
            }

            return E.\u0275fac = function (y) {
                return new (y || E)(w.Y36(u.mX))
            }, E.\u0275cmp = w.Xpm({
                type: E,
                selectors: [["cerberus-modal-dialog-control"]],
                inputs: {
                    title: "title",
                    content: "content",
                    type: "type",
                    secondaryButton: "secondaryButton",
                    primaryButton: "primaryButton"
                },
                decls: 10,
                vars: 8,
                consts: [[3, "type"], [1, "modalDialogContent"], ["data-test-id", "modal-dialog-control-title", "kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100", "align", "center"], ["top", "small", "bottom", "x-large"], ["data-test-id", "modal-dialog-control-content", "fillColor", "colors.light.100", "align", "center", 3, "innerHTML"], [1, "modalDialogContent__buttons"], ["type", "secondary", "size", "large", "data-test-id", "modal-dialog-control-secondary-button", 3, "click", 4, "ngIf"], ["type", "primary", "size", "large", "data-test-id", "modal-dialog-control-primary-button", 3, "innerHTML", "click", 4, "ngIf"], ["type", "secondary", "size", "large", "data-test-id", "modal-dialog-control-secondary-button", 3, "click"], ["type", "primary", "size", "large", "data-test-id", "modal-dialog-control-primary-button", 3, "innerHTML", "click"]],
                template: function (y, k) {
                    1 & y && (w.TgZ(0, "gu-modal-dialog", 0), w.TgZ(1, "div", 1), w.TgZ(2, "gu-paragraph-text", 2), w._uU(3), w.qZA(), w.TgZ(4, "gu-vertical-space", 3), w._UZ(5, "gu-paragraph-text", 4), w.ALo(6, "safe"), w.qZA(), w.TgZ(7, "gu-vertical-space", 5), w.YNc(8, M, 2, 1, "gu-hex-button", 6), w.YNc(9, C, 2, 4, "gu-hex-button", 7), w.qZA(), w.qZA(), w.qZA()), 2 & y && (w.Q6J("type", k.type), w.xp6(3), w.Oqu(k.title), w.xp6(2), w.Q6J("innerHTML", w.xi3(6, 5, k.content, "html"), w.oJD), w.xp6(3), w.Q6J("ngIf", k.secondaryButton), w.xp6(1), w.Q6J("ngIf", k.primaryButton))
                },
                directives: [D.O5],
                pipes: [_.y],
                styles: [".modalDialogContent[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 8px;align-items:center;max-width:100vw}.modalDialogContent[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.modalDialogContent__buttons[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:center}.modalDialogContent__buttons[_ngcontent-%COMP%]   gu-hex-button[_ngcontent-%COMP%]{max-width:50%;flex:1 1 0px}.modalDialogContent__buttons[_ngcontent-%COMP%]   gu-hex-button[_ngcontent-%COMP%]:not(:last-child){margin-right:16px}"]
            }), E
        })()
    }, 87745: (oe, R, n) => {
        "use strict";
        n.d(R, {y: () => v});
        var u = n(5e3), i = n(22313);
        let v = (() => {
            class e {
                constructor(p) {
                    this.sanitizer = p
                }

                transform(p, g) {
                    switch (g) {
                        case"html":
                            return this.sanitizer.bypassSecurityTrustHtml(p);
                        case"style":
                            return this.sanitizer.bypassSecurityTrustStyle(p);
                        case"script":
                            return this.sanitizer.bypassSecurityTrustScript(p);
                        case"url":
                            return this.sanitizer.bypassSecurityTrustUrl(p);
                        case"resourceUrl":
                            return this.sanitizer.bypassSecurityTrustResourceUrl(p);
                        default:
                            throw new Error(`Invalid safe type specified: ${g}`)
                    }
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)(u.Y36(i.H7, 16))
            }, e.\u0275pipe = u.Yjl({name: "safe", type: e, pure: !0}), e
        })()
    }, 17268: (oe, R, n) => {
        "use strict";
        n.d(R, {K: () => f});
        var u = n(5e3), i = n(69808);
        const v = function (p, g, r, t, o) {
            return {
                "tooltipBubble--top": p,
                "tooltipBubble--left": g,
                "tooltipBubble--right": r,
                "tooltipBubble--bottom": t,
                "tooltipBubble--large": o
            }
        }, e = ["*"];
        let f = (() => {
            class p {
                constructor() {
                    this.position = "top", this.size = "small", this.autoClose = !0
                }

                get getClass() {
                    return !this.autoClose
                }

                ngOnInit() {
                }
            }

            return p.\u0275fac = function (r) {
                return new (r || p)
            }, p.\u0275cmp = u.Xpm({
                type: p,
                selectors: [["app-tooltip"]],
                hostVars: 2,
                hostBindings: function (r, t) {
                    2 & r && u.ekj("openTooltip", t.getClass)
                },
                inputs: {title: "title", position: "position", size: "size", autoClose: "autoClose"},
                ngContentSelectors: e,
                decls: 3,
                vars: 9,
                consts: [["fillColor", "colors.gunmetal.300", 1, "tooltipBubble", 3, "kind", "ngClass", "innerHTML"], ["tooltipBubble", ""]],
                template: function (r, t) {
                    1 & r && (u.F$t(), u.Hsn(0), u._UZ(1, "gu-paragraph-text", 0, 1)), 2 & r && (u.xp6(1), u.Q6J("kind", "large" === t.size ? "small" : "x-small")("ngClass", u.qbA(3, v, "top" === t.position, "left" === t.position, "right" === t.position, "bottom" === t.position, "large" === t.size))("innerHTML", t.title, u.oJD))
                },
                directives: [i.mk],
                styles: ['.tooltipBubble[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{display:block;position:relative}[_nghost-%COMP%]:hover   .tooltipBubble[_ngcontent-%COMP%]{opacity:1}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--top[_ngcontent-%COMP%]{transform:translate(-50%,calc(-100% + (calc(var(--vh) * 1.7) * .5)))}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--bottom[_ngcontent-%COMP%]{transform:translate(-50%,calc(100% - (calc(var(--vh) * 1.7) * .5)))}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--left[_ngcontent-%COMP%]{transform:translate(calc(-100% - (calc(var(--vw) * .5) * .5) * .5),-50%)}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--right[_ngcontent-%COMP%]{transform:translate(calc(0% + (calc(var(--vw) * .5) * .5) * .5),-50%)}.openTooltip[_nghost-%COMP%]   .tooltipBubble[_ngcontent-%COMP%]{opacity:1}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--top[_ngcontent-%COMP%]{transform:translate(-50%,calc(-100% + (calc(var(--vh) * 1.7) * .5)))}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--bottom[_ngcontent-%COMP%]{transform:translate(-50%,calc(100% - (calc(var(--vh) * 1.7) * .5)))}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--left[_ngcontent-%COMP%]{transform:translate(calc(-100% - (calc(var(--vw) * .5) * .5) * .5),-50%)}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--right[_ngcontent-%COMP%]{transform:translate(calc(0% + (calc(var(--vw) * .5) * .5) * .5),-50%)}.tooltipBubble[_ngcontent-%COMP%]{z-index:1;text-transform:capitalize;padding:calc(var(--vh) * 1.3);padding-top:calc(var(--vh) * .8);padding-bottom:calc(var(--vh) * .8);font-weight:600;user-select:none;pointer-events:none;position:absolute;background:#0f1b27;border:calc(var(--vh) * .15) solid #3d5a74;color:#92abc2;white-space:nowrap;border-radius:calc(var(--vh) * .4);opacity:0;left:50%;text-align:center}.tooltipBubble[_ngcontent-%COMP%]:before{content:"";position:absolute;left:50%;border:calc(var(--vh) * .7) solid transparent;transform:translate(-50%)}.tooltipBubble--large[_ngcontent-%COMP%]{font-weight:400;font-size:16px;padding:16px;text-transform:none}.tooltipBubble--top[_ngcontent-%COMP%]{top:0;transform:translate(-50%,-100%);margin-top:calc(calc(var(--vh) * 1.7) * -1)}.tooltipBubble--top[_ngcontent-%COMP%]:before{border-top-color:#3d5a74;bottom:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15))}.tooltipBubble--bottom[_ngcontent-%COMP%]{bottom:0;transform:translate(-50%,100%);margin-top:calc(var(--vh) * 1.7)}.tooltipBubble--bottom[_ngcontent-%COMP%]:before{border-bottom-color:#3d5a74;top:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15))}.tooltipBubble--left[_ngcontent-%COMP%]{left:0;top:50%}.tooltipBubble--left[_ngcontent-%COMP%]:before{left:100%;transform:translateY(50%);border-left-color:#3d5a74;right:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15));bottom:50%}.tooltipBubble--right[_ngcontent-%COMP%]{margin-left:10px;top:50%}.tooltipBubble--right[_ngcontent-%COMP%]:before{right:100%;transform:translateY(50%);border-right-color:#3d5a74;left:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15));bottom:50%}']
            }), p
        })()
    }, 25774: (oe, R, n) => {
        "use strict";
        n.d(R, {O: () => p});
        var u = n(73307), i = n(5e3), v = n(69808);

        function e(g, r) {
            if (1 & g) {
                const t = i.EpF();
                i.TgZ(0, "gu-announce-banner-template", 1), i.NdJ("onCloseAnnounceBanner", function () {
                    return i.CHM(t), i.oxw().onCloseAnnounceBanner()
                }), i.Hsn(1), i.qZA()
            }
            if (2 & g) {
                const t = i.oxw();
                i.Q6J("closable", t.closable)
            }
        }

        const f = ["*"];
        let p = (() => {
            class g {
                constructor(t) {
                    this.storageService = t, this.closable = !0, this.visible = !1
                }

                ngOnInit() {
                    this.visible = this.showBanner(this.id)
                }

                showBanner(t) {
                    return !t || !this.storageService.get([this.id])
                }

                markSeen(t) {
                    this.storageService.set([t], !0)
                }

                onCloseAnnounceBanner() {
                    this.id && this.markSeen(this.id), this.visible = !1
                }
            }

            return g.\u0275fac = function (t) {
                return new (t || g)(i.Y36(u.qy))
            }, g.\u0275cmp = i.Xpm({
                type: g,
                selectors: [["cerberus-announce-banner-control"]],
                inputs: {id: "id", closable: "closable"},
                ngContentSelectors: f,
                decls: 1,
                vars: 1,
                consts: [[3, "closable", "onCloseAnnounceBanner", 4, "ngIf"], [3, "closable", "onCloseAnnounceBanner"]],
                template: function (t, o) {
                    1 & t && (i.F$t(), i.YNc(0, e, 2, 1, "gu-announce-banner-template", 0)), 2 & t && i.Q6J("ngIf", o.visible)
                },
                directives: [v.O5],
                styles: ["[_nghost-%COMP%]{position:absolute;width:100%;z-index:21}.announceBannerControl--inline[_nghost-%COMP%]{position:relative}"]
            }), g
        })()
    }, 97993: (oe, R, n) => {
        "use strict";
        n.d(R, {i: () => p});
        var u = n(8929), i = n(7625), v = n(61377), e = n(73307), f = n(5e3);
        let p = (() => {
            class g {
                constructor(t) {
                    this.featureFlagsService = t, this.text = "", this.unsubscribe = new u.xQ
                }

                ngOnInit() {
                    this.watchFlagData()
                }

                watchFlagData() {
                    this.featureFlagsService.get(v.vU.controllableBannerData).pipe((0, i.R)(this.unsubscribe)).subscribe(t => {
                        this.text = t.text
                    })
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }
            }

            return g.\u0275fac = function (t) {
                return new (t || g)(f.Y36(e.B3))
            }, g.\u0275cmp = f.Xpm({
                type: g,
                selectors: [["cerberus-controllable-banner"]],
                decls: 2,
                vars: 1,
                consts: [["both", "2x-large", 1, "layout"], ["data-test-id", "controllable-banner-text", "kind", "large", "align", "center", "fillColor", "colors.light.300", 1, "layout__text", 3, "innerHtml"]],
                template: function (t, o) {
                    1 & t && (f.TgZ(0, "gu-vertical-space", 0), f._UZ(1, "gu-paragraph-text", 1), f.qZA()), 2 & t && (f.xp6(1), f.Q6J("innerHtml", o.text, f.oJD))
                },
                styles: ["[_nghost-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]     a, [_nghost-%COMP%]     a:link, [_nghost-%COMP%]     a:visited{color:#affaed;text-decoration:none}.layout[_ngcontent-%COMP%]{display:flex;align-items:flex-start;padding:0 64px;width:100%;justify-content:center}.layout__text[_ngcontent-%COMP%]{max-width:600px}"]
            }), g
        })()
    }, 1639: (oe, R, n) => {
        "use strict";
        n.d(R, {
            ic: () => p,
            am: () => rn,
            q6: () => Y,
            sZ: () => we,
            el: () => ls,
            gn: () => zs,
            kM: () => Ls,
            MZ: () => xs.M,
            W2: () => f
        });
        var u = n(69808), i = n(93075), v = n(53161), e = n(5e3);
        let f = (() => {
            class x {
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275mod = e.oAB({type: x}), x.\u0275inj = e.cJS({imports: [[u.ez, i.u5, v.j]]}), x
        })(), p = (() => {
            class x {
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275mod = e.oAB({type: x}), x.\u0275inj = e.cJS({imports: [[u.ez]]}), x
        })();
        const g = ["2x-small", "x-small", "small", "medium", "large", "x-large", "2x-large", "3x-large", "4x-large", "5x-large", "6x-large", "7x-large", "8x-large", "9x-large"];
        var r = n(65281), t = n(69181);
        const o = ["video"], b = ["carousel"], S = ["testParagraph"], T = function (x) {
            return {height: x}
        };

        function w(x, j) {
            if (1 & x && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & x) {
                const d = j.$implicit, I = j.index;
                e.Q6J("ngStyle", e.VKq(3, T, d.randomHeight + "px")), e.xp6(1), e.AsE(" ", d.title, " ---- index: ", I + 1, " ")
            }
        }

        function D(x, j) {
            if (1 & x && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.Q6J("ngStyle", e.VKq(2, T, d.randomHeight + "px")), e.xp6(1), e.hij(" ", d.title, " ")
            }
        }

        function _(x, j) {
            if (1 & x && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.Q6J("ngStyle", e.VKq(2, T, d.randomHeight + "px")), e.xp6(1), e.hij(" ", d.title, " ")
            }
        }

        function M(x, j) {
            if (1 & x && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.Q6J("ngStyle", e.VKq(2, T, d.randomHeight + "px")), e.xp6(1), e.hij(" ", d.title, " ")
            }
        }

        function C(x, j) {
            if (1 & x && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.Q6J("ngStyle", e.VKq(2, T, d.randomHeight + "px")), e.xp6(1), e.hij(" ", d.title, " ")
            }
        }

        const P = function () {
            return {breakpoint: "small", bothSize: "3x-large"}
        }, E = function (x) {
            return [x]
        }, s = function () {
            return {minWidth: "x-small", slidesPerView: 1.5, spaceBetween: 10}
        }, y = function () {
            return {minWidth: "medium", slidesPerView: 3.5, spaceBetween: 20}
        }, k = function () {
            return {minWidth: "small", slidesPerView: 2.5, spaceBetween: 10}
        }, B = function (x, j, d) {
            return [x, j, d]
        }, ee = function () {
            return {name: "moo cow", id: "moo"}
        }, pe = function () {
            return {name: "woof dog", id: "woof"}
        }, ce = function (x, j) {
            return [x, j]
        }, Ee = function () {
            return {breakpoint: "small", size: "x-large"}
        }, F = function () {
            return {breakpoint: "medium", size: "2x-large"}
        };
        let Y = (() => {
            class x {
                constructor() {
                    this.socialMediaAccounts = t.$, this.onetwo = "holy smokes, batman", this.spacing = g[3], this.colors = Object.assign({}, r.colors), this.slides = [{
                        title: '"hello" world',
                        randomHeight: 350 * Math.random() + 100
                    }, {title: '"moo" cow', randomHeight: 350 * Math.random() + 100}, {
                        title: '"woof" dog',
                        randomHeight: 350 * Math.random() + 100
                    }, {title: '"baah" sheep', randomHeight: 350 * Math.random() + 100}, {
                        title: '"meow" cat',
                        randomHeight: 350 * Math.random() + 100
                    }, {title: '"bleet" goat', randomHeight: 350 * Math.random() + 100}, {
                        title: '"howl" wolf',
                        randomHeight: 350 * Math.random() + 100
                    }, {title: '"screech" cockatoo', randomHeight: 350 * Math.random() + 100}]
                }

                ngOnInit() {
                    this.int = window.setInterval(() => {
                        const I = Math.random();
                        this.moo = `${I}`;
                        const V = Math.abs(Math.floor(I * g.length - 1));
                        this.spacing = g[V], this.testParagraph.nativeElement.text = `${I}`, this.testParagraph.nativeElement.bool = !this.testParagraph.nativeElement.bool
                    }, 2e3);
                    const d = this.video.nativeElement;
                    d.currentTime = 4.5, setTimeout(() => {
                        d.style.opacity = 1, d.play()
                    }, 2e3)
                }

                gotoPane(d) {
                    this.carousel.nativeElement.gotoSlide(d)
                }

                onCurrentPaneChange(d) {
                    console.log("pane change!!!", d.detail.currentActiveSlides)
                }

                onDropdownSelect(d) {
                    console.log("drop down is selected!!!", d)
                }

                onCheck(d) {
                    console.log("checked state change!!!", d)
                }

                onMoo(d) {
                    console.log("!!!!!!!!!!!! moooo", d)
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-demo-sheet"]],
                viewQuery: function (d, I) {
                    if (1 & d && (e.Gf(o, 7), e.Gf(b, 7), e.Gf(S, 7)), 2 & d) {
                        let V;
                        e.iGM(V = e.CRH()) && (I.video = V.first), e.iGM(V = e.CRH()) && (I.carousel = V.first), e.iGM(V = e.CRH()) && (I.testParagraph = V.first)
                    }
                },
                decls: 126,
                vars: 43,
                consts: [[2, "display", "flex", "flex-direction", "column", "align-items", "center", "padding", "30px 30px 100px", "height", "100%", "background", "#bbbbbb"], ["simpleTextKind", "large", 3, "simpleTextDisplay"], ["src", "/assets/videos/stars-opens.mp4", "muted", "", "playsinline", "", "preload", "auto", 1, "video"], ["video", ""], ["text", "moo cow"], ["testParagraph", ""], ["furColor", "red", "bodyColor", "gold", "gemColor", "yellowgreen"], ["icon", "marketplace_cart"], ["href", "https://google.com", "kind", "tag"], ["href", "https://google.com", "kind", "help"], ["href", "https://google.com", "kind", "small"], ["href", "https://google.com", "icon", "set_core", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "fillColor", "colors.white"], ["href", "https://google.com", "icon", "marketplace_cart", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "leftIconPosition", ""], ["href", "https://google.com", "icon", "set_core", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "verticalLayout", ""], ["text", "Special Button", "enableSounds", "", "icon", "set_core"], ["text", "Special alt Button", "enableSounds", "", "invertColoring", "", "leftIconPosition", "", "icon", "tribe_dragon"], ["top", "large", 3, "responsiveSize"], ["text", "This is a text link"], ["both", "x-large"], ["size", "large", "text", "large primary button"], ["text", "primary button", "enableSounds", "", "icon", "set_core"], ["text", "secondary button", "enableSounds", ""], ["text", "subtle button"], [2, "display", "block", "overflow", "auto", "padding", "30px 30px 100px", "height", "100%", "background", "#ccc"], ["progress", "50"], ["bottom", "5x-large", "top", "3x-large"], [2, "color", "black", 3, "click"], ["both", "large"], ["text", "GOTO pane 4", "size", "large", 3, "click"], ["spaceBetween", "20", "slidesPerView", "2.2", "data-carousel-kind", "multi slide carousel with an uneven number of slides per screen", 1, "carousel", 3, "onSlideChange"], ["carousel", ""], ["class", "carousel__slide", 3, "ngStyle", 4, "ngFor", "ngForOf"], ["spaceBetween", "0", "slidesPerView", "1", "data-carousel-kind", "multi slide carousel with responsive slidesPerView", 1, "carousel", 3, "responsiveBreakpoints", "onSlideChange"], ["bottom", "large"], ["spaceBetween", "10", "centeredSlides", "true", "slidesPerView", "3", "data-carousel-kind", "multi slide carousel with centered slides", 1, "carousel", 3, "onSlideChange"], ["spaceBetween", "30", "slidesPerView", "3", "data-carousel-kind", "simple multi slide carousel", 1, "carousel", 3, "onSlideChange"], ["spaceBetween", "0", "slidesPerView", "1", "data-carousel-kind", "single slide carousel", 1, "carousel", 3, "onSlideChange"], [1, "useJsVars"], ["bottom", "2x-large"], [3, "fillColor"], ["labelText", "moo cow", 3, "checked", "onCheck"], ["labelText", "large moo cow", "labelPlacement", "right", "size", "large", 3, "checked", "onCheck"], ["top", "small"], ["placeholderText", "select something", 3, "items", "onSelect"], ["top", "6x-large"], ["iconLigature", "social_telegram", 1, "customGradient"], ["top", "medium"], ["kind", "help", "fillColor", "colors.gunmetal.300"], ["both", "4x-large"], ["iconLigature", "social_telegram", "fillColor", "colors.gold.300", 2, "font-size", "100px"], ["iconLigature", "friends_helmet", "fillGradient", "gradients.god.magic", "fillGradientTarget", "top right", 2, "font-size", "100px"], ["fillColor", "colors.dark.700"], ["bottom", "3x-large"], [3, "disabled"], [3, "loading"], ["size", "large", "href", "https://google.com"], ["size", "large", "align", "left", "fillGradient", "gradients.god.nature", "fillGradientTarget", "bottom"], ["top", "x-large"], ["size", "large", "fillColor", "colors.light.100", 1, "bannerHeadings__largeHeading", 3, "responsiveBreakpoints"], ["bottom", "medium", 3, "top"], ["size", "small", "align", "center"], ["bottom", "6x-large", 3, "top"], ["size", "x-small", "align", "right"], ["align", "left", "kind", "tag"], ["align", "left", "kind", "tag", "text", "simple text can also be fed input text like so... (this text is 100% untouchable from the external global styles)"], ["align", "left", "kind", "help", "fillGradient", "gradients.apocyan.simple", 1, "customSimpleText"], ["top", "2x-large", "bottom", "medium"], ["kind", "large"], ["kind", "help", "align", "right"], [3, "accounts"], ["kind", "tag"], [1, "carousel__slide", 3, "ngStyle"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "div", 0), e._UZ(1, "gu-countdown-timer"), e._UZ(2, "gu-countdown-timer", 1), e._UZ(3, "video", 2, 3), e._UZ(5, "gu-paragraph-text", 4, 5), e._UZ(7, "gu-regular-crypto-kitty", 6), e.qZA(), e.TgZ(8, "div", 0), e.TgZ(9, "gu-plain-square-button", 7), e._uU(10, " plain square button "), e.qZA(), e.TgZ(11, "gu-simple-text-button", 8), e._uU(12, " simple text button "), e.qZA(), e.TgZ(13, "gu-simple-text-button", 9), e._uU(14, " simple text button "), e.qZA(), e.TgZ(15, "gu-simple-text-button", 10), e._uU(16, " simple text button "), e.qZA(), e.TgZ(17, "gu-plain-square-button", 11), e._uU(18, " plain square "), e.qZA(), e.TgZ(19, "gu-plain-square-button", 12), e._uU(20, " Cart "), e.qZA(), e.TgZ(21, "gu-plain-square-button", 13), e._uU(22, " plain square vertical "), e.qZA(), e._UZ(23, "gu-special-hex-button", 14), e._UZ(24, "gu-special-hex-button", 15), e.TgZ(25, "gu-vertical-space", 16), e.TgZ(26, "gu-paragraph-text"), e._uU(27, "Arcu bibendum at varius vel. Nec feugiat nisl pretium fusce id velit ut tortor. Vel eros donec ac odio. "), e._UZ(28, "gu-simple-text-button", 17), e.qZA(), e.qZA(), e.TgZ(29, "gu-vertical-space", 18), e._UZ(30, "gu-primary-hex-button", 19), e.qZA(), e._UZ(31, "gu-primary-hex-button", 20), e.TgZ(32, "gu-vertical-space", 18), e._UZ(33, "gu-secondary-hex-button", 21), e.qZA(), e._UZ(34, "gu-subtle-hex-button", 22), e.qZA(), e.TgZ(35, "div", 23), e._UZ(36, "gu-hex-progress-bar", 24), e.TgZ(37, "gu-vertical-space", 25), e.TgZ(38, "button", 26), e.NdJ("click", function () {
                        return I.gotoPane(1)
                    }), e._uU(39, "goto pane 2"), e.qZA(), e.TgZ(40, "gu-vertical-space", 27), e.TgZ(41, "gu-primary-hex-button", 28), e.NdJ("click", function () {
                        return I.gotoPane(3)
                    }), e.qZA(), e.qZA(), e.TgZ(42, "gu-carousel", 29, 30), e.NdJ("onSlideChange", function (h) {
                        return I.onCurrentPaneChange(h)
                    }), e.YNc(44, w, 2, 5, "div", 31), e.qZA(), e.TgZ(45, "gu-vertical-space", 27), e.TgZ(46, "gu-carousel", 32), e.NdJ("onSlideChange", function (h) {
                        return I.onCurrentPaneChange(h)
                    }), e.YNc(47, D, 2, 4, "div", 31), e.qZA(), e.qZA(), e.TgZ(48, "gu-vertical-space", 33), e.TgZ(49, "gu-carousel", 34), e.NdJ("onSlideChange", function (h) {
                        return I.onCurrentPaneChange(h)
                    }), e.YNc(50, _, 2, 4, "div", 31), e.qZA(), e.qZA(), e.TgZ(51, "gu-carousel", 35), e.NdJ("onSlideChange", function (h) {
                        return I.onCurrentPaneChange(h)
                    }), e.YNc(52, M, 2, 4, "div", 31), e.qZA(), e.TgZ(53, "gu-vertical-space", 27), e.TgZ(54, "gu-carousel", 36), e.NdJ("onSlideChange", function (h) {
                        return I.onCurrentPaneChange(h)
                    }), e.YNc(55, C, 2, 4, "div", 31), e.qZA(), e.qZA(), e.qZA(), e.TgZ(56, "gu-vertical-space", 33), e.TgZ(57, "div", 37), e._uU(58, " this text is styled thru plain old angular sass, using a color var from our new variables system "), e.qZA(), e.qZA(), e.TgZ(59, "gu-vertical-space", 38), e.TgZ(60, "gu-paragraph-text", 39), e._uU(61), e.qZA(), e.qZA(), e.TgZ(62, "gu-vertical-space", 33), e.TgZ(63, "gu-checkbox-input", 40), e.NdJ("onCheck", function (h) {
                        return I.onMoo(h)
                    }), e.qZA(), e.TgZ(64, "gu-checkbox-input", 41), e.NdJ("onCheck", function (h) {
                        return I.onCheck(h)
                    }),e.qZA(),e.qZA(),e.TgZ(65, "gu-vertical-space", 42),e.TgZ(66, "gu-dropdown", 43),e.NdJ("onSelect", function (h) {
                        return I.onDropdownSelect(h)
                    }),e.qZA(),e.qZA(),e.TgZ(67, "gu-vertical-space", 44),e._UZ(68, "gu-icon", 45),e.TgZ(69, "gu-vertical-space", 46),e.TgZ(70, "gu-simple-text", 47),e._uU(71),e.qZA(),e.qZA(),e.qZA(),e.TgZ(72, "gu-vertical-space", 48),e._UZ(73, "gu-icon", 49),e._UZ(74, "gu-icon", 50),e.TgZ(75, "gu-vertical-space", 46),e.TgZ(76, "gu-simple-text", 51),e._uU(77, " ^ this is an icon - with a gradient fill input, and this text has a color fill input "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(78, "gu-vertical-space", 52),e.TgZ(79, "gu-primary-hex-button", 53),e._uU(80, "disabled button"),e.qZA(),e.TgZ(81, "gu-primary-hex-button", 54),e._uU(82, "loading button"),e.qZA(),e.TgZ(83, "gu-vertical-space", 46),e.TgZ(84, "gu-primary-hex-button", 55),e._uU(85, " moo cow "),e.qZA(),e.qZA(),e.qZA(),e.TgZ(86, "gu-heading-text", 56),e.TgZ(87, "h1"),e._uU(88, 'this is a "large" left aligned heading'),e.qZA(),e.qZA(),e.TgZ(89, "gu-vertical-space", 57),e.TgZ(90, "gu-heading-text", 58),e._uU(91, " This heading has responsively set font-size "),e.qZA(),e.qZA(),e.TgZ(92, "gu-vertical-space", 59),e.TgZ(93, "gu-heading-text", 60),e.TgZ(94, "h3"),e._uU(95),e.qZA(),e.qZA(),e.qZA(),e.TgZ(96, "gu-vertical-space", 61),e.TgZ(97, "gu-heading-text", 62),e.TgZ(98, "h6"),e._uU(99, 'this is an "x-small" right aligned heading'),e.qZA(),e.qZA(),e.qZA(),e.TgZ(100, "gu-vertical-space", 33),e.TgZ(101, "gu-simple-text", 63),e._uU(102, ' this is the simple-text "tag" kind ... '),e.qZA(),e.qZA(),e._UZ(103, "gu-simple-text", 64),e.TgZ(104, "gu-simple-text", 65),e._uU(105, ' this is the simple-text "help" kind ... (note how simple-text displays as an inline element, not block) '),e.qZA(),e.TgZ(106, "gu-vertical-space", 66),e.TgZ(107, "gu-paragraph-text", 67),e._uU(108, ' this is "paragraph-text", kind: "large". note how it has line height, passes it\'s sizing down to "simple-text", and is '),e.TgZ(109, "em"),e._uU(110, "block level"),e.qZA(),e._uU(111, " - just like "),e.TgZ(112, "strong"),e._uU(113, "regular paragraphs!"),e.qZA(),e._UZ(114, "br"),e._uU(115),e.qZA(),e.qZA(),e.TgZ(116, "gu-vertical-space", 59),e.TgZ(117, "gu-paragraph-text", 68),e._uU(118, ' this is the "help" kind of paragraph-text '),e._UZ(119, "br"),e._uU(120, " Bibendum est ultricies integer quis auctor elit sed. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Malesuada pellentesque elit eget gravida cum sociis natoque penatibus et. Donec massa sapien faucibus et. Felis imperdiet proin fermentum leo vel orci porta non. Augue neque gravida in fermentum et sollicitudin ac orci. Ac tincidunt vitae semper quis. "),e.qZA(),e.qZA(),e._UZ(121, "gu-social-buttons-row", 69),e.TgZ(122, "gu-paragraph-text", 70),e._uU(123, ' this is the "tag" kind of paragraph-text '),e._UZ(124, "br"),e._uU(125, " Arcu bibendum at varius vel. Nec feugiat nisl pretium fusce id velit ut tortor. Vel eros donec ac odio. Ante metus dictum at tempor commodo ullamcorper a. Hendrerit gravida rutrum quisque non tellus orci ac auctor augue. Non curabitur gravida arcu ac. "),e.qZA(),e.qZA()), 2 & d && (e.xp6(2), e.Q6J("simpleTextDisplay", !0), e.xp6(23), e.Q6J("responsiveSize", e.VKq(24, E, e.DdM(23, P))), e.xp6(19), e.Q6J("ngForOf", I.slides), e.xp6(2), e.Q6J("responsiveBreakpoints", e.kEZ(29, B, e.DdM(26, s), e.DdM(27, y), e.DdM(28, k))), e.xp6(1), e.Q6J("ngForOf", I.slides), e.xp6(3), e.Q6J("ngForOf", I.slides), e.xp6(2), e.Q6J("ngForOf", I.slides), e.xp6(3), e.Q6J("ngForOf", I.slides), e.xp6(5), e.s9C("fillColor", I.colors.dark[500]), e.xp6(1), e.hij(" this text is styled using direct variable input from an angular scope variable: ", I.colors.dark[500], " (colors.dark[500]) "), e.xp6(2), e.Q6J("checked", !0), e.xp6(1), e.Q6J("checked", !1), e.xp6(2), e.Q6J("items", e.WLB(35, ce, e.DdM(33, ee), e.DdM(34, pe))), e.xp6(5), e.hij(" ^ this is an icon - with a custom scss gradient as text-fill ", I.onetwo, " (this text is colored as gunmetal[300]) "), e.xp6(8), e.Q6J("disabled", !0), e.xp6(2), e.s9C("loading", !0), e.xp6(9), e.Q6J("responsiveBreakpoints", e.WLB(40, ce, e.DdM(38, Ee), e.DdM(39, F))), e.xp6(2), e.s9C("top", I.spacing), e.xp6(3), e.hij('this is a "small" center aligned heading > spacing: ', I.spacing, ""), e.xp6(1), e.s9C("top", I.spacing), e.xp6(19), e.hij(" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut eu sem integer vitae justo. Amet porttitor ", I.moo, " eget dolor morbi non arcu risus quis varius. Est velit egestas dui id ornare arcu odio ut. Integer quis auctor elit sed vulputate mi sit. Dui ut ornare lectus sit amet est placerat. Cras sed felis eget velit aliquet sagittis. "), e.xp6(1), e.s9C("top", I.spacing), e.xp6(5), e.Q6J("accounts", I.socialMediaAccounts))
                },
                directives: [u.sg, u.PC],
                styles: ["[_nghost-%COMP%]{display:block}.useJsVars[_ngcontent-%COMP%]{color:#affaed}.customGradient[_ngcontent-%COMP%]{font-size:200px;background:linear-gradient(to bottom,#9DE764 0%,#5AC33F 50%,#4C772F 100%)}.customSimpleText[_ngcontent-%COMP%]{border:2px dotted gold;margin-left:8px;padding:16px}.carousel[_ngcontent-%COMP%]{box-shadow:inset 0 0 0 2px #0003}.carousel[_ngcontent-%COMP%]:before{content:attr(data-carousel-kind);position:absolute;z-index:1;bottom:0px;left:3px;color:#0000004d}.carousel__slide[_ngcontent-%COMP%]{background:yellowgreen;box-shadow:inset 0 0 0 3px gold}.carousel__slide[_ngcontent-%COMP%]:first-child{background:rebeccapurple}.carousel__slide[_ngcontent-%COMP%]:last-child{background:dodgerblue}.video[_ngcontent-%COMP%]{width:60%;margin:0 auto;opacity:0}"]
            }), x
        })(), ae = {numbers: {randomNumber: 0}, text: {randomText: "moo"}};
        setInterval(() => {
            ae = Object.assign(Object.assign({}, ae), {numbers: {randomNumber: Math.random()}})
        }, 400);
        var fe = n(73307), N = n(94057);
        const de = ["carousel"], _e = function (x) {
            return {"championButtons__button--active": x}
        };

        function Ae(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "div", 14), e.NdJ("click", function () {
                    const h = e.CHM(d).index;
                    return e.oxw().gotoChampionSlide(h)
                }), e.TgZ(1, "picture"), e._UZ(2, "source", 15), e._UZ(3, "source", 16), e._UZ(4, "img", 17), e.qZA(), e.qZA()
            }
            if (2 & x) {
                const d = j.$implicit, I = j.index, V = e.oxw();
                e.Q6J("ngClass", e.VKq(13, _e, V.activeChampionIndex === I)), e.xp6(1), e.Gre("championButtons__button__picture championButtons__button__picture--", d.name, ""), e.xp6(1), e.FAE("srcset", "\n          //images.godsunchained.com/art2/250/", d.protoId, ".webp 250w,\n          //images.godsunchained.com/art2/375/", d.protoId, ".webp 375w,\n          //images.godsunchained.com/art2/500/", d.protoId, ".webp 500w,\n          //images.godsunchained.com/art2/720/", d.protoId, ".webp 720w\n        ", e.LSH), e.xp6(1), e.FAE("srcset", "\n          //images.godsunchained.com/art2/250/", d.protoId, ".jpg 250w,\n          //images.godsunchained.com/art2/375/", d.protoId, ".jpg 375w,\n          //images.godsunchained.com/art2/500/", d.protoId, ".jpg 500w,\n          //images.godsunchained.com/art2/720/", d.protoId, ".jpg 720w\n        ", e.LSH), e.xp6(1), e.MGl("src", "//images.godsunchained.com/art2/500/", d.protoId, ".jpg", e.LSH)
            }
        }

        function Ze(x, j) {
            if (1 & x && (e.TgZ(0, "div", 18), e.TgZ(1, "picture", 19), e._UZ(2, "source", 20), e._UZ(3, "source", 21), e._UZ(4, "img", 22), e.qZA(), e.TgZ(5, "gu-vertical-space", 23), e.TgZ(6, "gu-heading-text", 24), e._uU(7), e.qZA(), e.qZA(), e.TgZ(8, "gu-paragraph-text", 25), e._uU(9), e.qZA(), e.TgZ(10, "gu-vertical-space", 26), e.TgZ(11, "gu-simple-text-button", 27), e._uU(12, " Read more "), e.qZA(), e.qZA(), e.TgZ(13, "gu-paragraph-text", 28), e._uU(14), e.qZA(), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.xp6(2), e.bRH("srcset", "\n            //images.godsunchained.com/art2/250/", d.protoId, ".webp 250w,\n            //images.godsunchained.com/art2/375/", d.protoId, ".webp 375w,\n            //images.godsunchained.com/art2/500/", d.protoId, ".webp 500w,\n            //images.godsunchained.com/art2/720/", d.protoId, ".webp 720w,\n            //images.godsunchained.com/art2/1024/", d.protoId, ".webp 1024w,\n            //images.godsunchained.com/art2/1280/", d.protoId, ".webp 1280w,\n            //images.godsunchained.com/art2/1440/", d.protoId, ".webp 1440w\n          ", e.LSH), e.xp6(1), e.bRH("srcset", "\n            //images.godsunchained.com/art2/250/", d.protoId, ".jpg 250w,\n            //images.godsunchained.com/art2/375/", d.protoId, ".jpg 375w,\n            //images.godsunchained.com/art2/500/", d.protoId, ".jpg 500w,\n            //images.godsunchained.com/art2/720/", d.protoId, ".jpg 720w,\n            //images.godsunchained.com/art2/1024/", d.protoId, ".jpg 1024w,\n            //images.godsunchained.com/art2/1280/", d.protoId, ".jpg 1280w,\n            //images.godsunchained.com/art2/1440/", d.protoId, ".jpg 1440w\n          ", e.LSH), e.xp6(1), e.MGl("src", "//images.godsunchained.com/art2/720/", d.protoId, ".jpg", e.LSH), e.xp6(3), e.hij(" ", d.title, " "), e.xp6(2), e.hij(" ", d.description, " "), e.xp6(2), e.s9C("href", d.link), e.xp6(3), e.hij(" ", d.byline, " ")
            }
        }

        let W = (() => {
            class x {
                constructor() {
                    this.activeChampionIndex = 0, this.champions = N.zy.Y, this.routes = N.CF.J
                }

                ngOnInit() {
                }

                gotoChampionSlide(d) {
                    this.carousel.nativeElement.gotoSlide(d)
                }

                onChampionCarouselUpdate(d) {
                    this.activeChampionIndex = d.detail.currentActiveSlides[0]
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-season1-champion-section"]],
                viewQuery: function (d, I) {
                    if (1 & d && e.Gf(de, 7), 2 & d) {
                        let V;
                        e.iGM(V = e.CRH()) && (I.carousel = V.first)
                    }
                },
                decls: 18,
                vars: 4,
                consts: [["size", "large", "fillGradient", "gradients.gold.simple", "align", "center", 1, "heading"], [1, "championButtons"], ["class", "championButtons__button", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "championCarouselWrapper"], [1, "championCarousel", 3, "onSlideChange"], ["carousel", ""], ["class", "championCarousel__championSlide", 4, "ngFor", "ngForOf"], [1, "sideBarImage", "sideBarImage--left"], ["srcset", "/assets/images/expansion-1/carousel-sidebar.webp", "type", "image/webp"], ["srcset", "/assets/images/expansion-1/carousel-sidebar.png", "type", "image/png"], ["src", "/assets/images/expansion-1/carousel-sidebar.png", "alt", "", 1, "sideBarImage__img"], [1, "sideBarImage", "sideBarImage--right"], ["both", "x-large", 1, "ctaButtonRow"], ["text", "Buy Packs", "size", "large", 3, "disabled", "href"], [1, "championButtons__button", 3, "ngClass", "click"], ["sizes", "20vw", "type", "image/webp", 3, "srcset"], ["sizes", "20vw", "type", "image/jpg", 3, "srcset"], ["alt", "", 1, "championButtons__button__picture__img", 3, "src"], [1, "championCarousel__championSlide"], [1, "championCarousel__championSlide__imgWrapper"], ["sizes", "75vw", "type", "image/webp", 3, "srcset"], ["sizes", "75vw", "type", "image/jpg", 3, "srcset"], ["alt", "", 1, "championCarousel__championSlide__imgWrapper__img", 3, "src"], ["both", "x-large"], ["size", "x-small", "fillColor", "colors.light.100", "align", "center"], ["fillColor", "colors.light.100", "align", "center", "kind", "large", 1, "championCarousel__championSlide__description"], ["top", "large", "bottom", "3x-large", 1, "readMoreLink"], ["kind", "tag", "target", "_blank", "fillColor", "colors.apocyan.300", "align", "center", 3, "href"], ["align", "center", "kind", "large"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "gu-heading-text", 0), e._uU(1, " Meet your champions\n"), e.qZA(), e.TgZ(2, "div", 1), e.YNc(3, Ae, 5, 15, "div", 2), e.qZA(), e.TgZ(4, "div", 3), e.TgZ(5, "gu-carousel", 4, 5), e.NdJ("onSlideChange", function (h) {
                        return I.onChampionCarouselUpdate(h)
                    }), e.YNc(7, Ze, 15, 19, "div", 6), e.qZA(), e.TgZ(8, "picture", 7), e._UZ(9, "source", 8), e._UZ(10, "source", 9), e._UZ(11, "img", 10), e.qZA(), e.TgZ(12, "picture", 11), e._UZ(13, "source", 8), e._UZ(14, "source", 9), e._UZ(15, "img", 10), e.qZA(), e.qZA(), e.TgZ(16, "gu-vertical-space", 12), e._UZ(17, "gu-primary-hex-button", 13), e.qZA()), 2 & d && (e.xp6(3), e.Q6J("ngForOf", I.champions), e.xp6(4), e.Q6J("ngForOf", I.champions), e.xp6(10), e.Q6J("disabled", !0)("href", I.routes.buyPacks.path))
                },
                directives: [u.sg, u.mk],
                styles: ['@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{position:relative;padding:80px 0;display:flex;flex-direction:column;background:url(/assets/images/expansion-1/Lysander_LC_BG.jpg);background-size:cover;background-position:center}[_nghost-%COMP%]:before{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background:linear-gradient(to bottom,#0A0A0A 0%,rgba(10,10,10,.8) 50%)}[_nghost-%COMP%]:after{content:"";position:absolute;left:0;right:0;bottom:0;height:12px;background:radial-gradient(47.52% 50% at 50% 50%,#C6A052 0%,rgba(198,160,82,0) 100%)}.heading[_ngcontent-%COMP%]{position:relative;padding:0 20px}.championButtons[_ngcontent-%COMP%]{margin:20px auto 48px;padding:0 28px;display:grid;grid-template-columns:repeat(3,1fr);grid-column-gap:28px;grid-row-gap:28px;max-width:"768px";width:100%}@media screen and (min-width: 512px){.championButtons[_ngcontent-%COMP%]{grid-template-columns:repeat(6,1fr)}}.championButtons__button[_ngcontent-%COMP%]{border-radius:50%;width:100%;padding-bottom:100%;transition:box-shadow .25s ease-in-out;position:relative;overflow:hidden;cursor:pointer}.championButtons__button__picture[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}.championButtons__button__picture__img[_ngcontent-%COMP%]{height:300%;width:300%;object-fit:cover;position:absolute;top:0;left:50%;transform:translate(-50%,-10%)}.championButtons__button__picture--lysander[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-50%,-9%)}.championButtons__button__picture--neferu[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-45%,-14%)}.championButtons__button__picture--valka[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-52%,-6.5%)}.championButtons__button__picture--pallas[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-54%,-7%)}.championButtons__button__picture--selena[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-50%,-8%)}.championButtons__button--active[_ngcontent-%COMP%]{box-shadow:0 0 20px #f7ea9b}.championCarouselWrapper[_ngcontent-%COMP%]{margin:0 auto;width:85%;max-width:1000px;position:relative}@media screen and (min-width: 768px){.championCarouselWrapper[_ngcontent-%COMP%]{width:65%}}.sideBarImage[_ngcontent-%COMP%]{display:none;position:absolute;top:-3%;left:-6.25%;width:12.5%;user-select:none;pointer-events:none}.sideBarImage--right[_ngcontent-%COMP%]{left:auto;right:-6.25%;transform:rotateY(180deg)}.sideBarImage__img[_ngcontent-%COMP%]{display:block;width:100%}.championCarousel[_ngcontent-%COMP%]{width:100%;margin:auto;overflow:hidden}.championCarousel__championSlide[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;position:relative}.championCarousel__championSlide__imgWrapper[_ngcontent-%COMP%]{width:100%;padding-bottom:50%;position:relative;overflow:hidden}@media screen and (min-width: 512px){.sideBarImage[_ngcontent-%COMP%]{display:block}.championCarousel[_ngcontent-%COMP%]{border-radius:4vw 4vw 0 0}.championCarousel__championSlide__imgWrapper[_ngcontent-%COMP%]{border-radius:0 0 4vw 4vw}}.championCarousel__championSlide__imgWrapper__img[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;width:100%;object-fit:cover;object-position:center 20%}.championCarousel__championSlide__description[_ngcontent-%COMP%]{width:75%;margin:0 auto}.ctaButtonRow[_ngcontent-%COMP%]{display:flex;justify-content:center}.readMoreLink[_ngcontent-%COMP%]{text-align:center;display:flex;justify-content:center}.readMoreLink__text[_ngcontent-%COMP%]{padding-bottom:4px;border-bottom:2px solid #8BE1E0}.bottomContent[_ngcontent-%COMP%]{position:relative}']
            }), x
        })();
        var he = n(72986);
        n(99454);
        const te = ["emailInput"], ge = function () {
            return ["email"]
        };
        let ue = (() => {
            class x {
                constructor(d) {
                    this.authHostService = d, this.emailValue = {value: "", valid: !1}, this.disableSubmitButton = !1
                }

                submitEmail() {
                    if (!this.emailValue.valid) return !1;
                    this.authHostService.post(`/subscribe/${this.emailValue.value}`).pipe((0, he.q)(1)).subscribe({
                        next: d => {
                            "success" === d ? (this.inputElement.nativeElement.setCurrentStatus({
                                status: "success",
                                helpText: "Success! You\u2019re all signed up."
                            }), this.disableSubmitButton = !0) : this.handleError()
                        }, error: () => this.handleError()
                    })
                }

                handleError() {
                    this.inputElement.nativeElement.setCurrentStatus({
                        status: "error",
                        helpText: "Encountered an error. Please try again"
                    })
                }

                onValueChange(d) {
                    this.emailValue = {value: d.detail.newValue, valid: d.detail.valid}
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(fe.LI))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-newsletter-signup-form"]],
                viewQuery: function (d, I) {
                    if (1 & d && e.Gf(te, 5), 2 & d) {
                        let V;
                        e.iGM(V = e.CRH()) && (I.inputElement = V.first)
                    }
                },
                inputs: {emailValue: "emailValue", disableSubmitButton: "disableSubmitButton"},
                decls: 7,
                vars: 4,
                consts: [["fillColor", "colors.light[100]", "align", "center", "size", "x-small"], [3, "submit"], ["errorHelpText", "Please enter a valid email", "placeholderText", "Enter your email here", 1, "textInput", 3, "validateToPattern", "onValueChange"], ["emailInput", ""], ["size", "large", 3, "disabled", "horizontalStretch", "click"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "gu-heading-text", 0), e._uU(1, " signup for our newsletter!\n"), e.qZA(), e.TgZ(2, "gu-form-context", 1), e.NdJ("submit", function () {
                        return I.submitEmail()
                    }), e.TgZ(3, "gu-text-input", 2, 3), e.NdJ("onValueChange", function (h) {
                        return I.onValueChange(h)
                    }), e.qZA(), e.TgZ(5, "gu-primary-hex-button", 4), e.NdJ("click", function () {
                        return I.submitEmail()
                    }), e._uU(6, " submit "), e.qZA(), e.qZA()), 2 & d && (e.xp6(3), e.Q6J("validateToPattern", e.DdM(3, ge)), e.xp6(2), e.Q6J("disabled", I.disableSubmitButton || !I.emailValue.valid)("horizontalStretch", !1))
                },
                styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;box-sizing:border-box}", ".textInput[_ngcontent-%COMP%] {\n      margin: 16px 0 24px;\n    }\n\n    .textInput[_ngcontent-%COMP%]   .helpText[_ngcontent-%COMP%], .textInput[_ngcontent-%COMP%]   .inputArea__input[_ngcontent-%COMP%], .textInput[_ngcontent-%COMP%]   .inputArea__input[_ngcontent-%COMP%]::placeholder {\n      text-align: center;\n    }\n\n    gu-primary-hex-button[_ngcontent-%COMP%] {\n      min-width: 170px;\n    }"]
            }), x
        })(), we = (() => {
            class x {
                constructor(d, I) {
                    this.authService = d, this.authHostService = I
                }

                get isLoggedIn() {
                    return this.authService.isLoggedIn()
                }

                ngOnInit() {
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(fe.mI), e.Y36(fe.LI))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-lore-route"]],
                decls: 33,
                vars: 0,
                consts: [[1, "headerStrip"], ["top", "4x-large"], ["fillColor", "colors.light.100", "align", "center", "size", "x-large"], ["bottom", "4x-large", "top", "large", 1, "headerStrip__bodyCopy"], ["fillColor", "colors.light.100", "align", "center", "kind", "large"], [1, "bandedStrip"], ["both", "x-large"], ["fillGradient", "gradients.gold.simple", "align", "center", "size", "small"], ["top", "medium"], ["kind", "help", "align", "center"], ["both", "medium"], ["src", "/assets/images/weird-spacer-thing.svg", 1, "weirdSpacingImage"], ["kind", "tag", "align", "center"], ["top", "4x-large", "bottom", "2x-large", 1, "loreIntroText"], ["kind", "large"], ["top", "large"], ["href", "https://blog.godsunchained.com/2020/01/24/chapter-1-citadel-of-the-gods/", 1, "readMoreLink"], ["kind", "tag", "fillColor", "colors.apocyan.300", "align", "center", 1, "readMoreLink__text"], ["top", "6x-large"], ["size", "x-small", "align", "center", 1, "mysteryHeading"], ["top", "2x-large", 1, "ctaButtonRow"], ["text", "Visit blog", "href", "https://blog.godsunchained.com/"], ["both", "6x-large"], [1, "newsLetterSignUp"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "header", 0), e.TgZ(1, "gu-vertical-space", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3, " LORE "), e.qZA(), e.qZA(), e.TgZ(4, "gu-vertical-space", 3), e.TgZ(5, "gu-paragraph-text", 4), e._uU(6, " Come, mortal! Settle in and be regaled by tales that traverse the Nine Realms, recount the deeds of the champions of Eucos, and whisper of the gods themselves. "), e.qZA(), e.qZA(), e.qZA(), e.TgZ(7, "div", 5), e.TgZ(8, "gu-vertical-space", 6), e.TgZ(9, "gu-heading-text", 7), e._uU(10, " Citadel of the gods "), e.qZA(), e.TgZ(11, "gu-vertical-space", 8), e.TgZ(12, "gu-paragraph-text", 9), e._uU(13, " Welcome to the trial "), e.qZA(), e.qZA(), e.TgZ(14, "gu-vertical-space", 10), e._UZ(15, "img", 11), e.qZA(), e.TgZ(16, "gu-paragraph-text", 12), e._uU(17, " by kelly digges "), e.qZA(), e.qZA(), e.qZA(), e.TgZ(18, "gu-vertical-space", 13), e.TgZ(19, "gu-paragraph-text", 14), e._uU(20, " You've seen the statues of the gods in temples, of course. Incorruptible Thaeriel, Vengeful Auros, Gentle Aeona. To mortal worshipers, the statues are the gods: terrible and beautiful. But the reality is they are the pale shadow of a blazing truth. This is the story of one fateful meeting, and a divine contest that would alter the course of the Nine Relams for aeons to come. "), e.qZA(), e.TgZ(21, "gu-vertical-space", 15), e.TgZ(22, "a", 16), e.TgZ(23, "gu-simple-text", 17), e._uU(24, " Read more "), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e._UZ(25, "cerberus-season1-champion-section"), e.TgZ(26, "gu-vertical-space", 18), e.TgZ(27, "gu-heading-text", 19), e._uU(28, " FOR MORE GODS UNCHAINED CONTENT & UPDATES "), e.qZA(), e.TgZ(29, "gu-vertical-space", 20), e._UZ(30, "gu-primary-hex-button", 21), e.qZA(), e.qZA(), e.TgZ(31, "gu-vertical-space", 22), e._UZ(32, "cerberus-newsletter-signup-form", 23), e.qZA())
                },
                directives: [W, ue],
                styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{display:block}.headerStrip[_ngcontent-%COMP%]{background:url(/assets/images/colour-palace-background2.jpg);background-size:cover;background-position:center;display:flex;flex-direction:column}.headerStrip__bodyCopy[_ngcontent-%COMP%]{max-width:800px;width:80%;margin-left:auto;margin-right:auto}.bandedStrip[_ngcontent-%COMP%]{background:#0F1B27;display:flex;flex-direction:column}.weirdSpacingImage[_ngcontent-%COMP%]{display:block;width:148px;margin-left:auto;margin-right:auto}.loreIntroText[_ngcontent-%COMP%]{width:80%;max-width:800px;margin-left:auto;margin-right:auto}.readMoreLink[_ngcontent-%COMP%]{display:inline-flex;justify-content:flex-start}.readMoreLink__text[_ngcontent-%COMP%]{padding-bottom:4px;border-bottom:2px solid #8BE1E0}.ctaButtonRow[_ngcontent-%COMP%]{display:flex;justify-content:center}.mysteryHeading[_ngcontent-%COMP%]{max-width:500px;padding:0 20px;margin-left:auto;margin-right:auto}.signupForm[_ngcontent-%COMP%]{width:85%;max-width:450px;display:flex;flex-direction:column;margin-left:auto;margin-right:auto}.signupForm__emailInput[_ngcontent-%COMP%]{background:#0F1B27;color:#7192b0;border:1px solid #527493;text-align:center;padding:12px 20px;width:100%}.signupForm__emailInput[_ngcontent-%COMP%]::placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.signupForm__emailInput[_ngcontent-%COMP%]:-ms-input-placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.signupForm__emailInput[_ngcontent-%COMP%]:-moz-placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.newsLetterSignUp[_ngcontent-%COMP%]{max-width:530px;width:85%;margin-left:auto;margin-right:auto}"]
            }), x
        })();
        var xe = n(61377), He = n(28510), A = n(51395), ne = n(8929), q = n(7625), $e = n(61709), at = n(24850),
            je = n(4390), qe = n(11735);
        let Ke = (() => {
            class x {
                constructor(d, I, V) {
                    this.environment = d, this.router = I, this.modalService = V
                }

                ngOnInit() {
                }

                onBuyPacks() {
                    this.closeModal(), "website" === this.environment.clientType ? this.router.navigate([N.CF.J.buyPacks.path]) : window.open(N.gv.routeContent(this.environment).buyPacks.url)
                }

                closeModal() {
                    this.modalService.dismissAll()
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(fe.Ho), e.Y36(qe.F0), e.Y36(He.Qz))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-temple-chest-opened-modal"]],
                inputs: {transactionUrl: "transactionUrl"},
                decls: 16,
                vars: 1,
                consts: [["bottom", "2x-large"], ["size", "small", "fillGradient", "gradients.gold.simple"], ["fillColor", "colors.light.100", "align", "center"], ["both", "2x-large"], ["kind", "tag", "target", "_blank", "fillColor", "colors.apocyan.300", 3, "href"], ["top", "2x-large"], ["size", "large", 3, "click"], ["iconLigature", "close_x", "fillColor", "colors.apocyan.300", 1, "xButton", 3, "click"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "gu-vertical-space", 0), e.TgZ(1, "gu-heading-text", 1), e._uU(2, " Chest opened! "), e.qZA(), e.qZA(), e.TgZ(3, "gu-paragraph-text", 2), e._uU(4, " Opening a chest grants you 5 packs of the corresponding quality. Once you open a chest, the packs have to be created on the blockchain, and sent to you. "), e.TgZ(5, "strong"), e._uU(6, "This can take a few minutes to complete."), e.qZA(), e.qZA(), e.TgZ(7, "gu-vertical-space", 3), e.TgZ(8, "gu-simple-text-button", 4), e._uU(9, " you can check the status of your transaction here "), e.qZA(), e.qZA(), e.TgZ(10, "gu-paragraph-text", 2), e._uU(11, " When the transaction is complete, your new packs will show up in the temple.\n"), e.qZA(), e.TgZ(12, "gu-vertical-space", 5), e.TgZ(13, "gu-primary-hex-button", 6), e.NdJ("click", function () {
                        return I.onBuyPacks()
                    }), e._uU(14, " BUY "), e.qZA(), e.qZA(), e.TgZ(15, "gu-icon", 7), e.NdJ("click", function () {
                        return I.closeModal()
                    }), e.qZA()), 2 & d && (e.xp6(8), e.s9C("href", I.transactionUrl))
                },
                styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;background:#0F1B27;width:100%;min-width:60vh;max-width:75vw;min-height:40vh;padding:40px;text-align:center;position:relative;box-shadow:inset 0 0 0 2px #3d5a7480}.xButton[_ngcontent-%COMP%]{position:absolute;top:12px;right:12px;font-size:28px;cursor:pointer}.xButton[_ngcontent-%COMP%]:hover{color:#f6f6f6}"]
            }), x
        })();
        var Le = n(39029), Ue = n(69039), Ge = n(5284), Oe = n(84876), Fe = n(32830), Ye = n(98539), nt = n(97223),
            dt = n(19444);
        const es = "FLIP_A_CARD", Pe = "TOGGLE_OPEN_PACK_VIDEO_VISIBILITY", At = "TOGGLE_OPEN_PACK_CARDS",
            ie = "SET_OPEN_PACK_VIDEO_ID", Se = "RESET_TEMPLE", Ne = "SET_CURRENT_UNOPENED_PACKS",
            ut = "TOGGLE_PACK_VISIBILITY", Qe = "TOGGLE_RAFFLE_TICKETS", H = "SET_CURRENT_OPEN_CHEST",
            K = "SET_OPEN_CHEST_VIDEO_ID", a = "TOGGLE_OPEN_CHEST_VIDEO_FINISHED", m = "PARTIAL_RESET_TEMPLE",
            U = "TOGGLE_OPEN_PACK_VIDEO_LOADING", se = "TOGGLE_OPEN_PACK_VIDEO_PLAYING",
            Ce = "TOGGLE_OPEN_CHEST_VIDEO_PLAYING", gt = x => ({type: Ne, payload: x}),
            ns = x => ({type: K, payload: x}), Dt = x => ({type: a, payload: x}), Ps = x => ({type: U, payload: x}),
            ws = x => ({type: Ce, payload: x}), Wt = x => ({type: se, payload: x}), os = {
                flippedCards: {},
                openPackVideoId: "",
                openChestVideoId: "",
                openChestVideoComplete: !1,
                openChestVideoPlaying: !1,
                openPackVideoVisible: !1,
                openPackVideoLoading: !0,
                openPackVideoPlaying: !1,
                firstPackCardsVisible: !1,
                packImageVisible: !1,
                currentUnOpenedPacks: [],
                currentOpenPack: {},
                currentOpenChest: {},
                raffleTicketsDisplayVisible: !1
            }, ht = (0, nt.MT)((x = os, {type: j, payload: d}) => {
                switch (j) {
                    case ie:
                        return Object.assign(Object.assign({}, x), {openPackVideoId: d});
                    case At:
                        return Object.assign(Object.assign({}, x), {firstPackCardsVisible: "boolean" == typeof d ? d : !x.firstPackCardsVisible});
                    case Pe:
                        return Object.assign(Object.assign({}, x), {openPackVideoVisible: "boolean" == typeof d ? d : !x.openPackVideoVisible});
                    case es:
                        return Object.assign(Object.assign({}, x), {flippedCards: Object.assign(Object.assign({}, x.flippedCards), {[d]: !x.flippedCards[d]})});
                    case ut:
                        return Object.assign(Object.assign({}, x), {packImageVisible: "boolean" == typeof d ? d : !x.packImageVisible});
                    case Ne:
                        return Object.assign(Object.assign({}, x), {
                            currentUnOpenedPacks: d,
                            currentOpenPack: Object.assign(Object.assign({}, d[0]), {id: (0, dt.v4)()})
                        });
                    case Qe:
                        return Object.assign(Object.assign({}, x), {raffleTicketsDisplayVisible: !x.raffleTicketsDisplayVisible});
                    case H:
                        return Object.assign(Object.assign({}, x), {currentOpenChest: d});
                    case K:
                        return Object.assign(Object.assign({}, x), {openChestVideoId: d, openChestVideoComplete: !1});
                    case a:
                        return Object.assign(Object.assign({}, x), {openChestVideoComplete: "boolean" == typeof d ? d : !x.openChestVideoComplete});
                    case Ce:
                        return Object.assign(Object.assign({}, x), {openChestVideoPlaying: "boolean" == typeof d ? d : !x.openChestVideoPlaying});
                    case U:
                        return Object.assign(Object.assign({}, x), {openPackVideoLoading: "boolean" == typeof d ? d : !x.openPackVideoLoading});
                    case se:
                        return Object.assign(Object.assign({}, x), {openPackVideoPlaying: "boolean" == typeof d ? d : !x.openPackVideoPlaying});
                    case m:
                        return Object.assign(Object.assign({}, os), {packImageVisible: !0});
                    case Se:
                        return Object.assign({}, os);
                    default:
                        return x
                }
            }, os);
        var Kt = n(80102), me = n(26532), kt = n(61462);
        const Ys = Fe.iv`
  ${(0, me.asCssProp)((0, me.setBoxSizing)())}

  :host {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    ${(0, me.asCssProp)((0, kt.userSelect)("none"))};
  }

  :host(.visible) {
    ${(0, me.asCssProp)((0, kt.userSelect)("auto"))};
  }

  gu-controllable-vimeo-embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    ${(0, me.asCssProp)(r.uifx.userSelect("none"))};
  }

  @keyframes fadeAndSlideUp {
    0% {
      opacity: 0;
      transform: translateY(5%);
    }
    100% {
      opacity: 1;
      transform: translateY(0%);
    }
  }

  .chestOpenVideo {
    background: linear-gradient(
      to bottom,
      ${(0, me.asCssProp)(r.colors.gunmetal[500])} 0%,
      ${(0, me.asCssProp)(r.colors.gunmetal[700])} 100%
    );
    animation: fadeAndSlideUp 0.5s ease-in-out;
    ${(0, me.asCssProp)(r.uifx.userSelect("auto"))};
    z-index: 2;
  }

  .chestOpenVideo--aboveAllLayers {
    z-index: 3;
  }

  .unOpenedChestsListing {
    position: absolute;
    top: calc(var(--ch) * 5);
    right: calc(var(--ch) * 5);
    display: flex;
    flex-direction: column;
    z-index: 2;
  }

  .unOpenedChestsListing__chest {
    position: relative;
    padding: 0;
    padding-right: calc(var(--cw) * 6);
    padding-left: calc(var(--cw) * 1);
    margin-bottom: calc(var(--ch) * 5);
    display: flex;
    align-items: center;
    justify-content: flex-start;
    background: ${(0, me.asCssProp)(r.colors.dark[900])};
    cursor: pointer;
    opacity: 0;
    border: 1px solid ${(0, me.asCssProp)(r.colors.dark[500])};
    ${(0, me.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .unOpenedChestsListing__chest:active {
    border: 1px solid ${(0, me.asCssProp)(r.colors.light[100])} !important;
    background: ${(0, me.asCssProp)(r.colors.light[100])} !important;
  }

  .unOpenedChestsListing__chest:active .unOpenedChestsListing__chest__openNowText {
    ${(0, me.asCssProp)(r.gradients.textFill(r.colors.dark[900]))};
  }

  .unOpenedChestsListing__chest:active .unOpenedChestsListing__chest__count {
    color: ${(0, me.asCssProp)(r.colors.dark[900])};
    border-color: ${(0, me.asCssProp)(r.colors.dark[900])};
  }

  .unOpenedChestsListing__chest:hover {
    border: 1px solid ${(0, me.asCssProp)(r.colors.gunmetal[700])};
    background: ${(0, me.asCssProp)(r.colors.gunmetal[700])};
  }

  .unOpenedChestsListing__chest:nth-child(1) {
    transition-delay: ${0}ms;
  }
  .unOpenedChestsListing__chest:nth-child(2) {
    transition-delay: ${200}ms;
  }
  .unOpenedChestsListing__chest:nth-child(3) {
    transition-delay: ${400}ms;
  }
  .unOpenedChestsListing__chest:nth-child(4) {
    transition-delay: ${600}ms;
  }

  .unOpenedChestsListing--visible .unOpenedChestsListing__chest {
    opacity: 1;
  }

  .unOpenedChestsListing__chest__picture {
    display: block;
    width: calc(var(--cw) * 7.5);
    height: calc(var(--cw) * 7.5 * 0.9183);
    /* chest image aspect ratio: 91.83%; */
    position: absolute;
    right: calc(var(--cw) * -1);
    top: 50%;
    transform: scaleX(-1) translateY(-50%);
  }

  .unOpenedChestsListing__chest__picture__img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .unOpenedChestsListing__chest__openNowText {
    padding: calc(var(--ch) * 2) 0;
  }

  .unOpenedChestsListing__chest__count {
    margin: 0 calc(var(--cw) * 1);
    padding: calc(var(--ch) * 0.6) calc(var(--cw) * 0.6);
    border: 1px solid ${(0, me.asCssProp)(r.colors.gold[500])};
  }

  .chestsCta {
    position: absolute;
    left: 8%;
    bottom: 7%;
    min-width: ${(0, me.asCssProp)((0, Kt.gridUnits)(50))};
    opacity: 0;
    ${(0, me.asCssProp)(r.uifx.userSelect("none"))};
    ${(0, me.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .chestsCta--visible {
    ${(0, me.asCssProp)(r.uifx.userSelect("auto"))};
    opacity: 1;
    z-index: 2;
  }
`;
        customElements.define("gu-temple-chest-layer", (0, Le.x1)({
            renderer: function ({unOpenedChests: x = [], volume: j}) {
                const d = (0, Oe.sO)(null), I = (0, Le.I0)(ht), {
                    currentOpenChest: V,
                    openChestVideoId: h,
                    openChestVideoPlaying: L,
                    openChestVideoComplete: l,
                    openPackVideoVisible: O
                } = (0, Le.v9)({
                    store: ht,
                    selector: X => ({
                        openChestVideoPlaying: X.openChestVideoPlaying,
                        openPackVideoVisible: X.openPackVideoVisible,
                        currentOpenChest: X.currentOpenChest,
                        openChestVideoId: X.openChestVideoId,
                        openChestVideoComplete: X.openChestVideoComplete
                    })
                });
                (0, Oe.d4)(() => {
                    this.isIos = Ge.I5.isIos(), V.set && fetch(`https://video.godsunchained.com?search=chest-open-videos%20${V.set}--neutral--${V.rarity}`).then(be => be.json()).then(be => I(ns(be)))
                }, [V]), (0, Oe.d4)(() => {
                    O ? this.classList.remove("visible") : this.classList.add("visible")
                }, [O]);
                return Fe.dy`
    ${h ? Fe.dy`
          <gu-controllable-vimeo-embed
            class=${(0, Ye.$)({chestOpenVideo: !0, "chestOpenVideo--aboveAllLayers": L})}
            autoPlay
            videoId=${h}
            pauseOnEndFrame
            @onVideoEnd=${() => {
                    I(Dt(!0)), I(ws(!1)), this.dispatchEvent(new CustomEvent("onChestOpened", {
                        detail: Object.assign({}, V),
                        bubbles: !0,
                        composed: !0
                    }))
                }}
            ?domRef=${(0, Ue.Q)(d)}
            ?muted=${this.isIos}
            .volume=${j}
          ></gu-controllable-vimeo-embed>
        ` : null}
    ${x.length ? Fe.dy`
          <div
            class=${(0, Ye.$)({unOpenedChestsListing: !0, "unOpenedChestsListing--visible": !O})}
          >
            ${x.reduce((X, be) => {
                    let Ie;
                    return X.find((it, pt) => {
                        const ze = be.set === it.set && be.rarity === it.rarity;
                        return ze && (Ie = pt), ze
                    }) ? X[Ie].quantityCount += 1 : X.push(Object.assign(Object.assign({}, be), {quantityCount: 1})), X
                }, []).map(X => {
                    const be = `${X.set}--neutral--${X.rarity}`;
                    return Fe.dy`
                  <div class="unOpenedChestsListing__chest" @click=${() => (X => {
                        I(ws(!0)), X.rarity === V.rarity && X.set === V.set ? (I(Dt(!1)), d.current.playVideo(0)) : I((x => ({
                            type: H,
                            payload: x
                        }))(X))
                    })(X)}>
                    <picture class="unOpenedChestsListing__chest__picture">
                      <source
                        type="image/webp"
                        srcset="
                          //images.godsunchained.com/transparent-chest-images--open/434/${be}.webp 434w,
                          //images.godsunchained.com/transparent-chest-images--open/256/${be}.webp 256w,
                          //images.godsunchained.com/transparent-chest-images--open/128/${be}.webp 128w
                        "
                      />
                      <source
                        type="image/png"
                        srcset="
                          //images.godsunchained.com/transparent-chest-images--open/434/${be}.png 434w,
                          //images.godsunchained.com/transparent-chest-images--open/256/${be}.png 256w,
                          //images.godsunchained.com/transparent-chest-images--open/128/${be}.png 128w
                        "
                      />
                      <img
                        src="//images.godsunchained.com/transparent-chest-images--open/128/${be}.png"
                        alt="chest image"
                        class="unOpenedChestsListing__chest__picture__img"
                      />
                    </picture>
                    <gu-heading-text
                      fillGradient=${r.gradients.gold.simple()}
                      size="3x-small"
                      .responsiveSize=${[{size: "2x-small", breakpoint: "small"}]}
                      class="unOpenedChestsListing__chest__openNowText"
                    >
                      Open 1 Now
                    </gu-heading-text>
                    <gu-paragraph-text
                      kind="small"
                      class="unOpenedChestsListing__chest__count"
                      fillColor=${r.colors.gold[500]}
                      fontWeight="bold"
                    >
                      ${X.quantityCount}x
                    </gu-paragraph-text>
                  </div>
                `
                })}
          </div>
        ` : null}

    <gu-primary-hex-button
      size="large"
      class=${(0, Ye.$)({chestsCta: !0, "chestsCta--visible": l})}
      @click=${() => {
                    I(Dt(!1)), I(ns(null))
                }}
    >
      Back to Packs
    </gu-primary-hex-button>
  `
            }, props: {properties: {unOpenedChests: {type: Array}, volume: {type: Number}}, styles: Ys}
        }));
        var xt = n(49749), Qs = n(46461), Os = n(7203);
        const lt = "/assets/audio/temple", Js = {
            diamond__common: `${lt}/temple_reveal_diamond_common`,
            diamond__rare: `${lt}/temple_reveal_diamond_rare`,
            diamond__epic: `${lt}/temple_reveal_diamond_epic`,
            diamond__legendary: `${lt}/temple_reveal_diamond_legendary`,
            gold__common: `${lt}/temple_reveal_gold_common`,
            gold__rare: `${lt}/temple_reveal_gold_rare`,
            gold__epic: `${lt}/temple_reveal_gold_epic`,
            gold__legendary: `${lt}/temple_reveal_gold_legendary`,
            shadow__common: `${lt}/temple_reveal_shadow_common`,
            shadow__rare: `${lt}/temple_reveal_shadow_rare`,
            shadow__epic: `${lt}/temple_reveal_shadow_epic`,
            shadow__legendary: `${lt}/temple_reveal_shadow_legendary`,
            meteorite__common: `${lt}/temple_reveal_meteorite_common`,
            meteorite__rare: `${lt}/temple_reveal_meteorite_rare`,
            meteorite__epic: `${lt}/temple_reveal_meteorite_epic`,
            meteorite__legendary: `${lt}/temple_reveal_meteorite_legendary`,
            plain__common: `${lt}/temple_reveal_plain_common`,
            plain__rare: `${lt}/temple_reveal_plain_rare`,
            plain__epic: `${lt}/temple_reveal_plain_epic`,
            plain__legendary: `${lt}/temple_reveal_plain_legendary`
        }, ps = Fe.iv`
  ${(0, me.asCssProp)((0, me.setBoxSizing)())}

  :host {
    position: absolute;
    width: 100%;
    /* Add some padding so that scrollbars don't flicker while things are being
    rotate transformed... */
    padding: calc(var(--ch) * 5) calc(var(--cw) * 5) calc(var(--ch) * 15);
    top: calc(var(--ch) * 5);
    left: 0;
    overflow-x: auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    ${(0, me.asCssProp)((0, kt.userSelect)("none"))};
  }

  :host(.visible) {
    z-index: 1;
    ${(0, me.asCssProp)((0, kt.userSelect)("auto"))};
  }

  .raffleTicketsArea {
    min-width: 155px;
    min-height: 88px;
    width: calc(var(--cw) * 18);
    height: calc(var(--ch) * 15);
    margin-right: calc(var(--cw) * 2);
    opacity: 0;
    display: flex;
    position: relative;
    cursor: pointer;
    ${(0, me.asCssProp)(r.animation.slowTransition("height"))};
    transition-property: height, transform;
  }

  .raffleTicketsArea--opened {
    height: calc(var(--ch) * (15 + 17.3));
  }

  .raffleTicketsArea__dropdown {
    position: absolute;
    background: ${(0, me.asCssProp)(r.gradients.gold.simple("bottom"))};
    padding: 3px;
    width: 68%;
    height: calc(var(--ch) * 17.3);
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    ${(0, me.asCssProp)((0, me.drawBottomHexShapePolygonMask)("calc(var(--ch) * 4)"))};
    ${(0, me.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .raffleTicketsArea--opened .raffleTicketsArea__dropdown {
    opacity: 1;
  }

  .raffleTicketsArea__dropdown__inner {
    width: 100%;
    height: 100%;
    background: ${(0, me.asCssProp)(r.colors.gunmetal[900])};
    ${(0, me.asCssProp)((0, me.drawBottomHexShapePolygonMask)("calc(var(--ch) * 3.9)"))};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: calc(var(--ch) * 4) 0 calc(var(--ch) * 6);
  }

  .raffleTicketsArea__dropdown__inner__label {
    font-size: calc(var(--cw) * 1);
  }

  /* @TODO: Due to the use of !important inside of our gu-heading-text control...
  this one little piece of text cannot use the standard control.
  Once we have done away with all global styles, this can be once again made into a
  standard heading text control */
  .raffleTicketsArea__dropdown__inner__value {
    font-family: ${(0, me.asCssProp)(r.typography.headingFont)};
    font-size: calc(var(--cw) * 2.2);
    line-height: 1;
    margin: calc(var(--ch) * 0.5) 0 0 0;
  }

  .raffleTicketsArea__ticketImage {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
  }

  .raffleTicketsArea__ticketImage__img {
    display: block;
    width: 100%;
  }

  .perspectiveWrapper {
    position: relative;
    width: calc(var(--cw) * 16);
    perspective: calc(var(--cw) * 50);
    opacity: 0;
  }

  .perspectiveWrapper:last-child {
    margin: 0;
  }

  .cardWrapper {
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    cursor: pointer;
  }

  .cardWrapper__frontFace,
  .cardWrapper__rearFace {
    ${(0, me.asCssProp)((0, kt.userSelect)("none"))};
    transform: rotateX(0deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /*
  @TEMP CODE DEBUG:
  (used to quickly style the cards and tickets GUI)
  ---------------------------------------- *
  .unlockedPackItems {
    opacity: 1;
  }
  .raffleTicketsArea,
  .cardWrapper {
    opacity: 1;
    ${(0, me.asCssProp)((0, kt.userSelect)("auto"))};
  }
  .cardWrapper__frontFace,
  .cardWrapper__rearFace {
    backface-visibility: visible;
  }
  /* -------------------------------------------- */

  .cardWrapper__frontFace {
    width: 100%;
    transform: rotateY(180deg);
    position: relative;
  }

  .cardWrapper__frontFace__bloom {
    position: absolute;
    right: 8%;
    width: 76%;
    top: 9%;
    height: 88%;
    border-radius: calc(var(--cw) * 3);
    opacity: 0;
    transform: scale(0.7);
    filter: brightness(1);
  }

  .cardWrapper__frontFace__bloom--rare {
    background: ${(0, me.asCssProp)(r.colors.rarity.rare)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, me.asCssProp)(r.colors.rarity.rare)};
  }
  .cardWrapper__frontFace__bloom--epic {
    background: ${(0, me.asCssProp)(r.colors.rarity.epic)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, me.asCssProp)(r.colors.rarity.epic)};
  }
  .cardWrapper__frontFace__bloom--legendary {
    background: ${(0, me.asCssProp)(r.colors.rarity.legendary)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, me.asCssProp)(r.colors.rarity.legendary)};
  }
  .cardWrapper__frontFace__bloom--mythic {
    background: ${(0, me.asCssProp)(r.colors.rarity.mythic)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, me.asCssProp)(r.colors.rarity.mythic)};
  }

  .cardWrapper__frontFace__scarcity {
    padding-left: calc(var(--cw) * 1);
    position: absolute;
    width: 100%;
    left: 0;
    top: calc(100% + (var(--ch) * 1.5));
  }

  .cardWrapper__frontFace__card {
    position: relative;
  }

  .cardWrapper__rearFace {
    position: absolute;
    top: 8%;
    height: 88%;
    width: 95%;
    right: 4.5%;
  }

  .cardWrapper__rearFace__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
`, is = x => Os.PW[x];
        customElements.define("gu-temple-pack-card-listing", (0, Le.x1)({
            renderer: function ({}) {
                const j = (0, Le.I0)(ht), [d, I] = (0, Oe.eJ)([]), {
                    currentOpenPack: V,
                    firstPackCardsVisible: h,
                    raffleTicketsDisplayVisible: L,
                    flippedCards: l
                } = (0, Le.v9)({
                    store: ht,
                    selector: X => ({
                        flippedCards: X.flippedCards,
                        raffleTicketsDisplayVisible: X.raffleTicketsDisplayVisible,
                        firstPackCardsVisible: X.firstPackCardsVisible,
                        currentOpenPack: X.currentOpenPack
                    })
                });
                (0, Oe.d4)(() => {
                    h ? this.classList.add("visible") : this.classList.remove("visible"), xt.p8.to(this.shadowRoot.children, {
                        duration: h ? .3 : 0,
                        opacity: h ? 1 : 0,
                        stagger: h ? .15 : 0,
                        onComplete: () => {
                            h || O()
                        }
                    })
                }, [h]), (0, Oe.d4)(() => {
                    !V.cards || I([...V.cards.map(X => {
                        const {quality: be, rarity: Ie} = X, Re = Js[`${is(be - 1)}__${Ie}`];
                        return Re ? new Qs.Howl({src: [`${Re}.ogg`, `${Re}.mp3`]}) : {
                            play: () => {
                            }, id: `${is(be)}__${Ie}`
                        }
                    })])
                }, [V]), (0, Oe.d4)(() => () => O(), []);
                const O = () => {
                    xt.p8.set([this.shadowRoot.querySelectorAll(".cardWrapper"), this.shadowRoot.children], {clearProps: "all"})
                }, Z = X => {
                    j({type: es, payload: X});
                    const be = this.shadowRoot.querySelectorAll(".perspectiveWrapper")[X].querySelector(".cardWrapper"),
                        Ie = be.querySelector(".cardWrapper__frontFace__bloom"), Re = !!l[X];
                    Re || d[X].play(), xt.p8.killTweensOf([Ie, be]), xt.p8.set([Ie], {clearProps: "all"});
                    const it = xt.p8.timeline({paused: !0}),
                        pt = xt.p8.timeline({repeat: -1, repeatDelay: 1, delay: 1, yoyo: !0, paused: !0});
                    pt.to(Ie, {duration: 1.2, filter: "brightness(1.5)"}).to(Ie, {
                        duration: 1.2,
                        filter: "brightness(1)"
                    }), it.to(be, {duration: .4, rotateY: Re ? 0 : 180, ease: "power2.inOut"}).to(Ie, {
                        duration: .7,
                        opacity: 1,
                        scale: 1.04,
                        ease: "power2.inOut"
                    }, "-=0.2").to(Ie, {
                        duration: .4,
                        opacity: .78,
                        scale: .88,
                        ease: "power2.inOut"
                    }).add(pt.play(), "loopingBloom"), it.play()
                };
                return Fe.dy`
    ${V.raffleTickets ? Fe.dy`
          <div
            class=${(0, Ye.$)({raffleTicketsArea: !0, "raffleTicketsArea--opened": L})}
          >
            <div
              class=${(0, Ye.$)({raffleTicketsArea__dropdown: !0})}
            >
              <div class="raffleTicketsArea__dropdown__inner">
                <gu-paragraph-text
                  kind="tag"
                  align="center"
                  class="raffleTicketsArea__dropdown__inner__label"
                  fillGradient=${r.gradients.gold.simple()}
                >
                  Draw Tickets
                </gu-paragraph-text>

                <gu-paragraph-text
                  kind="tag"
                  align="center"
                  class="raffleTicketsArea__dropdown__inner__label"
                  fillGradient=${r.gradients.gold.simple()}
                >
                  Received
                </gu-paragraph-text>

                <h3 class="raffleTicketsArea__dropdown__inner__value">${V.raffleTickets}</h3>
              </div>
            </div>
            <picture class="raffleTicketsArea__ticketImage" @click=${() => j({type: Qe})}>
              <source
                srcset="
                  /assets/images/collectables-art/collectables-art--raffle-ticket@3x.webp 687w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@2x.webp 458w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@1x.webp 229w
                "
                type="image/webp"
              />
              <source
                srcset="
                  /assets/images/collectables-art/collectables-art--raffle-ticket@3x.png 687w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@2x.png 458w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@1x.png 229w
                "
                type="image/png"
              />
              <img
                src="/assets/images/collectables-art/collectables-art--raffle-ticket@1x.png"
                alt=""
                class="raffleTicketsArea__ticketImage__img"
              />
            </picture>
          </div>
        ` : null}
    ${V.cards ? V.cards.map((X, be) => Fe.dy`
            <div class="perspectiveWrapper">
              <div class=${(0, Ye.$)({cardWrapper: !0})} @click=${() => Z(be)}>
                <div class="cardWrapper__frontFace">
                  <i class="cardWrapper__frontFace__bloom cardWrapper__frontFace__bloom--${X.rarity}"></i>
                  <gu-card-picture
                    protoId=${X.proto}
                    quality=${X.quality}
                    class="cardWrapper__frontFace__card"
                  ></gu-card-picture>

                  ${null}
                </div>
                <picture class="cardWrapper__rearFace">
                  <source
                    type="image/webp"
                    srcset="
                      //images.godsunchained.com/rear-card-face-images/1024/regular-gu-rear-card-face.webp 1024w,
                      //images.godsunchained.com/rear-card-face-images/720/regular-gu-rear-card-face.webp   720w,
                      //images.godsunchained.com/rear-card-face-images/512/regular-gu-rear-card-face.webp   512w,
                      //images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.webp   256w
                    "
                  />
                  <source
                    type="image/png"
                    srcset="
                      //images.godsunchained.com/rear-card-face-images/1024/regular-gu-rear-card-face.png 1024w,
                      //images.godsunchained.com/rear-card-face-images/720/regular-gu-rear-card-face.png   720w,
                      //images.godsunchained.com/rear-card-face-images/512/regular-gu-rear-card-face.png   512w,
                      //images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.png   256w
                    "
                  />
                  <img
                    src="//images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.png"
                    alt="GodsUnchained rear card face image"
                    class="cardWrapper__rearFace__img"
                  />
                </picture>
              </div>
            </div>
          `) : null}
  `
            }, props: {properties: {volume: {type: Number}}, styles: ps}
        }));
        const Et = Fe.iv`
  :host {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    background: ${(0, me.asCssProp)(r.colors.gunmetal[900])};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0.94;
  }

  .icon {
    font-size: ${(0, me.asCssProp)((0, Kt.gridUnits)(20))};
  }

  .text {
    max-width: 350px;
  }

  @media screen and (min-width: ${(0, me.asCssProp)(r.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      display: none;
    }
  }
`;
        customElements.define("gu-temple-overlay-layer", (0, Le.x1)({
            renderer: function () {
                return Fe.dy`
    <gu-icon iconLigature="alert_triangle" align="center" fillColor=${r.colors.god.war.secondary} class="icon"></gu-icon>
    <gu-vertical-space top="x-large">
      <gu-paragraph-text class="text" align="center" fillColor=${r.colors.light[100]}>
        <slot></slot>
      </gu-paragraph-text>
    </gu-vertical-space>
  `
            }, props: {properties: {message: {type: String}}, styles: Et}
        }));
        var $s = n(92436), Pn = n(71459), hs = n.n(Pn), zt = n(63082), ms = n.n(zt), As = n(65171);
        const Is = Fe.iv`
  ${(0, me.asCssProp)((0, me.setBoxSizing)())}

  :host {
    height: calc(100vh - var(--headerAreaHeight));
    display: flex;
    flex-flow: column nowrap;
    overflow: hidden;
  }

  .videoAspectRatio {
    margin: auto;
    position: relative;
    padding-bottom: 56.25%;
    width: 100%;
  }

  .videoAspectRatio__img {
    display: none;
  }

  @media screen and (min-aspect-ratio: 1282/800) {
    .videoAspectRatio {
      height: 100%;
      width: auto;
      padding-bottom: 0;
    }
    .videoAspectRatio__img {
      display: block;
      width: auto;
      height: 100%;
    }
  }

  gu-controllable-vimeo-embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    ${(0, me.asCssProp)(r.uifx.userSelect("none"))};
  }

  .packOpenVideo {
    ${(0, me.asCssProp)(r.animation.standardTransition("opacity"))};
  }

  .packOpenVideo--hidden {
    opacity: 0;
  }

  /*

    @NOTE: position the drag target area roughly above the podium center

  */
  .targetDropArea {
    position: absolute;
    top: calc(var(--ch) * 32.8);
    left: calc(var(--cw) * 48.5);
    width: calc(var(--ch) * 24.5);
    height: calc(var(--ch) * 31);
  }

  /*

    @NOTE: position the draggable pack, roughly above the left podium stand

  */

  .draggablePackHitzone {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .draggablePack {
    position: absolute;
    bottom: calc(var(--ch) * 10);
    left: calc(var(--cw) * 8.7);
    width: calc(var(--ch) * 34);
    transform: rotate(-4deg);
    opacity: 0;
    cursor: pointer;
    ${(0, me.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .draggablePack--touchable {
    ${(0, me.asCssProp)((0, kt.userSelect)("auto"))};
  }

  .draggablePack--visible {
    opacity: 1;
  }

  .draggablePack--disabled {
    opacity: 0;
  }

  .draggablePack__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
    filter: drop-shadow(0 0 calc(var(--ch) * 5) rgba(${(0, me.asCssProp)((0, As.hexToCssRgbString)(r.colors.black))}, 0.6));
  }

  .helpText {
    position: absolute;
    top: calc(var(--ch) * 67.5);
    left: calc(var(--cw) * 41);
    width: calc(var(--cw) * 30);
    text-align: center;
  }

  .unlockedPackItems {
    position: absolute;
    width: 100%;
    /* Add some padding so that scrollbars dont flick on while things are being
    rotate transformed... */
    padding: calc(var(--ch) * 5) calc(var(--cw) * 5) calc(var(--ch) * 15);
    top: calc(var(--ch) * 5);
    left: 0;
    overflow-x: auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    opacity: 0;
  }

  .unlockedPackItems--visible {
    opacity: 1;
    z-index: 1;
  }

  .unlockedPackItems__raffleTicketsArea {
    min-width: 155px;
    min-height: 88px;
    width: calc(var(--cw) * 18);
    height: calc(var(--ch) * 15);
    margin-right: calc(var(--cw) * 2);
    opacity: 0;
    display: flex;
    position: relative;
    ${(0, me.asCssProp)((0, kt.userSelect)("none"))};
    ${(0, me.asCssProp)(r.animation.slowTransition("height"))};
    transition-property: height, transform;
  }

  .unlockedPackItems__raffleTicketsArea--opened {
    height: calc(var(--ch) * (15 + 17.3));
  }

  .unlockedPackItems__raffleTicketsArea__dropdown {
    position: absolute;
    background: ${(0, me.asCssProp)(r.gradients.gold.simple("bottom"))};
    padding: 3px;
    width: 68%;
    height: calc(var(--ch) * 17.3);
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    ${(0, me.asCssProp)((0, me.drawBottomHexShapePolygonMask)("calc(var(--ch) * 4)"))};
    ${(0, me.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .unlockedPackItems__raffleTicketsArea--opened .unlockedPackItems__raffleTicketsArea__dropdown {
    opacity: 1;
  }

  .unlockedPackItems__raffleTicketsArea__dropdown__inner {
    width: 100%;
    height: 100%;
    background: ${(0, me.asCssProp)(r.colors.gunmetal[900])};
    ${(0, me.asCssProp)((0, me.drawBottomHexShapePolygonMask)("calc(var(--ch) * 3.9)"))};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: calc(var(--ch) * 4) 0 calc(var(--ch) * 6);
  }

  .unlockedPackItems__raffleTicketsArea__dropdown__inner__label {
    font-size: calc(var(--cw) * 1);
  }

  /* @TODO: Due to the use of !important inside of our gu-heading-text control...
  this one little piece of text cannot use the standard control.
  Once we have done away with all global styles, this can be once again made into a
  standard heading text control */
  .unlockedPackItems__raffleTicketsArea__dropdown__inner__value {
    font-family: ${(0, me.asCssProp)(r.typography.headingFont)};
    font-size: calc(var(--cw) * 2.2);
    line-height: 1;
    margin: calc(var(--ch) * 0.5) 0 0 0;
  }

  .unlockedPackItems__raffleTicketsArea__ticketImage {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
  }

  .unlockedPackItems__raffleTicketsArea__ticketImage__img {
    display: block;
    width: 100%;
  }

  .unlockedPackItems__3dPerspectiveWrapper {
    position: relative;
    width: calc(var(--cw) * 16);
    perspective: calc(var(--cw) * 50);
  }

  .unlockedPackItems__3dPerspectiveWrapper:last-child {
    margin: 0;
  }

  .unlockedPackItems__cardWrapper {
    ${(0, me.asCssProp)((0, kt.userSelect)("none"))};
    ${(0, me.asCssProp)(r.animation.slowTransition("transform"))};
    transition-timing-function: ease-out;
    height: 100%;
    opacity: 0;
    position: relative;
    transform-style: preserve-3d;
    transition-property: transform, opacity;
  }

  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(1) .unlockedPackItems__cardWrapper {
    transition-delay: ${0}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(2) .unlockedPackItems__cardWrapper {
    transition-delay: ${150}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(3) .unlockedPackItems__cardWrapper {
    transition-delay: ${300}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(4) .unlockedPackItems__cardWrapper {
    transition-delay: ${450}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(5) .unlockedPackItems__cardWrapper {
    transition-delay: ${600}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(6) .unlockedPackItems__cardWrapper {
    transition-delay: ${750}ms;
  }

  .unlockedPackItems__cardWrapper--flipped {
    transform: rotateY(180deg);
    transition-delay: 0ms !important;
  }

  .unlockedPackItems--visible .unlockedPackItems__cardWrapper,
  .unlockedPackItems--visible .unlockedPackItems__raffleTicketsArea {
    opacity: 1;
    cursor: pointer;
    ${(0, me.asCssProp)((0, kt.userSelect)("auto"))};
  }

  .unlockedPackItems__cardWrapper__frontFace,
  .unlockedPackItems__cardWrapper__rearFace {
    transform: rotateX(0deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /*
  @TEMP CODE DEBUG:
  (used to quickly style the cards and tickets GUI)
  ---------------------------------------- *
  .unlockedPackItems {
    opacity: 1;
  }
  .unlockedPackItems__raffleTicketsArea,
  .unlockedPackItems__cardWrapper {
    opacity: 1;
    ${(0, me.asCssProp)((0, kt.userSelect)("auto"))};
  }
  .unlockedPackItems__cardWrapper__frontFace,
  .unlockedPackItems__cardWrapper__rearFace {
    backface-visibility: visible;
  }
  .unlockedPackItems__cardWrapper__rearFace {
    opacity: 0.5;
  }
  /* -------------------------------------------- */

  .unlockedPackItems__cardWrapper__frontFace {
    width: 100%;
    transform: rotateY(180deg);
    position: relative;
  }

  .unlockedPackItems__cardWrapper__frontFace__scarcity {
    padding-left: calc(var(--cw) * 1);
    position: absolute;
    width: 100%;
    left: 0;
    top: calc(100% + (var(--ch) * 1.5));
  }

  .unlockedPackItems__cardWrapper__rearFace {
    position: absolute;
    top: 6%;
    height: 93%;
    width: 100%;
    right: 4.5%;
  }

  .unlockedPackItems__cardWrapper__rearFace__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .ctasArea {
    position: absolute;
    z-index: 1;
    bottom: 13%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
  }

  .ctasArea__cta {
    min-width: 200px;
  }

  .ctasArea__cta--buyPacksCta {
    margin-left: calc(var(--cw) * 12);
  }
`;
        customElements.define("gu-temple-view-layer", (0, Le.x1)({
            renderer: function ({
                                    unOpenedPacks: x = [],
                                    unOpenedChests: j = [],
                                    volume: d = .9,
                                    headerAreaHeight: I = r.measurements.standardHeaderHeight
                                }) {
                const V = (0, Oe.sO)(null), h = (0, Oe.sO)(null), L = (0, Oe.sO)(null), l = (0, Oe.sO)(null),
                    O = (0, Oe.sO)(null), Z = (0, Oe.sO)(null), X = (0, Le.I0)(ht), {
                        openPackVideoId: be,
                        openPackVideoVisible: Ie,
                        firstPackCardsVisible: Re,
                        flippedCards: it,
                        packImageVisible: pt,
                        currentOpenPack: ze,
                        openPackVideoLoading: ye,
                        openPackVideoPlaying: ve
                    } = (0, Le.v9)({
                        store: ht,
                        selector: Je => ({
                            openPackVideoId: Je.openPackVideoId,
                            openPackVideoVisible: Je.openPackVideoVisible,
                            firstPackCardsVisible: Je.firstPackCardsVisible,
                            flippedCards: Je.flippedCards,
                            packImageVisible: Je.packImageVisible,
                            currentOpenPack: Je.currentOpenPack,
                            openPackVideoLoading: Je.openPackVideoLoading,
                            openPackVideoPlaying: Je.openPackVideoPlaying
                        })
                    });
                (0, Oe.d4)(() => {
                    this.style.setProperty("--headerAreaHeight", `${I}px`)
                }, [I]), (0, Oe.d4)(() => {
                    this.openPackVideoLoading = ye
                }, [ye]), (0, Oe.d4)(() => (Nt.observe(O.current), () => {
                    Nt.unobserve(O.current), bt(), Zn()
                }), []);
                const Pt = () => {
                    bt(), this.gestureControl = new (hs())(h.current, {
                        sensitivity: 0,
                        passive: !1,
                        capture: !0,
                        startDirectionLoopCount: 1
                    }), this.gestureControl.on("pan.prestart", rt), this.gestureControl.on("pan.start", $t), this.gestureControl.on("pan.all", Xt), this.gestureControl.on("pan.end", yt)
                }, bt = () => {
                    this.gestureControl && (this.gestureControl.removeListener("pan.prestart", rt), this.gestureControl.removeListener("pan.start", $t), this.gestureControl.removeListener("pan.all", Xt), this.gestureControl.removeListener("pan.end", yt), this.gestureControl.destroy(), this.gestureControl = null)
                };
                (0, Oe.d4)(() => {
                    ze.set ? (Pt(), fetch(`https://video.godsunchained.com?search=pack-open-videos-4k%20${ze.set}--${ze.god}--${ze.rarity}`).then(Ft => Ft.json()).then(Ft => {
                        X((x => ({type: ie, payload: x}))(Ft))
                    })) : bt()
                }, [ze]), (0, Oe.d4)(() => {
                    !ze.set && x.length && X(gt(x))
                }, [x]);
                const rt = Je => {
                        Je.sourceEvent.preventDefault()
                    }, $t = Je => {
                        this.terminatedPan = !1, xt.p8.set(V.current, {x: 0, y: 0})
                    }, Xt = ({deltaX: Je, deltaY: Ft, sourceEvent: fn}) => {
                        if (Ss(), Ge.dz.checkOutOfBounds({
                            x: fn.pageX,
                            y: fn.pageY,
                            width: this.dimensions.width,
                            height: this.dimensions.height,
                            top: this.dimensions.top,
                            left: this.dimensions.left,
                            tolerance: 20
                        })) return this.terminatedPan = !0, yt({});
                        this.terminatedPan || xt.p8.set(V.current, {
                            x: this.openPackVideoLoading ? .2 * Je : Je,
                            y: this.openPackVideoLoading ? .2 * Ft : Ft
                        })
                    }, yt = Je => {
                        xt.p8.to(V.current, this.draggablePackIsIntersecting && !this.openPackVideoLoading ? {
                            rotation: -1,
                            x: 37.2 * this.dimensions.cw + "px",
                            y: -25 * this.dimensions.ch + "px",
                            onComplete: () => hn(),
                            duration: .3
                        } : {duration: .3, x: 0, y: 0})
                    }, Ss = ms()(() => {
                        this.draggablePackIsIntersecting = function (x, j) {
                            let d = !1;
                            return x && j && (d = !(x.right < j.left || x.left > j.right || x.bottom < j.top || x.top > j.bottom)), d
                        }(V.current.getBoundingClientRect(), this.dragTargetRectangle)
                    }, 50), Nt = new $s.do(Je => {
                        Je.forEach(Ft => qt())
                    }), qt = ms()(() => {
                        const Je = O.current.getBoundingClientRect();
                        this.dimensions = {
                            ch: .01 * O.current.offsetHeight,
                            cw: .01 * O.current.offsetWidth,
                            width: Je.width,
                            height: Je.height,
                            top: Je.top,
                            left: Je.left
                        }, this.style.setProperty("--cw", `${this.dimensions.cw}px`), this.style.setProperty("--ch", `${this.dimensions.ch}px`), this.dragTargetRectangle = Z.current.getBoundingClientRect()
                    }, 500), hn = () => {
                        X({
                            type: Pe,
                            payload: !0
                        }), this.dispatchEvent(new CustomEvent("onPackOpened", {detail: {pack: ze}})), L.current.playVideo(), X(Wt(!0))
                    }, Zn = () => {
                        console.log("RESET TEMPLE CODE"), X({type: Se}), xt.p8.set(V.current, {clearProps: "all"})
                    }, mn = pt && !Ie && ye, _n = !ze.set || Object.keys(it).length === ze.cards.length,
                    jn = _n && !x.length && pt;
                return Fe.dy`
    <div class="videoAspectRatio" ?domRef=${(0, Ue.Q)(O)}>
      <img class="videoAspectRatio__img" alt="ratio image" src="/assets/images/ratio-images/16-x-9-ratio.png" />

      <gu-controllable-vimeo-embed
        class="introVideo"
        videoId="405676137"
        autoPlay
        pauseOnEndFrame
        muted
        @onVideoEnd=${() => X({type: ut, payload: !0})}
        ?domRef=${(0, Ue.Q)(l)}
        .volume=${d}
      ></gu-controllable-vimeo-embed>

      <gu-controllable-vimeo-embed
        class=${(0, Ye.$)({packOpenVideo: !0, "packOpenVideo--hidden": !Ie})}
        pauseOnEndFrame
        startPausedOnFirstFrame
        videoId=${be}
        @onVideoLoading=${() => {
                    X(Ps(!0))
                }}
        @onVideoReady=${() => {
                    X(Ps(!1))
                }}
        @onVideoEnd=${() => {
                    X(Wt(!1))
                }}
        @onVideoProgress=${Je => {
                    const {percent: Ft} = Je.detail;
                    Ft >= .425 && !Re && X({type: At, payload: !0})
                }}
        ?domRef=${(0, Ue.Q)(L)}
        .volume=${d}
      ></gu-controllable-vimeo-embed>

      <i class="targetDropArea" ?domRef=${(0, Ue.Q)(Z)}></i>

      ${pt && !Ie ? Fe.dy`
            <gu-paragraph-text
              class="helpText"
              kind="small"
              text=${ze.set ? mn ? "Please wait, loading ..." : "Drag a pack here to open it" : "You have no packs."}
            ></gu-paragraph-text>
          ` : null}

      <gu-temple-pack-card-listing></gu-temple-pack-card-listing>

      <div
        class=${(0, Ye.$)({ctasArea: !0})}
      >
        ${jn ? Fe.dy`
              <gu-primary-hex-button
                size="large"
                @click=${() => {
                    this.dispatchEvent(new CustomEvent("onBuyPacks"))
                }}
                class="ctasArea__cta ctasArea__cta--buyPacksCta"
              >
                Buy Packs
              </gu-primary-hex-button>
            ` : null}
        <!-- @NOTE: While a card sale is active, direct users toward buying packs, not playing the game
          ${jn ? Fe.dy`
              <gu-primary-hex-button
                size="large"
                href=${`imtbl://${N.gv.routeContent({}).home.path}`}
                class="ctasArea__cta ctasArea__cta--buyPacksCta"
              >
                Play to unlock
              </gu-primary-hex-button>
            ` : null} -->
        ${_n && x.length && !ve ? Fe.dy`
              <gu-primary-hex-button size="large" @click=${() => {
                    xt.p8.set(V.current, {clearProps: "all"}), X({type: m}), X(gt(x))
                }} class="ctasArea__cta">
                Next Pack
              </gu-primary-hex-button>
              <gu-vertical-space top="large">
                <gu-heading-text size="2x-small" align="center"> ${x.length} packs left </gu-heading-text>
              </gu-vertical-space>
            ` : null}
      </div>

      ${pt ? Fe.dy` <gu-temple-chest-layer .unOpenedChests=${j} .volume=${d}></gu-temple-chest-layer> ` : null}
      ${ze.set ? Fe.dy`
            <gu-card-pack-picture
              type="temple"
              set=${ze.set}
              god=${ze.god}
              rarity=${ze.rarity}
              class=${(0, Ye.$)({
                    draggablePack: !0,
                    "draggablePack--visible": pt && !Ie,
                    "draggablePack--disabled": mn,
                    "draggablePack--touchable": this.isIos
                })}
              ?domRef=${(0, Ue.Q)(V)}
              @click=${() => !!this.isIos && hn()}
            ></gu-card-pack-picture>
            ${Re ? null : Fe.dy`<i class="draggablePackHitzone" ?domRef=${(0, Ue.Q)(h)}></i>`}
          ` : null}
    </div>
  `
            },
            props: {
                properties: {
                    unOpenedPacks: {type: Array},
                    unOpenedChests: {type: Array},
                    volume: {type: Number},
                    headerAreaHeight: {type: Number}
                }, styles: Is
            }
        }));
        const Ds = ["viewLayer"];
        let Ls = (() => {
            class x {
                constructor(d, I, V, h, L, l, O, Z, X) {
                    this.environment = d, this.packService = I, this.chestService = V, this.router = h, this.ngZone = L, this.ethService = l, this.modalService = O, this.audioService = Z, this.navigationStateService = X, this.unopenedChests = [], this.unopenedPacks = [], this.unsubscribe = new ne.xQ, this.volumeSetting = 1, this.currentWalletAddress = ""
                }

                ngOnInit() {
                    this.initPacks(), this.initAudio(), "website" === this.environment.clientType && this.initChests()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                initAudio() {
                    this.audioService.currentVolume$.pipe((0, q.R)(this.unsubscribe)).subscribe(d => {
                        this.volumeSetting = d
                    })
                }

                initPacks() {
                    this.packService.fetchUnopenedPacks(), this.packService.unopenedPacks$.pipe((0, q.R)(this.unsubscribe), (0, $e.VS)(d => this.packService.updateScarcityAndRarity$(d))).subscribe(d => {
                        console.log("TempleRoute->initPacks() packs", d), this.unopenedPacks = d
                    })
                }

                initChests() {
                    this.chestService.fetchChests(), this.chestService.chests$.pipe((0, q.R)(this.unsubscribe), (0, at.U)(d => this.formatChests(d))).subscribe(d => {
                        this.unopenedChests = d, console.log("TempleRoute->initChests() chests", d)
                    })
                }

                formatChests(d) {
                    console.log("TempleRoute->formatChests() tps", d);
                    let I = [];
                    return d.forEach(V => {
                        I = [...I, ...Array.from(Array(V.amount)).map(h => ({
                            rarity: V.rarity,
                            set: V.set,
                            type: V.type
                        }))]
                    }), I
                }

                onPackOpened(d) {
                    console.log("TempleRoute->onOpenPack() opening pack", d.detail.pack), this.packService.openPack$(d.detail.pack).pipe((0, he.q)(1)).subscribe(I => {
                        console.log("TempleRoute->onOpenPack() pack opened!!!", d.detail.pack)
                    })
                }

                onChestOpened(d) {
                    this.chestService.open(d.detail.type, 1).pipe((0, he.q)(1)).subscribe(V => {
                        console.log("TempleRoute->onChestOpened() Chest Opened!!!!!!! p ", V), this.showChestOpenedModal(this.etherscanUrl(V.hash))
                    })
                }

                etherscanUrl(d) {
                    return `https://${this.environment.production ? "" : "ropsten."}etherscan.io/tx/${d}`
                }

                onBuyPacks() {
                    "website" === this.environment.clientType ? this.router.navigate([N.CF.J.buyPacks.path]) : (0, je.rb)({url: N.gv.routeContent(this.environment).buyPacks.url})
                }

                showChestOpenedModal(d) {
                    this.modalService.open(Ke, {
                        defaultStylings: !1,
                        centered: !0,
                        scrollable: !1
                    }).componentInstance.transactionUrl = d
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(fe.Ho), e.Y36(A.F), e.Y36(A.W), e.Y36(qe.F0), e.Y36(e.R0b), e.Y36(fe.ux), e.Y36(He.Qz), e.Y36(fe.pk), e.Y36(xe.fY))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-temple"]],
                viewQuery: function (d, I) {
                    if (1 & d && e.Gf(Ds, 7), 2 & d) {
                        let V;
                        e.iGM(V = e.CRH()) && (I.viewLayerDom = V.first)
                    }
                },
                decls: 4,
                vars: 4,
                consts: [[3, "headerAreaHeight", "unOpenedPacks", "unOpenedChests", "volume", "onPackOpened", "onChestOpened", "onBuyPacks"], ["viewLayer", ""]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "gu-temple-view-layer", 0, 1), e.NdJ("onPackOpened", function (h) {
                        return I.onPackOpened(h)
                    })("onChestOpened", function (h) {
                        return I.onChestOpened(h)
                    })("onBuyPacks", function () {
                        return I.onBuyPacks()
                    }), e.qZA(), e.TgZ(2, "gu-temple-overlay-layer"), e._uU(3, " Your screen is too puny for such a mighty prize. Please expand your browser window or use a larger device such as a laptop or PC.\n"), e.qZA()), 2 & d && e.Q6J("headerAreaHeight", I.navigationStateService.dataStore.headerAreaHeight)("unOpenedPacks", I.unopenedPacks)("unOpenedChests", I.unopenedChests)("volume", I.volumeSetting)
                },
                styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column}"]
            }), x
        })();
        var en = n(61715), Ot = n(98723);

        function tn(x, j) {
            if (1 & x && (e.TgZ(0, "gu-paragraph-text", 10), e._uU(1, " Buy "), e.TgZ(2, "strong"), e._uU(3), e.qZA(), e._uU(4, " for "), e.TgZ(5, "span", 11), e._uU(6), e.qZA(), e._UZ(7, "gu-icon", 12), e._uU(8, "? "), e.qZA()), 2 & x) {
                const d = e.oxw();
                e.xp6(3), e.Oqu(d.storeItem.item_name), e.xp6(3), e.hij("", d.storeItem.value, " ")
            }
        }

        function Us(x, j) {
            if (1 & x && e._UZ(0, "gu-paragraph-text", 13), 2 & x) {
                const d = e.oxw();
                e.Q6J("innerHTML", d.descriptionText, e.oJD)
            }
        }

        function Rs(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "gu-paragraph-text", 10), e._uU(1, " Great choice! "), e.TgZ(2, "strong"), e._uU(3), e.qZA(), e._uU(4, " has been added to your "), e.TgZ(5, "span"), e.TgZ(6, "gu-simple-text-button", 14), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().goToCollections()
                }), e._uU(7, " Collections "), e.qZA(), e.qZA(), e._uU(8, ". "), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw();
                e.xp6(3), e.Oqu(d.storeItem.item_name)
            }
        }

        function Bs(x, j) {
            if (1 & x && (e.TgZ(0, "gu-vertical-space", 15), e.TgZ(1, "picture", 16), e._UZ(2, "source", 17), e._UZ(3, "img", 18), e.qZA(), e.qZA()), 2 & x) {
                const d = e.oxw();
                e.xp6(2), e.Q6J("srcset", d.storeItem.image_url, e.LSH), e.xp6(1), e.Q6J("src", d.storeItem.image_url, e.LSH)
            }
        }

        function Gs(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.ynx(0), e.TgZ(1, "gu-primary-hex-button", 19), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().exit()
                }), e.qZA(), e.BQk()
            }
        }

        function Fs(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "gu-secondary-hex-button", 20), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().back()
                }), e.qZA(), e.TgZ(1, "gu-primary-hex-button", 21), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().buyNow()
                }), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw();
                e.xp6(1), e.Q6J("disabled", d.awaitingPurchaseRes)
            }
        }

        let Zs = (() => {
            class x {
                constructor(d, I, V, h, L) {
                    this.activeModal = d, this.router = I, this.environment = V, this.akuma = h, this.starsService = L, this.stage = "confirm", this.awaitingPurchaseRes = !1, this.buyNowEvent$ = new e.vpe
                }

                ngOnInit() {
                    this.setStage(this.stage)
                }

                setStage(d) {
                    switch (this.stage = d, d) {
                        case"confirm":
                            return this.akuma.postEvent("Screen", "starstoreConfirmPurchase_opened"), void (this.headingText = "CONFIRM PURCHASE");
                        case"failure":
                            return this.logFailure(), this.headingText = "NOT ENOUGH STARS!", void (this.descriptionText = `Sorry you don\u2019t have enough Stars to purchase${this.startsWithThe(this.storeItem.item_name) ? "" : " the"} <strong>${this.storeItem.item_name}</strong>. Play some ranked games to earn more!`);
                        case"success":
                            return this.logSuccess(), void (this.headingText = "PURCHASE SUCCESS");
                        default:
                            return
                    }
                }

                logFailure() {
                    const d = this.starsService.getScreenOrder(this.storeItem);
                    this.akuma.postEvent("Screen", "starstoreInsufficientFunds_opened", d), "function" == typeof gtag && gtag("event", "_purchaseStarstore_failed", d), this.akuma.postEvent("Flow", "_purchaseStarstore_failed", d)
                }

                logSuccess() {
                    const d = this.starsService.getScreenOrder(this.storeItem);
                    this.akuma.postEvent("Screen", "starstoreSuccessPurchase_opened", d), this.akuma.postEvent("Flow", "_purchaseStarstore_succeeded", d), "function" == typeof gtag && gtag("event", "_purchaseStarstore_succeeded", d)
                }

                goToCollections() {
                    this.akuma.postEvent("Control", "starstoreSuccessPurchaseCollectionsLnk_pressed"), "website" === this.environment.clientType ? this.router.navigate(["/collections"]) : "desktop" === this.environment.clientType && this.router.navigate(["/game/gu/inventory"]), this.exit()
                }

                startsWithThe(d) {
                    return "the" === d.slice(0, 3).toLowerCase()
                }

                exit() {
                    this.activeModal.close()
                }

                back() {
                    this.akuma.postEvent("Control", "starstoreConfirmPurchaseBackBtn_pressed"), this.exit()
                }

                buyNow() {
                    this.akuma.postEvent("Control", "starstoreConfirmPurchaseBuyBtn_pressed", this.starsService.getScreenOrder(this.storeItem)), this.buyNowEvent$.emit(this.storeItem)
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(He.mX), e.Y36(qe.F0), e.Y36(fe.Ho), e.Y36(xe.jt), e.Y36(xe.cM))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-star-store-buy-modal"]],
                inputs: {stage: "stage", storeItem: "storeItem", awaitingPurchaseRes: "awaitingPurchaseRes"},
                outputs: {buyNowEvent$: "buyNowEvent$"},
                decls: 13,
                vars: 7,
                consts: [["goldBorder", "top"], ["top", "2x-large", 1, "headerSection"], ["size", "small", "fillGradient", "gradients.gold.simple", "align", "center"], ["top", "small", "bottom", "large", 1, "descriptionSection"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 4, "ngIf"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 3, "innerHTML", 4, "ngIf"], ["class", "imageSection", 4, "ngIf"], ["top", "large", "bottom", "2x-large", 1, "ctaSection"], [4, "ngIf", "ngIfElse"], ["confirmSection", ""], ["kind", "small", "align", "center", "fillColor", "colors.light.100"], [1, "descriptionSection__price"], ["iconLigature", "collectable_stars", "fillGradientTarget", "top", "fillGradient", "gradients.apocyan.simple", 1, "descriptionSection__icon"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 3, "innerHTML"], ["fillColor", "colors.gunmetal.300", 3, "click"], [1, "imageSection"], [1, "imageSection__picture"], ["type", "image/jpg", 3, "srcset"], [1, "imageSection__picture__img", 3, "src"], ["size", "large", "text", "OKAY", 1, "ctaSection__primary", 3, "click"], ["size", "large", "text", "BACK", 1, "ctaSection__secondary", 3, "click"], ["size", "large", "text", "BUY NOW", 1, "ctaSection__primary", 3, "disabled", "click"]],
                template: function (d, I) {
                    if (1 & d && (e._UZ(0, "gu-modal-background", 0), e.TgZ(1, "gu-vertical-space", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA(), e.qZA(), e.TgZ(4, "gu-vertical-space", 3), e.YNc(5, tn, 9, 2, "gu-paragraph-text", 4), e.YNc(6, Us, 1, 1, "gu-paragraph-text", 5), e.YNc(7, Rs, 9, 1, "gu-paragraph-text", 4), e.qZA(), e.YNc(8, Bs, 4, 2, "gu-vertical-space", 6), e.TgZ(9, "gu-vertical-space", 7), e.YNc(10, Gs, 2, 0, "ng-container", 8), e.YNc(11, Fs, 2, 1, "ng-template", null, 9, e.W1O), e.qZA()), 2 & d) {
                        const V = e.MAs(12);
                        e.xp6(3), e.hij(" ", I.headingText, " "), e.xp6(2), e.Q6J("ngIf", "confirm" === I.stage), e.xp6(1), e.Q6J("ngIf", "failure" === I.stage), e.xp6(1), e.Q6J("ngIf", "success" === I.stage), e.xp6(1), e.Q6J("ngIf", "confirm" === I.stage), e.xp6(2), e.Q6J("ngIf", "confirm" !== I.stage)("ngIfElse", V)
                    }
                },
                directives: [u.O5],
                styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:520px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.descriptionSection__price[_ngcontent-%COMP%]{background-image:linear-gradient(to top,#AFFAED 0%,#54BBCD 100%);color:transparent;-webkit-background-clip:text;background-clip:text}.descriptionSection__icon[_ngcontent-%COMP%]{display:inline-flex}.imageSection[_ngcontent-%COMP%]{display:flex;justify-content:center}.imageSection__picture__img[_ngcontent-%COMP%]{width:280px;max-width:70vw}.ctaSection[_ngcontent-%COMP%]{display:flex;justify-content:center;width:100%}.ctaSection[_ngcontent-%COMP%]   gu-primary-hex-button[_ngcontent-%COMP%]:nth-child(2){margin-left:20px}"]
            }), x
        })(), Ns = (() => {
            class x {
                constructor(d, I) {
                    this.activeModal = d, this.akuma = I
                }

                ngOnInit() {
                    this.akuma.postEvent("Screen", "starstoreInfo_opened")
                }

                exit() {
                    this.activeModal.close()
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(He.mX), e.Y36(xe.jt))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-star-store-more-info-modal"]],
                inputs: {imageUrl: "imageUrl", name: "name", description: "description"},
                decls: 12,
                vars: 4,
                consts: [["iconLigature", "close_x", "fillColor", "colors.apocyan.300", 1, "closeIcon", 3, "click"], ["top", "x-large", 1, "imageSection"], [1, "imageSection__picture"], ["type", "image/jpg", 3, "srcset"], [1, "imageSection__picture__img", 3, "src"], ["both", "large"], ["size", "x-small", "fillColor", "colors.light.100", "align", "center"], ["bottom", "x-large"], ["kind", "small", "align", "center", "fillColor", "colors.light.100"]],
                template: function (d, I) {
                    1 & d && (e._UZ(0, "gu-modal-background"), e.TgZ(1, "gu-icon", 0), e.NdJ("click", function () {
                        return I.exit()
                    }), e.qZA(), e.TgZ(2, "gu-vertical-space", 1), e.TgZ(3, "picture", 2), e._UZ(4, "source", 3), e._UZ(5, "img", 4), e.qZA(), e.qZA(), e.TgZ(6, "gu-vertical-space", 5), e.TgZ(7, "gu-heading-text", 6), e._uU(8), e.qZA(), e.qZA(), e.TgZ(9, "gu-vertical-space", 7), e.TgZ(10, "gu-paragraph-text", 8), e._uU(11), e.qZA(), e.qZA()), 2 & d && (e.xp6(4), e.Q6J("srcset", I.imageUrl, e.LSH), e.xp6(1), e.Q6J("src", I.imageUrl, e.LSH), e.xp6(3), e.hij(" ", I.name, " "), e.xp6(3), e.hij(" ", I.description, " "))
                },
                styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:520px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.imageSection[_ngcontent-%COMP%]{display:flex;justify-content:center}.imageSection__picture__img[_ngcontent-%COMP%]{max-width:100%}.closeIcon[_ngcontent-%COMP%]{position:absolute!important;top:0;right:0;margin:14px 16px;font-size:20px;cursor:pointer}"]
            }), x
        })();

        function Qt(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "gu-star-store-sale-item", 14), e.NdJ("onBuyItem", function () {
                    e.CHM(d);
                    const V = e.oxw().$implicit;
                    return e.oxw(2).showBuyItem(V)
                })("onMoreInfo", function () {
                    e.CHM(d);
                    const V = e.oxw().$implicit;
                    return e.oxw(2).showMoreInfo(V)
                }), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw().$implicit;
                e.Q6J("price", d.value)("imageUrl", d.image_url)("name", d.item_name)("durationType", d.label)("endTimestamp", d.end_timestamp)("title", d.title)
            }
        }

        function fs(x, j) {
            if (1 & x && (e.ynx(0), e.YNc(1, Qt, 1, 6, "gu-star-store-sale-item", 13), e.BQk()), 2 & x) {
                const d = j.$implicit, I = e.oxw(2);
                e.xp6(1), e.Q6J("ngIf", I.isCurrentItem(d))
            }
        }

        function Ws(x, j) {
            if (1 & x && (e.ynx(0), e.TgZ(1, "div", 7), e.TgZ(2, "gu-vertical-space", 8), e.TgZ(3, "gu-heading-text", 9), e._uU(4, " Welcome to the Star Store "), e.qZA(), e.TgZ(5, "gu-paragraph-text", 10), e._uU(6, " Exchange your Stars for some awesome items. "), e._UZ(7, "br"), e._uU(8, " Availability and prices are subject to change. "), e.qZA(), e.qZA(), e.TgZ(9, "gu-vertical-space", 11), e.YNc(10, fs, 2, 1, "ng-container", 12), e.qZA(), e.qZA(), e.BQk()), 2 & x) {
                const d = e.oxw();
                e.xp6(10), e.Q6J("ngForOf", d.storeItems)
            }
        }

        function Tt(x, j) {
            1 & x && (e.TgZ(0, "div", 15), e.TgZ(1, "gu-heading-text", 9), e._uU(2, " the Star Store is Restocking "), e.qZA(), e.TgZ(3, "gu-paragraph-text", 10), e._uU(4, " We are currently out of stock! Please check back at a later time. "), e.qZA(), e.qZA())
        }

        let zs = (() => {
            class x {
                constructor(d, I, V) {
                    this.modalService = d, this.starsService = I, this.akuma = V, this.storeItems = [], this.currentEpochTime = this.timeNowEpoch(), this.currentItemsToDisplay = !0, this.unsubscribe = new ne.xQ
                }

                ngOnInit() {
                    this.initStoreItems(), this.initTimestampCheck()
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                initTimestampCheck() {
                    (0, en.F)(1e3).pipe((0, q.R)(this.unsubscribe)).subscribe(d => {
                        this.currentEpochTime = this.timeNowEpoch(), this.checkForCurrentItems()
                    })
                }

                checkForCurrentItems() {
                    this.currentItemsToDisplay = this.storeItems.some(d => this.isCurrentItem(d))
                }

                timeNowEpoch() {
                    return (new Date).getTime()
                }

                isCurrentItem(d) {
                    return d.end_timestamp_epoch > this.currentEpochTime && d.start_timestamp_epoch < this.currentEpochTime
                }

                initStoreItems() {
                    this.starsService.fetchStarStoreItems$().pipe((0, he.q)(1)).subscribe(d => {
                        this.storeItems = d, this.scheduleRefresh(d), this.checkForCurrentItems(), (!d || 0 === d.length || !this.currentItemsToDisplay) && this.akuma.postEvent("Screen", "starstoreEmpty_opened"), this.logStarStoreOpened(), console.log("StarStoreRoute->initStoreItems()", this.storeItems)
                    })
                }

                scheduleRefresh(d) {
                    const I = Date.now(), V = d.reduce((L, l) => L.end_timestamp_epoch < l.end_timestamp_epoch ? L : l);
                    if (!V) return;
                    const h = V.end_timestamp_epoch + 1e3 - I;
                    h < 0 || (0, Ot.H)(h).pipe((0, q.R)(this.unsubscribe), (0, he.q)(1)).subscribe(L => {
                        this.initStoreItems()
                    })
                }

                logStarStoreOpened() {
                    const d = {};
                    this.storeItems.forEach((I, V) => {
                        d[`item_${V + 1}`] = I
                    }), this.akuma.postEvent("Screen", "starstoreHome_opened", d)
                }

                logBuyButton(d) {
                    this.akuma.postEvent("Control", "starstoreHomeBuyBtn_pressed", this.starsService.getScreenOrder(d)), this.akuma.postEvent("Flow", "_purchaseStarstore_started", this.starsService.getScreenOrder(d)), "function" == typeof gtag && gtag("event", "_purchaseStarstore_started", this.starsService.getScreenOrder(d))
                }

                showBuyItem(d) {
                    this.logBuyButton(d), this.modalService.hasOpenModals() && this.modalService.dismissAll(), this.openedModal$ && this.openedModal$.unsubscribe();
                    const V = this.modalService.open(Zs, {defaultStylings: !1, centered: !0}).componentInstance;
                    V.storeItem = d, this.openedModal$ = V.buyNowEvent$.pipe((0, he.q)(1), (0, $e.VS)(h => (V.awaitingPurchaseRes = !0, this.handleBuyNow$(h)))).subscribe(h => {
                        V.awaitingPurchaseRes = !1, V.setStage(h ? "success" : "failure")
                    })
                }

                showMoreInfo(d) {
                    this.akuma.postEvent("Control", "starstoreHomeTipBtn_pressed", this.starsService.getScreenOrder(d)), this.modalService.hasOpenModals() && this.modalService.dismissAll();
                    const V = this.modalService.open(Ns, {defaultStylings: !1, centered: !0}).componentInstance;
                    V.name = d.item_name, V.description = d.item_description, V.imageUrl = d.image_url
                }

                handleBuyNow$(d) {
                    return this.starsService.purchaseItem$(d.asset_group, d.value).pipe((0, he.q)(1), (0, at.U)(I => (console.log("StarStoreRoute->handleBuyNow$", I), !(I && I.error))))
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(He.Qz), e.Y36(xe.cM), e.Y36(xe.jt))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-star-store-route"]],
                decls: 8,
                vars: 2,
                consts: [[1, "background"], [1, "background__picture"], ["srcset", "\n        /assets/images/misc-art/misc-art--star-store@1x.webp 2284w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp 1714w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp 1142w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp  572w\n      ", "type", "image/webp"], ["srcset", "\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 2284w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 1714w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 1142w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg  572w\n      ", "type", "image/jpg"], ["src", "/assets/images/misc-art/misc-art--star-store@1x.jpg", "alt", "", 1, "background__picture__img"], [4, "ngIf", "ngIfElse"], ["emptyStateSection", ""], [1, "storeSection"], ["top", "x-large", 1, "storeSection__header"], ["size", "x-large", "fillGradient", "gradients.gold.simple", "align", "center"], ["kind", "large", "align", "center", "fillColor", "colors.light.100"], ["top", "x-large", 1, "storeSection__specials"], [4, "ngFor", "ngForOf"], ["class", "storeSection__specials__item", 3, "price", "imageUrl", "name", "durationType", "endTimestamp", "title", "onBuyItem", "onMoreInfo", 4, "ngIf"], [1, "storeSection__specials__item", 3, "price", "imageUrl", "name", "durationType", "endTimestamp", "title", "onBuyItem", "onMoreInfo"], [1, "emptyStateSection"]],
                template: function (d, I) {
                    if (1 & d && (e.TgZ(0, "div", 0), e.TgZ(1, "picture", 1), e._UZ(2, "source", 2), e._UZ(3, "source", 3), e._UZ(4, "img", 4), e.qZA(), e.qZA(), e.YNc(5, Ws, 11, 1, "ng-container", 5), e.YNc(6, Tt, 5, 0, "ng-template", null, 6, e.W1O)), 2 & d) {
                        const V = e.MAs(7);
                        e.xp6(5), e.Q6J("ngIf", I.currentItemsToDisplay)("ngIfElse", V)
                    }
                },
                directives: [u.O5, u.sg],
                styles: ["[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center}.background[_ngcontent-%COMP%], .background__picture[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}.background__picture__img[_ngcontent-%COMP%]{display:block;width:100%;height:100%;object-fit:cover}.storeSection[_ngcontent-%COMP%]{position:relative;overflow-y:auto;width:100%}.storeSection__header[_ngcontent-%COMP%]{padding:0 8px}.storeSection__header[_ngcontent-%COMP%]   gu-paragraph-text[_ngcontent-%COMP%]{max-width:630px;margin:auto}.storeSection__specials[_ngcontent-%COMP%]{display:flex;flex-wrap:wrap;justify-content:center}.emptyStateSection[_ngcontent-%COMP%]{position:relative;margin:auto}"]
            }), x
        })();

        function nn(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "gu-secondary-hex-button", 7), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().secondaryCtaClick()
                }), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw();
                e.Q6J("text", d.secondaryCtaText)
            }
        }

        function on(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "gu-primary-hex-button", 7), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().primaryCtaClick()
                }), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw();
                e.Q6J("text", d.primaryCtaText)
            }
        }

        n(52886), n(98590);
        let rn = (() => {
            class x {
                constructor(d) {
                    this.activeModal = d, this.onPrimaryCtaClick = () => {
                    }, this.onSecondaryCtaClick = () => {
                    }
                }

                secondaryCtaClick() {
                    this.onSecondaryCtaClick(), this.activeModal.close()
                }

                primaryCtaClick() {
                    this.onPrimaryCtaClick(), this.activeModal.close()
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(He.mX))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-confirm-modal"]],
                inputs: {
                    title: "title",
                    text: "text",
                    primaryCtaText: "primaryCtaText",
                    onPrimaryCtaClick: "onPrimaryCtaClick",
                    secondaryCtaText: "secondaryCtaText",
                    onSecondaryCtaClick: "onSecondaryCtaClick"
                },
                decls: 10,
                vars: 4,
                consts: [["goldBorder", "top"], ["top", "4x-large"], ["align", "center", "fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", "size", "small"], ["top", "large"], ["align", "center", "kind", "small", "fillColor", "colors.light.100", 1, "text"], ["top", "2x-large", "bottom", "4x-large", 1, "ctaSection"], ["class", "ctaSection__button", "size", "large", 3, "text", "click", 4, "ngIf"], ["size", "large", 1, "ctaSection__button", 3, "text", "click"]],
                template: function (d, I) {
                    1 & d && (e._UZ(0, "gu-modal-background", 0), e.TgZ(1, "gu-vertical-space", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA(), e.qZA(), e.TgZ(4, "gu-vertical-space", 3), e.TgZ(5, "gu-paragraph-text", 4), e._uU(6), e.qZA(), e.qZA(), e.TgZ(7, "gu-vertical-space", 5), e.YNc(8, nn, 1, 1, "gu-secondary-hex-button", 6), e.YNc(9, on, 1, 1, "gu-primary-hex-button", 6), e.qZA()), 2 & d && (e.xp6(3), e.hij(" ", I.title, " "), e.xp6(3), e.hij(" ", I.text, " "), e.xp6(2), e.Q6J("ngIf", I.secondaryCtaText), e.xp6(1), e.Q6J("ngIf", I.primaryCtaText))
                },
                directives: [u.O5],
                styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:640px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.alertIcon[_ngcontent-%COMP%]{font-size:80px}.heading[_ngcontent-%COMP%]{text-transform:uppercase}.ctaSection[_ngcontent-%COMP%]{display:flex;flex-flow:row nowrap}.ctaSection__button[_ngcontent-%COMP%]{min-width:200px}.ctaSection__button[_ngcontent-%COMP%]:nth-child(2){margin-left:16px}"]
            }), x
        })();
        var rs = n(92198);

        function Ln(x, j) {
            1 & x && e._UZ(0, "gu-icon", 3)
        }

        const an = function (x, j) {
            return {check__complete: x, check__unfinished: j}
        };
        let ln = (() => {
            class x {
                constructor() {
                }

                ngOnInit() {
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["tick-box"]],
                inputs: {finished: "finished"},
                decls: 3,
                vars: 5,
                consts: [[1, "check", 3, "ngClass"], [1, "check__box"], ["class", "checkmark", "iconLigature", "checkbox_tick", 4, "ngIf"], ["iconLigature", "checkbox_tick", 1, "checkmark"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "div", 0), e.TgZ(1, "div", 1), e.YNc(2, Ln, 1, 0, "gu-icon", 2), e.qZA(), e.qZA()), 2 & d && (e.Q6J("ngClass", e.WLB(2, an, I.finished, !I.finished)), e.xp6(2), e.Q6J("ngIf", I.finished))
                },
                directives: [u.mk, u.O5],
                styles: [".check__text[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.check[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.check__text[_ngcontent-%COMP%]{font-weight:700;line-height:28px;padding-left:10px}.check__complete[_ngcontent-%COMP%]{color:#50bcff;border-color:#50bcff}.check__unfinished[_ngcontent-%COMP%]{color:#7192b0;border-color:#7192b0}.check__box[_ngcontent-%COMP%]{height:20px;width:20px;background:#0F1B27;border:2px solid #8BE1E0;box-sizing:border-box}.checkmark[_ngcontent-%COMP%]{color:#50bcff;display:flex;font-weight:700}"]
            }), x
        })();

        function bs(x, j) {
            if (1 & x && (e.TgZ(0, "tr"), e.TgZ(1, "td"), e._uU(2), e.qZA(), e.TgZ(3, "td"), e._UZ(4, "tick-box", 21), e.qZA(), e.TgZ(5, "td"), e._UZ(6, "tick-box", 21), e.qZA(), e.TgZ(7, "td"), e._UZ(8, "tick-box", 21), e.qZA(), e.TgZ(9, "td"), e._uU(10), e.qZA(), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.xp6(2), e.Oqu(d.username), e.xp6(2), e.Q6J("finished", d.gu_account), e.xp6(2), e.Q6J("finished", d.coinbase_confirmed), e.xp6(2), e.Q6J("finished", d.game_played), e.xp6(2), e.Oqu(d.payment_status)
            }
        }

        const cn = function () {
            return {breakpoint: "small", size: "large"}
        }, dn = function (x) {
            return [x]
        };
        let Un = (() => {
            class x {
                constructor(d, I, V, h) {
                    this.activeModal = d, this.analyticsService = I, this.referralService = V, this.authService = h, this.unsubscribe = new ne.xQ
                }

                openLink(d, I) {
                    window.location.href = d
                }

                ngOnInit() {
                    this.isUserSignedIn = !!this.authService.getUserId(), this.authService.account$.pipe((0, q.R)(this.unsubscribe)).subscribe(d => {
                        this.isUserSignedIn = !!d, this.userId = this.isUserSignedIn ? this.authService.getUserId() : 0, this.referralService.getUserReferralsStatus(this.userId).pipe((0, q.R)(this.unsubscribe)).subscribe(I => {
                            console.log(I), this.userReferrals = I, this.totalAmount = this.userReferrals.reduce((V, h) => V + h.total_amt, 0)
                        })
                    })
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                onClose() {
                    this.activeModal.close("Referrals CTA closed")
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(He.mX), e.Y36(xe.jt), e.Y36(xe.C_), e.Y36(fe.mI))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["referrals-status"]],
                inputs: {userId: "userId"},
                decls: 47,
                vars: 10,
                consts: [["iconLigature", "close_x", 1, "modal__closeButton", 3, "click"], [1, "referrals__modal__content"], ["top", "3x-large", "bottom", "medium"], ["align", "center", "size", "small", 3, "responsiveSize"], ["top", "large", "bottom", "large"], [1, "referrals_status_container"], [2, "width", "100%"], [4, "ngFor", "ngForOf"], [1, "divider__line"], ["top", "medium", "bottom", "medium"], [1, "earnings"], [1, "earnings__shine"], [1, "earnings__container"], [1, "earnings__text"], [1, "earnings__value"], [1, "earnings__subtext"], [1, "earnings__info"], ["fillColor", "colors.light.500", "kind", "x-small", "align", "center", 2, "max-width", "450px"], ["top", "2x-large", "bottom", "3x-large"], [1, "signInToBegin"], ["size", "large", 2, "padding", "0 20px", 3, "click"], [3, "finished"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "gu-icon", 0), e.NdJ("click", function () {
                        return I.onClose()
                    }), e.qZA(), e.TgZ(1, "div", 1), e.TgZ(2, "gu-vertical-space", 2), e.TgZ(3, "gu-heading-text", 3), e._uU(4, " Referral Status"), e.qZA(), e.qZA(), e.TgZ(5, "gu-vertical-space", 4), e.TgZ(6, "div", 5), e.TgZ(7, "table", 6), e.TgZ(8, "tr"), e.TgZ(9, "th"), e._uU(10, "User"), e.qZA(), e.TgZ(11, "th"), e._uU(12, "GU account"), e.qZA(), e.TgZ(13, "th"), e._uU(14, "Coinbase account"), e.qZA(), e.TgZ(15, "th"), e._uU(16, "Game played"), e.qZA(), e.TgZ(17, "th"), e._uU(18, "Reward Status"), e.qZA(), e.qZA(), e.YNc(19, bs, 11, 5, "tr", 7), e.qZA(), e.qZA(), e.qZA(), e._UZ(20, "div", 8), e.TgZ(21, "gu-vertical-space", 9), e.TgZ(22, "gu-heading-text", 3), e._uU(23, " Earnings"), e.qZA(), e.qZA(), e.TgZ(24, "gu-vertical-space", 9), e.TgZ(25, "div", 10), e._UZ(26, "div", 11), e.TgZ(27, "div", 12), e.TgZ(28, "div", 13), e.TgZ(29, "div", 14), e._uU(30), e.qZA(), e.TgZ(31, "div", 15), e._uU(32, " Worth of Eth "), e.qZA(), e.TgZ(33, "div", 16), e._uU(34, " Earned from Referrals "), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e.TgZ(35, "gu-vertical-space", 9), e.TgZ(36, "gu-paragraph-text", 17), e._uU(37, " Once a friend has completed the required steps, it will take a few days to verify everything. Your referral earnings will be payed out every 7 days "), e.qZA(), e.qZA(), e.TgZ(38, "gu-vertical-space", 9), e.TgZ(39, "gu-paragraph-text", 17), e.TgZ(40, "strong"), e._uU(41, "Need some help?"), e.qZA(), e._uU(42, " Reach out to us on social media! "), e.qZA(), e.qZA(), e.TgZ(43, "gu-vertical-space", 18), e.TgZ(44, "div", 19), e.TgZ(45, "gu-primary-hex-button", 20), e.NdJ("click", function () {
                        return I.onClose()
                    }), e._uU(46, " Close Window "), e.qZA(), e.qZA(), e.qZA(), e.qZA()), 2 & d && (e.xp6(3), e.Q6J("responsiveSize", e.VKq(5, dn, e.DdM(4, cn))), e.xp6(16), e.Q6J("ngForOf", I.userReferrals), e.xp6(3), e.Q6J("responsiveSize", e.VKq(8, dn, e.DdM(7, cn))), e.xp6(8), e.hij(" $", I.totalAmount, " "))
                },
                directives: [u.sg, ln],
                styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;max-width:840px;text-align:center}.modal__closeButton[_ngcontent-%COMP%]{position:absolute;top:20px;right:20px;z-index:1;font-size:calc(var(--vh) * 2);color:#8be1e0;cursor:pointer}.modal__closeButton[_ngcontent-%COMP%]:hover{color:#f6f6f6}.referrals__modal__content[_ngcontent-%COMP%]{background:#0F1B27;box-sizing:border-box;border:2px solid #3D5A74;display:flex;flex-direction:column;padding:0 50px;align-items:center}@media only screen and (max-width: 768px){.referrals__modal__content[_ngcontent-%COMP%]{padding:0 20px;overflow-y:auto}}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border-left:2px solid #0A0A0A;border-right:2px solid #0A0A0A;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{text-align:center}th[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:24px;background:#1D2F41;color:#f6f6f6;padding:20px}td[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:24px;padding:10px 5px;color:#464646}tr[_ngcontent-%COMP%]{background:#F6F6F6}tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#d7d7d7}.divider__line[_ngcontent-%COMP%]{border:1px solid #1D2F41;margin:20px;width:100%}.earnings[_ngcontent-%COMP%]{display:flex;flex-direction:row}.earnings__container[_ngcontent-%COMP%]{background:linear-gradient(90deg,rgba(242,242,242,.1) .67%,rgba(255,255,255,.1) 51.76%,rgba(242,242,242,.1) 100%);border:1px solid #7f7f7f;box-sizing:border-box;font-family:Unchained;font-style:normal}.earnings__shine[_ngcontent-%COMP%]{background:linear-gradient(180deg,#fff2d8 0%,#ebc98b 50.34%,#c6a052 100%);width:8px;height:60px;box-sizing:border-box}.earnings__text[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center;margin:10px}.earnings__value[_ngcontent-%COMP%]{font-weight:700;font-size:32px;line-height:38px;text-transform:uppercase;color:#f6f6f6;padding-right:5px}.earnings__subtext[_ngcontent-%COMP%]{font-weight:700;font-size:12px;line-height:20px;text-transform:uppercase;color:#b6b6b6;padding-right:2vw}.earnings__info[_ngcontent-%COMP%]{font-weight:400;font-size:16px;line-height:24px;color:#f6f6f6}.socialButton[_ngcontent-%COMP%]{cursor:pointer;font-size:35px;margin:0 5px}.referrals_status_container[_ngcontent-%COMP%]{width:100%}@media only screen and (max-width: 768px){.referrals_status_container[_ngcontent-%COMP%]{width:90vw;overflow-x:scroll}}"]
            }), x
        })(), Rn = (() => {
            class x {
                constructor() {
                }

                ngOnInit() {
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["referrals-card-back"]],
                decls: 16,
                vars: 0,
                consts: [[1, "earnTogether__sideFigure"], [1, "earnTogether__figure"], ["srcset", "/assets/images/social-isolation/referrals/card_bg.webp", "type", "image/webp"], ["src", "/assets/images/social-isolation/referrals/card_bg.png", "alt", "", 1, "stackedCard__top"], [1, "stackedCard__lower", "stackedCard__lower__first"], [1, "stackedCard__lower", "stackedCard__lower__second"], [1, "earnTogether__cardContent"], ["top", "medium", "bottom", "large"], ["iconLigature", "friends_helmet", "fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", 1, "earnTogether__icon"], [1, "rewardsBlock__text", "rewardsBlock__totalValue"], ["top", "large", "bottom", "medium"], ["src", "/assets/images/social-isolation/referrals/gu-divder-small.svg", 1, "tasks__divider"], ["fillColor", "colors.light.100", 2, "padding", "0 40px"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "div", 0), e.TgZ(1, "figure", 1), e.TgZ(2, "picture"), e._UZ(3, "source", 2), e._UZ(4, "img", 3), e.qZA(), e._UZ(5, "div", 4), e._UZ(6, "div", 5), e.qZA(), e.TgZ(7, "div", 6), e.TgZ(8, "gu-vertical-space", 7), e._UZ(9, "gu-icon", 8), e.qZA(), e.TgZ(10, "div", 9), e._uU(11, " 10% "), e.qZA(), e.TgZ(12, "gu-vertical-space", 10), e._UZ(13, "img", 11), e.qZA(), e.TgZ(14, "gu-paragraph-text", 12), e._uU(15, " of referrals money spent added to your wallet "), e.qZA(), e.qZA(), e.qZA())
                },
                styles: ["[_nghost-%COMP%]{height:400px}.earnTogether__sideFigure[_ngcontent-%COMP%]{position:relative}.earnTogether__figure[_ngcontent-%COMP%]{min-width:300px}.earnTogether__cardContent[_ngcontent-%COMP%]{position:absolute;z-index:10;width:245px;height:360px;text-align:center;display:flex;flex-direction:column;justify-content:center;align-items:center;left:10%}.stackedCard__top[_ngcontent-%COMP%]{box-shadow:4px 4px 8px #0a0a0a;border:1px solid #464646;position:absolute;z-index:3}.stackedCard__lower[_ngcontent-%COMP%]{background:linear-gradient(360deg,#0f1b27 0%,#0f1b27 11.53%,#1d2f41 50.05%,#0f1b27 88.69%,#0f1b27 100%);box-shadow:4px 4px 8px #0a0a0a;border:1px solid #464646;box-sizing:border-box;position:absolute;height:360px;width:240px}.stackedCard__lower__first[_ngcontent-%COMP%]{left:30px;top:15px;z-index:2}.stackedCard__lower__second[_ngcontent-%COMP%]{left:25px;top:25px;z-index:1}.earnTogether__icon[_ngcontent-%COMP%]{font-size:90px}.rewardsBlock__text[_ngcontent-%COMP%]{font-family:Unchained;font-style:normal;font-weight:700;text-transform:uppercase}.rewardsBlock__totalValue[_ngcontent-%COMP%]{font-size:43px;line-height:30px;color:#f6f6f6}.rewardsBlock__totalValue__currency[_ngcontent-%COMP%]{font-size:24px;line-height:29px;text-align:center;color:#d7d7d7}.tasks__divider[_ngcontent-%COMP%]{width:100%}"]
            }), x
        })(), Gt = (() => {
            class x {
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["referrals-task"]],
                inputs: {
                    taskId: "taskId",
                    taskTitle: "taskTitle",
                    taskImage: "taskImage",
                    taskDescription: "taskDescription"
                },
                decls: 13,
                vars: 4,
                consts: [[1, "taskId"], ["align", "center", "size", "x-small", "fillGradient", "gradients.gold.simple", 1, "taskId__number"], [1, "taskPicture"], ["srcset", "/assets/images/social-isolation/referrals/task_diamond.webp", "type", "image/webp"], ["src", "/assets/images/social-isolation/referrals/task_diamond.png", "alt", "GU_Task"], [1, "outerBox"], [1, "innerBox"], ["align", "center", "size", "x-small", 1, "taskTitle"], ["alt", "GU_Task", 1, "taskPicture__img", 3, "src"], ["align", "center", "fillColor", "colors.light.300", 1, "taskDescription", 3, "innerHTML"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "div", 0), e.TgZ(1, "gu-heading-text", 1), e._uU(2), e.qZA(), e.TgZ(3, "picture", 2), e._UZ(4, "source", 3), e._UZ(5, "img", 4), e.qZA(), e.qZA(), e.TgZ(6, "div", 5), e.TgZ(7, "div", 6), e.TgZ(8, "gu-heading-text", 7), e._uU(9), e.qZA(), e.TgZ(10, "picture", 2), e._UZ(11, "img", 8), e.qZA(), e._UZ(12, "gu-paragraph-text", 9), e.qZA(), e.qZA()), 2 & d && (e.xp6(2), e.hij(" ", I.taskId, " "), e.xp6(7), e.hij(" ", I.taskTitle, " "), e.xp6(2), e.Q6J("src", I.taskImage, e.LSH), e.xp6(1), e.Q6J("innerHTML", I.taskDescription, e.oJD))
                },
                styles: ["[_nghost-%COMP%]{background-color:#0f1b27;display:block;min-height:300px;position:relative;width:300px;border:2px solid #0F1B27;box-sizing:border-box;margin:20px}.outerBox[_ngcontent-%COMP%]{background:linear-gradient(90deg,#c6a052 2.93%,#ebc98b 25.01%,#fff2d8 50.44%,#ebc98b 74.21%,#c6a052 96.95%);box-shadow:0 2px 5px #0000004d;height:100%;width:100%;padding:2px}.innerBox[_ngcontent-%COMP%]{width:100%;height:100%;background:#0F1B27;display:flex;flex-direction:column}.taskId[_ngcontent-%COMP%]{position:absolute;left:50%;top:-32px;transform:translate(-50%)}.taskId__number[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%);top:25%}.taskTitle[_ngcontent-%COMP%]{padding:10px;margin-top:30px}.taskPicture__img[_ngcontent-%COMP%]{border-top:1px solid #979797;border-bottom:1px solid #979797;width:100%}.taskDescription[_ngcontent-%COMP%]{padding:8px 10px;font-size:15px}"]
            }), x
        })(), un = (() => {
            class x {
                constructor(d, I) {
                    this.analyticsService = d, this.copyService = I
                }

                ngOnInit() {
                    switch (this.socialMedia) {
                        case"facebook":
                            this.iconLigature = "social_facebook", this.title = "Facebook";
                            break;
                        case"twitter":
                            this.iconLigature = "social_twitter", this.title = "Twitter";
                            break;
                        default:
                            this.iconLigature = "action_duplicate", this.title = "Copy Message"
                    }
                }

                shareLink() {
                    switch (this.socialMedia) {
                        case"facebook":
                            window.open(`https://www.facebook.com/sharer/sharer.php?u=${this.referralLink}&quote=${this.referralCopy}`, "_blank");
                            break;
                        case"twitter":
                            window.open(`https://twitter.com/intent/tweet?text=${this.referralCopy}&url=${this.referralLink}`, "_blank");
                            break;
                        default:
                            this.copyLink()
                    }
                }

                copyLink() {
                    this.copyService.copyText(this.referralCopy + this.referralLink), this.title = "Link Copied", setTimeout(() => {
                        this.title = "Copy Message"
                    }, 2e3)
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(xe.jt), e.Y36(xe.tX))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["share-button"]],
                inputs: {socialMedia: "socialMedia", referralLink: "referralLink", referralCopy: "referralCopy"},
                decls: 4,
                vars: 2,
                consts: [[1, "shareButton", 3, "click"], [1, "shareButton__icon", 3, "iconLigature"], ["size", "2x-small", 1, "shareButton__shareText"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "button", 0), e.NdJ("click", function () {
                        return I.shareLink()
                    }), e._UZ(1, "gu-icon", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA(), e.qZA()), 2 & d && (e.xp6(1), e.Q6J("iconLigature", I.iconLigature), e.xp6(2), e.hij(" ", I.title, " "))
                },
                styles: ["[_nghost-%COMP%]{margin:10px 10px 10px 0}.shareButton[_ngcontent-%COMP%]{white-space:nowrap;padding:10px 15px;background:transparent;border:2px solid #8be1e0;display:flex;align-items:center;outline:none}.shareButton[_ngcontent-%COMP%]:hover{padding:12px 17px;color:#182531;border:none;background:linear-gradient(to bottom,#AFFAED 0%,#54BBCD 100%)}.shareButton[_ngcontent-%COMP%]:hover   .shareButton__shareText[_ngcontent-%COMP%]{-webkit-text-fill-color:var(--gu-blue-dark)}.shareButton[_ngcontent-%COMP%]:hover   .shareButton__icon[_ngcontent-%COMP%]{-webkit-text-fill-color:black}@media only screen and (max-width: 768px){.shareButton[_ngcontent-%COMP%]{padding:10px}}.shareButton__icon[_ngcontent-%COMP%]{-webkit-text-fill-color:var(--gu-blue);font-size:calc(var(--vh) * 2.5);margin-right:calc(var(--vw) * .5);display:inline-flex;align-items:flex-start}.shareButton__icon[_ngcontent-%COMP%]:hover{-webkit-text-fill-color:black}@media only screen and (max-width: 768px){.shareButton__icon[_ngcontent-%COMP%]{margin-right:0}}.shareButton__shareText[_ngcontent-%COMP%]{background:linear-gradient(to bottom,#affaed 0%,#8be1e0 50%,#54bbcd 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}@media only screen and (max-width: 768px){.shareButton__shareText[_ngcontent-%COMP%]{display:none}}"]
            }), x
        })();

        function Jt(x, j) {
            if (1 & x && (e.TgZ(0, "option", 3), e._uU(1), e.qZA()), 2 & x) {
                const d = j.$implicit;
                e.Q6J("ngValue", d), e.xp6(1), e.Oqu(d)
            }
        }

        function pn(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "form", 1), e.TgZ(1, "select", 2), e.NdJ("ngModelChange", function (V) {
                    return e.CHM(d), e.oxw().updateWallet(V)
                })("ngModelChange", function (V) {
                    return e.CHM(d), e.oxw().selectedWallet = V
                }), e.TgZ(2, "option", 3), e._uU(3, "Please select a wallet"), e.qZA(), e.YNc(4, Jt, 2, 2, "option", 4), e.qZA(), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw();
                e.xp6(1), e.Q6J("ngModel", d.selectedWallet), e.xp6(1), e.Q6J("ngValue", null), e.xp6(2), e.Q6J("ngForOf", d.playerWallets)
            }
        }

        function gn(x, j) {
            1 & x && (e.TgZ(0, "div", 1), e.TgZ(1, "div", 5), e._uU(2, " You don't have a wallet linked. "), e.qZA(), e.TgZ(3, "a", 6), e._uU(4, "Link my wallet"), e.qZA(), e.qZA())
        }

        let Bn = (() => {
            class x {
                constructor() {
                    this.walletSelected = new e.vpe
                }

                updateWallet(d) {
                    this.selectedWallet = d, this.walletSelected.emit(this.selectedWallet)
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["wallet-settings"]],
                inputs: {playerWallets: "playerWallets", selectedWallet: "selectedWallet"},
                outputs: {walletSelected: "walletSelected"},
                decls: 2,
                vars: 2,
                consts: [["class", "settings", 4, "ngIf"], [1, "settings"], ["name", "selectedWallet", "id", "sel1", 1, "settings__select", 3, "ngModel", "ngModelChange"], [3, "ngValue"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "settings__label"], ["href", "https://www.godsunchained.com/?linkwallet=true", 1, "settings__cta"]],
                template: function (d, I) {
                    1 & d && (e.YNc(0, pn, 5, 3, "form", 0), e.YNc(1, gn, 5, 0, "div", 0)), 2 & d && (e.Q6J("ngIf", I.playerWallets && I.playerWallets.length > 0), e.xp6(1), e.Q6J("ngIf", !I.playerWallets || 0 === I.playerWallets.length))
                },
                directives: [u.O5, i._Y, i.JL, i.F, i.EJ, i.JJ, i.On, i.YN, i.Kr, u.sg],
                styles: [".settings__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.5}.settings__select[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}[_nghost-%COMP%]{display:block}.settings[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:100%;margin:auto}.settings__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.settings__select[_ngcontent-%COMP%]{color:#fff;font-size:16px;line-height:24px;width:100%;display:flex;align-items:center;background:#0F1B27;border:1px solid #3D5A74;box-sizing:border-box;border-radius:2px;padding:7px;margin-top:calc(var(--vh) * .65)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settings__cta[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);color:#affaed}"]
            }), x
        })();

        function Gn(x, j) {
            if (1 & x && (e.ynx(0), e._UZ(1, "referrals-task", 30), e.BQk()), 2 & x) {
                const d = j.$implicit;
                e.xp6(1), e.Q6J("taskId", d.taskId)("taskTitle", d.taskTitle)("taskDescription", d.taskDescription)("taskImage", d.taskImage)
            }
        }

        function ys(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "section", 31), e.TgZ(1, "figure", 32), e.TgZ(2, "picture"), e._UZ(3, "source", 33), e._UZ(4, "img", 34), e.qZA(), e.qZA(), e.TgZ(5, "div", 35), e.TgZ(6, "gu-vertical-space", 36), e.TgZ(7, "div", 37), e._uU(8, " Share the below link with your friends "), e.qZA(), e.qZA(), e.TgZ(9, "div", 38), e._uU(10), e.TgZ(11, "strong"), e._uU(12), e.qZA(), e._uU(13, " on the website here "), e.TgZ(14, "span", 39), e._uU(15), e.qZA(), e.qZA(), e.TgZ(16, "div", 40), e._UZ(17, "share-button", 41), e._UZ(18, "share-button", 42), e._UZ(19, "share-button", 42), e.qZA(), e.TgZ(20, "gu-vertical-space", 43), e._UZ(21, "div", 44), e.qZA(), e.TgZ(22, "gu-vertical-space", 45), e.TgZ(23, "gu-paragraph-text", 46), e._uU(24, " Select the wallet you want your rewards to go to "), e.qZA(), e.qZA(), e.TgZ(25, "wallet-settings", 47), e.NdJ("walletSelected", function (V) {
                    return e.CHM(d), e.oxw().updateWallet(V)
                }), e.qZA(), e.qZA(), e.qZA()
            }
            if (2 & x) {
                const d = e.oxw();
                e.xp6(10), e.hij(" ", d.referralCopy, " "), e.xp6(2), e.Oqu(d.referralCode), e.xp6(3), e.Oqu(d.referralLink), e.xp6(2), e.Q6J("referralLink", d.referralLink)("referralCopy", d.shareCopy), e.xp6(1), e.Q6J("referralLink", d.referralLink)("referralCopy", d.shareCopy)("socialMedia", "facebook"), e.xp6(1), e.Q6J("referralLink", d.referralLink)("referralCopy", d.shareCopy)("socialMedia", "twitter"), e.xp6(6), e.Q6J("playerWallets", d.playerWallets)("selectedWallet", d.selectedWallet)
            }
        }

        function as(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "div", 48), e.TgZ(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().signIn()
                }), e._uU(2, " Sign in to begin "), e.qZA(), e.qZA()
            }
        }

        function Hs(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "div", 48), e.TgZ(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().signIn()
                }), e._uU(2, " Sign in to begin "), e.qZA(), e.qZA()
            }
        }

        function Fn(x, j) {
            if (1 & x) {
                const d = e.EpF();
                e.TgZ(0, "div", 48), e.TgZ(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                    return e.CHM(d), e.oxw().copyShareCode()
                }), e._uU(2, " Copy share Code "), e.qZA(), e.qZA()
            }
        }

        const Cs = function () {
            return {breakpoint: "small", size: "large"}
        }, Mt = function (x) {
            return [x]
        }, mt = function () {
            return {breakpoint: "small", size: "medium"}
        };
        let ls = (() => {
            class x {
                constructor(d, I, V, h, L, l) {
                    this.authService = d, this.cerberusModalService = I, this.router = V, this.analyticsService = h, this.copyService = L, this.referralService = l, this.selectedWallet = null, this.unsubscribe = new ne.xQ, this.referralCopy = "If you're looking for the next game to play, Gods Unchained is a great game that you should check out. Sign up using with my referral code: "
                }

                ngOnDestroy() {
                    this.unsubscribe.next(), this.unsubscribe.complete()
                }

                createReferralCode(d) {
                    this.referralService.createReferralCode(d).subscribe(I => {
                        this.referralCode = I.code, this.selectedWallet = I.referral_payout_address, this.referralLink = I.result, this.shareCopy = `${this.referralCopy}${this.referralCode} on the website here `
                    })
                }

                ngOnInit() {
                    this.getWallets(), this.referralTasks = this.getTasks(), this.userId = this.authService.getUserId(), this.isUserSignedIn = !!this.authService.getUserId(), this.authService.account$.pipe((0, q.R)(this.unsubscribe), (0, rs.h)(d => !!d), (0, he.q)(1)).subscribe(d => {
                        this.isUserSignedIn = !!d, this.userId = this.isUserSignedIn ? this.authService.getUserId() : 0, this.createReferralCode(this.userId)
                    })
                }

                copyShareCode() {
                    this.copyService.copyText(`${this.referralCopy}${this.referralCode} on the website here ${this.referralLink}`)
                }

                signIn() {
                    this.router.navigate(["/account/login"], {queryParams: {return: N.CF.J.learn.children.referrals.path}})
                }

                checkReferralsStatus() {
                    this.cerberusModalService.open(Un, {
                        centered: !0,
                        scrollable: !0
                    }).componentInstance.userId = this.userId
                }

                getWallets() {
                    this.authService.account$.pipe((0, rs.h)(d => !!d), (0, at.U)(d => d.addresses)).subscribe(d => {
                        this.playerWallets = d.filter(I => I.imx_linked).map(I => I.address)
                    })
                }

                updateWallet(d) {
                    this.selectedWallet = d, this.referralService.updatePayoutAddress(this.userId, d).subscribe(I => console.log(I))
                }

                getTasks() {
                    return [{
                        taskId: 1,
                        taskTitle: "INVITE friends",
                        taskDescription: "Send the link below to a friend or post it to your social channels",
                        taskImage: "/assets/images/social-isolation/referrals/invite_friends.png"
                    }, {
                        taskId: 2,
                        taskTitle: "Track Progress",
                        taskDescription: "The person referred buys any Divine Order card packs",
                        taskImage: "/assets/images/social-isolation/referrals/track_progress.png"
                    }, {
                        taskId: 3,
                        taskTitle: "Earn Rewards",
                        taskDescription: "Receive 10% of the money they spend!",
                        taskImage: "/assets/images/social-isolation/referrals/earn_rewards.png"
                    }]
                }
            }

            return x.\u0275fac = function (d) {
                return new (d || x)(e.Y36(fe.mI), e.Y36(He.Qz), e.Y36(qe.F0), e.Y36(xe.jt), e.Y36(xe.tX), e.Y36(xe.C_))
            }, x.\u0275cmp = e.Xpm({
                type: x,
                selectors: [["cerberus-referrals-route"]],
                decls: 62,
                vars: 13,
                consts: [[1, "intro"], ["top", "5x-large"], ["align", "center", "fillColor", "colors.dark.900", "size", "small", 3, "responsiveSize"], ["top", "large"], ["align", "center", "fillColor", "colors.gunmetal.500", "size", "medium", 1, "subTitle"], ["top", "small"], ["align", "center", "fillColor", "colors.dark.700"], [1, "theMoreYouPurchase"], [1, "steps"], ["top", "2x-large"], [1, "referralSteps"], [4, "ngFor", "ngForOf"], ["class", "share", 4, "ngIf"], ["top", "medium", "bottom", "large"], ["class", "signInToBegin", 4, "ngIf"], [1, "rewards"], ["top", "large", "both", "medium"], ["src", "/assets/images/social-isolation/referrals/tasks_divider.svg", 1, "tasks__divider"], [1, "rewards__container"], [1, "cardBack__container"], ["align", "left", "fillColor", "colors.dark.900", "size", "x-small", 3, "responsiveSize"], ["top", "small", "bottom", "large"], ["align", "left", "fillColor", "colors.gunmetal.500", "fontWeight", "bold", "size", "5x-small"], ["fillColor", "colors.gunmetal.900", "kind", "4x-small"], ["fillColor", "colors.gunmetal.900"], ["top", "small", "bottom", "medium"], ["srcset", "/assets/images/misc-art/misc-art--wizard-with-key.webp", "type", "image/webp"], ["srcset", "/assets/images/misc-art/misc-art--wizard-with-key.jpg", "type", "image/jpg"], ["src", "/assets/images/misc-art/misc-art--wizard-with-key.jpg"], [1, "innerFooter"], [3, "taskId", "taskTitle", "taskDescription", "taskImage"], [1, "share"], [1, "share__figure"], ["srcset", "/assets/images/misc-art/x2_brand_visual.webp", "type", "image/webp"], ["src", "/assets/images/misc-art/x2_brand_visual.png", 1, "share__img"], [1, "share__content"], ["bottom", "medium"], [1, "share__socialMedia__title"], [1, "share__socialMedia__text"], [1, "share__socialMedia__text__Link"], [1, "share__socialMedia__buttons"], [3, "referralLink", "referralCopy"], [3, "referralLink", "referralCopy", "socialMedia"], ["top", "large", "bottom", "large", 2, "width", "100%"], [1, "share__socialMedia__divider__line"], ["top", "large", "bottom", "medium"], ["fillColor", "colors.light.100"], [3, "playerWallets", "selectedWallet", "walletSelected"], [1, "signInToBegin"], ["size", "large", 2, "padding", "0 25px", 3, "click"]],
                template: function (d, I) {
                    1 & d && (e.TgZ(0, "div"), e.TgZ(1, "section", 0), e.TgZ(2, "gu-vertical-space", 1), e.TgZ(3, "gu-heading-text", 2), e._uU(4, " Money Spent Is Money Earned "), e.qZA(), e.qZA(), e.TgZ(5, "gu-vertical-space", 3), e.TgZ(6, "gu-paragraph-text", 4), e._uU(7, " Mortals. Together. Strong. "), e.qZA(), e.qZA(), e.TgZ(8, "gu-vertical-space", 5), e.TgZ(9, "gu-paragraph-text", 6), e.TgZ(10, "div", 7), e._uU(11, " Put down your axe and extend a helping hand to your fellow mortal. By inviting friends who make purchases, you\u2019ll receive great rewards! "), e.qZA(), e.qZA(), e.qZA(), e.qZA(), e.TgZ(12, "section", 8), e.TgZ(13, "gu-vertical-space", 9), e.TgZ(14, "div", 10), e.YNc(15, Gn, 2, 4, "ng-container", 11), e.qZA(), e.qZA(), e.qZA(), e.YNc(16, ys, 26, 13, "section", 12), e.TgZ(17, "section"), e.TgZ(18, "gu-vertical-space", 13), e.YNc(19, as, 3, 0, "div", 14), e.qZA(), e.qZA(), e.TgZ(20, "section", 15), e.TgZ(21, "gu-vertical-space", 16), e._UZ(22, "img", 17), e.qZA(), e.TgZ(23, "div", 18), e.TgZ(24, "div", 19), e._UZ(25, "referrals-card-back"), e.qZA(), e.TgZ(26, "div"), e.TgZ(27, "gu-heading-text", 20), e._uU(28, " Earn Together "), e.qZA(), e.TgZ(29, "gu-vertical-space", 21), e.TgZ(30, "gu-paragraph-text", 22), e._uU(31, " Receive 10% of the money spent by the people you refer! "), e.qZA(), e.qZA(), e.TgZ(32, "gu-paragraph-text", 23), e.TgZ(33, "strong"), e._uU(34, "People you refer need to:"), e.qZA(), e.TgZ(35, "ol"), e.TgZ(36, "li"), e._uU(37, "Create a Gods Unchained account"), e.qZA(), e.TgZ(38, "li"), e._uU(39, "Purchase any Divine Order Packs and/or Chests"), e.qZA(), e.TgZ(40, "li"), e._uU(41, "Have a valid wallet linked to Immutable X"), e.qZA(), e.qZA(), e.qZA(), e.TgZ(42, "gu-paragraph-text", 24), e._uU(43, " There is "), e.TgZ(44, "strong"), e._uU(45, "no limit to how many friends you can invite"), e.qZA(), e._uU(46, ", so send your unique codes far and wide. "), e.qZA(), e.TgZ(47, "gu-paragraph-text", 24), e._uU(48, " The processing of referral payments will take place every 14 days. At these intervals any referral payouts due will be calculated and payed out for all purchases made in the previous cycle. "), e.TgZ(49, "strong"), e._uU(50, "Payment will be made in ETH"), e.qZA(), e._uU(51, " directly to your selected Immutable X linked wallet. "), e.qZA(), e._UZ(52, "gu-vertical-space", 13), e.qZA(), e.qZA(), e.qZA(), e.TgZ(53, "gu-vertical-space", 25), e.TgZ(54, "div"), e.YNc(55, Hs, 3, 0, "div", 14), e.YNc(56, Fn, 3, 0, "div", 14), e.qZA(), e.qZA(), e.qZA(), e.TgZ(57, "picture"), e._UZ(58, "source", 26), e._UZ(59, "source", 27), e._UZ(60, "img", 28), e.qZA(), e._UZ(61, "section", 29)), 2 & d && (e.xp6(3), e.Q6J("responsiveSize", e.VKq(8, Mt, e.DdM(7, Cs))), e.xp6(12), e.Q6J("ngForOf", I.referralTasks), e.xp6(1), e.Q6J("ngIf", I.isUserSignedIn), e.xp6(3), e.Q6J("ngIf", !I.isUserSignedIn), e.xp6(8), e.Q6J("responsiveSize", e.VKq(11, Mt, e.DdM(10, mt))), e.xp6(28), e.Q6J("ngIf", !I.isUserSignedIn), e.xp6(1), e.Q6J("ngIf", I.isUserSignedIn))
                },
                directives: [u.sg, u.O5, Rn, Gt, un, Bn],
                styles: [".share__socialMedia__title[_ngcontent-%COMP%], .subTitle[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.share__socialMedia__text[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}[_nghost-%COMP%]{overflow-y:auto;background-color:#f6f6f6}a[_ngcontent-%COMP%]{color:#000}.subTitle[_ngcontent-%COMP%]{font-weight:700;line-height:28px}.earnTogether[_ngcontent-%COMP%]{display:flex;flex-direction:row;position:relative;max-width:960px;padding:20px}@media only screen and (max-width: 768px){.earnTogether[_ngcontent-%COMP%]{flex-wrap:wrap;flex-direction:column-reverse;justify-content:center;align-items:center}}.tasks__divider[_ngcontent-%COMP%]{width:100%}.referralSteps[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;margin:10px}.signInToBegin[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:column}.theMoreYouPurchase[_ngcontent-%COMP%]{margin:0 auto;max-width:566px;padding:10px}[_nghost-%COMP%]{display:flex;flex-direction:column;position:relative}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{width:100%;z-index:1;display:flex;flex-direction:column;justify-content:center;align-items:center}[_nghost-%COMP%] > picture[_ngcontent-%COMP%]{align-items:center;bottom:0;display:flex;justify-content:center;left:0;overflow:hidden;position:absolute;right:0;top:0}[_nghost-%COMP%] > picture[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover;object-position:center top}.earnTogether__text[_ngcontent-%COMP%]{display:flex;flex-direction:column}.innerFooter[_ngcontent-%COMP%]{background:#0A0A0A;height:40px;z-index:1;margin-top:-24px;position:relative;clip-path:polygon(0% 0%,calc(50% - 140px) 0%,calc(50% - 124px) 22px,calc(50% + 124px) 22px,calc(50% + 140px) 0%,100% 0%,100% 100%,0% 100%)}.share[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:row;border-top:1px solid #0A0A0A;border-bottom:1px solid #0A0A0A;flex-wrap:wrap;justify-content:center;align-items:center;background:#0F1B27}@media only screen and (max-width: 768px){.share[_ngcontent-%COMP%]{display:block}}.share__content[_ngcontent-%COMP%]{flex:1;background:#0F1B27;display:flex;flex-direction:column;padding:40px}@media only screen and (max-width: 768px){.share__content[_ngcontent-%COMP%]{align-items:center;text-align:center}}.share__figure[_ngcontent-%COMP%]{flex:1;margin:0;line-height:.5}.share__img[_ngcontent-%COMP%]{width:100%;object-fit:cover;object-position:center center;height:470px}@media only screen and (max-width: 768px){.share__img[_ngcontent-%COMP%]{height:148px}}.share__socialMedia__title[_ngcontent-%COMP%]{font-weight:700;color:#f6f6f6}.share__socialMedia__text[_ngcontent-%COMP%]{font-size:16px;text-align:left;color:#b6b6b6;border:2px solid #3D5A74;box-sizing:border-box;padding:15px;background:#1D2F41}.share__socialMedia__text__Link[_ngcontent-%COMP%]{color:#f6f6f6}.share__socialMedia__buttons[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:10px 10px 10px 0}.share__socialMedia__divider__line[_ngcontent-%COMP%]{border:1px solid #1D2F41;width:100%}.referral_status_btn[_ngcontent-%COMP%]{width:200px;margin:10px 0;padding:20px}.rewards[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]{list-style:inside decimal;padding-left:0;margin-block:0}.rewards[_ngcontent-%COMP%]   gu-paragraph-text[_ngcontent-%COMP%]{margin-bottom:32px}.rewards__container[_ngcontent-%COMP%]{display:flex;flex-direction:column-reverse;max-width:960px;margin:0 20px}.cardBack__container[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:-80px}@media screen and (min-width: 768px){.rewards__container[_ngcontent-%COMP%]{flex-direction:row}.cardBack__container[_ngcontent-%COMP%]{margin-bottom:0}.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:-40px}}@media screen and (min-width: 960px){.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:0}}"]
            }), x
        })();
        var xs = n(37371);
        n(39765)
    }, 46313: oe => {
        function R(n) {
            var u = new Error("Cannot find module '" + n + "'");
            throw u.code = "MODULE_NOT_FOUND", u
        }

        R.keys = () => [], R.resolve = R, R.id = 46313, oe.exports = R
    }, 26093: () => {
    }, 88677: () => {
    }, 52005: () => {
    }, 9327: () => {
    }, 62808: () => {
    }, 82169: () => {
    }, 61860: () => {
    }, 81393: () => {
    }, 50868: () => {
    }, 42803: () => {
    }, 67778: () => {
    }, 61633: () => {
    }, 16572: () => {
    }, 46601: () => {
    }, 71922: () => {
    }, 2363: () => {
    }, 96419: () => {
    }, 56353: () => {
    }, 85568: () => {
    }, 53396: () => {
    }, 68587: () => {
    }, 37957: () => {
    }, 29120: () => {
    }, 46586: () => {
    }, 6567: () => {
    }, 47165: () => {
    }, 69862: () => {
    }, 40964: () => {
    }, 1189: () => {
    }, 2243: () => {
    }, 52293: () => {
    }, 58678: () => {
    }, 92916: oe => {
        "use strict";
        oe.exports = JSON.parse('{"contractName":"CappedVault","abi":[{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"total","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"withdrawAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"limit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"}],"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"1":"0x91b9d2835ad914bc1dcfe09bd1816febd04fd689"},"schemaVersion":"3.0.16","updatedAt":"2019-09-18T05:50:16.377Z"}')
    }, 45861: oe => {
        "use strict";
        oe.exports = JSON.parse('{"contractName":"Chest","abi":[{"constant":true,"inputs":[],"name":"sold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"packType","outputs":[{"internalType":"enum Pack.Type","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"processor","outputs":[{"internalType":"contract IProcessor","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pack","outputs":[{"internalType":"contract IPack","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"tradeable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IPack","name":"_pack","type":"address"},{"internalType":"enum Pack.Type","name":"_pt","type":"uint8"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"contract IProcessor","name":"_processor","type":"address"},{"internalType":"uint256","name":"_cap","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"sym","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"count","type":"uint256"},{"indexed":false,"internalType":"address","name":"referrer","type":"address"},{"indexed":false,"internalType":"uint256","name":"paymentID","type":"uint256"}],"name":"ChestsPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":false,"inputs":[{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"purchase","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"purchaseFor","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"open","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"openFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"makeTradeable","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"compiler":{"name":"solc","version":"0.5.11+commit.c082d0b4.Emscripten.clang","optimizer":false,"runs":200},"networks":{},"schemaVersion":"2.2.3","updatedAt":"2019-10-15T03:24:19.434Z"}')
    }
}, oe => {
    oe.O(0, [736], () => oe(oe.s = 11978)), oe.O()
}]);
// noinspection BadExpressionStatementJS,JSStringConcatenationToES6Template

(self.webpackChunkdesktop = self.webpackChunkdesktop || []).push([[179], {
    63764: (se, B, o) => {
        "use strict";
        o.d(B, {S: () => y});
        var c = o(5e3), i = o(69808);
        let y = (() => {
            class e {
                constructor() {
                    this.canCloseFromInside = !1, this.closeModal$ = new c.vpe
                }

                ngOnInit() {
                }

                closeModal(p) {
                    p && !this.canCloseFromInside || this.closeModal$.emit()
                }
            }

            return e.\u0275fac = function (p) {
                return new (p || e)
            }, e.\u0275cmp = c.Xpm({
                type: e,
                selectors: [["app-info-modal"]],
                inputs: {title: "title", text: "text", styles: "styles", canCloseFromInside: "canCloseFromInside"},
                outputs: {closeModal$: "closeModal$"},
                decls: 7,
                vars: 3,
                consts: [[1, "modal-holder", 3, "ngStyle", "click"], [1, "container-fluid"], [1, "row"], [1, "col-12", "text-center", "gold-text", "bourbon", "title-container"], [1, "col-12", "text-center", "info-container", 3, "innerHTML"]],
                template: function (p, g) {
                    1 & p && (c.TgZ(0, "div", 0), c.NdJ("click", function () {
                        return g.closeModal(!0)
                    }), c.TgZ(1, "div", 1)(2, "div", 2)(3, "div", 3), c._uU(4), c.qZA()(), c.TgZ(5, "div", 2), c._UZ(6, "div", 4), c.qZA()()()), 2 & p && (c.Q6J("ngStyle", g.styles), c.xp6(4), c.hij(" ", g.title, " "), c.xp6(2), c.Q6J("innerHTML", g.text, c.oJD))
                },
                directives: [i.PC],
                styles: [".modal-holder[_ngcontent-%COMP%]{min-width:calc(var(--vw) * 15.62);border:1px solid white;z-index:21;overflow:auto;background-color:#060b11b3;border-radius:calc(var(--vh) * .4)}.title-container[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);border-bottom:1px solid white;font-size:x-large}.info-container[_ngcontent-%COMP%]{padding:calc(var(--vh) * 3.7)}"]
            }), e
        })()
    }, 531: (se, B, o) => {
        "use strict";
        o.d(B, {$$: () => c, ZW: () => g, u4: () => r, VY: () => t});

        class c {
            constructor(v, P, w, L, T = []) {
                this.id = v, this.name = P, this.god = w, this.items = T, this.deck_type = L
            }
        }

        class g {
            constructor(v, P, w = null) {
                this.deck = v, this.type = P, this.cards = w
            }
        }

        var r = (() => {
            return (n = r || (r = {}))[n.Add = 0] = "Add", n[n.Remove = 1] = "Remove", n[n.Change = 2] = "Change", n[n.CardLimit = 3] = "CardLimit", n[n.DeckLimit = 4] = "DeckLimit", n[n.NoActiveDeck = 5] = "NoActiveDeck", n[n.StatChange = 6] = "StatChange", r;
            var n
        })();

        class t {
            constructor(v, P = null, w = !1) {
                this.deckSelect = v, this.gameModeID = P, this.forAI = w
            }
        }
    }, 57674: (se, B, o) => {
        "use strict";
        o.d(B, {PE: () => i});
        var i = (() => {
            return (g = i || (i = {}))[g.AscID = 0] = "AscID", g[g.DescID = 1] = "DescID", g[g.AscQuality = 2] = "AscQuality", g[g.DescQuality = 3] = "DescQuality", g[g.AscMana = 4] = "AscMana", g[g.DescMana = 5] = "DescMana", g[g.AscScarcity = 6] = "AscScarcity", g[g.AscHealth = 7] = "AscHealth", g[g.DescHealth = 8] = "DescHealth", g[g.AscAttack = 9] = "AscAttack", g[g.DescAttack = 10] = "DescAttack", g[g.AscTribe = 11] = "AscTribe", g[g.DescTribe = 12] = "DescTribe", g[g.AscRarity = 13] = "AscRarity", g[g.DescRarity = 14] = "DescRarity", g[g.AscType = 15] = "AscType", g[g.DescType = 16] = "DescType", g[g.AscGod = 17] = "AscGod", g[g.DescGod = 18] = "DescGod", g[g.AscSet = 19] = "AscSet", g[g.DescSet = 20] = "DescSet", i;
            var g
        })()
    }, 33403: (se, B, o) => {
        "use strict";
        o.d(B, {tO: () => c, zy: () => i, B_: () => y, Gn: () => _});
        var c = (() => {
            return (r = c || (c = {}))[r.SOLO = 0] = "SOLO", r[r.CONSTRUCTED = 1] = "CONSTRUCTED", r[r.DIRECT_CHALLENGE = 5] = "DIRECT_CHALLENGE", r[r.SEALED_DECK = 8] = "SEALED_DECK", r[r.TUTORIAL = 6] = "TUTORIAL", c;
            var r
        })(), i = (() => {
            return (r = i || (i = {}))[r.WEEKEND_EVENT = 2] = "WEEKEND_EVENT", i;
            var r
        })(), y = (() => {
            return (r = y || (y = {}))[r.SOLO = 0] = "SOLO", r[r.QUICK_CONSTRUCTED = 2] = "QUICK_CONSTRUCTED", r[r.DIRECT_CHALLENGE = 6] = "DIRECT_CHALLENGE", r[r.QUICK_SEALED = 10] = "QUICK_SEALED", r[r.RANKED_CONSTRUCTED = 13] = "RANKED_CONSTRUCTED", r[r.PAID_GENESIS_SEALED = 14] = "PAID_GENESIS_SEALED", r[r.FREE_4_ALL_SEALED = 15] = "FREE_4_ALL_SEALED", r[r.SERVER_SOLO = 20] = "SERVER_SOLO", r[r.SEALED_DECK = 7] = "SEALED_DECK", r[r.TUTORIAL = 101] = "TUTORIAL", y;
            var r
        })(), _ = (() => {
            return (r = _ || (_ = {}))[r.CARDS = 0] = "CARDS", r[r.LEVEL = 1] = "LEVEL", r[r.UPDATE = 2] = "UPDATE", r[r.LOCKED = 3] = "LOCKED", r[r.ASSETS_UPDATE = 4] = "ASSETS_UPDATE", _;
            var r
        })()
    }, 98009: (se, B, o) => {
        "use strict";
        o.d(B, {D: () => C});
        var c = o(73307), i = o(591), y = o(36053), e = o(5254), _ = o(21086), p = o(92198), g = o(72986), r = o(21406),
            t = o(24850), n = o(40963), v = o(2994), P = o(27221), w = o(87545), L = o(74449), T = o(531), b = o(5e3),
            O = o(44416);
        o(63411);
        let C = (() => {
            class ${constructor(h,x,I,Y,ae,ce){this.utils=h,this.gameApiService=x,this.deckApi=I,this.authService=Y,this.cardsService=ae,this.ffService=ce,this._userDecks=new i.X([]),this._starterDecks=new i.X([]),this._activeDeck=new i.X(null),this._activeDeckChange=new i.X(new T.ZW(null,T.u4.NoActiveDeck)),this._deckSelectMode=new i.X(new T.VY(!1)),this.deckSizeLimit=30,this.dataStore={userDecks:[],starterDecks:[],activeDeck:null,activeDeckModified:!1,selectMode:null}
        }
        get
        activeDeck$()
        {
            return this._activeDeck.asObservable()
        }
        get
        userDecks$()
        {
            return this._userDecks.asObservable()
        }
        get
        starterDecks$()
        {
            return this._starterDecks.asObservable()
        }
        get
        activeDeckChange$()
        {
            return this._activeDeckChange.asObservable()
        }
        get
        deckSelectMode$()
        {
            return this._deckSelectMode.asObservable()
        }
        _emitDecks()
        {
            this._userDecks.next(Object.assign({}, this.dataStore).userDecks)
        }
        _emitStarterDecks()
        {
            this._starterDecks.next(Object.assign({}, this.dataStore).starterDecks)
        }
        _emitActiveDeck(h)
        {
            const x = h.type;
            (x == T.u4.Add || x == T.u4.Remove) && (this.dataStore.activeDeckModified = !0), this._activeDeckChange.next(h)
        }
        loadUserDecks()
        {
            return this.loadDecksApi()
        }
        fetchStarterDecks()
        {
            (0, y.aj)([this.loadStarterDecksApi(), this.cardsService.inventory$, this.cardsService.protoCards$]).pipe((0, p.h)(([h, x, I]) => Object.keys(x).length > 0 && I.size > 0), (0, g.q)(1), (0, r.b)(([h, x, I]) => (0, e.D)(h).pipe((0, t.U)(Y => ({
                deck: Y,
                protoCards: I,
                inventory: x
            })))), (0, t.U)(h => this.convertToDeckStarter(h.deck, h.inventory, h.protoCards)), (0, n.q)(), (0, v.b)(h => {
                this.dataStore.starterDecks = [], this._emitStarterDecks()
            }), (0, P.K)(h => (0, _.of)(h))).subscribe()
        }
        loadStarterDecksApi()
        {
            return this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(h => h ? this.deckApi.get("deck") : this.gameApiService.get("/deck?caller=client")), (0, t.U)(h => h.filter(x => x.assets.length > 0)))
        }
        fetchDecks()
        {
            (0, y.aj)([this.loadDecksApi(), this.cardsService.inventory$, this.cardsService.protoCards$]).pipe((0, p.h)(([h, x, I]) => Object.keys(x).length > 0 && I.size > 0), (0, g.q)(1), (0, r.b)(([h, x, I]) => (0, e.D)(h).pipe((0, t.U)(Y => ({
                deck: Y,
                protoCards: I,
                inventory: x
            })))), (0, t.U)(h => this.convertToDeck(h.deck, h.inventory, h.protoCards)), (0, n.q)(), (0, v.b)(h => {
                this.dataStore.userDecks = h, h.length && (this.dataStore.activeDeck = h[0], this.selectActiveDeck(this.dataStore.activeDeck)), this._emitDecks()
            }), (0, P.K)(h => (0, _.of)(h))).subscribe()
        }
        convertToDeck(h, x, I)
        {
            let Y;
            return Y = "sealed_deck" === h.deck_type ? h.protos.map((ce, me) => ({
                id: h.ids[me],
                proto: ce,
                quality: 5,
                protoCard: I.get(ce)
            })) : this.utils.convertIdsToCards(h.ids, x, I), new T.$$(h.id, h.name, h.god, h.deck_type, Y)
        }
        convertToDeckStarter(h, x, I)
        {
            const Y = this.utils.convertIdsToCards(h.assets, x, I), ae = new T.$$(h.id, h.name, h.god, "starter", Y);
            return ae.locked = !0, ae
        }
        createDeck(h)
        {
            return this.createDeckApi(h).pipe((0, g.q)(1), (0, v.b)(x => {
                this.dataStore.userDecks.push(x), this._emitDecks(), this.selectActiveDeck(this.deepCopyDeck(x))
            }))
        }
        createDeckApi(h)
        {
            const x = {
                id: h.id,
                name: h.name,
                god: h.god,
                timestamp: (new Date).getTime(),
                ids: h.items.reduce((ae, ce) => ae.concat(ce.id), []),
                deck_type: "common"
            }, I = this.authService.getUserId(), Y = this.authService.getGameSessionTicket();
            return this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(ae => ae ? this.createDeckApiNew(x, I) : this.createDeckApiLegacy(x, I, Y)), (0, t.U)(ae => (h.id = ae, h)))
        }
        createDeckApiNew(h, x)
        {
            return this.deckApi.post(`user/${x}/deck`, h)
        }
        createDeckApiLegacy(h, x, I)
        {
            return this.gameApiService.post(`/account/${x}/deck?session=${I}`, h)
        }
        buildSaveDeckApi()
        {
            const h = {
                id: this.dataStore.activeDeck.id,
                name: this.dataStore.activeDeck.name,
                god: this.dataStore.activeDeck.god,
                timestamp: (new Date).getTime(),
                deck_type: this.dataStore.activeDeck.deck_type
            };
            return Object.assign(Object.assign({}, h), "sealed_deck" === this.dataStore.activeDeck.deck_type ? {
                ids: this.dataStore.activeDeck.items.reduce((x, I) => x.concat(I.id), []),
                protos: this.dataStore.activeDeck.items.reduce((x, I) => x.concat(I.proto), [])
            } : {ids: this.dataStore.activeDeck.items.reduce((x, I) => x.concat(I.id), [])})
        }
        saveActiveDeck(h)
        {
            if (!this.dataStore.activeDeckModified) return (0, _.of)(this.dataStore.activeDeck.id);
            const x = this.buildSaveDeckApi(), I = this.authService.getUserId(),
                Y = this.authService.getGameSessionTicket();
            if ("starter" !== this.dataStore.activeDeck.deck_type) return this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(ae => ae ? this.deckApi.put(`user/${I}/deck/${this.dataStore.activeDeck.id}`, x) : this.gameApiService.put(`/account/${I}/deck/${this.dataStore.activeDeck.id}?session=${Y}`, x)), (0, g.q)(1), (0, v.b)(() => {
                this.dataStore.activeDeckModified = !1;
                const ae = this.dataStore.userDecks.find(me => me.id === this.dataStore.activeDeck.id),
                    ce = this.dataStore.userDecks.indexOf(ae);
                this.dataStore.userDecks[ce] = this.deepCopyDeck(this.dataStore.activeDeck), this._emitDecks()
            }));
            if ("starter" === this.dataStore.activeDeck.deck_type) {
                const ae = this.dataStore.starterDecks.find(ce => ce.id === this.dataStore.activeDeck.id);
                return h && !this.decksChanged(ae, this.dataStore.activeDeck) ? (this.selectActiveDeck(ae), (0, _.of)(ae.id)) : (x.name = `${x.name} Copy`, this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(ce => ce ? this.createDeckApiNew(x, I) : this.createDeckApiLegacy(x, I, Y)), (0, g.q)(1), (0, v.b)(ce => {
                    this.dataStore.activeDeckModified = !1;
                    const me = new T.$$(ce, x.name, x.god, "common", [...this.dataStore.activeDeck.items]);
                    this.dataStore.userDecks.push(me), this._emitDecks(), this.selectActiveDeck(me)
                })))
            }
        }
        decksChanged(h, x)
        {
            if (h.items.length !== x.items.length) return !0;
            let I = !1;
            return h.items.forEach((Y, ae) => {
                Y.id !== x.items[ae].id && (I = !0)
            }), !!I
        }
        deleteDeck(h)
        {
            this.deleteDeckApi(h).pipe((0, g.q)(1), (0, v.b)(x => {
                this.dataStore.userDecks = this.dataStore.userDecks.filter(I => I.id !== h), this._emitDecks(), this.selectActiveDeck(null)
            }), (0, P.K)(x => (0, _.of)(x))).subscribe()
        }
        deleteDeckApi(h)
        {
            const x = this.authService.getUserId(), I = this.authService.getGameSessionTicket();
            return this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(Y => Y ? this.deckApi.delete(`user/${x}/deck/${h}`) : this.gameApiService.delete(`/account/${x}/deck/${h}?session=${I}`)))
        }
        loadDecksApi()
        {
            const h = this.authService.getUserId();
            return this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(x => x ? this.deckApi.get(`user/${h}/deck`) : this.loadDecksApiLegacy(h)))
        }
        loadDecksApiLegacy(h)
        {
            return this.gameApiService.get(`/account/${h}/deck`)
        }
        getDeckApi(h)
        {
            const x = this.authService.getUserId();
            return this.ffService.get(L.vU.newDeckServiceEnabled).pipe((0, w.w)(I => I ? this.deckApi.get(`user/${x}/deck/${h}`) : this.gameApiService.get(`/account/${x}/deck/${h}`)))
        }
        isDeckComplete(h)
        {
            return h.global ? (0, _.of)(!0) : this.getDeckApi(h.id).pipe((0, t.U)(x => x && x.ids && x.ids.length === this.deckSizeLimit), (0, P.K)(x => (0, _.of)(!1)))
        }
        updateDeckSelectMode(h, x, I)
        {
            this.dataStore.selectMode = new T.VY(h, x, I), this._deckSelectMode.next(Object.assign({}, this.dataStore).selectMode)
        }
        selectActiveDeck(h)
        {
            this.dataStore.activeDeck = this.deepCopyDeck(h), this._emitActiveDeck(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.Change))
        }
        selectActiveDeckById(h)
        {
            const x = this.dataStore.userDecks.find(I => I.id === h);
            !x || (this.dataStore.activeDeck = this.deepCopyDeck(x), this._emitActiveDeck(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.Change)))
        }
        deepCopyDeck(h)
        {
            return new T.$$(h.id, h.name, h.god, h.deck_type, [...h.items])
        }
        removeDeck(h)
        {
            this.deleteDeck(h.id), h === this.dataStore.activeDeck && (this.dataStore.activeDeck = null, this._emitActiveDeck(new T.ZW(null, T.u4.NoActiveDeck))), this.dataStore.userDecks = this.dataStore.userDecks.filter(x => x !== h), this._emitDecks()
        }
        selectDeck(h, x)
        {
        }
        updateActiveDeckName(h)
        {
            !this.dataStore.activeDeck || (this.dataStore.activeDeck.name = h, this.dataStore.activeDeckModified = !0, this.saveActiveDeck().pipe((0, g.q)(1)).subscribe())
        }
        getDeck(h)
        {
            return this.userDecks$.pipe((0, t.U)(x => x.find(I => I.id === h)))
        }
        pushToActiveDeck(h)
        {
            this.dataStore.activeDeck.items.length >= this.deckSizeLimit ? this._emitActiveDeck(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.DeckLimit)) : this.canAddCardToDeck(this.dataStore.activeDeck, h).pipe((0, v.b)(x => {
                x ? (this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.concat([h]), this._emitActiveDeck(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.Add, [h]))) : this._activeDeckChange.next(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.CardLimit, [h]))
            })).subscribe()
        }
        removeCardFromActiveDeck(h)
        {
            this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.filter(x => x !== h), this._emitActiveDeck(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.Remove, [h]))
        }
        removeCardsFromActiveDeck(h)
        {
            this.dataStore.activeDeck.items = this.dataStore.activeDeck.items.filter(x => !h.includes(x)), this._emitActiveDeck(new T.ZW(Object.assign({}, this.dataStore).activeDeck, T.u4.Remove, [...h]))
        }
        canAddCardToDeck(h, x)
        {
            return "sealed_deck" === h.deck_type ? (0, _.of)(!0) : this.cardsService.getProtoCard(x.proto).pipe((0, t.U)(I => (I.god === h.god || "neutral" === I.god) && ("legendary" === I.rarity ? h.items.filter(Y => Y.proto === x.proto).length < 1 : h.items.filter(Y => Y.proto === x.proto).length < 2)))
        }
        forgeUpdate(h, x, I)
        {
            this.forgeRemoveIds(h, x), this._emitDecks()
        }
        forgeRemoveIds(h, x)
        {
            this.dataStore.userDecks.forEach(I => {
                I.items = I.items.filter(Y => -1 === h.indexOf(Y.id))
            })
        }
        generateUniqueCardId(h, x, I)
        {
            return -Number(`${h}${x}${I}`)
        }
    }return $.\u0275fac = function (h) {
        return new (h || $)(b.LFG(O.F), b.LFG(L.Ft), b.LFG(L.fN), b.LFG(c.mI), b.LFG(L.dK), b.LFG(L.ai))
    }, $.\u0275prov = b.Yz7({token: $, factory: $.\u0275fac}), $
})()
},
23569
:
(se, B, o) => {
    "use strict";
    o.d(B, {d: () => r});
    var c = o(8929), i = o(591), y = o(92198), e = o(24850), _ = o(73307), p = o(5e3);
    o(63411);
    let r = (() => {
        class t {
            constructor(v, P) {
                this.storage = v, this.authService = P, this.unsubscribe = new c.xQ, this.dataStore = {selectedWallet: null}, this._selectedWallet$ = new i.X(null)
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get selectedWallet$() {
                return this._selectedWallet$.asObservable()
            }

            get playerWallets$() {
                return this.authService.account$.pipe((0, y.h)(v => !!v), (0, e.U)(v => v.addresses.map(P => P.address)))
            }

            get storageKey() {
                return `gu-selected-wallet-${this.authService.getUserId()}`
            }

            fetchPlayerWallets() {
                this.authService.fetchAccount()
            }

            obfuscateAddresses(v) {
                if (v && 0 !== v.length) return v.map(P => `${P && P.slice(0, 6)}...`)
            }

            saveSelectedWallet(v) {
                this.storage.set([this.storageKey], v), this.dataStore.selectedWallet = v, this._selectedWallet$.next(Object.assign({}, this.dataStore).selectedWallet)
            }

            loadSelectedWallet() {
                const v = this.storage.get([this.storageKey]);
                this.dataStore.selectedWallet = v, this._selectedWallet$.next(Object.assign({}, this.dataStore).selectedWallet)
            }
        }

        return t.\u0275fac = function (v) {
            return new (v || t)(p.LFG(_.qy), p.LFG(_.mI))
        }, t.\u0275prov = p.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
    })()
}, 11130
:
(se, B, o) => {
    "use strict";
    o.d(B, {xV: () => le});
    var c = o(8929), i = o(591), y = o(21086), e = o(36053), _ = o(98723), p = o(41746), g = o(72986), r = o(92198),
        t = o(2994), n = o(24850), v = o(7625), P = o(61709), w = o(87545), L = o(75778), T = o(40537), b = o(73307),
        O = o(33403), k = o(14618), C = o(69931), $ = o(72224), s = o(5e3), h = o(79763), x = o(69340), I = o(74449),
        Y = o(51395), ae = o(64523), ce = o(96727);
    o(63411);

    class J {
        constructor(Se, Z, de) {
            this.name = Se, this.value = Z, this.image = de
        }
    }

    let le = (() => {
        class X {
            constructor(Z, de, _e, Le, Oe, H, ue, K) {
                this.gameService = Z, this.gameDownloadService = de, this.storage = _e, this.gameApi = Le, this.authService = Oe, this.packService = H, this.sealedService = ue, this.ngrxStore = K, this.BUFFER_TIME = 5e3, this.unsubscribe = new c.xQ, this.dataStore = {gameModes: []}, this._gameModes$ = new i.X({
                    gameModes: [],
                    refresh: !1
                }), this.watchForUpdate(), this.watchForAssetUpdate(), this.watchForPacks()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get gameModes$() {
                return this._gameModes$.asObservable()
            }

            updateGameModeDeck(Z, de, _e = !1) {
                this.getGameMode$(Z).pipe((0, g.q)(1), (0, r.h)(Le => void 0 !== Le), (0, t.b)(Le => {
                    this.saveGameModeDeck(Le.id, _e, de), _e ? Le.aiSelectedDeckId = de : Le.lastSelectedDeckId = de, this._emitGameModes()
                })).subscribe()
            }

            updateGameModeLoadout(Z, de) {
                this.getGameMode$(Z).pipe((0, g.q)(1), (0, r.h)(_e => void 0 !== _e), (0, t.b)(_e => {
                    this.saveGameModeLoadout(_e.id, de), _e.selectedLoadoutId = de, this._emitGameModes()
                })).subscribe()
            }

            getGameStats(Z) {
                return (0, y.of)({
                    game_mode_id: 1,
                    p1_id: 49,
                    p2_id: 2,
                    did_win: !0,
                    p1_stats: [new J("Wins", 103, "https://images.godsunchained.com/art/250/88.png"), new J("Losses", 8, "https://images.godsunchained.com/art/250/89.png"), new J("Damage Dealt", 7300, "https://images.godsunchained.com/art/250/90.png"), new J("Damage Taken", 1600, "https://images.godsunchained.com/art/250/91.png")],
                    p2_stats: [new J("Wins", 9001, "https://images.godsunchained.com/art/250/88.png"), new J("Losses", 0, "https://images.godsunchained.com/art/250/89.png"), new J("Damage Dealt", 999999, "https://images.godsunchained.com/art/250/90.png"), new J("Damage Taken", 0, "https://images.godsunchained.com/art/250/91.png")]
                })
            }

            getGameModeDeck(Z, de) {
                const _e = this.getGameModeDeckKey(Z, de);
                return this.storage.get([_e]) || null
            }

            clearGameModeDeck(Z, de) {
                const _e = this.getGameModeDeckKey(Z, de);
                this.storage.delete([_e])
            }

            saveGameModeDeck(Z, de, _e) {
                const Le = this.getGameModeDeckKey(Z, de);
                this.storage.set([Le], _e)
            }

            getGameModeDeckKey(Z, de) {
                return `gu-deck-${Z}${de ? "-ai" : ""}`
            }

            getGameModeLoadout(Z) {
                const de = this.getGameModeLoadoutKey(Z);
                return this.storage.get([de]) || null
            }

            saveGameModeLoadout(Z, de) {
                const _e = this.getGameModeLoadoutKey(Z);
                this.storage.set([_e], de)
            }

            getGameModeLoadoutKey(Z) {
                return `gu-loadout-${Z}`
            }

            _emitGameModes(Z = !1) {
                this._gameModes$.next({gameModes: Object.assign({}, this.dataStore).gameModes, refresh: Z})
            }

            getGameMode$(Z) {
                return this.gameModes$.pipe((0, n.U)(({gameModes: de}) => de.find(_e => _e.id === Z)))
            }

            fetchGameModes(Z = !1) {
                (0, e.aj)([this.fetchPlayerGameModes$(), this.getLock$(), this.fetchPlayerRanks$()]).pipe((0, g.q)(1), (0, n.U)(([de, _e, Le]) => de.map(Oe => this.transformGameModes(Oe, _e, Le))), (0, t.b)(de => {
                    for (const gm of de) {
                      if (gm.id === 0) { // Solo
                          gm.image_url = 'https://images.godsunchained.com/art2/1024/1492.jpg';
                      }
                      if (gm.id === 101) { // Tutorial
                          gm.image_url = 'https://images.godsunchained.com/art2/1024/16.jpg';
                      }
                      if (gm.id === 6) { // Direct Challenge
                          gm.image_url = 'https://images.godsunchained.com/art2/1280/42.jpg';
                      }
                      if (gm.id === 13) { // Rank Constructed
                          gm.image_url = 'https://images.godsunchained.com/art2/1280/101305.jpg';
                      }
                    }
                    this.scheduleRefresh(de), this.handleSealedMode(de), this.dataStore.gameModes = de, this._emitGameModes(Z)
                })).subscribe()
            }

            handleSealedMode(Z) {
                let de = Z.find(_e => _e.id === O.B_.SEALED_DECK);
                !de || this.scheduleSealedModeRefresh(de)
            }

            scheduleSealedModeRefresh(Z) {
                const de = Date.now(), _e = new Date(Z.end_time_server).getTime(), Oe = _e + 36e5 - de, H = _e - de;
                H > 0 && H < $.v && (0, _.H)(H).pipe((0, v.R)(this.unsubscribe), (0, g.q)(1)).subscribe(ue => this.sealedService.fetchSealed()), Oe > 0 && Oe < $.v && (0, _.H)(Oe).pipe((0, v.R)(this.unsubscribe), (0, g.q)(1)).subscribe(ue => this.sealedService.fetchSealed())
            }

            mockSealedMode() {
                return {
                    id: 7,
                    name: "Sealed Deck",
                    description: "Love Seals? Try Sealed Mode.",
                    required_level: 0,
                    properties: {
                        type: 8,
                        start_time: "2020-11-10 12:00:00.556238+00",
                        entry_cutoff: "2020-11-10 08:00:00.556238+00",
                        max_losses: 3,
                        max_wins: 9,
                        entry_cost: 100
                    },
                    ranked: !1,
                    order: 6,
                    end_time: "2020-11-18T12:00:00.556238Z",
                    end_timestamp: 1605700805556,
                    image_url: "/assets/images/misc-art/misc-art--C8-026.webp",
                    paid: !1,
                    rotation: 0,
                    rank: null,
                    lock: null,
                    type: 8,
                    lastSelectedDeckId: 133713371337,
                    aiSelectedDeckId: null,
                    selectedLoadoutId: null
                }
            }

            fetchPlayerGameModes$() {
                const Z = this.authService.getUserId();
                return this.gameApi.get(`/user/${Z}/mode`)
            }

            fetchPlayerRanks$() {
                const Z = this.authService.getUserId();
                return this.gameApi.get(`/user/${Z}/rank`)
            }

            getLock$() {
                let Z = null;
                return (0, e.aj)([this.gameService.currentGameContext$, this.packService.unopenedPacks$, (0, _.H)(0, 6e5)]).pipe((0, r.h)(([de, _e]) => null != de), (0, P.VS)(([de, _e]) => {
                    if (Z = null, _e) {
                        const Le = _e.filter(Oe => "starter" === Oe.pack_source);
                        Le && Le.length > 0 && (Z = {type: O.Gn.CARDS})
                    }
                    return (0, y.of)(de)
                }), (0, P.VS)(de => (0, p.$R)((0, y.of)(de), this.gameService.getBranch$(de.id))), (0, P.VS)(([de, _e]) => "" === _e.name ? (Z = {type: O.Gn.LOCKED}, (0, y.of)([!1, !1])) : (0, p.$R)(this.gameDownloadService.requiresUpdate(de, _e.name), this.gameDownloadService.requiresAssetsUpdate(de, _e.name))), (0, P.VS)(([de, _e]) => (de ? Z = {type: O.Gn.UPDATE} : _e.length > 0 && (Z = {type: O.Gn.ASSETS_UPDATE}), (0, y.of)(Z))))
            }

            checkIfRequiresUpdate() {
                return this.gameService.currentGameContext$.pipe((0, w.w)(Z => (0, p.$R)((0, y.of)(Z), this.gameService.getBranch(Z.id))), (0, w.w)(([Z, de]) => this.gameDownloadService.requiresUpdate(Z, de)))
            }

            watchForUpdate() {
                this.ngrxStore.select((0, C.DM)()).pipe((0, v.R)(this.unsubscribe), (0, r.h)(Z => !!Z), (0, r.h)(Z => "completed" === Z.status), (0, L.x)(), (0, t.b)(Z => {
                    this.updateLocks(!0), this.ngrxStore.dispatch(new k.Tg({status: "idle", percentage: 0}))
                })).subscribe()
            }

            watchForAssetUpdate() {
                this.ngrxStore.select((0, C.gP)()).pipe((0, v.R)(this.unsubscribe), (0, r.h)(Z => !!Z), (0, r.h)(Z => "completed" === Z.status), (0, L.x)(), (0, t.b)(Z => {
                    this.updateLocks(!0)
                })).subscribe()
            }

            watchForPacks() {
                this.packService.unopenedPacks$.pipe((0, v.R)(this.unsubscribe), (0, L.x)(), (0, t.b)(Z => this.updateLocks())).subscribe()
            }

            updateLocks(Z = !1) {
                this.getLock$().pipe((0, g.q)(1), (0, t.b)(de => {
                    this.dataStore.gameModes.forEach(_e => {
                        _e.lock = de
                    })
                }), (0, T.x)(() => this._emitGameModes(Z))).subscribe()
            }

            transformGameModes(Z, de, _e) {
                const Le = _e.find(H => H.game_mode === Z.id) || null;
                let Oe = Object.assign(Object.assign({}, Z), {
                    rank: Le,
                    lock: de,
                    type: Z.properties.type,
                    lastSelectedDeckId: this.getGameModeDeck(Z.id, !1),
                    aiSelectedDeckId: this.getGameModeDeck(Z.id, !0),
                    end_timestamp: Date.parse(Z.end_time) + 5e3,
                    selectedLoadoutId: this.getGameModeLoadout(Z.id)
                });
                return Oe.id === O.B_.SEALED_DECK && (Oe = this.sealedService.transformSealedModeGameModeData(Oe)), Oe
            }

            scheduleRefresh(Z = []) {
                const de = Date.now(), _e = Z.filter(H => 1 === H.rotation && H.end_timestamp > de);
                if (0 === _e.length) return;
                const Oe = _e.reduce((H, ue) => H.end_timestamp < ue.end_timestamp ? H : ue).end_timestamp - de;
                Oe > 0 && Oe < $.v && (0, _.H)(Oe).pipe((0, v.R)(this.unsubscribe), (0, g.q)(1), (0, t.b)(H => this.fetchGameModes(!0))).subscribe()
            }

            storeUserGameModeOrderMap(Z) {
                const de = this.authService.getUserId();
                sessionStorage.setItem(`userGameModesOrder::${de}`, JSON.stringify(Z))
            }

            getUserGameModeOrderMap() {
                const Z = this.authService.getUserId();
                return JSON.parse(sessionStorage.getItem(`userGameModesOrder::${Z}`))
            }

            incrementGameModeCount(Z, de = 1) {
                const _e = this.authService.getUserId(), Le = this.authService.getGameSessionTicket();
                return this.gameApi.post(`/user/${_e}/mode?session=${Le}`, {game_mode: Z, add: de})
            }
        }

        return X.\u0275fac = function (Z) {
            return new (Z || X)(s.LFG(h.hM), s.LFG(x.b5), s.LFG(b.qy), s.LFG(I.Ft), s.LFG(b.mI), s.LFG(Y.F), s.LFG(ae.H), s.LFG(ce.yh))
        }, X.\u0275prov = s.Yz7({token: X, factory: X.\u0275fac, providedIn: "root"}), X
    })()
}, 88632
:
(se, B, o) => {
    "use strict";
    o.d(B, {MZ: () => n});
    var c = o(591), i = o(2994), y = o(73307), e = o(5e3), _ = o(74449), p = o(79763);
    o(63411);
    let n = (() => {
        class v {
            constructor(w, L, T) {
                this.gameApi = w, this.authService = L, this.gameService = T, this.dataStore = {extendedAccountProperties: null}, this._extendedAccountProperties$ = new c.X(null)
            }

            get extendedAccountProperties$() {
                return this._extendedAccountProperties$.asObservable()
            }

            getAccountProperties(w, L) {
                return (!w || !L) && (w = this.authService.getUserId(), L = this.authService.getGameSessionTicket()), this.gameApi.get(`/account/${w}/properties?session=${L}`)
            }

            _emit(w) {
                this.dataStore.extendedAccountProperties = w, this._extendedAccountProperties$.next(Object.assign({}, this.dataStore).extendedAccountProperties)
            }

            getExtendedAccountPropertiesById(w, L) {
                return this.gameApi.get(`/account/${w}/properties?format=extended&session=${L}`).pipe((0, i.b)(T => this._emit(T)))
            }

            getExtendedAccountProperties() {
                const w = this.authService.getUserId(), L = this.authService.getGameSessionTicket();
                return this.getExtendedAccountPropertiesById(w, L)
            }

            fetchExtendedAccount() {
                this.getExtendedAccountProperties().subscribe()
            }
        }

        return v.\u0275fac = function (w) {
            return new (w || v)(e.LFG(_.Ft), e.LFG(y.mI), e.LFG(p.hM))
        }, v.\u0275prov = e.Yz7({token: v, factory: v.\u0275fac, providedIn: "root"}), v
    })()
}, 8561
:
(se, B, o) => {
    "use strict";
    o.d(B, {GT: () => Rt, OC: () => We, Qc: () => ke});
    var c = o(59633), i = o(8929), y = o(591), e = o(21086), _ = o(61737), p = o(98723), g = o(67876), r = o(7625),
        t = o(24850), n = o(87224), v = o(92198), P = o(87168), w = o(27221), L = o(2994), T = o(72986), b = o(61709),
        O = o(87545), k = o(77604), C = o(44290), $ = o(40537), s = o(73307), h = o(63764), x = o(52492), I = o(33403),
        Y = o(5231), ae = o(80537), ce = o(8611), me = o(5e3), N = o(40520);
    o(63411);
    let le = (() => {
        class Me {
            constructor(q) {
                this.auth = q, this.createServer()
            }

            respond(q, re) {
                return -1 !== q.url.indexOf("config") ? this.getConfig(q, re) : q.url.startsWith("/session") ? this.auth.getGameSessionTicket() : null
            }

            setConfig(q) {
                this.config = q
            }

            getConfig(q, re) {
                return this.config
            }

            serverActive() {
                return !(!window.bridge || !window.bridge.serverActive) && window.bridge.serverActive()
            }

            createServer() {
                !window.bridge || !window.bridge.createServer || window.bridge.createServer(49011, this.respond.bind(this))
            }

            closeServer() {
                !window.bridge || !window.bridge.closeServer || window.bridge.closeServer()
            }
        }

        return Me.\u0275fac = function (q) {
            return new (q || Me)(me.LFG(s.mI))
        }, Me.\u0275prov = me.Yz7({token: Me, factory: Me.\u0275fac, providedIn: "root"}), Me
    })();
    var X = o(79763), Se = o(83035), Z = o(88632), de = o(66088), _e = o(47313), Le = o(11130), Oe = o(74449),
        H = o(98009);

    class ke {
        constructor(At, q, re, xe) {
            this.player = {id: At, deck: q, collection: {id: re}}, this.opponent = xe ? {deck: xe} : void 0
        }
    }

    var We = (() => {
        return (Me = We || (We = {}))[Me.OUT = 0] = "OUT", Me[Me.IN = 1] = "IN", Me[Me.PROGRESSION_GAME_MODE = 2] = "PROGRESSION_GAME_MODE", Me[Me.PROGRESSION_ACCOUNT = 3] = "PROGRESSION_ACCOUNT", We;
        var Me
    })(), Be = (() => {
        return (Me = Be || (Be = {})).DECK = "deck", Me.DECK_GLOBAL = "deck_global", Me.COLLECTION = "collection", Be;
        var Me
    })();
    let Rt = (() => {
        class Me {
            constructor(q, re, xe, Ge, z, W, d, f, R, ne, we, Ve, Et) {
                this.http = q, this.server = re, this.gameService = xe, this.queueService = Ge, this.authService = z, this.guUserService = W, this.modalService = d, this.progressionService = f, this.guGameService = R, this.configService = ne, this.audioService = we, this.analyticsService = Ve, this.deckService = Et, this.numActiveQueues = 0, this.unsubscribe = new i.xQ, this.dataStore = {currentMatchId: null}, this._currentMatchId$ = new y.X(null), this.queueAcknowledge$ = new i.xQ, this.clientServerPongReceived$ = new i.xQ, this._playing$ = new y.X({status: We.OUT}), this.watchQueues(), window.bridge.onQuit(() => {
                    this.queueService.getGameQueues(1).subscribe(rt => {
                        this.trySendingCancelReq(rt.mode.id, rt.params.player.id)
                    })
                }), this.configService.loadConfigurations().pipe((0, r.R)(this.unsubscribe)).subscribe(rt => {
                    this.master = {
                        host: rt.matchmakingHost,
                        port: rt.matchmakingPort,
                        password: ""
                    }, this.connectClient()
                }), this.gameService.getBranch$(1).pipe((0, r.R)(this.unsubscribe)).subscribe(rt => {
                    this.branch = rt
                }), this.queueService.getGameQueues(1).subscribe(rt => {
                    switch (rt.status) {
                        case"completed":
                            this.completeQueue(rt);
                            break;
                        case"cancelled":
                            this.trySendingCancelReq(rt.mode.id, rt.params.player.id)
                    }
                })
            }

            ngOnDestroy() {
                this.client && this.client.destroy && this.client.destroy(), this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get currentMatchId$() {
                return this._currentMatchId$.asObservable()
            }

            watchQueues() {
                this.queueService.activeQueues$.pipe((0, r.R)(this.unsubscribe), (0, t.U)(q => q ? q.length : 0)).subscribe(q => this.numActiveQueues = q)
            }

            buildOpponent(q) {
                let re = {};
                const xe = q.opponent_attributes.find(W => W.type === Be.COLLECTION),
                    Ge = q.opponent_attributes.find(W => W.type === Be.DECK),
                    z = q.opponent_attributes.find(W => W.type === Be.DECK_GLOBAL);
                return xe && (re = Object.assign(Object.assign({}, re), {collection: {id: xe.value}})), Ge && (re = Object.assign(Object.assign({}, re), {
                    deck: {
                        id: Ge.value,
                        global: !1
                    }
                })), z && (re = Object.assign(Object.assign({}, re), {deck: Object.assign(Object.assign({}, re.deck), {global: 1 === z.value})})), re
            }

            handleQueueResponse() {
                this.client.on(21, q => {
                    const re = this.tryParseJson(q), xe = this.buildOpponent(re);
                    re.game_mode === I.B_.SERVER_SOLO && (xe.id = 0), this.queueService.getQueue(1, re.game_mode).pipe((0, n.P)(), (0, v.h)(Ge => "active" === Ge.status), (0, P.M)(this.gameService.getBranch$(1)), (0, w.K)(Ge => (console.error("playService->handleQueueResponse() error getting queue", Ge), (0, e.of)([null, null])))).subscribe(([Ge, z]) => {
                        Ge && (this.queueService.complete(Ge), re.success && (this.dataStore.currentMatchId = re.match_id, this._currentMatchId$.next(this.dataStore.currentMatchId), this.play({
                            realm: z.id,
                            mode: Ge.mode.id,
                            player: Ge.params.player,
                            match_id: re.match_id,
                            opponent: xe,
                            server: {host: re.location.host, port: re.location.port, password: re.match_pwd}
                        })))
                    })
                })
            }

            handleQueueAck() {
                this.client.on(30, q => {
                    const re = this.tryParseJson(q);
                    this.queueAcknowledge$.next(!0), re.success || (this.guGameService.fetchGameModes(!0), this.queueService.getQueue(1, re.game_mode).pipe((0, n.P)()).subscribe(xe => this.queueService.cancel(xe)), "bot" === re.reason ? this.modalService.createModal(ce.n, {}, {
                        blurredBackground: !0,
                        canCloseFromInside: !1,
                        position: x.e1.Center,
                        size: x.Cg.StretchableWorkarea
                    }) : this.showInfoModal("Unable to Queue", "captcha" === re.reason ? ae.k.CODE_10 : ae.k.CODE_4))
                })
            }

            handleQueuePing() {
                this.client.on(35, q => {
                    const re = this.tryParseJson(q);
                    !re || !re.game_mode || this.queueService.getQueue(1, re.game_mode).pipe((0, n.P)(xe => "active" === xe.status), (0, L.b)(() => {
                        const xe = Object.assign(Object.assign({}, re), {realm: this.branch.name});
                        this.trySendingSocketMsg(36, xe)
                    })).subscribe()
                })
            }

            handleServerClientPing() {
                this.client.on(8, () => {
                    this.trySendingSocketMsg(9, {})
                })
            }

            handleClientServerPong() {
                this.client.on(7, () => {
                    this.clientServerPongReceived$.next(!0)
                })
            }

            handleCancelResponse() {
                this.client.on(23, q => {
                    this.tryParseJson(q)
                })
            }

            handleRestartRequest() {
                this.client.on(40, q => {
                    this.modalService.createModal(Y.s, {
                        title: "Client Updated",
                        message: "Your client has been updated, please reload to continue.",
                        okButtonText: "RELOAD",
                        onOk: () => location.reload()
                    }, {
                        canCloseFromOutside: !1,
                        position: x.e1.Center,
                        size: x.Cg.StretchableFullscreen,
                        blurredBackground: !0
                    })
                })
            }

            connectClient() {
                if (this.client && this.client.destroy) try {
                    this.client.destroy()
                } catch (q) {
                    console.error("playService->connectClient() unable to destroy client.", q)
                }
                this.client = window.bridge.createClient(this.master.host, this.master.port), this.handleQueueResponse(), this.handleQueueAck(), this.handleQueuePing(), this.handleCancelResponse(), this.handleRestartRequest(), this.handleServerClientPing(), this.handleClientServerPong()
            }

            tryParseJson(q) {
                let re;
                try {
                    re = JSON.parse(q)
                } catch (xe) {
                    console.error("PlayServer->handleQueuePing error parsing message", xe, q)
                }
                return re
            }

            buildAttributes(q) {
                let re = [];
                return q.player && q.player.collection && (re = [...re, {
                    type: Be.COLLECTION,
                    value: q.player.collection.id
                }]), q.opponent && q.opponent.deck && (re = [...re, {
                    type: Be.DECK,
                    value: q.opponent.deck.id
                }], re = [...re, {type: Be.DECK_GLOBAL, value: q.opponent.deck.global ? 1 : 0}]), re
            }

            buildQueueMessage(q, re, xe, Ge, z, W) {
                return {
                    id: re,
                    realm: z,
                    deck_id: xe,
                    token: "",
                    game_mode: q.id,
                    attributes: Ge,
                    private_match_password: W
                }
            }

            start(q, re, xe, Ge) {
                const z = this.buildQueueMessage(q, re, xe.player.deck.id, this.buildAttributes(xe), this.branch.name, Ge);
                return this.numActiveQueues > 0 ? (0, _._)(ae.k.CODE_0) : this.client.socketConnected ? this.deckService.isDeckComplete(xe.player.deck).pipe((0, T.q)(1), (0, b.VS)(W => W ? this.clientServerPong(q, z, re, xe) : (this.deckService.fetchDecks(), (0, _._)(ae.k.CODE_11)))) : (this.connectClient(), (0, _._)(ae.k.CODE_1))
            }

            clientServerPong(q, re, xe, Ge) {
                return this.clientServerPongReceived$.next(!1), this.trySendingSocketMsg(6, re) ? ((0, p.H)(3e3).subscribe(() => {
                    this.clientServerPongReceived$.next(!1)
                }), this.clientServerPongReceived$.pipe((0, T.q)(1), (0, b.VS)(W => W ? this.startQueueReq$(q, re, xe, Ge) : (console.log("playService->start() cannot queue, did not receive CLIENT_SERVER_PONG within 3000ms"), this.connectClient(), (0, _._)(ae.k.CODE_9))))) : (this.connectClient(), (0, _._)(ae.k.CODE_8))
            }

            startQueueReq$(q, re, xe, Ge) {
                return this.queueAcknowledge$.next(!1), this.trySendingQueueReq(re) ? ((0, p.H)(3e3).subscribe(() => {
                    this.queueAcknowledge$.next(!1)
                }), this.queueAcknowledge$.pipe((0, T.q)(1), (0, b.VS)(W => W ? this.queueService.start(1, q, Ge) : (console.log("playService->startQueueReq$() cannot queue, did not receive ACK message from server within 3000ms"), this.connectClient(), (0, _._)(ae.k.CODE_3))))) : (console.log("playService->startQueueReq$() cannot queue, unable to send queue request message"), this.connectClient(), (0, _._)(ae.k.CODE_2))
            }

            trySendingSocketMsg(q, re) {
                console.log("playService->trySendingSocketMsg()", this.socketMsgName(q), re);
                try {
                    return this.client.send(q, re), !0
                } catch (xe) {
                    return console.error("playService->trySendingSocketMsg() failed", xe), !1
                }
            }

            trySendingQueueReq(q) {
                return this.trySendingSocketMsg(20, q)
            }

            trySendingCancelReq(q, re) {
                return this.trySendingSocketMsg(22, {game_mode: q, id: re, realm: this.branch.name})
            }

            completeQueue(q) {
            }

            get playing$() {
                return this._playing$.asObservable()
            }

            setPlaying(q, re) {
                this._playing$.next({status: q, gameModeId: re})
            }

            buildArgs(q) {
                let re = ["-realm", `${q.realm}`, "-user-id", `${q.player.id}`, "-sessionTicket", this.authService.getGameSessionTicket(), "-sessionConfig", JSON.stringify(q)];
                return q.match_id && (re = [...re, "-game-id", `${q.match_id}`]), re
            }

            play(q) {
                this.server.serverActive() || (this.server.closeServer(), this.server.createServer()), console.log(JSON.stringify(q)), this.server.setConfig(q), this.modalService.destroyModalsStack(), this.setPlaying(We.IN, q.mode);
                const re = this.buildArgs(q);
                this.gameService.currentGameContext$.pipe((0, T.q)(1), (0, O.w)(xe => this.gameService.play(xe, re)), (0, O.w)(xe => (0, p.H)(2e3, 2e3).pipe((0, k.h)(xe), (0, C.o)(() => window.bridge.isRunning(xe.process.pid)))), (0, $.x)(() => {
                    window.bridge.focus(), this.audioService.returnToLauncher.play(), q.mode === I.B_.SOLO && this.logGameCompleted(q.mode, "Solo"), q.mode === I.B_.DIRECT_CHALLENGE && this.logGameCompleted(q.mode, "Direct Challenge", q.match_id), this.handleProgression(q.mode)
                })).subscribe(g.Z, xe => {
                    console.error("playService->play() error starting a game", xe), Object.values(ae.k).includes(xe) ? this.showInfoModal("Unable to start game", xe) : this.showInfoModal("Unable to start game", ae.k.CODE_5)
                })
            }

            logGameCompleted(q, re, xe) {
                "function" == typeof fbq && fbq("track", "ViewContent"), "function" == typeof gtag && gtag("event", "completed", {
                    event_category: "game",
                    event_label: "user"
                }), this.analyticsService.postEvent(new c.Game.Completed.Event({
                    game_id: 1,
                    latest_id: xe,
                    mode_id: q,
                    mode_name: re
                }))
            }

            handleProgression(q) {
                this.checkWhetherToShowAccountProgress().pipe((0, T.q)(1), (0, L.b)(re => {
                    this.setPlaying(re && 0 !== q ? We.PROGRESSION_ACCOUNT : We.OUT, q)
                })).subscribe()
            }

            checkWhetherToShowAccountProgress() {
                const q = this.authService.getUserId(), re = this.progressionService.getStoredAccountProgression(q);
                return this.guUserService.getAccountProperties().pipe((0, T.q)(1), (0, t.U)(xe => this.hasProgressed(re, xe)))
            }

            hasProgressed(q, re) {
                return q.lvl !== re.level || q.xp !== re.total_xp
            }

            showInfoModal(q, re) {
                this.modalService.createModal(h.S, {title: q, text: re}, {
                    blurredBackground: !0,
                    canCloseFromInside: !1,
                    position: x.e1.Center,
                    size: x.Cg.StretchableWorkarea
                })
            }

            socketMsgName(q) {
                switch (q) {
                    case 6:
                        return "CLIENT_SERVER_PING";
                    case 7:
                        return "CLIENT_SERVER_PONG";
                    case 8:
                        return "SERVER_CLIENT_PING";
                    case 9:
                        return "SERVER_CLIENT_PONG";
                    case 20:
                        return "QUEUE_REQ";
                    case 30:
                        return "QUEUE_ACK";
                    case 21:
                        return "QUEUE_RES";
                    case 35:
                        return "QUEUE_PING";
                    case 36:
                        return "QUEUE_PONG";
                    case 40:
                        return "RESTART_REQ";
                    case 22:
                        return "CANCEL_REQ";
                    case 23:
                        return "CANCEL_RES";
                    default:
                        return "UNKNOWN_MESSAGE"
                }
            }
        }

        return Me.\u0275fac = function (q) {
            return new (q || Me)(me.LFG(N.eN), me.LFG(le), me.LFG(X.hM), me.LFG(Se.g), me.LFG(s.mI), me.LFG(Z.MZ), me.LFG(de.Z), me.LFG(_e.$z), me.LFG(Le.xV), me.LFG(Oe.LE), me.LFG(s.pk), me.LFG(Oe.yD), me.LFG(H.D))
        }, Me.\u0275prov = me.Yz7({token: Me, factory: Me.\u0275fac, providedIn: "root"}), Me
    })()
}, 47313
:
(se, B, o) => {
    "use strict";
    o.d(B, {oW: () => L, $z: () => $});
    var c = o(591), i = o(61737), y = o(72986), e = o(2994), _ = o(27221), p = o(24850), g = o(73307), r = o(5e3),
        t = o(74449), n = o(11130);

    class L {
        constructor(h = 0, x = 0, I = 0) {
            this.xp = h, this.xpToNext = x, this.lvl = I
        }
    }

    class k {
        constructor(h, x, I, Y, ae, ce) {
            this.game_mode = h, this.rating = x, this.rank_level = I, this.win_points = Y, this.loss_points = ae, this.safety_line = ce
        }
    }

    let $ = (() => {
        class s {
            constructor(x, I, Y) {
                this.gameApi = x, this.storage = I, this.guGameService = Y, this.dataStore = {
                    accountThresholds: [],
                    gameRanks: [],
                    userRankLevels: []
                }, this._accountThresholds$ = new c.X(Object.assign({}, this.dataStore).accountThresholds), this._gameRanks$ = new c.X(Object.assign({}, this.dataStore).gameRanks), this._userRankLevels$ = new c.X(Object.assign({}, this.dataStore).userRankLevels)
            }

            get accountThresholds$() {
                return this._accountThresholds$.asObservable()
            }

            get gameRanks$() {
                return this._gameRanks$.asObservable()
            }

            get userRankLevels$() {
                return this._userRankLevels$.asObservable()
            }

            isMaxRank(x, I) {
                return !(!x || !I || 0 === I.length) && x.rank_level === I[I.length - 1].level
            }

            fetchUserRankLevel() {
                return this.guGameService.fetchPlayerRanks$().pipe((0, y.q)(1), (0, e.b)(x => (this.dataStore.userRankLevels = x, this._userRankLevels$.next([...x]), x))).subscribe()
            }

            fetchUserGameProgression({userId: x, gameModeId: I}) {
                return this.gameApi.get(`/user/${x}/progression/${I}`).pipe((0, y.q)(1), (0, _.K)(Y => (console.error("error during loading of post game progression stats"), (0, i._)(Y))))
            }

            fetchGameRanks() {
                this.gameApi.get("/rank").pipe((0, y.q)(1), (0, e.b)(x => (this.dataStore.gameRanks = x, this._gameRanks$.next([...x]), x)), (0, _.K)(x => (console.error("error during loading game ranks"), console.error(x), x))).subscribe()
            }

            fetchAccountThresholds() {
                this.gameApi.get("/level_threshold").pipe((0, y.q)(1), (0, e.b)(x => {
                    this.dataStore.accountThresholds = x, this._accountThresholds$.next(Object.assign({}, this.dataStore).accountThresholds)
                }), (0, _.K)(x => (console.error("error during loading lvl thresholds"), x))).subscribe()
            }

            fetchAccountThresholdsByUserId(x) {
                this.gameApi.get(`/user/${x}/level_threshold`).pipe((0, y.q)(1), (0, e.b)(I => {
                    this.dataStore.accountThresholds = I, this._accountThresholds$.next(Object.assign({}, this.dataStore).accountThresholds)
                }), (0, _.K)(I => (console.error("error during loading lvl thresholds"), I))).subscribe()
            }

            storeAccountProgression(x, I) {
                this.storage.set([`last-progress-${x.toString()}`], I)
            }

            storeRankedProgression(x, I) {
                this.storage.set([`last-progress-${x.toString()}`], I)
            }

            getStoredAccountProgression(x) {
                return this.storage.get([`last-progress-${x.toString()}`]) || new L
            }

            storeLastGameId(x, I) {
                this.storage.set([`last-game-${x.toString()}`], I)
            }

            getStoredLastGameId(x) {
                return this.storage.get([`last-game-${x.toString()}`]) || ""
            }

            saveRankedProgression(x, I) {
                this.storage.set([`last-ranked-progress-${x.toString()}`, I.game_mode.toString()], I)
            }

            getStoredRankedProgression(x, I) {
                const Y = this.storage.get([`last-ranked-progress-${x.toString()}`, I.toString()]) || new k(I, 0, 1, 0, 0, 40);
                return this.dataStore.userRankLevels.push(Y), this._userRankLevels$.next([...this.dataStore.userRankLevels]), Y
            }

            getRankedProgressions(x) {
                return this.gameApi.get(`/user/${x}/rank`)
            }

            getRankedProgressionById(x, I) {
                return this.getRankedProgressions(x).pipe((0, p.U)(Y => Y.find(ae => ae.game_mode === I)), (0, e.b)(Y => (this.saveRankedProgression(x, Y), Y)))
            }

            calcPercentage(x, I) {
                const Y = this.getLowerBoundaryForLvl(x.lvl, I);
                return 100 * (x.xp - Y) / (x.xp + x.xpToNext - Y)
            }

            getLowerBoundaryForLvl(x, I) {
                const Y = I.find(ae => ae.level === x - 1);
                return Y ? Y.total_xp : 0
            }
        }

        return s.\u0275fac = function (x) {
            return new (x || s)(r.LFG(t.Ft), r.LFG(g.qy), r.LFG(n.xV))
        }, s.\u0275prov = r.Yz7({token: s, factory: s.\u0275fac}), s
    })()
}, 64523
:
(se, B, o) => {
    "use strict";
    o.d(B, {r: () => T, H: () => b});
    var c = o(72224), i = o(73307), y = o(591), e = o(8929), _ = o(98723), p = o(72986), g = o(2994), r = o(7625),
        t = o(24850), n = o(33403), v = o(5e3), P = o(74449), w = o(83035), L = o(44416), T = (() => {
            return (O = T || (T = {}))[O.AVAILABLE = 0] = "AVAILABLE", O[O.WAITING_TO_START = 1] = "WAITING_TO_START", O[O.STARTED = 2] = "STARTED", O[O.REWARDS_AVAILABLE = 3] = "REWARDS_AVAILABLE", O[O.ENDED = 4] = "ENDED", T;
            var O
        })();
    let b = (() => {
        class O {
            constructor(C, $, s, h) {
                this.gameApi = C, this.authService = $, this.queueService = s, this.utilService = h, this.dataStore = {
                    sealedMode: null,
                    sealedModeStatus: T.AVAILABLE
                }, this._sealedMode$ = new y.X(null), this._sealedModeStatus$ = new y.X(this.dataStore.sealedModeStatus), this.unsubscribe = new e.xQ
            }

            get sealedMode$() {
                return this._sealedMode$.asObservable()
            }

            get sealedModeStatus$() {
                return this._sealedModeStatus$.asObservable()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            fetchSealed() {
                const C = this.authService.getUserId(), $ = this.authService.getGameSessionTicket();
                this.gameApi.get(`/user/${C}/mode/${n.B_.SEALED_DECK}/deck?session=${$}`).pipe((0, p.q)(1)).subscribe(s => {
                    this.updateSealedMode(s)
                }, s => {
                    this.updateSealedMode(void 0)
                })
            }

            enterSealed$(C) {
                const $ = this.authService.getUserId(), s = this.authService.getGameSessionTicket();
                return this.gameApi.post(`/user/${$}/mode/${n.B_.SEALED_DECK}/deck?session=${s}`, {god: C}).pipe((0, p.q)(1), (0, g.b)(h => {
                    this.updateSealedMode(h)
                }))
            }

            updateSealedMode(C) {
                C && (C.game_mode_data = this.transformSealedModeGameModeData(C.game_mode_data)), this.dataStore.sealedMode = C, this._sealedMode$.next(C ? Object.assign({}, this.dataStore.sealedMode) : void 0), this.handleSealedModeStatus(C)
            }

            transformSealedModeGameModeData(C) {
                const $ = this.utilService.adjustToServerTime(C.end_time_remaining);
                return Object.assign(Object.assign({}, C), {
                    end_time_server: $,
                    end_timestamp_server: Date.parse($),
                    properties: Object.assign(Object.assign({}, C.properties), {
                        entry_cutoff_server: this.utilService.adjustToServerTime(C.properties.entry_cutoff_remaining),
                        start_time_server: this.utilService.adjustToServerTime(C.properties.start_time_remaining)
                    })
                })
            }

            handleSealedModeStatus(C) {
                if (C && C.sealed_id) if ("ended" !== C.status) {
                    if (!this.areRewardsAvailable(C)) return this.areWaitingToStart(C) ? (this.scheduleRefresh(C.game_mode_data.properties.start_time_server), void this.updateSealedModeStatus(T.WAITING_TO_START)) : (this.scheduleRefresh(C.game_mode_data.end_time_server, this.onSealedEnded.bind(this)), void this.updateSealedModeStatus(T.STARTED));
                    this.updateSealedModeStatus(T.REWARDS_AVAILABLE)
                } else this.updateSealedModeStatus(T.ENDED); else this.updateSealedModeStatus(T.AVAILABLE)
            }

            scheduleRefresh(C, $) {
                const s = Date.now(), x = new Date(C).getTime() + 1e3 - s;
                x > 0 && x < c.v && (0, _.H)(x).pipe((0, r.R)(this.unsubscribe), (0, p.q)(1)).subscribe(I => {
                    this.fetchSealed(), $ && $()
                })
            }

            onSealedEnded() {
                this.queueService.activeQueues$.pipe((0, p.q)(1), (0, t.U)(C => C.find($ => $.mode.id === n.B_.SEALED_DECK))).subscribe(C => {
                    C && this.queueService.cancel(C)
                })
            }

            areRewardsAvailable(C) {
                const $ = Date.now(), s = new Date(C.game_mode_data.end_time_server).getTime();
                return C.losses >= C.max_losses || C.wins >= C.max_wins || $ > s
            }

            areWaitingToStart(C) {
                const $ = Date.now(), s = new Date(C.game_mode_data.properties.start_time_server).getTime();
                return s && $ < s
            }

            updateSealedModeStatus(C) {
                this.dataStore.sealedModeStatus = C, this._sealedModeStatus$.next(this.dataStore.sealedModeStatus)
            }

            claimRewards$(C) {
                const $ = this.authService.getUserId(), s = this.authService.getGameSessionTicket();
                return this.gameApi.put(`/user/${$}/mode/${n.B_.SEALED_DECK}/deck/${C}?session=${s}`, {action: "claim"})
            }
        }

        return O.\u0275fac = function (C) {
            return new (C || O)(v.LFG(P.Ft), v.LFG(i.mI), v.LFG(w.g), v.LFG(L.F))
        }, O.\u0275prov = v.Yz7({token: O, factory: O.\u0275fac, providedIn: "root"}), O
    })()
}, 80537
:
(se, B, o) => {
    "use strict";
    o.d(B, {k: () => c});
    var c = (() => {
        return (i = c || (c = {})).CODE_0 = "You are already queueing for another game mode. (Error Code 0)", i.CODE_1 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 1)", i.CODE_2 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 2)", i.CODE_3 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 3)", i.CODE_4 = "Queueing is currently disabled for maintenance. Please try again later. (Error Code 4)", i.CODE_5 = "There was an error while starting the game. (Error Code 5)", i.CODE_6 = "There was an error while starting the game. Unable to verify game files. (Error Code 6)", i.CODE_7 = "There was an error while starting the game. Unable to verify game files. (Error Code 7)", i.CODE_8 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 8)", i.CODE_9 = "Unable to connect to server. Please try again later. If this problem persists, go to Settings and clear the cache. (Error Code 9)", i.CODE_10 = "Unable to join queue. Suspicious account activity has been detected. (Error Code 10)", i.CODE_11 = "The deck you are queueing with is not complete. (Error Code 11)", i.CODE_12 = "There was an issue authorising the game build download. (Error Code 12)", i.CODE_13 = "There was an issue downloading the game. (Error Code 13)", i.CODE_14 = "There was an issue extracting the game. (Error Code 14)", c;
        var i
    })()
}, 8611
:
(se, B, o) => {
    "use strict";
    o.d(B, {n: () => y});
    var c = o(5e3), i = o(66088);
    let y = (() => {
        class e {
            constructor(p) {
                this.modalService = p
            }

            ngOnInit() {
            }

            hideModal() {
                this.modalService.destroyTopModal()
            }

            reject() {
                window.open("https://immutable.atlassian.net/servicedesk/customer/portal/1/group/1/create/18", "_blank")
            }
        }

        return e.\u0275fac = function (p) {
            return new (p || e)(c.Y36(i.Z))
        }, e.\u0275cmp = c.Xpm({
            type: e,
            selectors: [["app-bot-alert-modal"]],
            inputs: {title: "title", message: "message", onOk: "onOk", okButtonText: "okButtonText"},
            decls: 12,
            vars: 0,
            consts: [[1, "gradientOverlay"], [1, "title"], [1, "description"], ["size", "large", "text", "accept", 1, "acceptButton", 3, "click"], [1, "rejectText", 3, "click"]],
            template: function (p, g) {
                1 & p && (c._UZ(0, "div", 0), c.TgZ(1, "div", 1), c._uU(2, " account issue "), c.qZA(), c.TgZ(3, "div", 2), c._uU(4, " We\u2019ve detected some unusual activity on your account, and suspect you might be a bot. "), c._UZ(5, "br")(6, "br")(7, "br"), c._uU(8, " You won\u2019t be able to queue for games or fuse cards until we can be sure you\u2019re a human.\n"), c.qZA(), c.TgZ(9, "gu-primary-hex-button", 3), c.NdJ("click", function () {
                    return g.hideModal()
                }), c.qZA(), c.TgZ(10, "a", 4), c.NdJ("click", function () {
                    return g.reject()
                }), c._uU(11, " i am not a bot "), c.qZA())
            },
            styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.title[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.rejectText[_ngcontent-%COMP%], .description[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.title[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.rejectText[_ngcontent-%COMP%], .description[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.description[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:center;width:calc(var(--vh) * 50);height:calc(var(--vh) * 45);padding-bottom:calc(var(--vw) * 2.5);background-image:url(/gu-assets/images/backgrounds/trader-overlay-bg.webp);background-size:cover;background-position:center}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.gradientOverlay[_ngcontent-%COMP%]{position:absolute;width:calc(var(--vh) * 50);height:calc(var(--vh) * 45);border:1px solid #182531;background:radial-gradient(ellipse at center,rgba(12,22,32,0) -80%,#0c1620 70%)}.title[_ngcontent-%COMP%]{background:linear-gradient(to bottom,#fff2d8 0%,#ebc98b 50%,#c6a052 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent;padding-bottom:calc(var(--vh) * 2);padding-top:calc(var(--vh) * 6);text-transform:uppercase}.description[_ngcontent-%COMP%]{margin-top:calc(calc(var(--vw) * 2) * .7);padding-left:calc(var(--vh) * 6);padding-right:calc(var(--vh) * 6);text-align:center}.acceptButton[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2)}.rejectText[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2);text-transform:uppercase;color:#8be1e0;cursor:pointer}.rejectText[_ngcontent-%COMP%]:hover{text-decoration:underline}"]
        }), e
    })()
}, 5231
:
(se, B, o) => {
    "use strict";
    o.d(B, {s: () => y});
    var c = o(5e3), i = o(66088);
    let y = (() => {
        class e {
            constructor(p) {
                this.modalService = p
            }

            ngOnInit() {
            }

            onOkCLick() {
                this.onOk()
            }
        }

        return e.\u0275fac = function (p) {
            return new (p || e)(c.Y36(i.Z))
        }, e.\u0275cmp = c.Xpm({
            type: e,
            selectors: [["app-hijack-modal"]],
            inputs: {title: "title", message: "message", onOk: "onOk", okButtonText: "okButtonText"},
            decls: 5,
            vars: 3,
            consts: [[1, "title-section"], [1, "message-section"], ["size", "large", 1, "cta-button", 3, "text", "click"]],
            template: function (p, g) {
                1 & p && (c.TgZ(0, "div", 0), c._uU(1), c.qZA(), c.TgZ(2, "div", 1), c._uU(3), c.qZA(), c.TgZ(4, "gu-primary-hex-button", 2), c.NdJ("click", function () {
                    return g.onOkCLick()
                }), c.qZA()), 2 & p && (c.xp6(1), c.Oqu(g.title), c.xp6(2), c.Oqu(g.message), c.xp6(1), c.Q6J("text", g.okButtonText))
            },
            styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.title-section[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.message-section[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.title-section[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.message-section[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.message-section[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{border:calc(var(--vh) * .15) solid #527493;background-color:#0c1620;position:relative;display:block;color:#f6f6f6;padding:calc(var(--vw) * 2);width:calc(var(--vw) * 30);display:flex;flex-flow:column nowrap;align-items:center;padding-bottom:calc(var(--vw) * 2.5)}.title-section[_ngcontent-%COMP%]{padding-bottom:calc(var(--vh) * 2);border-bottom:calc(var(--vh) * .15) solid #fff;text-transform:uppercase}.message-section[_ngcontent-%COMP%]{margin-top:calc(calc(var(--vw) * 2) * .7);text-align:center}.cta-button[_ngcontent-%COMP%]{margin-top:calc(var(--vw) * 2)}"]
        }), e
    })()
}, 14618
:
(se, B, o) => {
    "use strict";
    o.d(B, {
        gK: () => c,
        ky: () => i,
        Kg: () => y,
        dY: () => e,
        yn: () => _,
        Ry: () => p,
        Tg: () => g,
        c7: () => r,
        Vm: () => t,
        $9: () => n,
        X4: () => v,
        Lg: () => P,
        P6: () => w,
        wT: () => L
    });
    var c = (() => {
        return (T = c || (c = {})).GAME_BUILD_DOWNLOAD_CHECK = "[GameResources] Game Build Download Check", T.GAME_BUILD_DOWNLOAD_REQUEST = "[GameResources] Game Build Download Request", T.GAME_BUILD_DOWNLOAD_PROGRESS = "[GameResources] Game Build Download Progress", T.GAME_BUILD_DOWNLOAD_EXTRACT = "[GameResources] Game Build Download Extract", T.GAME_BUILD_DOWNLOAD_SUCCESS = "[GameResources] Game Build Download Success", T.GAME_BUILD_DOWNLOAD_ERROR = "[GameResources] Game Build Download Error", T.GAME_BUILD_DOWNLOAD_UPDATE_STATUS = "[GameResources] Game Build Download Update Status", T.GAME_ASSETS_DOWNLOAD_CHECK = "[GameResources] Game Assets Download Check", T.GAME_ASSETS_DOWNLOAD_REQUEST = "[GameResources] Game Assets Download Request", T.GAME_ASSETS_DOWNLOAD_PROGRESS = "[GameResources] Game Assets Download Progress", T.GAME_ASSETS_DOWNLOAD_SUCCESS = "[GameResources]  Game Assets Download Success", T.GAME_ASSETS_DOWNLOAD_ERROR = "[GameResources]  Game Assets Download Error", T.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS = "[GameResources] Game Assets Download Update Status", c;
        var T
    })();

    class i {
        constructor(b) {
            this.payload = b, this.type = c.GAME_BUILD_DOWNLOAD_CHECK
        }
    }

    class y {
        constructor() {
            this.type = c.GAME_BUILD_DOWNLOAD_REQUEST
        }
    }

    class e {
        constructor(b) {
            this.payload = b, this.type = c.GAME_BUILD_DOWNLOAD_PROGRESS
        }
    }

    class _ {
        constructor(b) {
            this.payload = b, this.type = c.GAME_BUILD_DOWNLOAD_EXTRACT
        }
    }

    class p {
        constructor() {
            this.type = c.GAME_BUILD_DOWNLOAD_SUCCESS
        }
    }

    class g {
        constructor(b) {
            this.payload = b, this.type = c.GAME_BUILD_DOWNLOAD_UPDATE_STATUS
        }
    }

    class r {
        constructor(b) {
            this.payload = b, this.type = c.GAME_BUILD_DOWNLOAD_ERROR
        }
    }

    class t {
        constructor(b) {
            this.payload = b, this.type = c.GAME_ASSETS_DOWNLOAD_CHECK
        }
    }

    class n {
        constructor() {
            this.type = c.GAME_ASSETS_DOWNLOAD_REQUEST
        }
    }

    class v {
        constructor(b) {
            this.payload = b, this.type = c.GAME_ASSETS_DOWNLOAD_PROGRESS
        }
    }

    class P {
        constructor(b) {
            this.payload = b, this.type = c.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS
        }
    }

    class w {
        constructor() {
            this.type = c.GAME_ASSETS_DOWNLOAD_SUCCESS
        }
    }

    class L {
        constructor(b) {
            this.payload = b, this.type = c.GAME_ASSETS_DOWNLOAD_ERROR
        }
    }
}, 69931
:
(se, B, o) => {
    "use strict";
    o.d(B, {VD: () => i, DM: () => y, gP: () => e});
    var c = o(96727);
    const i = (0, c.ZF)("gameResources"), y = () => (0, c.P1)(i, _ => _.gameBuild),
        e = () => (0, c.P1)(i, _ => _.gameAssets)
}, 63411
:
(se, B, o) => {
    "use strict";
    o.d(B, {e: () => b});
    var c = o(73175), i = o(591), y = o(61737), e = o(21086), _ = o(2994), p = o(61709), g = o(27221), r = o(24850),
        t = o(72986), n = o(40520), v = o(73307), P = o(5e3), w = o(11735);
    const L = new c.N0;
    let b = (() => {
        class O {
            constructor(C, $, s, h) {
                this.authHostService = C, this.storage = $, this.featureFlagsService = s, this.router = h, this.isRemembering = !0, this.dataStore = {account: null}, this._account$ = new i.X(null)
            }

            login(C, $, s) {
                return this.authHostService.post("/auth2?type=login&code=" + this.generate(), C).pipe((0, _.b)(h => this.sendAnalytics(!0, C.email, +h.id)), (0, p.VS)(h => this.saveAccount(h, $, s)), (0, _.b)(h => this.fetchAccount()), (0, g.K)(h => (this.sendAnalytics(!1, C.email), (0, y._)(h))))
            }

            saveAccount(C, $, s) {
                return this.auth = C, "function" == typeof window.bridge.updateAuthPair && window.bridge.updateAuthPair(C), this.isRemembering = $, $ && (this.storage.set(["user_id"], C.id), this.storage.set(["refresh"], C.refresh), this.storage.set(["access"], C.access)), this.authHostService.post(`/account/${C.id}/session`, {game_id: s}).pipe((0, _.b)(h => {
                    "function" == typeof window.bridge.updateSession && window.bridge.updateSession(h), this.storage.set(["game_session"], h)
                }), (0, r.U)(() => !0), (0, g.K)(h => (0, e.of)(!1)))
            }

            getLinkedAddresses(C) {
                return this.authHostService.get(`v2/account/${C}`).pipe((0, r.U)($ => $.addresses.map(s => s.address)))
            }

            fetchSession() {
                return (0, e.of)(this.getGameSessionTicket())
            }

            sendAnalytics(C, $, s) {
            }

            get account$() {
                return this._account$.asObservable()
            }

            _emitAccount(C) {
                this.dataStore.account = C, this._account$.next(Object.assign({}, this.dataStore).account), this.featureFlagsService.setContext(C ? {
                    userID: `${C.id}`,
                    email: C.email,
                    name: C.username,
                    anonymous: !1
                } : {anonymous: !0})
            }

            getUserId() {
                return this.auth && null != this.auth.id ? this.auth.id : this.storage.get(["user_id"])
            }

            getGameSessionTicket() {
                return this.storage.get(["game_session"])
            }

            fetchAccount() {
                const C = this.getUserId();
                !C || this.authHostService.get(`/v2/account/${C}`).pipe((0, t.q)(1), (0, _.b)($ => this._emitAccount($))).subscribe()
            }

            fetchAccountDetails() {
                const C = this.getUserId();
                if (C) return this.authHostService.get(`/v2/account/${C}`)
            }

            updateCurrentUser(C) {
                const $ = this.getUserId();
                return this.updateUser($, C)
            }

            updateUser(C, $) {
                return this.authHostService.put("/account/" + C, $).pipe((0, t.q)(1), (0, _.b)(s => this._emitAccount(s)))
            }

            getAuthHeader() {
                let C = new n.WM;
                return C = C.append("Content-Type", "application/x-www-form-urlencoded; charset=UTF-8"), C = C.append("Authorization", this.getAccessToken()), C
            }

            getRefreshToken() {
                return this.storage.get(["refresh"])
            }

            getAccessToken() {
                return this.storage.get(["access"])
            }

            getAuthToken() {
                return this.auth
            }

            register(C) {
                return this.authHostService.post("/register", C)
            }

            resend(C) {
                return this.authHostService.post("/resend", {email: C})
            }

            resetPassword(C) {
                return this.authHostService.put("/reset", {email: C})
            }

            isLoggedIn() {
                const C = this.getRefreshToken();
                return null != C && C.length > 0
            }

            logout() {
                this.auth = null, this._emitAccount(null), this.storage.delete(["user_id"]), this.storage.delete(["refresh"]), this.storage.delete(["access"]), this.storage.delete(["email"]), this.storage.delete(["subscribe"]), this.authHostService.post("/logout"), this.router.navigate(["/login"]), this.featureFlagsService.setContext({
                    userID: void 0,
                    email: void 0,
                    name: void 0,
                    anonymous: !0
                })
            }

            refreshToken() {
                const C = this.getRefreshToken();
                return this.authHostService.post("/auth2?type=refresh&code=" + this.generate(), {refresh: C}).pipe((0, _.b)($ => {
                }))
            }

            linkReferralCode(C) {
                const $ = this.getUserId();
                return this.authHostService.post(`/account/${$}/referrer`, {referral: C})
            }

            tokenIsExpired() {
                const C = this.getAuthToken();
                return L.isTokenExpired(C.access)
            }

            generate() {
                function C(N, J) {
                    return (N.length - N.replace(new RegExp(J, "g"), "").length) / J.length
                }

                function $(N, J, le) {
                    return J > N.length - 1 ? N : N.substr(0, J) + le + N.substr(J + 1)
                }

                const s = function (N) {
                    const le = Math.pow(16, Math.min(N, 8) - 1), X = Math.pow(16, Math.min(N, 8)) - 1;
                    let Z = (Math.floor(Math.random() * (X - le + 1)) + le).toString(16);
                    for (; Z.length < N;) Z += s(N - 8);
                    return Z
                }, h = Math.ceil(25 * Math.random()), x = 32 - h - 4;
                let I = ("" + s(h) + 2 + s(2) + 2 + s(x)).toLowerCase(), ce = C(I, "a") - C(I, "b") + 1, me = 0;
                for (; ce > 0 && ("a" !== I[me] && "b" !== I[me] && "2" !== I[me] && (I = $(I, me, "b"), ce--), me++, !(me > I.length));) ;
                for (; ce < 0 && ("a" !== I[me] && "b" !== I[me] && "2" !== I[me] && (I = $(I, me, "a"), ce++), me++, !(me > I.length));) ;
                return I
            }
        }

        return O.\u0275fac = function (C) {
            return new (C || O)(P.LFG(v.LI), P.LFG(v.qy), P.LFG(v.B3), P.LFG(w.F0))
        }, O.\u0275prov = P.Yz7({token: O, factory: O.\u0275fac}), O
    })()
}, 69340
:
(se, B, o) => {
    "use strict";
    o.d(B, {b5: () => O});
    var c = o(21086), i = o(41746), y = o(8929), e = o(56498), _ = o(24850), p = o(87168), g = o(61709), r = o(87545),
        t = o(14618), n = o(69931), v = o(5e3), P = o(79763), w = o(44416), L = o(96727);
    let O = (() => {
        class k {
            constructor($, s, h, x) {
                this.gameService = $, this.zone = s, this.utils = h, this.ngrxStore = x, this.downloads = new Map
            }

            getCurrentDownload() {
                return this.currentDownload
            }

            getVersionFile($, s) {
                return window.bridge.httpGet(`https://s3-ap-southeast-2.amazonaws.com/gods-builds/manifests/${s}-manifest.json`).pipe(this.utils.enterZone(this.zone))
            }

            getLatest($, s) {
                return this.getVersionFile($, s).pipe((0, _.U)(h => h.build_version))
            }

            getLocal($) {
                return (0, c.of)(this.gameService.getProperty($.id, "version"))
            }

            getVersions($, s) {
                let h;
                return h = (0, i.$R)("local" === s ? this.getLocal($) : this.getLatest($, s), this.getLocal($)), h
            }

            requiresUpdate($, s) {
                return this.getVersions($, s).pipe((0, p.M)(this.ngrxStore.select(n.VD)), (0, g.VS)(([[h, x], I]) => {
                    let Y = !0;
                    return x && x === h && (Y = "downloaded" === this.gameService.getProperty($.id, "status")), Y && "downloading" !== I.gameBuild.status && "extracting" !== I.gameBuild.status && this.ngrxStore.dispatch(new t.ky({isUpdateRequired: Y})), (0, c.of)(Y)
                }))
            }

            getUserPlatform() {
                return "win32" === window.bridge.platform() ? "win" : "mac"
            }

            getLatestAssetsVersions($, s) {
                const h = {platform: this.getUserPlatform(), branch: s};
                return window.bridge.httpPost("https://oyhca2oyje.execute-api.us-east-1.amazonaws.com/test/1/game/assets", h).pipe(this.utils.enterZone(this.zone))
            }

            getLocalAssetsVersions($) {
                return this.gameService.getProperty($.id, "assets") ? (0, c.of)(JSON.parse(this.gameService.getProperty($.id, "assets"))) : (0, c.of)(null)
            }

            requiresAssetsUpdate($, s) {
                return (0, i.$R)(this.getLocalAssetsVersions($), this.getLatestAssetsVersions($, s)).pipe((0, p.M)(this.ngrxStore.select(n.VD)), (0, r.w)(([[h, x], I]) => {
                    let Y;
                    return Y = h ? this.deltaAssetsVersions(h, x) : x, Y.length > 0 && "downloading" !== I.gameAssets.status && this.ngrxStore.dispatch(new t.Vm({isUpdateRequired: Y.length > 0})), (0, c.of)(Y)
                }))
            }

            deltaAssetsVersions($, s) {
                let h = [];
                return h = $ ? s ? s.filter(x => !$.some(I => x.etag === I.etag)) : [] : s, h
            }

            getDownloadInfo($, s, h) {
                return this.gameService.isObfuscatedBranch($.id) ? {
                    url: `${$.base_url_auth}/builds/game/${s}/${this.getFileName($, s)}`,
                    authToken: h
                } : {url: `${$.base_url}/builds/${s}/${this.getFileName($, s)}`, authToken: void 0}
            }

            getFileName($, s) {
                return "win32" === window.bridge.platform() ? "gods_" + s + $.extensions.windows : "gods_" + s + $.extensions.osx
            }

            downloadAndExtract($, s, h) {
                const x = this.gameService.getInstallPath($), I = this.getDownloadInfo($, s, h),
                    Y = window.bridge.download(I.url, x, this.getFileName($, s), h).pipe((0, _.U)(ae => (this.currentDownload.extracting = !0, this.gameService.setProperty($.id, "version", s), this.gameService.setProperty($.id, "status", "downloaded"), {
                        game: $,
                        fileName: this.getFileName($, s),
                        installPath: x
                    })));
                return this.currentDownload = {
                    progress: window.bridge.progress,
                    download: Y,
                    extracting: !1,
                    error$: new y.xQ
                }, this.currentDownload
            }

            displayDownloadCompleteNotification($) {
                new window.Notification("Download Complete", {
                    body: $.title + " has finished downloading.",
                    silent: !0
                }).onclick = () => {
                }
            }

            deleteFile($, s) {
                const h = window.bridge.join(s, $);
                window.bridge.exists(h) && window.bridge.deleteFile(h)
            }

            extractGame($, s, h) {
                return new e.y(x => {
                    const I = window.bridge.join(h, s), Y = window.bridge.join(h, $.title);
                    window.bridge.exists(I) || (console.error("GameDownloadService->extractGame() unable to find file to extract"), x.error("File not found! Cannot extract.")), window.bridge.extract(I, Y, ae => {
                        "win32" !== window.bridge.platform() ? window.bridge.chmod(Y + "/StandaloneOSXUniversal/gods.app/Contents/MacOS/gods", me => {
                            me ? (console.error(me), x.error(me)) : x.next(!0)
                        }) : x.next(!0)
                    })
                }).pipe((0, g.VS)(x => {
                    if (x) return this.gameService.setProperty($.id, "status", "extracted"), this.gameService.refreshGameContext(), null != this.currentDownload && (this.currentDownload.extracting = !1), (0, c.of)(x)
                }))
            }

            uninstallGame($, s) {
                const I = "win32" === window.bridge.platform() ? "/StandaloneWindows64" : "/StandaloneOSXUniversal",
                    Y = window.bridge.join(s, $.title, I);
                window.bridge.exists(Y) && this.uninstallFolder(Y)
            }

            uninstallFolder($) {
                window.bridge.clearDirectory($, s => {
                    s && console.log("@@@@@ uninstallFolder Error Clearing New Assets", s)
                })
            }
        }

        return k.\u0275fac = function ($) {
            return new ($ || k)(v.LFG(P.hM), v.LFG(v.R0b), v.LFG(w.F), v.LFG(L.yh))
        }, k.\u0275prov = v.Yz7({token: k, factory: k.\u0275fac, providedIn: "root"}), k
    })()
}, 79763
:
(se, B, o) => {
    "use strict";
    o.d(B, {hM: () => k});
    var c = o(591), i = o(61737), y = o(21086), e = o(24850), _ = o(92198), p = o(72986), g = o(73307), r = o(63764),
        t = o(80537), n = o(52492), v = o(5e3), P = o(66088), w = o(74449);
    o(63411);
    let k = (() => {
        class C {
            constructor(s, h, x, I, Y, ae) {
                this.authHostService = s, this.auth = h, this.storage = x, this.modalService = I, this.akuma = Y, this.gameApi = ae, this._currentGameContext$ = new c.X(null), this._branches$ = new c.X([]), this.dataStore = {
                    currentGameContext: null,
                    branches: []
                }
            }

            get currentGameContext$() {
                return this._currentGameContext$.asObservable()
            }

            get branches$() {
                return this._branches$.asObservable()
            }

            getBranch$(s) {
                const h = this.getProperty(s, "branch"), x = h && "" !== h ? h : "beta";
                return this.branches$.pipe((0, e.U)(I => I.find(Y => Y.name === x)), (0, _.h)(I => !!I))
            }

            isObfuscatedBranch(s = 1) {
                const h = this.getProperty(s, "branch"), x = this.dataStore.branches.find(I => I.name === h);
                return x && x.obfuscated
            }

            onValidBranch(s, h) {
                return !(!s || !h.find(x => x.name === s))
            }

            fetchBranchesExtended(s) {
                const h = this.getProperty(s, "branch");
                this.fetchBranchesExtendedApi(s).subscribe(x => {
                    this.onValidBranch(h, x) || (this.setProperty(s, "branch", "beta"), this.refreshGameContext(), "string" == typeof h && (this.auth.logout(), setTimeout(() => window.location.reload()))), this.dataStore.branches = x, this._branches$.next([...this.dataStore.branches])
                })
            }

            fetchBranchesExtendedApi(s) {
                const h = this.auth.getUserId();
                return this.authHostService.get(`/game/${s}/player/${h}/branch?format=extended`).pipe((0, p.q)(1))
            }

            setGuGameContext() {
                this.dataStore.currentGameContext = this.getMockedGuGame(), this._emitCurrentGameContext()
            }

            refreshGameContext() {
                this._emitCurrentGameContext()
            }

            _emitCurrentGameContext() {
                this._currentGameContext$.next(Object.assign({}, this.dataStore).currentGameContext)
            }

            getGames(s) {
                return this.authHostService.get("/account/" + s + "/game")
            }

            getUserTutorialMissions(s, h) {
                return (!s || !h) && (s = this.auth.getUserId(), h = this.auth.getGameSessionTicket()), this.gameApi.get(`/user/${s}/tutorial?session=${h}`)
            }

            updateUserTutorialMissions(s, h, x) {
                return (!s || !x) && (s = this.auth.getUserId(), x = this.auth.getGameSessionTicket()), this.gameApi.post(`/user/${s}/tutorial?session=${x}`, h)
            }

            setProcessID(s, h) {
                null == this.sessions && (this.sessions = new Map);
                const x = this.sessions.get(s);
                x && (x.pid = h, this.sessions.set(s, x))
            }

            isInstalled(s) {
                const h = this.getPlayPath(s), x = window.bridge.exists(h);
                return x || console.error("Game is not installed", h), x
            }

            play(s, h) {
                const x = this.getPlayPath(s);
                if (!this.isInstalled(s)) return console.error("gameService->play() game not intalled", s.id, s.title), (0, i._)(t.k.CODE_6);
                let I;
                return I = h ? window.bridge.executeArgs(x, h, (Y, ae) => {
                    if (ae) return console.error("gameService->play()->window.bridge.executeArgs() error starting game", x, ae), (0, i._)(t.k.CODE_7);
                    this.logGameClientLaunched()
                }) : window.bridge.execute(x, (Y, ae) => {
                    if (ae) return console.error("gameService->play()->window.bridge.execute() error starting game", x, ae), (0, i._)(t.k.CODE_7);
                    this.logGameClientLaunched()
                }), "win32" !== window.bridge.platform() && I.pid++, this.setProcessID(s.id, I.pid), (0, y.of)({process: I})
            }

            logGameClientLaunched() {
                "function" == typeof gtag && gtag("event", "succeeded", {event_category: "gameClientLaunched"}), this.akuma.postEvent("Flow", "_gameClientLaunched_succeeed")
            }

            getPlayPath(s) {
                const h = this.getInstallPath(s), x = window.bridge.join(h, s.title);
                return "win32" === window.bridge.platform() ? window.bridge.join(x, s.executables.windows) : window.bridge.join(x, s.executables.osx)
            }

            showInfoModal(s, h) {
                this.modalService.createModal(r.S, {title: s, text: h}, {
                    blurredBackground: !0,
                    canCloseFromInside: !1,
                    position: n.e1.Center,
                    size: n.Cg.StretchableWorkarea
                })
            }

            getMockedGuGame() {
                return {
                    id: 1,
                    title: "Gods Unchained",
                    description: "Gods Unchained is a state of the art competitive card game driven by decentralized asset ownership.\n      <br><br>Gods Unchained combines the convenience and beauty of digital card games with\n      the true ownership offered by physical card games to create the world's first blockchain eSport.",
                    background_url: "",
                    thumbnail_url: "launcher-mockup-gu-logo.png",
                    base_url: "https://builds.godsunchained.com",
                    base_url_auth: "https://d2kgdofmel8ecp.cloudfront.net",
                    userId: this.auth.getUserId(),
                    role: "dev",
                    executables: {osx: "/StandaloneOSXUniversal/gods.app", windows: "/StandaloneWindows64/gods.exe"},
                    extensions: {osx: "_osx_full.zip", windows: "_win64_full.zip"}
                }
            }

            getDefaultInstallPath() {
                return "win32" === window.bridge.platform() ? window.bridge.homeDirectory() + "\\AppData\\Local\\GodsUnchained" : window.bridge.homeDirectory() + "/Library/GodsUnchained/"
            }

            getInstallPath(s) {
                return this.getProperty(s.id, "path") || this.getDefaultInstallPath()
            }

            getAssetsPath() {
                return "win32" === window.bridge.platform() ? window.bridge.homeDirectory() + "\\Documents\\My Games\\GodsUnchained\\Assets" : window.bridge.homeDirectory() + "/Library/GodsUnchained/Assets"
            }

            getGameId() {
                return this.dataStore.currentGameContext ? this.dataStore.currentGameContext.id : null
            }

            getProperty(s, h) {
                return this.storage.get(["game", String(s), h])
            }

            deleteProperty(s, h) {
                return this.storage.delete(["game", String(s), h])
            }

            setProperty(s, h, x) {
                return this.storage.set(["game", String(s), h], x)
            }

            getBranch(s) {
                const h = this.getProperty(s, "branch");
                return (0, y.of)(h && "" !== h ? h : "beta")
            }

            clearAssets(s) {
                this.setProperty(s, "assets", JSON.stringify([])), window.bridge.clearGUAssets(h => {
                    console.error("Error Clearing New Assets", h)
                }), location.reload()
            }

            checkInstallationPath(s) {
                if (!this.getProperty(s, "path")) {
                    const x = this.getDefaultInstallPath();
                    this.setProperty(s, "path", x), this.clearVersion(s)
                }
            }

            clearVersion(s) {
                this.deleteProperty(s, "version"), this.refreshGameContext(), setTimeout(() => window.location.reload())
            }
        }

        return C.\u0275fac = function (s) {
            return new (s || C)(v.LFG(g.LI), v.LFG(g.mI), v.LFG(g.qy), v.LFG(P.Z), v.LFG(w.jt), v.LFG(w.Ft))
        }, C.\u0275prov = v.Yz7({token: C, factory: C.\u0275fac, providedIn: "root"}), C
    })()
}, 24058
:
(se, B, o) => {
    "use strict";
    o.d(B, {m: () => y});
    var c = o(73307), i = o(5e3);
    let y = (() => {
        class e {
            constructor(p) {
                this.storageService = p, this.logsClearedKey = "logsCleared", this.fileNames = ["main.log", "main.old.log", "renderer.log", "renderer.old.log"]
            }

            shouldClearLogs() {
                return !this.storageService.get([this.logsClearedKey])
            }

            clearLogs() {
                ("win32" === window.bridge.platform() ? this.windowsPaths() : this.macPaths()).forEach(g => {
                    this.fileNames.forEach(r => {
                        const t = `${g}${r}`;
                        window.bridge.exists(t) && window.bridge.deleteFile(t)
                    })
                }), this.storageService.set([this.logsClearedKey], !0)
            }

            windowsPaths() {
                return [`${window.bridge.homeDirectory()}\\AppData\\Roaming\\immutable-launcher\\logs\\`, `${window.bridge.homeDirectory()}\\AppData\\Roaming\\apollo-launcher\\logs\\`]
            }

            macPaths() {
                return [`${window.bridge.homeDirectory()}/Library/Logs/immutable-launcher/`, `${window.bridge.homeDirectory()}/Library/Logs/apollo-launcher/`]
            }
        }

        return e.\u0275fac = function (p) {
            return new (p || e)(i.LFG(c.qy))
        }, e.\u0275prov = i.Yz7({token: e, factory: e.\u0275fac, providedIn: "root"}), e
    })()
}, 52492
:
(se, B, o) => {
    "use strict";
    o.d(B, {e1: () => c, Cg: () => i});
    var c = (() => {
        return (e = c || (c = {}))[e.Center = 0] = "Center", e[e.Custom = 1] = "Custom", c;
        var e
    })(), i = (() => {
        return (e = i || (i = {}))[e.Fullscreen = 0] = "Fullscreen", e[e.Workarea = 1] = "Workarea", e[e.StretchableFullscreen = 2] = "StretchableFullscreen", e[e.StretchableWorkarea = 3] = "StretchableWorkarea", i;
        var e
    })()
}, 66088
:
(se, B, o) => {
    "use strict";
    o.d(B, {Z: () => w});
    var c = o(8929), i = o(2994), y = o(26982), e = o(5e3), _ = o(22313), p = o(69808);
    const g = ["modalHolder"];

    function r(L, T) {
    }

    let t = (() => {
        class L {
            constructor(b, O, k) {
                this.resolver = b, this.sanitizer = O, this.el = k, this.blurredBackground = !1, this.canCloseFromInside = !1, this.canCloseFromOutside = !0, this.closeModal$ = new e.vpe
            }

            get myStyle() {
                return this.sanitizer.bypassSecurityTrustStyle(`\n      z-index: ${this.styles.zIndex};\n    `)
            }

            ngOnInit() {
                const b = this.resolver.resolveComponentFactory(this.component);
                this.componentRef = this.modalHolder.createComponent(b, 0, this.modalHolder.injector, [[]]), Object.assign(this.componentRef.instance, this.inputs), this.calculateLocation()
            }

            ngOnDestroy() {
                this.componentRef = null
            }

            calculateLocation() {
            }

            closeModal(b) {
                b && !this.canCloseFromInside || !b && this.canCloseFromOutside && this.closeModal$.emit()
            }

            onClickedOutside(b) {
            }
        }

        return L.\u0275fac = function (b) {
            return new (b || L)(e.Y36(e._Vd), e.Y36(_.H7), e.Y36(e.SBq))
        }, L.\u0275cmp = e.Xpm({
            type: L,
            selectors: [["app-modal"]],
            viewQuery: function (b, O) {
                if (1 & b && e.Gf(g, 7, e.s_b), 2 & b) {
                    let k;
                    e.iGM(k = e.CRH()) && (O.modalHolder = k.first)
                }
            },
            hostVars: 2,
            hostBindings: function (b, O) {
                2 & b && e.Akn(O.myStyle)
            },
            inputs: {
                component: "component",
                inputs: "inputs",
                styles: "styles",
                blurredBackground: "blurredBackground",
                canCloseFromInside: "canCloseFromInside",
                canCloseFromOutside: "canCloseFromOutside"
            },
            outputs: {closeModal$: "closeModal$"},
            decls: 4,
            vars: 1,
            consts: [[1, "bgOverlay", 3, "click"], [1, "modalContentContainer", 3, "ngStyle", "click"], ["modalHolder", ""]],
            template: function (b, O) {
                1 & b && (e.TgZ(0, "a", 0), e.NdJ("click", function () {
                    return O.closeModal(!1)
                }), e.qZA(), e.TgZ(1, "div", 1), e.NdJ("click", function () {
                    return O.closeModal(!0)
                }), e.YNc(2, r, 0, 0, "ng-template", null, 2, e.W1O), e.qZA()), 2 & b && (e.xp6(1), e.Q6J("ngStyle", O.styles))
            },
            directives: [p.PC],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{position:fixed;top:0;left:0;width:100%;height:100%;display:block}.bgOverlay[_ngcontent-%COMP%]{position:absolute;right:0;left:0;top:0;bottom:0;background-color:#0c1620;opacity:.7}.bgOverlay--transparent[_ngcontent-%COMP%]{background:transparent}.modalContentContainer[_ngcontent-%COMP%]{position:absolute;top:0;left:0;opacity:1}"]
        }), L
    })();
    var n = o(52492), v = o(44416), P = o(6674);
    let w = (() => {
        class L {
            constructor(b, O, k, C, $) {
                this.resolver = b, this.appRef = O, this.utilsService = C, this.resizeService = $, this._modalDestroy$ = new c.xQ, this.modalsStack = [], this.modalFactory = this.resolver.resolveComponentFactory(t), this.renderer = k.createRenderer(null, null), this.resizeService.viewPortUnits$.pipe((0, i.b)(({vh: s}) => this.vh = s)).subscribe()
            }

            setModalVCRs(b, O) {
                this.workareaVcr = b, this.fullscreenVcr = O
            }

            get modalDestroy$() {
                return this._modalDestroy$.asObservable()
            }

            createModal(b, O = {}, {
                canCloseFromInside: k = !1,
                canCloseFromOutside: C = !0,
                blurredBackground: $ = !1,
                position: s = n.e1.Center,
                customPosition: h = null,
                size: x = n.Cg.StretchableFullscreen
            } = {}, I) {
                const Y = I || this.getVCR(x), ae = this.getModalHolderStyles(s, x, h);
                0 === this.modalsStack.length && (this.renderer.addClass(Y.element.nativeElement.parentElement, "addModalBlurBackground"), this.modalsStack.push({
                    vcr: Y,
                    nativeElement: Y.element.nativeElement,
                    parentElement: Y.element.nativeElement.parentElement
                }));
                const ce = this.createModalComponent(b, O, Y, ae, $, k, C);
                this.modalsStack.push({
                    component: ce,
                    vcr: Y,
                    nativeElement: ce.instance.el.nativeElement
                }), this.updateBlur()
            }

            getVCR(b) {
                switch (b) {
                    case n.Cg.Fullscreen:
                    case n.Cg.StretchableFullscreen:
                        return this.fullscreenVcr || this.appRef.components[0].instance.vcr;
                    case n.Cg.Workarea:
                    case n.Cg.StretchableWorkarea:
                        return this.workareaVcr
                }
            }

            getModalHolderStyles(b, O, k) {
                if (b === n.e1.Custom) {
                    (null === k || 2 !== k.split(":").length) && console.error("Provide valid customPosition (SELECTOR:POSITION ex. '#elementId:left')");
                    const C = k.split(":");
                    return Object.assign(Object.assign({}, this.getRelativePos(C[0], C[1])), {zIndex: O === n.Cg.Workarea ? y.Rl.measurements.headerBarZLevel - 1 : y.Rl.measurements.modalLayerZLevel})
                }
                return Object.assign(Object.assign({}, this.getBoundaries(b, O)), {zIndex: O === n.Cg.Workarea ? y.Rl.measurements.headerBarZLevel - 1 : y.Rl.measurements.modalLayerZLevel})
            }

            destroyTopModal() {
                if (0 === this.modalsStack.length) return;
                const b = this.modalsStack.pop();
                this._modalDestroy$.next(b.component.componentType), b.component && b.component.destroy(), b.component = null, this.updateBlur(), 1 === this.modalsStack.length && (this.renderer.removeClass(this.modalsStack[0].parentElement, "addModalBlurBackground"), this.modalsStack = [])
            }

            destroyModalsStack() {
                0 !== this.modalsStack.length && (this.modalsStack.filter(b => b.component).forEach(b => {
                    this._modalDestroy$.next(b.component.componentType), b.component.destroy(), b.component = null, b.nativeElement = null
                }), this.updateBlur(), this.renderer.removeClass(this.modalsStack[0].parentElement, "addModalBlurBackground"), this.modalsStack = [])
            }

            createModalComponent(b, O, k, C, $, s, h) {
                const x = k.createComponent(this.modalFactory, this.modalsStack.length - 1, k.injector, [[]]);
                return Object.assign(x.instance, {
                    styles: C,
                    blurredBackground: $,
                    canCloseFromInside: s,
                    canCloseFromOutside: h,
                    component: b,
                    inputs: O
                }), x.instance.closeModal$.subscribe(() => {
                    k.remove(), this.destroyTopModal()
                }), x
            }

            getBoundaries(b, O) {
                if (b === n.e1.Center) {
                    if (O === n.Cg.StretchableFullscreen || O === n.Cg.StretchableWorkarea) return {
                        "top.%": 50,
                        "left.%": 50,
                        transform: "translate(-50%, -50%)"
                    };
                    if (O === n.Cg.Fullscreen || O === n.Cg.Workarea) return {top: 0, bottom: 0, left: 0, right: 0};
                    console.error(`Size '${O}' not supported`)
                } else console.error(`Position '${b}' not supported`)
            }

            getRelativePos(b, O) {
                const C = window.document.querySelector(b).getBoundingClientRect();
                switch (O) {
                    case"left":
                        return {
                            "right.px": document.body.clientWidth - C.right + C.width + 15,
                            "top.px": C.top + C.height / 2,
                            transform: "translateY(-50%)"
                        };
                    case"right":
                        return {"left.px": C.right + 15, "top.px": C.top + C.height / 2, transform: "translateY(-50%)"};
                    case"top":
                        return {
                            top: "unset",
                            "bottom.px": document.body.clientHeight - C.bottom + C.height + 15,
                            "left.px": C.left + C.width / 2,
                            transform: "translateX(-50%)"
                        };
                    case"bottom":
                        return {"top.px": C.bottom + 15, "left.px": C.left + C.width / 2, transform: "translateX(-50%)"}
                }
                return {"top.%": 50, "left.%": 50, transform: "translate(-50%, -50%)"}
            }

            updateBlur() {
                if (this.modalsStack.filter(b => !!b.nativeElement).forEach(b => this.setBlurredBackground(b.nativeElement, !1)), this.modalsStack.length > 1) {
                    const b = this.utilsService.findLastIndex(this.modalsStack, O => O.component && O.component.instance && O.component.instance.blurredBackground);
                    b > 0 && this.setBlurredBackground(this.modalsStack[b].nativeElement, !0)
                }
            }

            setBlurredBackground(b, O) {
                let k;
                b instanceof Comment ? k = b.previousSibling : (k = b, this.renderer.setStyle(b, "backgroundColor", O ? "rgba(29,47,65, 0.6)" : "unset")), this.renderer.setStyle(k, "backdrop-filter", O ? `blur(${1.5 * this.vh}px)` : "none")
            }
        }

        return L.\u0275fac = function (b) {
            return new (b || L)(e.LFG(e._Vd), e.LFG(e.z2F), e.LFG(e.FYo), e.LFG(v.F), e.LFG(P._))
        }, L.\u0275prov = e.Yz7({token: L, factory: L.\u0275fac}), L
    })()
}, 77391
:
(se, B, o) => {
    "use strict";
    o.d(B, {f: () => y});
    var c = o(591), i = o(5e3);
    let y = (() => {
        class e {
            constructor() {
                this._currentRoute$ = new c.X("")
            }

            get currentRoute$() {
                return this._currentRoute$.asObservable()
            }

            updateCurrentRoute(p) {
                this._currentRoute$.next(p)
            }
        }

        return e.\u0275fac = function (p) {
            return new (p || e)
        }, e.\u0275prov = i.Yz7({token: e, factory: e.\u0275fac, providedIn: "root"}), e
    })()
}, 236
:
(se, B, o) => {
    "use strict";
    o.d(B, {u: () => i});
    var c = o(5e3);
    let i = (() => {
        class y {
            transform(_) {
                const p = Math.floor(_ / 60);
                return p.toString().padStart(1, "0") + ":" + Math.floor(_ - 60 * p).toString().padStart(2, "0")
            }
        }

        return y.\u0275fac = function (_) {
            return new (_ || y)
        }, y.\u0275pipe = c.Yjl({name: "duration", type: y, pure: !0}), y
    })()
}, 83035
:
(se, B, o) => {
    "use strict";
    o.d(B, {g: () => r});
    var c = o(59633), y = o(591), e = o(1059), _ = o(92198), p = o(5e3), g = o(74449);
    let r = (() => {
        class t {
            constructor(v, P) {
                this.analyticsService = v, this.akumaService = P, this.dataStore = {activeQueues: []}, this._activeQueues$ = new y.X([]), this._queueStatus$ = new y.X(null)
            }

            get queueStatus$() {
                return this._queueStatus$.asObservable()
            }

            get activeQueues$() {
                return this._activeQueues$.asObservable()
            }

            _emitQueues() {
                this._activeQueues$.next(Object.assign({}, this.dataStore).activeQueues)
            }

            enqueue(v) {
                this.dataStore.activeQueues.push(v), this._emitQueues()
            }

            dequeue(v) {
                this.dataStore.activeQueues = this.dataStore.activeQueues.filter(P => P !== v), this._emitQueues()
            }

            start(v, P, w) {
                const L = {game_id: v, mode: P, startTimestamp: (new Date).getTime(), status: "active", params: w};
                return this.enqueue(L), this._queueStatus$.next(L), this.logQueueStarted(L), this.getQueueSubset(b => b === L).pipe((0, e.O)(L))
            }

            cancel(v) {
                this.dataStore.activeQueues = this.dataStore.activeQueues.filter(P => P && (P.game_id !== v.game_id || P.mode.id !== v.mode.id)), v.status = "cancelled", v.startTimestamp = null, this._queueStatus$.next(v), this._emitQueues(), this.logQueueCancelled(v)
            }

            complete(v) {
                this.dataStore.activeQueues = this.dataStore.activeQueues.filter(P => P && (P.game_id !== v.game_id || P.mode.id !== v.mode.id)), v.status = "completed", v.startTimestamp = null, this._queueStatus$.next(v), this._emitQueues(), this.logQueueCompleted(v)
            }

            stopAllQueues() {
                this.dataStore.activeQueues.forEach(v => this.cancel(v))
            }

            getQueue(v, P) {
                return this.getQueueSubset(w => w && w.game_id === v && w.mode.id === P)
            }

            getGameQueues(v) {
                return this.getQueueSubset(P => P && P.game_id === v)
            }

            getQueueSubset(v) {
                return this.queueStatus$.pipe((0, _.h)(P => v(P)))
            }

            logQueueCancelled(v) {
                "function" == typeof gtag && gtag("event", "failed", {event_category: "queue"});
                const P = {
                    game_id: v.game_id,
                    mode_id: v.mode.id,
                    mode_name: v.mode.name,
                    button_state: "queue_cancelled"
                };
                this.analyticsService.postEvent(new c.Queue.Cancelled.Event(P)), this.akumaService.postEvent("Flow", "_queue_failed", P), this.akumaService.postEvent("Control", "arenaHomeGameStartBtn_pressed", P)
            }

            logQueueCompleted(v) {
                "function" == typeof gtag && gtag("event", "succeeded", {event_category: "queue"});
                const P = {
                    game_id: v.game_id,
                    mode_id: v.mode.id,
                    mode_name: v.mode.name,
                    button_state: "queue_completed"
                };
                this.analyticsService.postEvent(new c.Queue.Completed.Event(P)), this.akumaService.postEvent("Flow", "_queue_succeeded", P)
            }

            logQueueStarted(v) {
                "function" == typeof gtag && gtag("event", "started", {event_category: "queue"});
                const P = {
                    game_id: v.game_id,
                    mode_id: v.mode.id,
                    mode_name: v.mode.name,
                    button_state: "queue_started"
                };
                this.analyticsService.postEvent(new c.Queue.Started.Event(P)), this.akumaService.postEvent("Flow", "_queue_started", P), this.akumaService.postEvent("Control", "arenaHomeGameStartBtn_pressed", P)
            }
        }

        return t.\u0275fac = function (v) {
            return new (v || t)(p.LFG(g.yD), p.LFG(g.jt))
        }, t.\u0275prov = p.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
    })()
}, 6674
:
(se, B, o) => {
    "use strict";
    o.d(B, {_: () => v});
    var c = o(8929), i = o(591), y = o(23753), e = o(80013), _ = o(92198), p = o(2994), g = o(7625), r = o(73307),
        t = o(5e3), n = o(44416);
    let v = (() => {
        class P {
            constructor(L, T, b) {
                this.utils = L, this.zone = T, this.storage = b, this.unsubscribe = new c.xQ, this._windowSize$ = new i.X({
                    width: 0,
                    height: 0
                }), this._viewPortUnits$ = new i.X({
                    vh: 0,
                    vw: 0
                }), this.ClientSize = "CLIENT_SIZE", this.updateBridgeClientViewport(), this.watchWindowResize()
            }

            get windowSize$() {
                return this._windowSize$.asObservable()
            }

            get viewPortUnits$() {
                return this._viewPortUnits$.asObservable()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            onResize(L) {
                this._windowSize$.next({width: L.target.innerWidth, height: L.target.innerHeight})
            }

            setViewPortUnits({vh: L, vw: T}) {
                this._viewPortUnits$.next({vw: T, vh: L})
            }

            watchWindowResize() {
                (0, y.R)(window, "resize").pipe((0, e.b)(100)).subscribe(L => this.onResize(L))
            }

            watchClientResize() {
                this._currentDisplaySize = window.bridge.getDisplaySize(), window.bridge.displayMetricsChange$.pipe(this.utils.enterZone(this.zone), (0, _.h)(L => this.displayMetricsDiffer(L)), (0, p.b)(L => {
                    this._currentDisplaySize = L, this.resizeClient(this.currentClientSize)
                })).subscribe()
            }

            get currentClientSize() {
                return this.storage.get([this.ClientSize]) || "medium"
            }

            resizeClient(L) {
                const T = P.clientSizes.find(O => O.name === L);
                if (!T) return void console.error(`Client Size: ${L}, not supported`);
                this.storage.set([this.ClientSize], T.name);
                const b = this.calcClientSize(T.displayPortion, this._currentDisplaySize.width);
                window.bridge.setClientSize(b.width, b.height, !0, !0)
            }

            calcClientSize(L, T) {
                const b = Math.floor(T * L);
                return {width: b, height: Math.floor(9 * b / 16)}
            }

            displayMetricsDiffer(L) {
                return L.width !== this._currentDisplaySize.width && L.height !== this._currentDisplaySize.height
            }

            updateBridgeClientViewport() {
                this.viewPortUnits$.pipe((0, _.h)(() => "function" == typeof window.bridge.updateViewportUnits), (0, p.b)(L => window.bridge.updateViewportUnits(L)), (0, g.R)(this.unsubscribe)).subscribe()
            }
        }

        return P.clientSizes = [{name: "small", displayPortion: .5}, {
            name: "medium",
            displayPortion: .75
        }, {name: "large", displayPortion: .85}], P.\u0275fac = function (L) {
            return new (L || P)(t.LFG(n.F), t.LFG(t.R0b), t.LFG(r.qy))
        }, P.\u0275prov = t.Yz7({token: P, factory: P.\u0275fac}), P
    })()
}, 5969
:
(se, B, o) => {
    "use strict";
    o.d(B, {g: () => y});
    var c = o(591), i = o(5e3);
    let y = (() => {
        class e {
            constructor() {
                this._openSettings$ = new c.X(null)
            }

            get openSettings$() {
                return this._openSettings$.asObservable()
            }

            openSettings(p = "immutable") {
                this._openSettings$.next(p)
            }

            markSettingsAsOpen() {
                this._openSettings$.next(null)
            }
        }

        return e.\u0275fac = function (p) {
            return new (p || e)
        }, e.\u0275prov = i.Yz7({token: e, factory: e.\u0275fac}), e
    })()
}, 44416
:
(se, B, o) => {
    "use strict";
    o.d(B, {F: () => p});
    var c = o(52886), i = o(56498), y = o(57674), e = o(5e3), _ = o(74449);
    let p = (() => {
        class g {
            constructor(t) {
                this.filterService = t
            }

            markFormGroupTouched(t) {
                Object.values(t.controls).forEach(n => {
                    n.markAsTouched(), n.controls && this.markFormGroupTouched(n)
                })
            }

            getRandomInt(t, n) {
                return t = Math.ceil(t), n = Math.floor(n), Math.floor(Math.random() * (n - t + 1)) + t
            }

            arrayToMap(t, n, v) {
                return t ? t.reduce((P, w) => (P[n(w)] = v(w), P), {}) : {}
            }

            groupBy(t, n) {
                const v = new Map;
                return t.forEach(P => {
                    const w = n(P), L = v.get(w);
                    L ? L.push(P) : v.set(w, [P])
                }), v
            }

            convertIdsToCards(t, n, v) {
                const P = [];
                for (const w in n) if (n[w]) {
                    const L = v.get(parseInt(w));
                    n[w].forEach(T => {
                        if (-1 !== t.indexOf(T.id)) {
                            const b = new c.Zb(T.id, parseInt(w), T.q, L, T.status);
                            P.push(b)
                        }
                    })
                }
                return P
            }

            diff(t, n) {
                return [...t.filter(w => !n.includes(w)), ...n.filter(w => !t.includes(w))]
            }

            enterZone(t) {
                return n => new i.y(v => n.subscribe({
                    next(P) {
                        t.run(() => v.next(P))
                    }, error(P) {
                        v.error(P)
                    }, complete() {
                        v.complete()
                    }
                }))
            }

            findLastIndex(t, n) {
                const v = t.slice().reverse().findIndex(n);
                return v >= 0 ? t.length - 1 - v : v
            }

            hashCode(t) {
                let v, P, n = 0;
                if (0 === t.length) return n;
                for (v = 0; v < t.length; v++) P = t.charCodeAt(v), n = (n << 5) - n + P, n |= 0;
                return n
            }

            chunk(t, n) {
                const v = [];
                for (; t.length;) v.push(t.splice(0, n));
                return v
            }

            calcTopCards(t, n, v) {
                const P = this.filterService.getSort(y.PE.AscQuality, t), w = [...n].sort(P),
                    L = Math.min(v, w.length);
                return w.slice(0, L)
            }

            toISODateString(t) {
                function n(v) {
                    return v < 10 ? "0" + v : v
                }

                return t.getUTCFullYear() + "-" + n(t.getUTCMonth() + 1) + "-" + n(t.getUTCDate()) + "T" + n(t.getUTCHours()) + ":" + n(t.getUTCMinutes()) + ":" + n(t.getUTCSeconds()) + "." + n(t.getUTCMilliseconds()) + "Z"
            }

            calculateContentHeight(t, n) {
                let v = t.style.height, P = t.offsetHeight, w = t.scrollHeight, L = t.style.overflow;
                if (!(P >= w)) return w;
                if (t.style.height = P + n + "px", t.style.overflow = "hidden", w < t.scrollHeight) {
                    for (; t.offsetHeight >= t.scrollHeight;) t.style.height = (P -= n) + "px";
                    for (; t.offsetHeight < t.scrollHeight;) t.style.height = P++ + "px";
                    return t.style.height = v, t.style.overflow = L, P
                }
            }

            dictionaryToMap(t) {
                return Object.entries(t).map(([n, v]) => ({
                    key: n,
                    val: v
                })).reduce((n, v) => n.set(Number(v.key), v.val), new Map)
            }

            adjustToServerTime(t) {
                const n = 1e3 * t, P = (new Date).getTime() + n;
                return new Date(P).toISOString()
            }
        }

        return g.\u0275fac = function (t) {
            return new (t || g)(e.LFG(_.iZ))
        }, g.\u0275prov = e.Yz7({token: g, factory: g.\u0275fac, providedIn: "root"}), g
    })()
}, 49757
:
(se, B, o) => {
    "use strict";
    o.d(B, {m: () => s});
    var c = o(14135), i = o(69808), y = o(93075), e = o(73307), _ = o(51649), p = o(5e3);
    let g = (() => {
        class h {
        }

        return h.\u0275fac = function (I) {
            return new (I || h)
        }, h.\u0275mod = p.oAB({type: h}), h.\u0275inj = p.cJS({
            providers: [{provide: _.R, useClass: _.E}],
            imports: [[i.ez]]
        }), h
    })();
    var r = o(74449), t = o(43991);
    let n = (() => {
        class h {
        }

        return h.\u0275fac = function (I) {
            return new (I || h)
        }, h.\u0275mod = p.oAB({type: h}), h.\u0275inj = p.cJS({providers: [t.z], imports: [[i.ez, r.xd]]}), h
    })();
    var v = o(66773), P = o(69878), w = o(23569), L = o(79763), T = o(66088), b = o(236), O = o(18464);
    let C = (() => {
        class h {
            transform(I, Y) {
                const ae = new O.BigNumber(10).pow(18);
                return I ? new O.BigNumber(I).div(ae) : null
            }
        }

        return h.\u0275fac = function (I) {
            return new (I || h)
        }, h.\u0275pipe = p.Yjl({name: "WeiToEth", type: h, pure: !0}), h
    })();
    var $ = o(5969);
    let s = (() => {
        class h {
            static forRoot() {
                return {ngModule: h, providers: [T.Z, L.hM, b.u, C, r.$c, w.d, $.g, {provide: e.Ho, useValue: P.N}]}
            }
        }

        return h.\u0275fac = function (I) {
            return new (I || h)
        }, h.\u0275mod = p.oAB({type: h}), h.\u0275inj = p.cJS({imports: [[i.ez, c.aw, y.u5, y.UX, v.W2, n, r.xd, g], c.aw, y.UX, v.W2, r.xd, g]}), h
    })()
}, 69878
:
(se, B, o) => {
    "use strict";
    o.d(B, {N: () => T});
    var c = o(74449), i = o(43991), y = o(63411), e = o(73307), _ = o(40886), p = o(26959), g = o(45425), r = o(5254),
        t = o(68896), n = o(18499), v = o(24850), P = o(5e3);
    const T = {
        production: !0,
        appConfig: "./assets/config/appConfig.prod.json",
        appConfigDev: "./assets/config/appConfig.dev.json",
        facebookId: "1069247517330-3up4o81s0idk15isj1j884v7i4kng8l9.apps.googleusercontent.com",
        googleId: "329849180933335",
        ipApiKey: "MaCXYSWqarQdyw4",
        wyreId: "AC_D3GURN789ZF",
        tickerHost: "https://api.coinmarketcap.com/v1/ticker",
        analyticsHost: "https://ingest.immutable.com/",
        immutableWalletPageURL: "https://landing.immutable.com/wallet",
        envClasses: {
            authService: y.e, ethService: (() => {
                class b {
                    constructor(k) {
                        this.environment = k, this.initHTTPProvider()
                    }

                    initHTTPProvider() {
                        this._httpProvider = this.environment.production ? new p.J : new p.J("ropsten")
                    }

                    get httpProvider() {
                        return this._httpProvider
                    }

                    getTransactionReceipt$(k) {
                        return (0, r.D)(this._httpProvider.getTransactionReceipt(k))
                    }

                    getBalance(k) {
                        return (0, r.D)(this._httpProvider.getBalance(k))
                    }

                    getTransaction$(k) {
                        return (0, r.D)(this.provider.getTransaction(k))
                    }

                    getWETHBalance(k) {
                        let C, $;
                        return C = new g.ethers.providers.InfuraProvider(this.environment.production ? _.t : _.Y), $ = this.environment.production ? "0xc02aaa39b223fe8d0a0e5c4f27ead9083c756cc2" : "0xc778417e063141139fce010982780140aa0cd5ab", (0, r.D)(n.WETH9.at(C, $).balanceOf(k)).pipe((0, v.U)(s => s.toString()))
                    }

                    getGasPrice() {
                        return (0, r.D)(this.provider ? this.provider.getGasPrice() : (0, t.c)())
                    }
                }

                return b.\u0275fac = function (k) {
                    return new (k || b)(P.LFG(e.Ho))
                }, b.\u0275prov = P.Yz7({token: b, factory: b.\u0275fac}), b
            })(), cardsService: c.dK, storageService: (() => {
                class b {
                    constructor() {
                    }

                    set(k, C) {
                        return null != C && window.bridge.set(k, C)
                    }

                    get(k) {
                        return window.bridge.get(k)
                    }

                    delete(k) {
                        return window.bridge.delete(k)
                    }
                }

                return b.\u0275fac = function (k) {
                    return new (k || b)
                }, b.\u0275prov = P.Yz7({token: b, factory: b.\u0275fac, providedIn: "root"}), b
            })(), authHostService: c.f1, assetsService: i.z, audioService: c.QF, featureFlagsService: c.ai
        },
        clientType: "desktop",
        guWebsite: "https://godsunchained.com",
        guManageWalletsURL: "https://godsunchained.com/manage-wallets",
        guRegisterURL: "https://godsunchained.com/account/register",
        GUPropertyValidators: {
            card: "0x200e6fb8febf5355596ccdefe1247e92382cfcfb",
            board: "0x81428219ba5faee2afbe1dbe26ba5e47aab1ed45",
            trinket: "0xc50fd991bc8008928853048d0a4f9fecf3a5e8a3",
            noprop: "0xfd75675db386450d42e3968f405d34dce317adb8"
        },
        recaptchaPublicSiteKeyV2: "6LeBjfcUAAAAAMnGQNtQk2aQZ1W3pENSCbOPfp3g",
        recaptchaPublicSiteKeyV3: "6LcdouAUAAAAABwriEGDpNUrkXoIPbSSVVB2WP2f",
        sentry: {
            dsn: "https://6f5677b3a54f433bbb68ca9f275ebd2a@o1090070.ingest.sentry.io/6112682",
            tracesSampleRate: .1
        },
        purchasingUiHost: "https://purchasing-ui.prod.godsunchained.com",
        launchDarklyKey: "60135261d87a7e09e20a42fe",
        immutableXMarketplaceUrl: "https://market.immutable.com",
        immutableXMarketplaceUrlGUCollection: "https://market.immutable.com/assets?collection=0xacb3c6a43d15b907e8433077b6d38ae40936fe2c",
        GUCollectioimmutableXMarketplaceUrlGUInventory: "https://market.immutable.com/inventory/0xacb3c6a43d15b907e8433077b6d38ae40936fe2c"
    }
}, 84740
:
(se, B, o) => {
    "use strict";
    var c = o(22313), i = o(8929), y = o(591), e = o(21086), _ = o(5254);

    class r {
        constructor(D, a, M, F) {
            this.remote = D, this.directory = a, this.filename = M
        }

        start() {
        }

        pause() {
        }

        resume() {
        }

        finish() {
        }

        cancel() {
        }

        download(D) {
            return (0, e.of)()
        }

        dummyDownload(D) {
            return (0, e.of)()
        }
    }

    class P {
        constructor() {
            this.log = void 0, this.warn = void 0, this.error = void 0, this.initLogger()
        }

        initLogger() {
        }
    }

    P.consoleLog = console.log, P.consoleError = console.error, P.consoleWarn = console.warn;
    var w = o(35736);

    class T {
        constructor(D = 1) {
            this.currentRequests = [], this.runningRequests = 0, this.maxConcurrentRequests = D
        }

        callFunction(D, ...a) {
            return D.bind(this, a), console.log("callFunction ---- ", D.name, a), new Promise((M, F) => {
                this.currentRequests.push({resolve: M, reject: F, fnToCall: D, args: a}), this.tryNext()
            })
        }

        tryNext() {
            if (this.currentRequests.length && this.runningRequests < this.maxConcurrentRequests) {
                const {resolve: D, reject: a, fnToCall: M, args: F} = this.currentRequests.shift();
                this.runningRequests++, M(...F).then(De => D(De)).catch(De => a(De)).finally(() => {
                    this.runningRequests--, this.tryNext()
                })
            }
        }
    }

    function b(m) {
        return m.join("-")
    }

    function O(m) {
        return "object" == typeof navigator && "string" == typeof navigator.userAgent && navigator.userAgent.indexOf(m) >= 0
    }

    !window.bridge && (!function k() {
        return O("Electron")
    }() || function C() {
        return O("Cypress")
    }()) && (window.bridge = new class L {
        constructor() {
            this.logger = new P, this.variant = "browser", this.progress = new i.xQ, this.appsModalExisting$ = new y.X(!1), this.displayMetricsChange$ = new i.xQ, this.isInGame$ = new y.X(!1), this.protocolRedirect$ = new y.X(null), this.watchForDisplayChanges(), this.watchInGameStatus(), this.checkAdditionalArgs(), this.watchForAppsModal(), this.watchProtocolRedirect()
        }

        getDownloadProgress$() {
            return (0, e.of)()
        }

        watchProtocolRedirect() {
            return null
        }

        cancelDownload() {
            console.log("Preload->cancelDownload()"), this.gameDownload && this.gameDownload.cancel()
        }

        pauseDownload() {
            console.log("Preload->pauseDownload()"), this.gameDownload && this.gameDownload.pause()
        }

        resumeDownload() {
            console.log("Preload->resumeDownload()"), this.gameDownload && this.gameDownload.resume()
        }

        openDialog(D, a) {
        }

        isRunning(D) {
            return !0
        }

        extract(D, a, M) {
        }

        download(D, a, M, F) {
            return console.log("Preload->download(urlr, location, filename)", D, a, M), this.gameDownload = new r(D, a, M), this.progress = new i.xQ, (0, _.D)(this.gameDownload.download({
                authToken: F,
                onStart: ge => {
                    console.log("Preload->download()->onStart", ge)
                },
                onProgress: ge => {
                    null != window && this.progress.next(ge)
                },
                onEnd: ge => {
                    this.progress.complete()
                }
            }))
        }

        downloadAssets(D, a) {
            console.log("Preload->downloadAssets(WithOutSempahore)", D);
            let M = [];
            return M = D.map((F, ge) => new r(F.url, a + F.location, F.file_name)), M
        }

        downloadAssetsWithSempahore(D, a, M, F, ge) {
            console.log("Preload->downloadAssetsWithSempahore()", D);
            const De = new T(ge);
            return D.map((Ke, yt) => {
                const gt = {
                    authToken: F, onStart: be => {
                    }, onProgress: be => {
                        M[yt].next(be)
                    }, onEnd: be => {
                        M[yt].complete()
                    }
                };
                console.log(Ke.url, a + Ke.location, Ke.file_name);
                const Jt = new r(Ke.url, a + Ke.location, Ke.file_name), ve = Jt.download.bind(Jt, gt);
                return (0, _.D)(De.callFunction(ve, gt))
            })
        }

        onQuit(D) {
        }

        focus() {
        }

        deleteFile(D) {
        }

        chmod(D, a) {
        }

        execute(D, a) {
            return null
        }

        executeArgs(D, a, M) {
            return null
        }

        clearCache() {
        }

        exists(D) {
            return !0
        }

        homeDirectory() {
            return ""
        }

        platform() {
            return ""
        }

        createServer(D, a) {
        }

        serverActive() {
            return null
        }

        closeServer() {
        }

        set(D, a) {
            window.sessionStorage.setItem(b(D), JSON.stringify(a))
        }

        get(D) {
            const a = window.sessionStorage.getItem(b(D));
            return null !== a ? JSON.parse(a) : null
        }

        delete(D) {
            window.sessionStorage.removeItem(b(D))
        }

        minimizeWindow() {
        }

        maximizeWindow() {
        }

        closeWindow() {
        }

        setFullscreen(D) {
        }

        getDisplaySize() {
            return {height: 0, width: 0}
        }

        setClientSize(D, a, M = !1, F = !1) {
        }

        watchForDisplayChanges() {
        }

        watchInGameStatus() {
        }

        watchForAppsModal() {
        }

        setInGameStatus(D) {
        }

        clearGUAssets(D) {
        }

        checkAdditionalArgs() {
            const D = w.argv.map(a => a.split("=")).reduce((a, [M, F]) => (a[M] = F, a), {});
            D["--auth-id"] && D["--auth-access"] && (this.authId = +D["--auth-id"], this.authAccess = D["--auth-access"]), D["--session-ticket"] && (this.sessionTicket = D["--session-ticket"]), D["--vw"] && D["--vh"] && (this.vw = D["--vw"], this.vh = D["--vh"])
        }

        updateAuthPair(D) {
        }

        updateSession(D) {
        }

        updateViewportUnits(D) {
        }

        setClientPosition(D, a, M = !1) {
        }

        toggleFullscreen() {
        }

        createClient(D, a) {
            return {
                on: (M, F) => {
                }, send: (M, F) => {
                }, destroy: () => {
                }, socketConnected: !1
            }
        }

        join(...D) {
        }

        version() {
        }

        launcherTarget() {
        }

        httpGet(D) {
            return (0, _.D)(fetch(D).then(a => a.json()))
        }

        httpPost(D, a) {
            return (0, e.of)()
        }
    });
    var $ = o(43050), s = o(5e3);
    const h = JSON.parse('{"buildNumber":"1058","branch":"master"}');
    var x = o.t(h, 2), Y = (o(12751), o(53161)), ae = o(16517), ce = o(32182), me = o(96727), N = o(99565),
        J = o(60870), le = o(40520), X = o(93075), Se = o(76360), Z = o(73307), de = o(38076);
    let _e = (() => {
        class m {
            constructor(a) {
                this.authService = a
            }

            init() {
                this.authService.account$.subscribe(a => {
                    a ? de.av({id: String(a.id), username: a.username}) : de.e(M => M.setUser(null))
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.LFG(Z.mI))
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
    })();
    var Le = o(87182), Oe = o(85115), H = o(11735);
    o(57334);
    var ye = o(14135), Ce = o(69808);
    let je = (() => {
        class m {
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275mod = s.oAB({type: m}), m.\u0275inj = s.cJS({imports: [[Ce.ez, ye.aw, X.u5, X.UX]]}), m
    })();
    new s.OlP("recaptcha-service"), new s.OlP("websocket-constructor");
    let $e = (() => {
        class m {
            serialize(a) {
                return {
                    url: a.url,
                    params: dt(a.root, M => M.params),
                    queryParams: dt(a.root, M => M.queryParams),
                    data: Fe(a.root)
                }
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac}), m
    })();

    function dt(m, D) {
        if (!m) return {};
        const a = D(m), M = m.children.find(F => "primary" === F.outlet) || m.firstChild;
        return Object.assign(Object.assign({}, a), dt(M, D))
    }

    function Fe(m) {
        if (!m) return {};
        const D = m.data, a = m.children.find(M => "primary" === M.outlet) || m.firstChild;
        return Object.assign(Object.assign({}, D), Fe(a))
    }

    const bt = {stateKey: "router", navigationActionTiming: ce.R0.PostActivation, serialzer: $e};
    (0, me.ZF)(bt.stateKey);
    var Ne = o(74449), ht = o(66773), Be = o(69878), Me = (o(70893), o(59633)), At = o(61715), q = o(7625),
        re = o(61709), xe = o(27221), Ge = o(92198), z = o(24850), W = o(2994), f = (o(26982), o(70655)), R = o(79763);
    let ne = (() => {
        class m {
            constructor(a, M) {
                this.authHostService = a, this.gameService = M
            }

            recordActivity(a) {
                return (0, _.D)(this.getCurrentGameID()).pipe((0, re.VS)(M => this.authHostService.post("/account/" + a + "/activity", {game_id: M})))
            }

            getCurrentGameID() {
                return (0, f.mG)(this, void 0, void 0, function* () {
                    return this.gameService.getGameId()
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.LFG(Z.LI), s.LFG(R.hM))
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
    })();
    var we = o(77391), Ve = o(44416);
    let Et = (() => {
        class m {
            constructor(a, M, F) {
                this.utils = a, this.zone = M, this.router = F, this._protocolPayload$ = new i.xQ, this.unsubscribe = new i.xQ
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get protocolPayload$() {
                return this._protocolPayload$.asObservable()
            }

            watchProtocol() {
                window.bridge.protocolRedirect$.pipe(this.utils.enterZone(this.zone), (0, q.R)(this.unsubscribe), (0, Ge.h)(a => !!a), (0, W.b)(({url: a}) => {
                    this.handlePayload(a), this.handleRouteChange(a)
                })).subscribe()
            }

            handlePayload(a) {
                const M = a.split("?payload=")[1];
                if (!M) return !1;
                const F = decodeURIComponent(M), ge = JSON.parse(F);
                if (this._protocolPayload$.next(ge), ge.toString().indexOf("/game/gu/")) {
                    const De = ge.toString();
                    this.router.navigate([De])
                }
            }

            handleRouteChange(a) {
                const M = a.match(/(imtbl.*):\/\/(game\/gu\/.*)/);
                if (!M) return !1;
                const F = M[2];
                F && this.router.navigate([`/${F}`])
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.LFG(Ve.F), s.LFG(s.R0b), s.LFG(H.F0))
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
    })();
    var Bt = o(6674);
    const rt = ["ratioSetter"], Qt = ["*"];
    let ts = (() => {
        class m {
            constructor(a, M) {
                this.resizeService = a, this.el = M
            }

            ngOnInit() {
                this.resizeService.windowSize$.subscribe(() => this.setCustomViewportProps()), this.setCustomViewportProps()
            }

            triggerCalcs() {
                this.setCustomViewportProps()
            }

            setCustomViewportProps() {
                const a = this.ratioSetter.nativeElement, M = .01 * a.offsetWidth, F = .01 * a.offsetHeight;
                document.documentElement.style.setProperty("--vw", `${M}px`), document.documentElement.style.setProperty("--vh", `${F}px`), this.resizeService.setViewPortUnits({
                    vw: M,
                    vh: F
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(Bt._), s.Y36(s.SBq))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-auto-letterbox"]],
            viewQuery: function (a, M) {
                if (1 & a && s.Gf(rt, 7), 2 & a) {
                    let F;
                    s.iGM(F = s.CRH()) && (M.ratioSetter = F.first)
                }
            },
            ngContentSelectors: Qt,
            decls: 5,
            vars: 0,
            consts: [[1, "appRatioSetter"], ["ratioSetter", ""], ["src", "/assets/images/16-x-9-ratio.png", "alt", "ratio image", 1, "appRatioSetter__ratioImage", 3, "load"], [1, "innerAppContainer"]],
            template: function (a, M) {
                1 & a && (s.F$t(), s.TgZ(0, "div", 0, 1)(2, "img", 2), s.NdJ("load", function () {
                    return M.triggerCalcs()
                }), s.qZA(), s.TgZ(3, "div", 3), s.Hsn(4), s.qZA()())
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;height:100vh;width:100vw;background:var(--gu-blue-dark);}.appRatioSetter[_ngcontent-%COMP%]{margin:auto;position:relative;width:100vw;padding-bottom:56.23%}.appRatioSetter__ratioImage[_ngcontent-%COMP%]{display:none}.innerAppContainer[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;top:0;left:0;overflow:hidden;display:flex;flex-direction:column}@media screen and (min-aspect-ratio:1282/720) {.appRatioSetter[_ngcontent-%COMP%]{height:100vh;width:auto;padding-bottom:0}.appRatioSetter__ratioImage[_ngcontent-%COMP%]{display:block;width:auto;height:100%}}"]
        }), m
    })();
    var lt = o(52492), tt = o(41777), pt = o(72986), ss = o(80013), ct = o(40537), Zt = o(66088), Gt = o(83035);

    function It(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "form", 7)(1, "label", 8), s._uU(2, "Username"), s.qZA(), s.TgZ(3, "div", 9)(4, "input", 10), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().audioService.clickTinyV1.play()
            }), s.qZA(), s.TgZ(5, "gu-primary-hex-button", 11), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().updateUser()
            }), s.qZA()(), s.TgZ(6, "div", 12), s._uU(7, " Your username will be publicly visible. "), s.qZA()()
        }
        if (2 & m) {
            const a = s.oxw();
            s.Q6J("formGroup", a.formGroup), s.xp6(5), s.Q6J("text", a.updating ? "Saving" : "Save")
        }
    }

    o(63411);
    const {buildNumber: oo, branch: os} = x, no = window.bridge && window.bridge.version ? window.bridge.version() : 0,
        Ms = window.bridge && window.bridge.launcherTarget ? window.bridge.launcherTarget() : "PROD";
    let Ft = (() => {
        class m {
            constructor(a, M, F, ge, De, He, Ke, yt) {
                this.authService = a, this.fb = M, this.audioService = F, this.modalService = ge, this.resizeService = De, this.utils = He, this.storage = Ke, this.queueService = yt, this.loading = !1, this.updating = !1, this.version = no, this.launcherTarget = Ms, this.cerberusBuildNumber = oo, this.cerberusBranch = os, this.clientSizes = Bt._.clientSizes, this.volume = 0, this.volumeControl = new X.NI(.9), this.unsubscribe = new i.xQ
            }

            ngOnInit() {
                this.anonymous || this.initUserNameForm(), this.clientSize = this.resizeService.currentClientSize, this.initVolumeControl()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initVolumeControl() {
                const a = this.storage.get(["gu-audioVolume"]);
                this.volumeControl.setValue(a), this.volumeControl.valueChanges.pipe((0, q.R)(this.unsubscribe), (0, ss.b)(100)).subscribe(M => this.audioService.setGlobalVolume(M))
            }

            logout() {
                this.modalService.destroyTopModal(), this.queueService.stopAllQueues(), this.authService.logout()
            }

            clearCache() {
                window.bridge.clearCache(), location.reload()
            }

            updateUser() {
                this.formGroup.invalid ? this.utils.markFormGroupTouched(this.formGroup) : this.updating || (this.updating = !0, this.authService.updateCurrentUser({username: this.formGroup.get("username").value}).pipe((0, ct.x)(() => {
                    this.updating = !1
                })).subscribe())
            }

            updateClientSize(a) {
                this.resizeService.resizeClient(a)
            }

            initUserNameForm() {
                this.buildFormGroup(), this.loading = !0, this.authService.account$.pipe((0, q.R)(this.unsubscribe), (0, W.b)(a => this.formGroup.get("username").setValue(a.username)), (0, xe.K)(a => (this.logout(), a)), (0, ct.x)(() => this.loading = !1)).subscribe()
            }

            buildFormGroup() {
                this.formGroup = this.fb.group({
                    username: ["", X.kI.required],
                    volume: [this.storage.get(["gu-audioVolume"]) || 0, X.kI.required]
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(Z.mI), s.Y36(X.qu), s.Y36(Z.pk), s.Y36(Zt.Z), s.Y36(Bt._), s.Y36(Ve.F), s.Y36(Z.qy), s.Y36(Gt.g))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-apollo-settings"]],
            inputs: {anonymous: "anonymous"},
            decls: 13,
            vars: 9,
            consts: [["class", "settingsForm", 3, "formGroup", 4, "ngIf"], [1, "audioControl"], [1, "audioControl__heading"], ["id", "volume", "type", "range", "min", "0", "max", "1", "step", "0.1", 1, "audioControl__rangeInput", 3, "formControl"], ["for", "#volume", 1, "audioControl__volumeLabel"], [1, "version-label"], ["size", "regular", "text", "Clear Cache", 1, "settingsForm__bottomCta", "settingsForm__bottomCta--cacheClear", 3, "click"], [1, "settingsForm", 3, "formGroup"], ["for", "usernameInput", 1, "settingsForm__label"], [1, "settingsForm__inputsRow"], ["name", "username", "type", "text", "formControlName", "username", "id", "usernameInput", "aria-describedby", "usernameHelp", 1, "settingsForm__textInput", 3, "click"], ["size", "regular", 1, "settingsForm__cta", 3, "text", "click"], ["id", "usernameHelp", 1, "settingsForm__hintText"]],
            template: function (a, M) {
                1 & a && (s.YNc(0, It, 8, 2, "form", 0), s.TgZ(1, "div", 1)(2, "label", 2), s._uU(3, "Audio Volume"), s.qZA(), s._UZ(4, "input", 3), s.TgZ(5, "label", 4), s._uU(6), s.qZA()(), s.TgZ(7, "h5", 5), s._uU(8), s.ALo(9, "lowercase"), s.qZA(), s.TgZ(10, "h5", 5), s._uU(11), s.qZA(), s.TgZ(12, "gu-primary-hex-button", 6), s.NdJ("click", function () {
                    return M.clearCache()
                }), s.qZA()), 2 & a && (s.Q6J("ngIf", !M.anonymous), s.xp6(4), s.Q6J("formControl", M.volumeControl), s.xp6(2), s.Oqu(M.volumeControl.value), s.xp6(2), s.AsE("Launcher Version: ", M.version, "-", s.lcZ(9, 7, M.launcherTarget), ""), s.xp6(3), s.AsE("Cerberus Version: ", M.cerberusBranch, ".", M.cerberusBuildNumber, ""))
            },
            directives: [Ce.O5, X._Y, X.JL, X.sg, X.Fj, X.JJ, X.u, X.eT, X.oH],
            pipes: [Ce.i8],
            styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.version-label[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%], .audioControl__heading[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.version-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.96);line-height:1.3}.audioControl__heading[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__hintText[_ngcontent-%COMP%], .settingsForm__textInput[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;margin:auto}.settingsForm[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;align-self:center;width:70%}.settingsForm__inputsRow[_ngcontent-%COMP%]{display:flex;align-items:center;width:100%}.settingsForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4);flex-grow:1;margin:0 calc(var(--vw) * 1) 0 0}.settingsForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__cta[_ngcontent-%COMP%]{min-width:calc(var(--vw) * 8);flex-grow:0}.settingsForm__hintText[_ngcontent-%COMP%]{padding-top:calc(var(--vh) * 2)}.version-label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4);text-align:center;user-select:all}.settingsForm__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);font-size:calc(var(--vh) * 1.9)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__bottomCta[_ngcontent-%COMP%]{width:70%;margin:0 auto}.settingsForm__bottomCta--cacheClear[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4);margin-bottom:calc(var(--vh) * 2)}.audioControl[_ngcontent-%COMP%]{width:70%;margin:calc(var(--vh) * 3) auto}.audioControl__volumeLabel[_ngcontent-%COMP%]{display:inline-block;position:relative;width:60px;line-height:20px;text-align:center;border-radius:3px;color:#e0c58f;padding:5px 10px;margin-left:8px}.audioControl__rangeInput[_ngcontent-%COMP%]{-webkit-appearance:none;width:calc(100% - 73px);height:10px;border-radius:5px;background:#1d2f41;outline:none;padding:0;margin:0}.audioControl__rangeInput[_ngcontent-%COMP%]::-webkit-slider-thumb{-webkit-appearance:none;appearance:none;width:20px;height:20px;border-radius:50%;background:#e0c58f;cursor:pointer}.audioControl__rangeInput[_ngcontent-%COMP%]:active::-webkit-slider-thumb{background:#e0c58f}.audioControl__rangeInput[_ngcontent-%COMP%]::-moz-range-thumb{width:20px;height:20px;border:0;border-radius:50%;background:#e0c58f;cursor:pointer}"]
        }), m
    })();
    var ns = o(69340);

    function St(m, D) {
        if (1 & m && (s.TgZ(0, "option", 12), s._uU(1), s.qZA()), 2 & m) {
            const a = D.$implicit;
            s.Q6J("ngValue", a.name), s.xp6(1), s.Oqu(a.name)
        }
    }

    function Os(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.ynx(0), s.TgZ(1, "label", 9), s._uU(2, "Branch"), s.qZA(), s.TgZ(3, "select", 10), s.NdJ("ngModelChange", function (F) {
                return s.CHM(a), s.oxw(2).updateBranch(F, !0)
            })("click", function () {
                return s.CHM(a), s.oxw(2).playClickTinyV1()
            })("ngModelChange", function (F) {
                return s.CHM(a), s.oxw(2).branch = F
            }), s.YNc(4, St, 2, 2, "option", 11), s.qZA(), s.BQk()
        }
        if (2 & m) {
            const a = s.oxw(2);
            s.xp6(3), s.Q6J("ngModel", a.branch), s.xp6(1), s.Q6J("ngForOf", a.branchesExtended)
        }
    }

    function ro(m, D) {
        if (1 & m && (s.ynx(0), s.TgZ(1, "label", 13), s._uU(2, "Local Version"), s.qZA(), s._UZ(3, "input", 5), s.BQk()), 2 & m) {
            const a = s.oxw(2);
            s.xp6(3), s.Q6J("value", a.local)
        }
    }

    function et(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "form", 1), s.YNc(1, Os, 5, 2, "ng-container", 2), s.TgZ(2, "label", 3), s._uU(3, "Installation Path"), s.qZA(), s.TgZ(4, "div", 4), s._UZ(5, "input", 5), s.TgZ(6, "gu-icon", 6), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().showDialog()
            }), s.qZA()(), s.YNc(7, ro, 4, 1, "ng-container", 2), s.TgZ(8, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().clearVersion()
            }), s.qZA(), s.TgZ(9, "gu-primary-hex-button", 8), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().clearAssets()
            }), s.qZA()()
        }
        if (2 & m) {
            const a = s.oxw();
            s.xp6(1), s.Q6J("ngIf", a.branchesExtended), s.xp6(4), s.Q6J("value", a.path), s.xp6(2), s.Q6J("ngIf", a.local)
        }
    }

    let hs = (() => {
        class m {
            constructor(a, M, F) {
                this.gameService = a, this.gameDownloadService = M, this.audioService = F, this.loaded = !1
            }

            ngOnInit() {
                !this.game || (this.branch = this.gameService.getProperty(this.game.id, "branch"), this.path = this.gameService.getInstallPath(this.game), this.version = this.gameService.getProperty(this.game.id, "version"), this.updateBranch(this.branch), this.initBranches())
            }

            initBranches() {
                this.gameService.branches$.pipe((0, re.VS)(a => (this.branchesExtended = a, !this.branch && this.branchesExtended && this.updateBranch(this.branchesExtended[0].name), this.gameDownloadService.getVersions(this.game, this.branch)))).subscribe(([a, M]) => {
                    this.local = M, this.loaded = !0
                }, () => this.loaded = !0)
            }

            updateBranch(a, M) {
                this.branch = a, this.gameService.setProperty(this.game.id, "branch", this.branch), this.gameService.refreshGameContext(), M && setTimeout(() => window.location.reload())
            }

            clearVersion() {
                this.gameService.deleteProperty(this.game.id, "version"), this.gameService.refreshGameContext(), setTimeout(() => window.location.reload())
            }

            clearAssets() {
                this.gameService.clearAssets(this.game.id)
            }

            showDialog() {
                this.playClickTinyV1(), window.bridge.openDialog({
                    properties: ["openDirectory", "createDirectory"],
                    defaultPath: this.path,
                    message: "Choose Install Directory"
                }, (a, M) => {
                    a && a.length > 0 && (this.path = a[0], this.gameService.setProperty(this.game.id, "path", this.path))
                })
            }

            playClickTinyV1() {
                this.audioService.clickTinyV1.play()
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(R.hM), s.Y36(ns.b5), s.Y36(Z.pk))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-game-settings"]],
            inputs: {game: "game"},
            decls: 1,
            vars: 1,
            consts: [["class", "settingsForm", 4, "ngIf"], [1, "settingsForm"], [4, "ngIf"], ["for", "installpath", 1, "settingsForm__label"], [1, "settingsForm__path"], ["type", "text", "disabled", "", 1, "settingsForm__textInput", 3, "value"], ["iconLigature", "settings_cog", 1, "path-select-btn", 3, "click"], ["size", "large", "text", "Clear Version", 1, "settingsForm__cta", 3, "click"], ["size", "large", "text", "Clear Assets", 1, "settingsForm__cta", 3, "click"], ["for", "sel1", 1, "settingsForm__label"], ["name", "branch", "id", "sel1", 1, "settingsForm__select", 3, "ngModel", "ngModelChange", "click"], [3, "ngValue", 4, "ngFor", "ngForOf"], [3, "ngValue"], [1, "settingsForm__label"]],
            template: function (a, M) {
                1 & a && s.YNc(0, et, 10, 3, "form", 0), 2 & a && s.Q6J("ngIf", M.loaded)
            },
            directives: [Ce.O5, X._Y, X.JL, X.F, X.EJ, X.JJ, X.On, Ce.sg, X.YN, X.Kr],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settingsForm__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.settingsForm__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settingsForm__textInput[_ngcontent-%COMP%], .settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:block;margin:auto}.settingsForm[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:60%;margin:auto}.settingsForm__path[_ngcontent-%COMP%]{display:flex}.settingsForm__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.path-select-btn[_ngcontent-%COMP%]{height:calc(var(--vh) * 5);line-height:calc(var(--vh) * 5);width:calc(var(--vh) * 5);margin-top:calc(var(--vh) * .65);background-color:#072337;border-radius:0 calc(var(--vh) * .4) calc(var(--vh) * .4) 0;cursor:pointer;border:calc(var(--vh) * .15) solid #c6a052;border-left:none;text-align:center;display:flex}.path-select-btn[_ngcontent-%COMP%]     i{margin:auto}.settingsForm__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settingsForm__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4);margin-top:calc(var(--vh) * .65)}.settingsForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settingsForm__textInput[_ngcontent-%COMP%]{flex:1;border:calc(var(--vh) * .15) solid #c6a052;border-radius:calc(var(--vh) * .4) 0 0 calc(var(--vh) * .4)}.settingsForm__cta[_ngcontent-%COMP%]{align-self:center;margin:0 auto;margin-top:calc(var(--vh) * 4)}"]
        }), m
    })(), $s = (() => {
        class m {
            constructor() {
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-wallet-settings"]],
            decls: 9,
            vars: 0,
            consts: [["top", "2x-large", 1, "manageWalletsLink"], ["kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100"], ["both", "large"], ["kind", "small", "fillColor", "colors.light.100"], ["href", "https://godsunchained.com/manage-wallets", "target", "_blank", "backgroundFillColor", "colors.gunmetal.500", "borderColor", "colors.gunmetal.300", "borderColorHover", "colors.gunmetal.100", "fillColor", "colors.light.300", "icon", "leave_website", "leftIconPosition", "true"]],
            template: function (a, M) {
                1 & a && (s.TgZ(0, "gu-vertical-space", 0)(1, "gu-vertical-space")(2, "gu-paragraph-text", 1), s._uU(3, " Wallet Management & Linking to Immutable X "), s.qZA()(), s.TgZ(4, "gu-vertical-space", 2)(5, "gu-paragraph-text", 3), s._uU(6, " Add, remove, or view wallets, and link your wallets to the Immutable X marketplace. "), s.qZA()(), s.TgZ(7, "gu-plain-square-button", 4), s._uU(8, " Go to Website "), s.qZA()())
            },
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%], .settings__label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.settings__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:block;margin:0 auto}.settings[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:100%;margin:auto}.settings__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.settings__select[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settings__cta[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);color:#affaed}.manageWalletsLink[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}"]
        }), m
    })();

    function io(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "div", 1), s.NdJ("click", function () {
                const ge = s.CHM(a).$implicit;
                return s.oxw().selectTab(ge.title, ge)
            }), s._uU(1), s.qZA()
        }
        if (2 & m) {
            const a = D.$implicit, M = s.oxw();
            s.ekj("active", a.title === M.activeTab), s.xp6(1), s.hij(" ", a.title.toUpperCase(), " ")
        }
    }

    function ms(m, D) {
        if (1 & m && s._UZ(0, "app-apollo-settings", 7), 2 & m) {
            const a = s.oxw();
            s.Q6J("anonymous", a.anonymous)
        }
    }

    function Ts(m, D) {
        if (1 & m && s._UZ(0, "app-game-settings", 8), 2 & m) {
            const a = s.oxw();
            s.Q6J("game", a.selectedGame)
        }
    }

    function qt(m, D) {
        1 & m && s._UZ(0, "app-wallet-settings", 9)
    }

    let Lo = (() => {
        class m {
            constructor(a, M, F) {
                this.gameService = a, this.audioService = M, this.authService = F, this.activeTab = "immutable", this.games = []
            }

            ngOnInit() {
                const a = this.authService.getUserId();
                a ? (this.anonymous = !1, this.gameService.getGames(a).pipe((0, pt.q)(1)).subscribe(M => this.games = M.records)) : this.anonymous = !0
            }

            selectTab(a, M) {
                this.audioService.clickMediumV1.play(), this.activeTab = a, M && (this.selectedGame = M)
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(R.hM), s.Y36(Z.pk), s.Y36(Z.mI))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-settings-modal"]],
            inputs: {activeTab: "activeTab"},
            decls: 10,
            vars: 9,
            consts: [[1, "side-pane"], [1, "side-pane-item", 3, "click"], ["class", "side-pane-item", 3, "active", "click", 4, "ngFor", "ngForOf"], [1, "settingsContent"], ["class", "settingsContent__tab", 3, "anonymous", 4, "ngIf"], ["class", "settingsContent__tab", 3, "game", 4, "ngIf"], ["class", "settingsContent__tab", 4, "ngIf"], [1, "settingsContent__tab", 3, "anonymous"], [1, "settingsContent__tab", 3, "game"], [1, "settingsContent__tab"]],
            template: function (a, M) {
                1 & a && (s.TgZ(0, "aside", 0)(1, "div", 1), s.NdJ("click", function () {
                    return M.selectTab("immutable")
                }), s._uU(2, " Immutable "), s.qZA(), s.YNc(3, io, 2, 3, "div", 2), s.TgZ(4, "div", 1), s.NdJ("click", function () {
                    return M.selectTab("wallet")
                }), s._uU(5, " WALLET "), s.qZA()(), s.TgZ(6, "div", 3), s.YNc(7, ms, 1, 1, "app-apollo-settings", 4), s.YNc(8, Ts, 1, 1, "app-game-settings", 5), s.YNc(9, qt, 1, 0, "app-wallet-settings", 6), s.qZA()), 2 & a && (s.xp6(1), s.ekj("active", "immutable" === M.activeTab), s.xp6(2), s.Q6J("ngForOf", M.games), s.xp6(1), s.ekj("active", "wallet" === M.activeTab), s.xp6(2), s.Q6J("@fade", M.activeTab), s.xp6(1), s.Q6J("ngIf", "immutable" === M.activeTab), s.xp6(1), s.Q6J("ngIf", "wallet" !== M.activeTab && "immutable" !== M.activeTab), s.xp6(1), s.Q6J("ngIf", "wallet" === M.activeTab))
            },
            directives: [Ce.sg, Ce.O5, Ft, hs, $s],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}.side-pane-item[_ngcontent-%COMP%], h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.side-pane-item[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22);line-height:1.4}[_nghost-%COMP%]{width:calc(var(--vw) * 60);height:calc(var(--vh) * 80);border-radius:calc(var(--vh) * .4);background-color:#0c1620;border:calc(var(--vh) * .15) solid #e0c58f;display:flex}.side-pane[_ngcontent-%COMP%]{width:30%;border-right:calc(var(--vh) * .15) solid #e0c58f;display:flex;flex-flow:column nowrap}.side-pane-item[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.8);color:#f6f6f6;text-align:center;transition:all .15s ease;cursor:pointer}.side-pane-item[_ngcontent-%COMP%]:hover{background-color:#1d2f41}.side-pane-item.active[_ngcontent-%COMP%]{background-color:#182531}.settingsContent[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.8);flex:1;display:flex}.settingsContent__tab[_ngcontent-%COMP%]{width:calc(var(--vw) * 30)}"],
            data: {animation: [(0, tt.X$)("fade", [(0, tt.eR)("* => *", [(0, tt.jt)(500, (0, tt.F4)([(0, tt.oB)({opacity: 0}), (0, tt.oB)({opacity: 1})]))])])]}
        }), m
    })();
    var As = o(5969);
    let Is = (() => {
        class m {
            constructor(a, M, F, ge) {
                this.modalService = a, this.audioService = M, this.settingsService = F, this.akumaService = ge, this.unsubscribe = new i.xQ
            }

            ngOnInit() {
                this.watchSettingsService()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            watchSettingsService() {
                this.settingsService.openSettings$.pipe((0, q.R)(this.unsubscribe), (0, Ge.h)(a => !!a)).subscribe(a => {
                    this.openSettings(a), this.settingsService.markSettingsAsOpen()
                })
            }

            windowFullscreen() {
                this.audioService.clickTinyV1.play(), window.bridge.toggleFullscreen()
            }

            closeWindow() {
                this.audioService.clickTinyV1.play(), window.bridge.closeWindow()
            }

            minimize() {
                this.audioService.clickTinyV1.play(), window.bridge.minimizeWindow()
            }

            openSettings(a) {
                this.akumaService.postControlEvent("gu", "Arena", "", "settings", "Mnu", "pressed"), this.audioService.clickTinyV1.play(), this.modalService.createModal(Lo, {activeTab: a}, {
                    blurredBackground: !0,
                    canCloseFromOutside: !0,
                    position: lt.e1.Center,
                    size: lt.Cg.StretchableFullscreen
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(Zt.Z), s.Y36(Z.pk), s.Y36(As.g), s.Y36(Ne.jt))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["cerberus-draggable-titlebar"]],
            decls: 9,
            vars: 0,
            consts: [[1, "electronMenuItem", "electronMenuItem--closeWindow", 3, "click"], ["iconLigature", "close_x", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--windowToggle", 3, "click"], ["iconLigature", "window_toggle", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--minimise", 3, "click"], ["iconLigature", "window_minimise", 1, "electronMenuItem__icon"], [1, "electronMenuItem", "electronMenuItem--settings", 3, "click"], ["iconLigature", "settings_cog", 1, "electronMenuItem__icon"], [1, "draggable"]],
            template: function (a, M) {
                1 & a && (s.TgZ(0, "a", 0), s.NdJ("click", function () {
                    return M.closeWindow()
                }), s._UZ(1, "gu-icon", 1), s.qZA(), s.TgZ(2, "a", 2), s.NdJ("click", function () {
                    return M.windowFullscreen()
                }), s._UZ(3, "gu-icon", 3), s.qZA(), s.TgZ(4, "a", 4), s.NdJ("click", function () {
                    return M.minimize()
                }), s._UZ(5, "gu-icon", 5), s.qZA(), s.TgZ(6, "a", 6), s.NdJ("click", function () {
                    return M.openSettings("immutable")
                }), s._UZ(7, "gu-icon", 7), s.qZA(), s._UZ(8, "div", 8))
            },
            styles: ["[_nghost-%COMP%]{width:100%;height:28px;z-index:23;background:#1D2F41;display:flex;flex-direction:row-reverse;padding-right:8px}.draggable[_ngcontent-%COMP%]{flex:1;-webkit-app-region:drag}.electronMenuItem[_ngcontent-%COMP%]{cursor:pointer;display:flex;width:28px}.electronMenuItem[_ngcontent-%COMP%]:hover   .electronMenuItem__icon[_ngcontent-%COMP%]{color:#f6f6f6}.electronMenuItem__icon[_ngcontent-%COMP%]{font-size:14px;margin:auto;text-shadow:0 2px 0 rgba(39,39,39,.4);color:#7192b0}"]
        }), m
    })();
    var Ds = o(39765), _s = o(25774), fs = o(97993);

    function vs(m, D) {
        1 & m && (s.TgZ(0, "cerberus-announce-banner-control", 2), s._UZ(1, "cerberus-controllable-banner"), s.qZA())
    }

    function Ls(m, D) {
        if (1 & m && (s.ynx(0), s.YNc(1, vs, 2, 0, "cerberus-announce-banner-control", 1), s.BQk()), 2 & m) {
            const a = s.oxw();
            s.xp6(1), s.Q6J("featureFlagIf", a.Flags.showControllableBanner)
        }
    }

    let Mt = (() => {
        class m {
            constructor(a, M, F, ge, De, He, Ke, yt, gt) {
                this.vcr = a, this.analyticsService = M, this.authService = F, this.activityService = ge, this.router = De, this.navigationService = He, this.route = Ke, this.protocolService = yt, this.akumaService = gt, this.Flags = Ne.vU, this.destroyed$ = new i.xQ, this.watchForNavigation(), this.protocolService.watchProtocol()
            }

            ngOnInit() {
                this.recordActivity(), this.logSessionStarted(), this.logSessionAuthenticated(), this.authService.account$.pipe((0, q.R)(this.destroyed$)).subscribe(a => {
                    this.isLoggedIn = !!a
                })
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            logSessionStarted() {
                "function" == typeof gtag && gtag("event", "started", {event_category: "session"});
                const a = {is_referred: !1, landing_page: window.location.pathname};
                this.analyticsService.postEvent(new Me.Session.Started.Event(a)), this.akumaService.postEvent("Flow", "_session_started", a), "function" == typeof fbq && fbq("track", "ViewLauncher")
            }

            logSessionAuthenticated() {
                this.authService.isLoggedIn() && ("function" == typeof gtag && gtag("event", "authenticated", {event_category: "session"}), this.analyticsService.postEvent(new Me.Session.Authenticated.Event({})), this.akumaService.postEvent("Flow", "_sessionAuthenticated_succeeded"))
            }

            recordActivity() {
                (0, At.F)(3e4).pipe((0, re.VS)(() => {
                    const a = this.authService.getUserId();
                    return a && this.authService.isLoggedIn() ? this.activityService.recordActivity(a) : (0, e.of)()
                }), (0, xe.K)((a, M) => (console.error("App->recordActivity() error", a), (0, e.of)(a)))).subscribe()
            }

            watchForNavigation() {
                this.router.events.pipe((0, Ge.h)(a => a instanceof H.m2), (0, z.U)(() => this.route), (0, z.U)(a => {
                    for (; a.firstChild;) a = a.firstChild;
                    return a
                }), (0, re.zg)(a => a.data), (0, z.U)(a => a.hasOwnProperty("state") ? a.state : ""), (0, W.b)(a => this.navigationService.updateCurrentRoute(a))).subscribe(() => {
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(s.s_b), s.Y36(Ne.yD), s.Y36(Z.mI), s.Y36(ne), s.Y36(H.F0), s.Y36(we.f), s.Y36(H.gz), s.Y36(Et), s.Y36(Ne.jt))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["cerberus-root"]],
            decls: 4,
            vars: 1,
            consts: [[4, "ngIf"], ["class", "announceBannerControl announceBannerControl--inline", 4, "featureFlagIf"], [1, "announceBannerControl", "announceBannerControl--inline"]],
            template: function (a, M) {
                1 & a && (s.TgZ(0, "app-auto-letterbox"), s._UZ(1, "cerberus-draggable-titlebar"), s.YNc(2, Ls, 2, 1, "ng-container", 0), s._UZ(3, "router-outlet"), s.qZA()), 2 & a && (s.xp6(2), s.Q6J("ngIf", !M.isLoggedIn))
            },
            directives: [ts, Is, Ce.O5, Ds.w, _s.O, fs.i, H.lC],
            styles: ["[_nghost-%COMP%]{display:block}"]
        }), m
    })(), Us = (() => {
        class m {
            constructor() {
            }

            ngOnInit() {
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-home"]],
            decls: 1,
            vars: 0,
            template: function (a, M) {
                1 & a && s._UZ(0, "router-outlet")
            },
            directives: [H.lC],
            styles: ["[_nghost-%COMP%]{display:block;flex:1}.screen-overlay[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0;left:0;z-index:-1}.app-bar[_ngcontent-%COMP%]{right:calc(var(--vw) * 3.33);position:absolute;bottom:0;right:calc(var(--vw) * 10)}"]
        }), m
    })();
    var us = o(75778), jt = o(98723);

    function ao(m, D) {
        1 & m && (s.TgZ(0, "div", 6), s._uU(1, " Username is required "), s.qZA())
    }

    function rs(m, D) {
        1 & m && (s.TgZ(0, "div", 6), s._uU(1, " Username must be at least 4 characters long "), s.qZA())
    }

    function Vt(m, D) {
        if (1 & m && (s.TgZ(0, "div", 6), s._uU(1), s.qZA()), 2 & m) {
            const a = s.oxw();
            s.xp6(1), s.hij(" ", a.usernameError, " ")
        }
    }

    let Kt = (() => {
        class m {
            constructor(a, M, F, ge) {
                this.router = a, this.modalService = M, this.http = F, this.authService = ge, this.unsubscribe = new i.xQ
            }

            ngOnInit() {
                this.initForm()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initForm() {
                this.usernameControl = new X.NI(this.username, [X.kI.required, X.kI.minLength(4)]), this.watchSearch()
            }

            watchSearch() {
                this.usernameControl.valueChanges.pipe((0, q.R)(this.unsubscribe), (0, ss.b)(500), (0, us.x)(), (0, W.b)(a => {
                    this.username = a, this.usernameError = void 0
                })).subscribe()
            }

            submit() {
                this.submitUsernameApi$(this.username).pipe((0, pt.q)(1), (0, W.b)(a => {
                    this.modalService.destroyTopModal(), this.router.navigate(["/"])
                }), (0, xe.K)(a => (403 === a.status && (this.usernameError = "Username not allowed."), 400 === a.status && (this.usernameError = "Username is invalid."), 500 === a.status && (this.usernameError = "Username is taken."), (0, e.of)(a)))).subscribe()
            }

            submitUsernameApi$(a) {
                const M = this.authService.getUserId(), F = this.authService.getGameSessionTicket();
                return this.http.post(`https://test-auth.apollo.gg/account/${M}/user?session=${F}`, {username: a})
            }

            isUsernameValid$(a) {
                const M = ["immutable", "apollo", "mythic"];
                return (0, jt.H)(1e3).pipe((0, W.b)(F => {
                    this.usernameError = M.some(ge => ge === a) ? "Username is taken" : void 0
                }))
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(H.F0), s.Y36(Zt.Z), s.Y36(le.eN), s.Y36(Z.mI))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["app-username-onboarding"]],
            decls: 11,
            vars: 5,
            consts: [[1, "title"], [1, "onboarding"], ["type", "search", "name", "usernameControl", "maxlength", "15", 1, "form__textInput", 3, "formControl"], [1, "form__inputHint"], ["class", "form__inputHint__text", 4, "ngIf"], ["size", "large", "text", "Submit", 1, "form__submitButton", 3, "disabled", "click"], [1, "form__inputHint__text"]],
            template: function (a, M) {
                1 & a && (s.TgZ(0, "header", 0), s._uU(1, " Unique Username Onboarding "), s.qZA(), s.TgZ(2, "section", 1), s._uU(3, " Onboarding section for inputting username. Please enter a unique username "), s._UZ(4, "input", 2), s.TgZ(5, "div", 3), s.YNc(6, ao, 2, 0, "div", 4), s.YNc(7, rs, 2, 0, "div", 4), s.qZA(), s.TgZ(8, "gu-primary-hex-button", 5), s.NdJ("click", function () {
                    return M.submit()
                }), s.qZA(), s.TgZ(9, "div", 3), s.YNc(10, Vt, 2, 1, "div", 4), s.qZA()()), 2 & a && (s.xp6(4), s.Q6J("formControl", M.usernameControl), s.xp6(2), s.Q6J("ngIf", M.usernameControl.hasError("required") && M.usernameControl.touched), s.xp6(1), s.Q6J("ngIf", M.usernameControl.hasError("minlength") && M.usernameControl.touched), s.xp6(1), s.Q6J("disabled", !M.usernameControl.valid || M.usernameError), s.xp6(2), s.Q6J("ngIf", M.usernameError))
            },
            directives: [X.Fj, X.nD, X.JJ, X.oH, Ce.O5],
            styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form__inputHint__text[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.form__inputHint__text[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{min-width:calc(var(--vw) * 15.62);border:1px solid white;z-index:21;overflow:auto;background-color:#060b11b3;border-radius:calc(var(--vh) * .4);display:flex;flex-direction:column}.title[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);border-bottom:1px solid white;font-size:x-large;text-align:center}.onboarding[_ngcontent-%COMP%]{padding:calc(var(--vh) * 1.85);text-align:center}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);text-align:center;margin:0 auto;margin-top:calc(var(--vh) * 5);width:calc(var(--vw) * 25);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1);min-height:15px}.form__inputHint__text[_ngcontent-%COMP%]{text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);width:calc(var(--vw) * 25);margin-left:auto;margin-right:auto}"]
        }), m
    })(), bs = (() => {
        class m {
            constructor(a, M) {
                this.element = a, this.renderer = M, this.onChange = () => {
                }, this.onTouched = () => {
                }
            }

            writeValue(a) {
                this.renderer.setProperty(this.element.nativeElement, "value", a)
            }

            handleChange(a) {
                this.onChange(a)
            }

            handleBlurEvent(a) {
                this.onTouched()
            }

            registerOnChange(a) {
                this.onChange = a
            }

            registerOnTouched(a) {
                this.onTouched = a
            }

            setDisabledState(a) {
                this.renderer.setProperty(this.element.nativeElement, "disabled", a)
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(s.SBq), s.Y36(s.Qsj))
        }, m.\u0275dir = s.lG2({
            type: m,
            selectors: [["gu-input", "formControl", ""], ["gu-input", "formControlName", ""], ["gu-password-input", "formControl", ""], ["gu-password-input", "formControlName", ""], ["gu-checkbox-group", "formControl", ""], ["gu-checkbox-group", "formControlName", ""], ["gu-radio-button-group", "formControl", ""], ["gu-radio-button-group", "formControlName", ""], ["gu-range-input", "formControl", ""], ["gu-range-input", "formControlName", ""], ["gu-select", "formControl", ""], ["gu-select", "formControlName", ""], ["gu-checkbox", "formControl", ""], ["gu-checkbox", "formControlName", ""], ["gu-textarea", "formControl", ""], ["gu-textarea", "formControlName", ""]],
            hostBindings: function (a, M) {
                1 & a && s.NdJ("input", function (ge) {
                    return M.handleChange(ge.detail.value)
                })("blur", function (ge) {
                    return M.handleBlurEvent(ge.target)
                })
            },
            features: [s._Bn([{provide: X.JU, useExisting: (0, s.Gpc)(() => m), multi: !0}])]
        }), m
    })(), Cs = (() => {
        class m {
            constructor(a, M) {
                this.element = a, this.renderer = M, this.destroyed$ = new i.xQ
            }

            ngOnInit() {
                this.control.statusChanges.pipe((0, q.R)(this.destroyed$)).subscribe({
                    next: a => {
                        this.renderer.setProperty(this.element.nativeElement, "errors", this.getErrors()), this.renderer.setProperty(this.element.nativeElement, "enabled", this.control.dirty)
                    }
                })
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            getErrors() {
                const a = this.control.errors;
                return a ? Object.keys(a).filter(M => void 0 !== a[M]) : []
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(s.SBq), s.Y36(s.Qsj))
        }, m.\u0275dir = s.lG2({
            type: m,
            selectors: [["gu-validation-errors", "control", ""]],
            inputs: {control: "control"}
        }), m
    })();

    function mt(m, D) {
        if (1 & m && (s.TgZ(0, "gu-body-text", 27), s._uU(1), s.qZA()), 2 & m) {
            const a = s.oxw();
            s.xp6(1), s.hij(" ", a.loginError, " ")
        }
    }

    function lo(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " Email address is required "), s.qZA())
    }

    function Rs(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " Enter valid email address "), s.qZA())
    }

    function Bs(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " This email is already in use. "), s.qZA())
    }

    function co(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " User name is required "), s.qZA())
    }

    function Ot(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " User name cannot be the same as email "), s.qZA())
    }

    function uo(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " Password is required "), s.qZA())
    }

    function Gs(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " Passwords must be at least 8 characters long "), s.qZA())
    }

    function Fs(m, D) {
        1 & m && (s.TgZ(0, "div", 16), s._uU(1, " Passwords don't match "), s.qZA())
    }

    function Ns(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "form", 4), s.NdJ("ngSubmit", function () {
                return s.CHM(a), s.oxw().register()
            }), s.TgZ(1, "input", 5), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(2, lo, 2, 0, "div", 6), s.YNc(3, Rs, 2, 0, "div", 6), s.YNc(4, Bs, 2, 0, "div", 6), s.TgZ(5, "input", 7), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(6, co, 2, 0, "div", 6), s.YNc(7, Ot, 2, 0, "div", 6), s.TgZ(8, "input", 8), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(9, uo, 2, 0, "div", 6), s.YNc(10, Gs, 2, 0, "div", 6), s.TgZ(11, "input", 9), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(12, Fs, 2, 0, "div", 6), s.TgZ(13, "gu-vertical-space", 10)(14, "gu-checkbox-input", 11), s.NdJ("onCheck", function (F) {
                return s.CHM(a), s.oxw().onAcceptTermsCheck(F)
            }), s.qZA()(), s.TgZ(15, "gu-checkbox-input", 12), s.NdJ("onCheck", function (F) {
                return s.CHM(a), s.oxw().onSubscribeCheck(F)
            }), s.qZA(), s.TgZ(16, "gu-primary-hex-button", 13), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().register()
            }), s.qZA(), s.TgZ(17, "label", 14), s._uU(18, "Already have an account? "), s.TgZ(19, "a", 15), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().playClickTinyV1()
            }), s._uU(20, " Login Now. "), s.qZA()()()
        }
        if (2 & m) {
            const a = s.oxw();
            s.Q6J("formGroup", a.formGroup), s.xp6(2), s.Q6J("ngIf", a.email.hasError("required") && a.email.touched), s.xp6(1), s.Q6J("ngIf", a.email.hasError("email") && a.email.touched && (null == a.email.value ? null : a.email.value.length) > 0), s.xp6(1), s.Q6J("ngIf", a.emailError), s.xp6(2), s.Q6J("ngIf", a.userName.hasError("required") && a.userName.touched), s.xp6(1), s.Q6J("ngIf", a.userName.hasError("mismatch") && a.userName.touched), s.xp6(2), s.Q6J("ngIf", a.password.hasError("required") && a.password.touched), s.xp6(1), s.Q6J("ngIf", a.password.hasError("minlength") && a.password.touched), s.xp6(2), s.Q6J("ngIf", (a.passwordConfirm.hasError("required") || a.passwordConfirm.hasError("mismatch")) && a.passwordConfirm.touched), s.xp6(4), s.Q6J("loading", a.loading)("text", a.loading ? "Signing Up" : "Sign Up"), s.uIk("disabled", !a.formGroup.valid)
        }
    }

    function zs(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "div", 17)(1, "div", 18)(2, "div"), s._uU(3, " We've sent an email to "), s.TgZ(4, "span"), s._uU(5), s.qZA(), s._uU(6, " - please follow the link in that email to confirm your account in a browser and then come back to login. "), s.qZA(), s._UZ(7, "gu-primary-hex-button", 19), s.TgZ(8, "div"), s._uU(9, " Still waiting? Try sending again or starting from scratch. "), s.qZA(), s.TgZ(10, "gu-primary-hex-button", 20), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().register(!0)
            }), s.qZA(), s.TgZ(11, "gu-primary-hex-button", 21), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().resetRegister()
            }), s.qZA()()()
        }
        if (2 & m) {
            const a = s.oxw();
            s.xp6(5), s.Oqu(a.email.value)
        }
    }

    function Hs(m, D) {
        1 & m && (s.TgZ(0, "div", 9), s._uU(1, " Enter valid email address "), s.qZA())
    }

    function Zs(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "form", 4), s.NdJ("submit", function () {
                return s.CHM(a), s.oxw().reset()
            }), s.TgZ(1, "input", 5), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().playClickTinyV1()
            }), s.qZA(), s.YNc(2, Hs, 2, 0, "div", 6), s.TgZ(3, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().reset()
            }), s.qZA(), s.TgZ(4, "a", 8), s._uU(5, " Back to login "), s.qZA()()
        }
        if (2 & m) {
            const a = s.oxw();
            s.Q6J("formGroup", a.formGroup), s.xp6(2), s.Q6J("ngIf", a.email.errors && a.email.touched), s.xp6(1), s.Q6J("text", a.loading ? "Resetting" : "Reset Password")
        }
    }

    function po(m, D) {
        if (1 & m) {
            const a = s.EpF();
            s.TgZ(0, "div", 10)(1, "div", 11), s._uU(2), s.qZA(), s.TgZ(3, "a", 12), s.NdJ("click", function () {
                return s.CHM(a), s.oxw().tryAgain()
            }), s._uU(4, " Try Again "), s.qZA(), s.TgZ(5, "a", 8), s._uU(6, " Back to login "), s.qZA()()
        }
        if (2 & m) {
            const a = s.oxw();
            s.xp6(2), s.Oqu(a.info)
        }
    }

    const ho = [{path: "", redirectTo: "game/gu", pathMatch: "full"}, {
        path: "login", component: (() => {
            class m {
                constructor(a, M, F, ge, De, He, Ke, yt, gt, Jt, ve, be) {
                    this.analyticsService = a, this.authService = M, this.fb = F, this.utils = ge, this.router = De, this.modalService = He, this.vcr = Ke, this.storageService = yt, this.audioService = gt, this.http = Jt, this.akumaService = ve, this.environment = be, this.loading = !1, this.loginVideoSrc = "/assets/videos/login-video-pallas.webm"
                }

                ngOnInit() {
                    this.buildFormGroup(), this.formGroup.setValue({rememberMe: !0, email: null, password: null})
                }

                login() {
                    if (this.formGroup.invalid) return void this.utils.markFormGroupTouched(this.formGroup);
                    if (this.loading) return;
                    const a = {email: this.formGroup.value.email, password: this.formGroup.value.password},
                        M = this.formGroup.value.rememberMe;
                    this.loginError = "", this.loading = !0, this.authService.login(a, M, 1).pipe((0, pt.q)(1), (0, W.b)(F => {
                        this.logSessionAuthenticated(F), this.storageService.set(["email"], a.email), this.router.navigate(["/"])
                    }), (0, xe.K)(F => this.handleLoginError(F)), (0, ct.x)(() => this.loading = !1)).subscribe()
                }

                logSessionAuthenticated(a) {
                    "function" == typeof gtag && gtag("event", "authenticated", {event_category: "session"}), this.analyticsService.postEvent(new Me.Session.Authenticated.Event({})), this.akumaService.postEvent("Flow", "_sessionAuthenticated_succeeded")
                }

                handleLoginError(a) {
                    return console.warn("Login->login()->authService->login() unsuccessful.", a), this.loginError = a.error.error || "Unable to login.", (0, e.of)([])
                }

                get email() {
                    return this.formGroup.get("email")
                }

                get password() {
                    return this.formGroup.get("password")
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({
                        email: ["", [X.kI.required, X.kI.email]],
                        password: ["", [X.kI.required]],
                        rememberMe: !0
                    })
                }

                hasUniqueUsername$(a) {
                    const M = this.authService.getGameSessionTicket();
                    return this.http.get(`https://test-auth.apollo.gg/account/${a}/user?session=${M}`)
                }

                handleNoUniqueUsername() {
                    this.modalService.createModal(Kt, {}, {
                        blurredBackground: !0,
                        canCloseFromInside: !1,
                        canCloseFromOutside: !1,
                        position: lt.e1.Center,
                        size: lt.Cg.StretchableWorkarea
                    }, this.vcr)
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return m.\u0275fac = function (a) {
                return new (a || m)(s.Y36(Ne.yD), s.Y36(Z.mI), s.Y36(X.qu), s.Y36(Ve.F), s.Y36(H.F0), s.Y36(Zt.Z), s.Y36(s.s_b), s.Y36(Z.qy), s.Y36(Z.pk), s.Y36(le.eN), s.Y36(Ne.jt), s.Y36(Z.Ho))
            }, m.\u0275cmp = s.Xpm({
                type: m,
                selectors: [["cerberus-login"]],
                decls: 38,
                vars: 11,
                consts: [[1, "columns", "is-gapless", "login__container"], [1, "column"], [1, "videoWrapper"], ["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "loginVideo", 3, "src"], ["videoPlayer", ""], [1, "column", "is-narrow"], [1, "formContainer"], [1, "formWrapper"], [1, "loginForm", 3, "formGroup", "submit"], [1, "logo_wrapper"], ["src", "/assets/images/internal-logos/logo--gods-unchained-flat.svg", 1, "logo"], ["for", "email"], ["plain", "true"], ["formControlName", "email", "name", "email", "id", "email", "data-test-id", "email-input", "name", "email", "type", "email", "placeholder", "e.g. neferu@deadmail.com", 3, "valid", "click"], ["data-test-id", "email-errors", 3, "control"], ["key", "required", "fillColor", "colors.alert", "size", "x-small", "data-test-id", "email-error-required"], ["key", "email", "fillColor", "colors.alert", "size", "x-small", "data-test-id", "email-error-email"], ["for", "password"], ["formControlName", "password", "name", "password", "data-test-id", "password-input", "id", "password", "name", "password", "placeholder", "SomethingSneaky", "required", "", 3, "valid", "click"], ["data-test-id", "password-errors", 3, "control"], ["key", "required", "fillColor", "colors.alert", "size", "x-small", "data-test-id", "password-error-required"], ["class", "loginError", "fillColor", "colors.alert", "size", "x-small", 4, "ngIf"], ["data-test-id", "login-button", "id", "button__SignIn", "theme", "dark", 1, "formButton", "loginForm__submitButton", 3, "loading", "disabled", "click"], ["size", "small", "fontWeight", "bold", "routerLink", "/reset", "fillColor", "colors.light.500", 1, "loginForm__forgottenLink"], [1, "createAccount"], ["size", "medium", "fontWeight", "regular", "fillColor", "colors.light.500", 1, "createAccount__title"], ["type", "secondary", "icon", "leave_website", "iconPosition", "right", "theme", "gunmetal", "text", "CREATE ACCOUNT", 1, "formButton", 3, "href"], ["fillColor", "colors.alert", "size", "x-small", 1, "loginError"]],
                template: function (a, M) {
                    1 & a && (s.TgZ(0, "div", 0)(1, "div", 1)(2, "div", 2)(3, "video", 3, 4), s._uU(5, " Your browser does not support HTML5 video. "), s.qZA()()(), s.TgZ(6, "div", 5)(7, "div", 6)(8, "div", 7)(9, "gu-form", 8), s.NdJ("submit", function () {
                        return M.login()
                    }), s.TgZ(10, "div", 9), s._UZ(11, "img", 10), s.qZA(), s.TgZ(12, "gu-label", 11)(13, "gu-body-text", 12), s._uU(14, "Email"), s.qZA()(), s.TgZ(15, "gu-input", 13), s.NdJ("click", function () {
                        return M.playClickTinyV1()
                    }), s.qZA(), s.TgZ(16, "gu-validation-errors", 14)(17, "gu-body-text", 15), s._uU(18, "Email is required."), s.qZA(), s.TgZ(19, "gu-body-text", 16), s._uU(20), s.qZA()(), s.TgZ(21, "gu-label", 17)(22, "gu-body-text", 12), s._uU(23, "Password"), s.qZA()(), s.TgZ(24, "gu-password-input", 18), s.NdJ("click", function () {
                        return M.playClickTinyV1()
                    }), s.qZA(), s.TgZ(25, "gu-validation-errors", 19)(26, "gu-body-text", 20), s._uU(27, "Password is required."), s.qZA()(), s.YNc(28, mt, 2, 1, "gu-body-text", 21), s.TgZ(29, "gu-standard-button", 22), s.NdJ("click", function () {
                        return M.login()
                    }), s._uU(30, "Log in "), s.qZA(), s.TgZ(31, "gu-body-text", 23), s._uU(32, " Forgotten password? "), s.qZA()()(), s.TgZ(33, "div", 24)(34, "gu-simple-text", 25), s._uU(35, " Don't have an account? "), s.qZA(), s.TgZ(36, "gu-standard-button", 26), s._uU(37, "Create Account "), s.qZA()()()()()), 2 & a && (s.xp6(3), s.Q6J("src", M.loginVideoSrc, s.LSH), s.xp6(6), s.Q6J("formGroup", M.formGroup), s.xp6(6), s.Q6J("valid", M.formGroup.controls.email.valid), s.xp6(1), s.Q6J("control", M.formGroup.controls.email), s.xp6(4), s.hij("", M.formGroup.controls.email.value, " is not a valid email address"), s.xp6(4), s.Q6J("valid", M.formGroup.controls.password.valid), s.xp6(1), s.Q6J("control", M.formGroup.controls.password), s.xp6(3), s.Q6J("ngIf", M.loginError), s.xp6(1), s.Q6J("loading", M.loading)("disabled", !M.formGroup.valid), s.xp6(7), s.Q6J("href", M.environment.guRegisterURL))
                },
                directives: [X.JL, X.sg, bs, X.JJ, X.u, Cs, X.Q7, Ce.O5, H.rH],
                styles: ['h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.loginForm__forgottenLink[_ngcontent-%COMP%], .loginForm__inputHint[_ngcontent-%COMP%], .creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.loginForm__forgottenLink[_ngcontent-%COMP%], .loginForm__inputHint[_ngcontent-%COMP%], .creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.creatAccountArea__text[_ngcontent-%COMP%], .loginForm__textInput[_ngcontent-%COMP%]{line-height:1.4}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%;position:relative}.logo_wrapper[_ngcontent-%COMP%]{width:100%;text-align:center}.large_logo[_ngcontent-%COMP%]{width:70%}.loginVideo[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:1}.loginForm[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 17.7);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.loginForm__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.loginForm__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.loginForm__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.loginForm__forgottenLink[_ngcontent-%COMP%]{text-align:right;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:4px;margin-bottom:8px}.loginForm__submitButton[_ngcontent-%COMP%]{margin-left:auto;margin-right:auto;padding:0 50px;min-width:216px}.creatAccountArea[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 10.9);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap;align-items:center}.creatAccountArea__text[_ngcontent-%COMP%]{text-align:center;font-weight:600;color:#f6f6f6}.notify_users[_ngcontent-%COMP%]{margin-top:20px;color:#f6f6f6;z-index:1;width:600px;text-align:center;background-color:#0f1b27;padding:20px;border-radius:5px;line-height:1.5}']
            }), m
        })()
    }, {
        path: "register", component: (() => {
            class m {
                constructor(a, M, F, ge, De, He) {
                    this.analyticsService = a, this.auth = M, this.fb = F, this.utils = ge, this.storageService = De, this.audioService = He, this.termsError = !1, this.emailError = !1, this.finished = !1, this.loading = !1, this.videoSrc = "/assets/videos/login-video.webm", this.unsubscribe = new i.xQ
                }

                ngOnInit() {
                    this.buildFormGroup(), this.logRegistrationStarted(), this.email.valueChanges.pipe((0, q.R)(this.unsubscribe)).subscribe(() => this.emailError = !1)
                }

                ngOnDestroy() {
                    this.passwordChangeSubscription && this.passwordChangeSubscription.unsubscribe(), this.passwordChangeSubscription = null, this.emailChangeSubscription && this.emailChangeSubscription.unsubscribe(), this.emailChangeSubscription = null, this.unsubscribe.next(), this.unsubscribe.complete()
                }

                logRegistrationStarted() {
                    "function" == typeof fbq && fbq("track", "Lead"), "function" == typeof gtag && gtag("event", "generate_lead"), this.analyticsService.postEvent(new Me.Registration.Started.Event({}))
                }

                logAccountCreated(a) {
                    this.storageService.set(["user_id"], a.id), this.analyticsService.postEvent(new Me.Account.Created.Event({
                        email: a.email,
                        is_referred: !1,
                        subscribed: a.subscribe,
                        username: a.username,
                        user_id: a.id
                    })), this.storageService.delete(["user_id"]), "function" == typeof fbq && fbq("track", "CompleteRegistration"), "function" == typeof gtag && gtag("event", "sign_up")
                }

                onSubscribeCheck(a) {
                    this.subscribe.setValue(a.detail.checked)
                }

                onAcceptTermsCheck(a) {
                    this.agreeToTerms.setValue(a.detail.checked)
                }

                register(a) {
                    const M = {
                        email: this.email.value,
                        username: this.userName.value,
                        password: this.password.value,
                        subscribe: this.subscribe.value
                    }, F = Object.assign({}, M);
                    delete F.password;
                    for (const ge in F) F.hasOwnProperty(ge) && this.storageService.set([ge], `${F[ge]}`);
                    if (this.formGroup.invalid) this.utils.markFormGroupTouched(this.formGroup); else if (!this.loading) {
                        if (this.termsError = !1, this.emailError = !1, !this.agreeToTerms.value) return void (this.termsError = !0);
                        this.loading = !0, this.auth.register(M).pipe((0, pt.q)(1), (0, W.b)(ge => {
                            this.finished = !0, a || this.logAccountCreated(Object.assign({id: ge}, F))
                        }), (0, xe.K)(ge => (console.error("Register->register()->authService.register() registration unsuccessfull.", ge), this.emailError = !0, (0, e.of)([]))), (0, ct.x)(() => this.loading = !1)).subscribe()
                    }
                }

                resetRegister() {
                    this.formGroup.reset(), this.finished = !1
                }

                passwordMatchValidator(a) {
                    if (!a.parent) return null;
                    const M = a.parent.get("password");
                    return this.passwordChangeSubscription || (this.passwordChangeSubscription = M.valueChanges.pipe((0, q.R)(this.unsubscribe)).subscribe(() => {
                        a.updateValueAndValidity()
                    })), M.value !== a.value ? {mismatch: !0} : null
                }

                usernameMatchEmailValidator(a) {
                    if (!a.parent) return null;
                    const M = a.parent.get("email");
                    return this.emailChangeSubscription || (this.emailChangeSubscription = M.valueChanges.pipe((0, q.R)(this.unsubscribe)).subscribe(F => {
                        a.updateValueAndValidity()
                    })), a.value === M.value ? {mismatch: !0} : null
                }

                get email() {
                    return this.formGroup.get("email")
                }

                get password() {
                    return this.formGroup.get("password")
                }

                get passwordConfirm() {
                    return this.formGroup.get("passwordConfirm")
                }

                get userName() {
                    return this.formGroup.get("userName")
                }

                get agreeToTerms() {
                    return this.formGroup.get("agreeToTerms")
                }

                get subscribe() {
                    return this.formGroup.get("subscribe")
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({
                        email: ["", [X.kI.required, X.kI.email]],
                        userName: ["", [X.kI.required, this.usernameMatchEmailValidator.bind(this)]],
                        password: ["", [X.kI.required, X.kI.minLength(8)]],
                        passwordConfirm: ["", [X.kI.required, this.passwordMatchValidator.bind(this)]],
                        subscribe: [!1],
                        agreeToTerms: [!1]
                    })
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return m.\u0275fac = function (a) {
                return new (a || m)(s.Y36(Ne.yD), s.Y36(Z.mI), s.Y36(X.qu), s.Y36(Ve.F), s.Y36(Z.qy), s.Y36(Z.pk))
            }, m.\u0275cmp = s.Xpm({
                type: m,
                selectors: [["app-register"]],
                decls: 5,
                vars: 3,
                consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "video", 3, "src"], ["videoPlayer", ""], ["class", "form", 3, "formGroup", "ngSubmit", 4, "ngIf"], ["class", "success-info", 4, "ngIf"], [1, "form", 3, "formGroup", "ngSubmit"], ["aria-describedby", "emailErrorLabel", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", "autocomplete", "false", 1, "form__textInput", 3, "click"], ["class", "form__inputHint", 4, "ngIf"], ["aria-describedby", "usernameErrorLabel", "name", "username", "type", "text", "formControlName", "userName", "placeholder", "Username", "autocomplete", "false", 1, "form__textInput", 3, "click"], ["name", "password", "type", "password", "formControlName", "password", "placeholder", "Password", 1, "form__textInput", 3, "click"], ["name", "repeat", "type", "password", "formControlName", "passwordConfirm", "placeholder", "Repeat", 1, "form__textInput", 3, "click"], ["both", "medium"], ["labelText", "I agree to the <a href='https://apollo.gg/terms'>Terms and Conditions</a>", 3, "onCheck"], ["labelText", "Sign up for exclusive updates!", 3, "onCheck"], ["size", "large", 1, "form__submitButton", 3, "loading", "text", "click"], [1, "nav_login", "font-weight-bold"], ["routerLink", "/login", 1, "form__backToLogin", 3, "click"], [1, "form__inputHint"], [1, "success-info"], [1, "register-finished", "text-center"], ["size", "normal", "routerLink", "/login", "text", "Login", 1, "form__submitButton"], ["size", "normal", "text", "Resend", 1, "form__submitButton", 3, "click"], ["size", "normal", "text", "Re-Register", 1, "form__submitButton", 3, "click"]],
                template: function (a, M) {
                    1 & a && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.YNc(3, Ns, 21, 12, "form", 2), s.YNc(4, zs, 12, 1, "div", 3)), 2 & a && (s.Q6J("src", M.videoSrc, s.LSH), s.xp6(3), s.Q6J("ngIf", !M.finished), s.xp6(1), s.Q6J("ngIf", M.finished))
                },
                directives: [Ce.O5, X._Y, X.JL, X.sg, X.Fj, X.JJ, X.u, H.yS, H.rH],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form-check-label[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%], .form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%], .register-finished[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.register-finished[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.form-check-label[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%], .form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%}.video[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:.65}.form[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 31);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.success-info[_ngcontent-%COMP%]{width:calc(var(--vw) * 27.7)}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{text-align:center;margin-top:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%]{text-align:center;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:calc(var(--vh) * 2);cursor:pointer}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);margin-bottom:calc(var(--vh) * 4.44);margin-left:auto;margin-right:auto;min-width:160px}.form__subscribe-checkbox[_ngcontent-%COMP%], .form__submitButton[_ngcontent-%COMP%], .nav_login[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}"]
            }), m
        })()
    }, {
        path: "reset", component: (() => {
            class m {
                constructor(a, M, F, ge) {
                    this.authService = a, this.fb = M, this.utils = F, this.audioService = ge, this.finished = !1, this.loading = !1, this.videoSrc = "/assets/videos/login-video-pallas.webm"
                }

                ngOnInit() {
                    this.buildFormGroup()
                }

                reset() {
                    this.formGroup.invalid ? this.utils.markFormGroupTouched(this.formGroup) : this.loading || (this.loading = !0, this.authService.resetPassword(this.email.value).pipe((0, pt.q)(1)).subscribe(a => {
                        this.loading = !1, this.finished = !0, this.info = "Follow the instructions sent to you by email in order to reset your password."
                    }, a => {
                        this.loading = !1, this.finished = !0, console.error(a), this.info = "Error has occurred during sending an email. Try again later."
                    }))
                }

                get email() {
                    return this.formGroup.get("email")
                }

                buildFormGroup() {
                    this.formGroup = this.fb.group({email: ["", [X.kI.required, X.kI.email]]})
                }

                tryAgain() {
                    this.finished = !1, this.formGroup.reset()
                }

                playClickTinyV1() {
                    this.audioService.clickTinyV1.play()
                }
            }

            return m.\u0275fac = function (a) {
                return new (a || m)(s.Y36(Z.mI), s.Y36(X.qu), s.Y36(Ve.F), s.Y36(Z.pk))
            }, m.\u0275cmp = s.Xpm({
                type: m,
                selectors: [["app-reset"]],
                decls: 5,
                vars: 3,
                consts: [["preload", "", "autoplay", "", "muted", "", "playsinline", "", "loop", "", 1, "video", 3, "src"], ["videoPlayer", ""], ["class", "form", 3, "formGroup", "submit", 4, "ngIf"], ["class", "success-info", 4, "ngIf"], [1, "form", 3, "formGroup", "submit"], ["aria-describedby", "emailErrorLabel", "name", "email", "type", "email", "formControlName", "email", "placeholder", "Email", 1, "form__textInput", 3, "click"], ["class", "form__inputHint", 4, "ngIf"], ["size", "large", 1, "form__submitButton", 3, "text", "click"], ["routerLink", "/login", 1, "form__backToLogin"], [1, "form__inputHint"], [1, "success-info"], [1, "info-label"], [1, "form__tryAgain", 3, "click"]],
                template: function (a, M) {
                    1 & a && (s.TgZ(0, "video", 0, 1), s._uU(2, " Your browser does not support HTML5 video.\n"), s.qZA(), s.YNc(3, Zs, 6, 3, "form", 2), s.YNc(4, po, 7, 1, "div", 3)), 2 & a && (s.Q6J("src", M.videoSrc, s.LSH), s.xp6(3), s.Q6J("ngIf", !M.finished), s.xp6(1), s.Q6J("ngIf", M.finished))
                },
                directives: [Ce.O5, X._Y, X.JL, X.sg, X.Fj, X.JJ, X.u, H.yS],
                styles: ["h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{margin:0}body[_ngcontent-%COMP%], label[_ngcontent-%COMP%], a[_ngcontent-%COMP%], div[_ngcontent-%COMP%], input[_ngcontent-%COMP%], button[_ngcontent-%COMP%], p[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif;font-weight:400}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%], h3[_ngcontent-%COMP%], h4[_ngcontent-%COMP%], h5[_ngcontent-%COMP%], h6[_ngcontent-%COMP%]{font-family:Unchained,serif;font-weight:700}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-family:Open Sans,sans-serif}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%], .form__inputHint[_ngcontent-%COMP%], .form__textInput[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{line-height:1.4}[_nghost-%COMP%]{display:flex;flex-flow:column nowrap;align-items:center;background:#182531;height:100%}.video[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;top:0;left:0;object-fit:cover;object-position:0 0;opacity:.65}.form[_ngcontent-%COMP%], .success-info[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 37.96);width:calc(var(--vw) * 17.7);position:relative;display:flex;flex-flow:column nowrap}.success-info[_ngcontent-%COMP%]{width:calc(var(--vw) * 27.7)}.success-info[_ngcontent-%COMP%]   .info-label[_ngcontent-%COMP%]{text-align:center;margin-top:calc(var(--vh) * 1.48)}.form__textInput[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);background:#182531;color:#fff;border:1px solid #0f1b27;border-radius:calc(var(--vh) * .4)}.form__textInput[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.form__inputHint[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .6);text-shadow:0 1px 1px rgba(0,0,0,.3)}.form__backToLogin[_ngcontent-%COMP%], .form__tryAgain[_ngcontent-%COMP%]{text-align:center;color:#f6f6f6;text-shadow:0 1px 1px rgba(0,0,0,.3);margin-top:calc(var(--vh) * 2);cursor:pointer}.form__submitButton[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 4.44);margin-left:auto;margin-right:auto}"]
            }), m
        })()
    }, {path: "demo-sheet", component: ht.q6}, {
        path: "game",
        component: Us,
        canActivate: [(() => {
            class m {
                constructor(a) {
                    this.authService = a
                }

                canActivate(a, M) {
                    return this.authService.refreshToken().pipe((0, re.VS)(F => this.authService.saveAccount(F, !0, 1)), (0, xe.K)(F => (this.authService.logout(), (0, e.of)(F))))
                }
            }

            return m.\u0275fac = function (a) {
                return new (a || m)(s.LFG(Z.mI))
            }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
        })()],
        data: {reuse: !0},
        children: [{path: "gu", loadChildren: () => o.e(62).then(o.bind(o, 44062)).then(m => m.GuModule)}]
    }];
    let Uo = (() => {
        class m {
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275mod = s.oAB({type: m}), m.\u0275inj = s.cJS({
            imports: [[H.Bz.forRoot(ho, {
                useHash: !0,
                enableTracing: !1
            })], H.Bz]
        }), m
    })();
    var Ro = o(98009), Bo = o(47313), as = o(41746), Go = o(30567), Pt = o(36053), Nt = o(87545), mo = o(43164),
        Fo = o(52216), No = o(87168), _o = o(33403), xs = o(28510);
    let zo = (() => {
        class m {
            constructor(a, M, F) {
                this.cerberusModalService = a, this.activeModal = M, this.akumaService = F
            }

            ngOnInit() {
                this.akumaService.postScreenEvent("tutorial", "Skip", "", "opened")
            }

            goBack() {
                this.akumaService.postControlEvent("tutorial", "Skip", "", "return", "Btn", "pressed"), this.activeModal.close("Coinbase CTA closed")
            }

            skipTutorial() {
                this.akumaService.postControlEvent("tutorial", "Skip", "", "confirm", "Btn", "pressed"), this.cerberusModalService.dismissAll()
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(xs.Qz), s.Y36(xs.mX), s.Y36(Ne.jt))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["cerberus-skip-tutorial-modal"]],
            decls: 15,
            vars: 0,
            consts: [[1, "modal__header"], [1, "modal__content"], ["top", "3x-large", "bottom", "medium"], ["align", "center", "size", "x-small", "fillGradient", "gradients.gold.simple"], ["top", "medium", "bottom", "medium"], ["fillColor", "colors.light.800", "kind", "x-small"], [1, "modal__btnsGroup"], [1, "modal__btn", 3, "click"]],
            template: function (a, M) {
                1 & a && (s._UZ(0, "div", 0), s.TgZ(1, "div", 1)(2, "gu-vertical-space", 2)(3, "gu-heading-text", 3), s._uU(4, " Are you Sure you want to skip the tutorial?"), s.qZA()(), s.TgZ(5, "gu-vertical-space", 4)(6, "gu-paragraph-text", 5), s._uU(7, " You won\u2019t receive your 3 Core Packs. "), s._UZ(8, "br"), s._uU(9, " To unlock this reward at a later time, come back by selecting \u201cTutorial\u201d from the Arena screen. "), s.qZA()(), s.TgZ(10, "div", 6)(11, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                    return M.goBack()
                }), s._uU(12, " Go Back "), s.qZA(), s.TgZ(13, "gu-primary-hex-button", 7), s.NdJ("click", function () {
                    return M.skipTutorial()
                }), s._uU(14, " Yes "), s.qZA()()())
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;max-width:640px;text-align:center}.modal__header[_ngcontent-%COMP%]{background:linear-gradient(90deg,#c6a052 2.93%,#ebc98b 25.01%,#fff2d8 50.44%,#ebc98b 74.21%,#c6a052 96.95%);box-shadow:0 2px 5px #0000004d;height:3px;width:100%}.modal__content[_ngcontent-%COMP%]{background:linear-gradient(90deg,#0f1b27 1.39%,#0f1b27 12.6%,#1d2f41 50.06%,#0f1b27 87.64%,#0f1b27 98.63%);box-sizing:border-box;border:2px solid #3D5A74;display:flex;flex-direction:column;padding:0 calc(var(--vw) * 1.5);align-items:center}.modal__btnsGroup[_ngcontent-%COMP%]{display:flex;justify-content:space-evenly;padding:20px 0;width:50%}.modal__btn[_ngcontent-%COMP%]{padding:15px;margin:10px}.modal__closeButton[_ngcontent-%COMP%]{position:absolute;top:20px;right:20px;z-index:1;font-size:calc(var(--vh) * 2);color:#8be1e0;cursor:pointer}.modal__closeButton[_ngcontent-%COMP%]:hover{color:#fff}"]
        }), m
    })();
    var fo = o(11130), vo = o(8561), bo = o(17268);
    let js = (() => {
        class m {
            constructor(a, M, F, ge, De, He, Ke, yt) {
                this.cerberusModalService = a, this.queueService = M, this.gameService = F, this.guGameService = ge, this.playService = De, this.authService = He, this.audioService = Ke, this.akumaService = yt
            }

            ngOnInit() {
                this.akumaService.postScreenEvent("tutorial", "Welcome", "", "opened"), this.akumaService.postFlowEvent("tutorialComplete", "started")
            }

            beginTutorial() {
                this.audioService.arenaClickStart.play(), this.akumaService.postControlEvent("tutorial", "Welcome", "", "go", "Btn", "pressed");
                const a = this.authService.getUserId();
                this.queueService.activeQueues$.pipe((0, pt.q)(1)).subscribe(M => {
                    M.forEach(F => this.queueService.cancel(F))
                }), this.gameService.getBranch$(1).pipe((0, pt.q)(1), (0, No.M)(this.guGameService.getGameMode$(_o.B_.TUTORIAL)), (0, W.b)(([M, F]) => {
                    this.playService.play({
                        realm: M.id,
                        mode: _o.B_.TUTORIAL,
                        mission: F.properties.mission,
                        player: {
                            id: a,
                            deck: {id: F.properties.player.deck.id, global: F.properties.player.deck.global},
                            collection: {id: F.properties.player.collection.id}
                        },
                        opponent: {
                            deck: {id: F.properties.opponent.deck.id, global: F.properties.opponent.deck.global},
                            collection: {id: F.properties.opponent.collection.id}
                        }
                    })
                })).subscribe(M => this.cerberusModalService.dismissAll())
            }

            skipTutorial() {
                this.akumaService.postControlEvent("tutorial", "Welcome", "", "skip", "Btn", "pressed");
                this.cerberusModalService.open(zo, {centered: !0}).result.then(F => {
                }, F => {
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.Y36(xs.Qz), s.Y36(Gt.g), s.Y36(R.hM), s.Y36(fo.xV), s.Y36(vo.GT), s.Y36(Z.mI), s.Y36(Z.pk), s.Y36(Ne.jt))
        }, m.\u0275cmp = s.Xpm({
            type: m,
            selectors: [["cerberus-tutorial-start-modal"]],
            decls: 48,
            vars: 1,
            consts: [[1, "leftPanel"], ["src", "/gu-assets/images/tutorial/citadel-herald-bg.webp", 1, "leftPanel__image"], [1, "leftPanel__imageShadow"], ["src", "/gu-assets/images/GULogo-white.svg", "alt", "", 1, "leftPanel__logoImage"], [1, "rightPanel"], ["fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", "size", "x-small", 1, "rightPanel__title"], ["fillColor", "colors.light.300", 1, "rightPanel__subtitle"], [1, "rightPanel__gameplay"], ["src", "/gu-assets/images/tutorial/gameplay-basics.webp", 1, "rightPanel__gameplay__image"], [1, "rightPanel__gameplay__title"], ["fillColor", "colors.light.300"], [1, "rightPanel__howto"], [1, "rightPanel__howto__mana"], ["src", "/gu-assets/images/tutorial/how-mana-works.webp", 1, "rightPanel__howto__image"], [1, "rightPanel__howto__title"], [1, "rightPanel__howto__win"], ["src", "/gu-assets/images/tutorial/how-to-win.webp", 1, "rightPanel__howto__image"], [1, "rightPanel__freeStuff"], ["src", "/gu-assets/images/tutorial/free-stuff-banner-start.png", 1, "rightPanel__freeStuff__bgImage"], ["src", "/gu-assets/images/tutorial/free-core-pack.png", 1, "rightPanel__freeStuff__cardImage"], ["fillColor", "colors.light.300", 1, "rightPanel__freeStuff__text"], [1, "rightPanel__freeStuff__tooltip", 3, "title"], ["iconLigature", "little_help"], ["size", "medium", "text", "BEGIN", 1, "rightPanel__beginTutorialBtn", 3, "click"], ["fillColor", "colors.apocyan.100", 1, "rightPanel__closeTutorialBtn", 3, "click"]],
            template: function (a, M) {
                1 & a && (s.TgZ(0, "div", 0)(1, "picture"), s._UZ(2, "img", 1), s.qZA(), s._UZ(3, "div", 2), s.TgZ(4, "picture"), s._UZ(5, "img", 3), s.qZA()(), s.TgZ(6, "div", 4)(7, "gu-heading-text", 5), s._uU(8, " Welcome to the Tutorial "), s.qZA(), s.TgZ(9, "gu-simple-text", 6), s._uU(10, " A swift lesson to help you learn the basics. All great heroes need to start somewhere! "), s.qZA(), s.TgZ(11, "div", 7)(12, "picture"), s._UZ(13, "img", 8), s.qZA(), s.TgZ(14, "div", 9)(15, "gu-simple-text", 10)(16, "strong"), s._uU(17, "GAMEPLAY BASICS"), s.qZA()()()(), s.TgZ(18, "div", 11)(19, "div", 12)(20, "picture"), s._UZ(21, "img", 13), s.qZA(), s.TgZ(22, "div", 14)(23, "gu-simple-text", 10)(24, "strong"), s._uU(25, "HOW MANA WORKS"), s.qZA()()()(), s.TgZ(26, "div", 15)(27, "picture"), s._UZ(28, "img", 16), s.qZA(), s.TgZ(29, "div", 14)(30, "gu-simple-text", 10)(31, "strong"), s._uU(32, "HOW TO WIN"), s.qZA()()()()(), s.TgZ(33, "div", 17)(34, "picture"), s._UZ(35, "img", 18), s.qZA(), s.TgZ(36, "picture"), s._UZ(37, "img", 19), s.qZA(), s.TgZ(38, "gu-simple-text", 20), s._uU(39, " Receive "), s.TgZ(40, "strong"), s._uU(41, "3 Core Packs "), s.qZA(), s.TgZ(42, "app-tooltip", 21), s._UZ(43, "gu-icon", 22), s.qZA(), s._uU(44, " upon completion of the tutorial. "), s.qZA()(), s.TgZ(45, "gu-primary-hex-button", 23), s.NdJ("click", function () {
                    return M.beginTutorial()
                }), s.qZA(), s.TgZ(46, "gu-simple-text", 24), s.NdJ("click", function () {
                    return M.skipTutorial()
                }), s._uU(47, " MAYBE LATER "), s.qZA()()), 2 & a && (s.xp6(42), s.Q6J("title", "Core Packs hold <br/> non-blockchain cards that can <br/> be used to expand your decks."))
            },
            directives: [bo.K],
            styles: ["[_nghost-%COMP%]{display:flex;background-color:#0f1b27;border:2px solid #3D5A74;box-sizing:border-box;box-shadow:5px 5px 15px #0006;width:1050px}.rightPanel[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:center;width:100%}.rightPanel__title[_ngcontent-%COMP%]{margin-top:20px}.rightPanel__subtitle[_ngcontent-%COMP%]{margin:20px;text-align:center}.rightPanel__gameplay[_ngcontent-%COMP%]{margin:0 30px;width:450px}.rightPanel__gameplay__image[_ngcontent-%COMP%]{width:450px;display:block}.rightPanel__gameplay__title[_ngcontent-%COMP%]{background:linear-gradient(to left,#0F1B27 0%,#1D2F41 100%);text-align:center;padding:10px}.rightPanel__howto[_ngcontent-%COMP%]{display:flex;margin-top:10px}.rightPanel__howto__mana[_ngcontent-%COMP%]{margin-right:3px}.rightPanel__howto__win[_ngcontent-%COMP%]{margin-left:3px}.rightPanel__howto__image[_ngcontent-%COMP%]{width:222px;display:block}.rightPanel__howto__title[_ngcontent-%COMP%]{background:linear-gradient(to left,#0F1B27 0%,#1D2F41 100%);text-align:center;padding:10px}.rightPanel__freeStuff[_ngcontent-%COMP%]{position:relative}.rightPanel__freeStuff__bgImage[_ngcontent-%COMP%]{width:510px;display:block;margin-top:35px}.rightPanel__freeStuff__cardImage[_ngcontent-%COMP%]{position:absolute;top:0px;left:15px;height:90px}.rightPanel__freeStuff__text[_ngcontent-%COMP%]{position:absolute;top:45px;left:85px;font-size:15px}.rightPanel__freeStuff__tooltip[_ngcontent-%COMP%]{display:inline;text-align:center}.rightPanel__beginTutorialBtn[_ngcontent-%COMP%]{margin-top:20px;padding:0 40px}.rightPanel__closeTutorialBtn[_ngcontent-%COMP%]{margin-top:20px;font-size:15px;cursor:pointer}.leftPanel[_ngcontent-%COMP%]{position:relative;width:100%}.leftPanel__image[_ngcontent-%COMP%]{max-width:100%;max-height:100%;display:block}.leftPanel__imageShadow[_ngcontent-%COMP%]{width:100%;height:100%;position:absolute;top:0px;background:linear-gradient(180deg,rgba(15,27,39,0) 57.61%,rgba(15,27,39,.7) 73.26%,rgba(15,27,39,.9) 100%)}.leftPanel__logoImage[_ngcontent-%COMP%]{width:330px;position:absolute;bottom:60px;left:0;right:0;margin-left:auto;margin-right:auto}"]
        }), m
    })();
    var Ye = o(14618), Co = o(88632);
    let xo = (() => {
        class m {
            constructor(a, M, F, ge, De, He, Ke, yt, gt, Jt) {
                this.actions$ = a, this.ngrxStore = M, this.gameApi = F, this.authService = ge, this.guUserService = De, this.gameService = He, this.gameDownloadService = Ke, this.zone = yt, this.utils = gt, this.cerberusModalService = Jt, this.GameAssetsDownloadRequest$ = (0, ae.GW)(() => this.actions$.pipe((0, ae.l4)(Ye.gK.GAME_ASSETS_DOWNLOAD_REQUEST), (0, Nt.w)(ve => this.gameService.currentGameContext$.pipe((0, Ge.h)(be => null != be), (0, re.VS)(be => (0, as.$R)((0, e.of)(be), this.gameService.getBranch(be.id))), (0, re.VS)(([be, $t]) => (0, as.$R)((0, e.of)(be), this.gameDownloadService.getLatestAssetsVersions(be, $t), this.gameDownloadService.getLocalAssetsVersions(be), this.getBasicAuthToken())), (0, pt.q)(1))), (0, Nt.w)(([ve, be, $t, Dt]) => {
                    const Wt = this.gameService.isObfuscatedBranch(ve.id) ? Dt : void 0,
                        Ht = this.gameDownloadService.deltaAssetsVersions($t, be),
                        gs = Ht.reduce((ds, Ze) => ds + Ze.size, 0), cs = this.gameService.getAssetsPath(),
                        es = Array.from({length: Ht.length}, () => new y.X(null)),
                        ws = window.bridge.downloadAssetsWithSempahore(Ht, cs, es, Wt, 5).map(ds => ds.pipe(this.utils.enterZone(this.zone)));
                    return (0, e.of)({
                        downloadAssets: ws,
                        assetsProgresses: es,
                        totalBytes: gs,
                        game: ve,
                        remoteAssets: be
                    })
                }), (0, Nt.w)(ve => (0, as.$R)((0, Go.D)(ve.downloadAssets).pipe((0, z.U)(be => ({
                    downloads: be,
                    game: ve.game,
                    remoteAssets: ve.remoteAssets
                }))), (0, Pt.aj)(ve.assetsProgresses).pipe((0, mo.p)(1e3), (0, W.b)(be => {
                    const $t = be.reduce((Wt, Ht) => Ht ? Wt + Ht.bytesCompleted : Wt + 0, 0),
                        Dt = Math.round(100 * $t / ve.totalBytes);
                    this.ngrxStore.dispatch(new Ye.X4({percentage: Dt, status: "downloading"}))
                })))), (0, Nt.w)(([ve, be]) => (this.gameService.deleteProperty(ve.game.id, "assets"), this.gameService.setProperty(ve.game.id, "assets", JSON.stringify(ve.remoteAssets)), this.gameService.refreshGameContext(), this.gameDownloadService.displayDownloadCompleteNotification(ve.game), [new Ye.P6])), (0, xe.K)((ve, be) => (console.error(ve), this.ngrxStore.dispatch(new Ye.wT({error: ve})), be)))), this.GameAssetsDownloadSuccess$ = (0, ae.GW)(() => this.actions$.pipe((0, ae.l4)(Ye.gK.GAME_ASSETS_DOWNLOAD_SUCCESS), (0, Nt.w)(ve => {
                    const be = this.authService.getUserId();
                    return this.gameService.getUserTutorialMissions(be).pipe((0, pt.q)(1))
                }), (0, Nt.w)(ve => (ve[0].completed || this.showTutorialModal(), [new Ye.Lg({
                    status: "idle",
                    percentage: 100
                })])), (0, xe.K)((ve, be) => (console.error(ve), be)))), this.GameBuildDownloadExtractRequest$ = (0, ae.GW)(() => this.actions$.pipe((0, ae.l4)(Ye.gK.GAME_BUILD_DOWNLOAD_EXTRACT), (0, z.U)(ve => ve.payload), (0, Nt.w)(ve => this.gameService.getBranch(ve.game.id).pipe((0, z.U)(be => ({
                    branch: be,
                    action: ve
                })))), (0, Nt.w)(({
                                      branch: ve,
                                      action: be
                                  }) => this.gameDownloadService.extractGame(be.game, be.fileName, be.installPath).pipe((0, z.U)($t => ({
                    result: $t,
                    branch: ve,
                    action: be
                })))), (0, Nt.w)(({action: be}) => (this.gameService.setProperty(be.game.id, "status", "extracted"), this.gameService.refreshGameContext(), be.remoteVersion && this.gameDownloadService.deleteFile(this.gameDownloadService.getFileName(be.game, be.remoteVersion), this.gameService.getInstallPath(be.game)), be.localVersion && this.gameDownloadService.deleteFile(this.gameDownloadService.getFileName(be.game, be.localVersion), this.gameService.getInstallPath(be.game)), this.gameDownloadService.displayDownloadCompleteNotification(be.game), [new Ye.Ry])), (0, xe.K)((ve, be) => (console.error(ve), this.ngrxStore.dispatch(new Ye.c7({error: ve})), be)))), this.GameBuildDownloadRequest$ = (0, ae.GW)(() => this.actions$.pipe((0, ae.l4)(Ye.gK.GAME_BUILD_DOWNLOAD_REQUEST), (0, Nt.w)(ve => this.gameService.currentGameContext$.pipe((0, Ge.h)(be => null != be), (0, re.VS)(be => (0, as.$R)((0, e.of)(be), this.gameService.getBranch(be.id))), (0, re.VS)(([be, $t]) => (0, as.$R)((0, e.of)(be), this.gameDownloadService.getVersions(be, $t), this.getBasicAuthToken())), (0, pt.q)(1))), (0, W.b)(([ve]) => {
                    this.gameDownloadService.uninstallGame(ve, this.gameService.getInstallPath(ve))
                }), (0, Nt.w)(([ve, [be, $t], Dt]) => {
                    const Wt = this.gameService.getInstallPath(ve),
                        Ht = this.gameDownloadService.getDownloadInfo(ve, be, Dt),
                        gs = this.gameService.isObfuscatedBranch(ve.id) ? Dt : void 0;
                    return (0, Pt.aj)([window.bridge.download(Ht.url, Wt, this.getFileName(ve, be), gs).pipe(this.utils.enterZone(this.zone), (0, z.U)(cs => ({
                        game: ve,
                        fileName: this.getFileName(ve, be),
                        installPath: Wt,
                        remoteVersion: be,
                        localVersion: $t
                    }))), window.bridge.progress.pipe(this.utils.enterZone(this.zone), (0, mo.p)(1e3), (0, Fo.V)(12e4), (0, z.U)(cs => (this.ngrxStore.dispatch(new Ye.dY({
                        percentage: this.getPercentage(cs),
                        status: "downloading"
                    })), cs)))])
                }), (0, re.zg)(([ve, be]) => (this.gameService.setProperty(ve.game.id, "version", ve.remoteVersion), this.gameService.setProperty(ve.game.id, "status", "downloaded"), [new Ye.yn({
                    game: ve.game,
                    fileName: ve.fileName,
                    installPath: ve.installPath,
                    localVersion: ve.localVersion,
                    remoteVersion: ve.remoteVersion
                })])), (0, xe.K)((ve, be) => (console.error(ve), this.ngrxStore.dispatch(new Ye.c7({error: ve})), be))))
            }

            getBasicAuthToken() {
                const a = this.authService.getUserId(), M = this.authService.getGameSessionTicket();
                return this.gameApi.get(`/user/${a}/build?session=${M}`).pipe((0, z.U)(F => F.basic_auth))
            }

            getPercentage(a) {
                return a ? Math.round(100 * a.bytesCompleted / a.bytesTotal) : 0
            }

            getFileName(a, M) {
                return "win32" === window.bridge.platform() ? "gods_" + M + a.extensions.windows : "gods_" + M + a.extensions.osx
            }

            showTutorialModal() {
                this.cerberusModalService.open(js).result.then(F => {
                }, F => {
                })
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.LFG(ae.eX), s.LFG(me.yh), s.LFG(Ne.Ft), s.LFG(Z.mI), s.LFG(Co.MZ), s.LFG(R.hM), s.LFG(ns.b5), s.LFG(s.R0b), s.LFG(Ve.F), s.LFG(xs.Qz))
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac}), m
    })();
    const Ks = {
        gameBuild: {isUpdateRequired: !1, percentage: 0, status: "idle"},
        gameAssets: {isUpdateRequired: !1, percentage: 0, status: "idle"}
    };

    function So(m, D) {
        switch (D.type) {
            case Ye.gK.GAME_BUILD_DOWNLOAD_CHECK:
                return Object.assign(Object.assign({}, m), {gameBuild: Object.assign(Object.assign({}, m.gameBuild), {isUpdateRequired: D.payload.isUpdateRequired})});
            case Ye.gK.GAME_BUILD_DOWNLOAD_PROGRESS:
                return Object.assign(Object.assign({}, m), {
                    gameBuild: Object.assign(Object.assign({}, m.gameBuild), {
                        percentage: D.payload.percentage,
                        status: D.payload.status
                    })
                });
            case Ye.gK.GAME_BUILD_DOWNLOAD_SUCCESS:
                return Object.assign(Object.assign({}, m), {
                    gameBuild: Object.assign(Object.assign({}, m.gameBuild), {
                        isUpdateRequired: !1,
                        status: "completed",
                        percentage: 100
                    })
                });
            case Ye.gK.GAME_BUILD_DOWNLOAD_UPDATE_STATUS:
                return Object.assign(Object.assign({}, m), {
                    gameBuild: Object.assign(Object.assign({}, m.gameBuild), {
                        isUpdateRequired: m.gameBuild.isUpdateRequired,
                        status: D.payload.status,
                        percentage: m.gameBuild.percentage
                    })
                });
            case Ye.gK.GAME_BUILD_DOWNLOAD_ERROR:
                return Object.assign(Object.assign({}, m), {
                    gameBuild: Object.assign(Object.assign({}, m.gameBuild), {
                        isUpdateRequired: m.gameBuild.isUpdateRequired,
                        status: "error",
                        percentage: m.gameBuild.percentage
                    })
                });
            case Ye.gK.GAME_ASSETS_DOWNLOAD_CHECK:
                return Object.assign(Object.assign({}, m), {gameAssets: Object.assign(Object.assign({}, m.gameAssets), {isUpdateRequired: D.payload.isUpdateRequired})});
            case Ye.gK.GAME_ASSETS_DOWNLOAD_PROGRESS:
                return Object.assign(Object.assign({}, m), {
                    gameAssets: Object.assign(Object.assign({}, m.gameAssets), {
                        percentage: D.payload.percentage,
                        status: D.payload.status
                    })
                });
            case Ye.gK.GAME_ASSETS_DOWNLOAD_SUCCESS:
                return Object.assign(Object.assign({}, m), {
                    gameAssets: Object.assign(Object.assign({}, m.gameAssets), {
                        isUpdateRequired: !1,
                        status: "completed",
                        percentage: 100
                    })
                });
            case Ye.gK.GAME_ASSETS_DOWNLOAD_UPDATE_STATUS:
                return Object.assign(Object.assign({}, m), {
                    gameAssets: Object.assign(Object.assign({}, m.gameAssets), {
                        isUpdateRequired: m.gameAssets.isUpdateRequired,
                        status: D.payload.status,
                        percentage: D.payload.percentage
                    })
                });
            case Ye.gK.GAME_ASSETS_DOWNLOAD_ERROR:
                return Object.assign(Object.assign({}, m), {
                    gameAssets: Object.assign(Object.assign({}, m.gameAssets), {
                        isUpdateRequired: m.gameAssets.isUpdateRequired,
                        status: "error",
                        percentage: m.gameAssets.percentage
                    })
                });
            default:
                return m
        }
    }

    let Po = (() => {
        class m {
            constructor() {
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac}), m
    })();
    var Ss = o(56302);
    const Qs = {wallet: null, user: null};
    (0, me.ZF)("account");
    var Yt = (() => {
        return (m = Yt || (Yt = {})).INIT_WALLET = "[App] Initialize Wallet", m.INIT_METAMASK = "[App] Initialize MetaMask", m.UPDATE_STORE = "[App] Update Store", m.UPDATE_MARKETPRICE_ETH = "[App] Update Market Price of Ether", Yt;
        var m
    })();
    const ps = {
        app: function Ps(m, D) {
            switch (D.type) {
                case Yt.INIT_WALLET:
                case Yt.INIT_METAMASK:
                    return Object.assign({}, m);
                default:
                    return m
            }
        }, router: ce.mg, account: function ko(m = Qs, D) {
            switch (D.type) {
                case Ss.X8.FETCH_USER_ACCOUNT_SUCCESS:
                    return Object.assign(Object.assign({}, m), {user: D.payload.accountData});
                case Ss.X8.FETCH_USER_WALLET_SUCCESS:
                    return Object.assign(Object.assign({}, m), {wallet: D.payload.walletData});
                case Ss.X8.UPDATE_USER_ETH_BALANCE:
                    return Object.assign(Object.assign({}, m), {wallet: Object.assign(Object.assign({}, m.wallet), {ethBalance: D.payload.balance})});
                default:
                    return m
            }
        }
    }, ks = [], ls = "reCaptchaOnloadCallback";
    let Ho = (() => {
        class m {
            constructor(a) {
                this.http = a, this.$loaded = new y.X(!1), this.registerOnloadCallback(), this.load()
            }

            registerOnloadCallback() {
                window[ls] = () => {
                    const a = "g-recpatcha";
                    this.addWidget(a), this.renderWidget(a), this.$loaded.next(!0)
                }
            }

            addWidget(a) {
                const M = document.createElement("div");
                M.id = a, M.style.visibility = "hidden", document.body.appendChild(M)
            }

            renderWidget(a) {
                this.grecaptcha().render(a, {
                    sitekey: Be.N.recaptchaPublicSiteKeyV3,
                    size: "invisible",
                    callback: () => {
                    }
                })
            }

            load() {
                return this.$loaded.getValue() || this.addScriptTag(), this.$loaded.asObservable()
            }

            addScriptTag() {
                const a = document.body, M = this.createScriptTag();
                a.appendChild(M)
            }

            createScriptTag() {
                const a = document.createElement("script");
                return a.innerHTML = "", a.src = this.getScriptSrc(), a.async = !0, a.defer = !0, a
            }

            getScriptSrc() {
                let a = "https://www.recaptcha.net/recaptcha/api.js";
                return a += "?onload=" + ls, a += "&render=" + Be.N.recaptchaPublicSiteKeyV3, a
            }

            execute(a) {
                return (0, _.D)(this.grecaptcha().execute({action: a}))
            }

            grecaptcha() {
                return window.grecaptcha
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.LFG(le.eN))
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
    })(), V = (() => {
        class m {
            constructor() {
                this.dataStore = {headerOptions: []}, this._headerOptions$ = new y.X([])
            }

            get headerOptions$() {
                return this._headerOptions$.asObservable()
            }

            _emit() {
                this._headerOptions$.next(Object.assign({}, this.dataStore).headerOptions)
            }

            update(a) {
                this.dataStore.headerOptions = a, this._emit()
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac, providedIn: "root"}), m
    })();
    var u = o(24058), A = o(61737), Q = o(77604);
    let fe = (() => {
        class m {
            constructor(a) {
                this.auth = a, this.isRefreshingToken = !1, this.tokenSubject = new y.X(null)
            }

            addToken(a, M) {
                return a.clone({setHeaders: {Authorization: "Bearer " + M}})
            }

            intercept(a, M) {
                const F = this.auth.getAuthToken();
                return M.handle(this.addToken(a, F ? F.access : null)).pipe((0, xe.K)(De => {
                    if (De instanceof le.UA) switch (De.status) {
                        case 400:
                            return this.badRequest(De);
                        case 401:
                            if (-1 == a.url.indexOf("login")) {
                                if (-1 == a.url.indexOf("refresh")) return this.unauthorized(a, M);
                                this.auth.logout()
                            }
                    }
                    return (0, A._)(De)
                }))
            }

            badRequest(a) {
                return a && 400 === a.status && a.error && "invalid_grant" === a.error.error ? (this.auth.logout(), null) : (0, A._)(a)
            }

            unauthorized(a, M) {
                return this.isRefreshingToken ? this.tokenSubject.pipe((0, Ge.h)(F => null != F), (0, pt.q)(1), (0, re.VS)(F => M.handle(this.addToken(a, F)))) : (this.isRefreshingToken = !0, this.tokenSubject.next(null), this.auth.refreshToken().pipe((0, re.VS)(F => F && F.refresh ? this.auth.saveAccount(F, this.auth.isRemembering, 1).pipe((0, Q.h)(F)) : (this.auth.logout(), (0, e.of)())), (0, re.VS)(F => (this.tokenSubject.next(F.access), M.handle(this.addToken(a, F.access)))), (0, xe.K)(F => (0, A._)("unauthorized")), (0, ct.x)(() => {
                    this.isRefreshingToken = !1
                })))
            }
        }

        return m.\u0275fac = function (a) {
            return new (a || m)(s.LFG(Z.mI))
        }, m.\u0275prov = s.Yz7({token: m, factory: m.\u0275fac}), m
    })();
    var it, st = o(49757);
    let ut = [Ne.LE, {provide: Window, useValue: window}, {
        provide: s.ip1,
        useFactory: m => () => m.loadConfigurations().toPromise(),
        multi: !0,
        deps: [Ne.LE]
    }, {provide: le.TP, useClass: fe, multi: !0}, {provide: ce.GC, useClass: $e}, {
        provide: Z.B3,
        useClass: Be.N.envClasses.featureFlagsService
    }, {provide: Z.mI, useClass: Be.N.envClasses.authService}, {
        provide: Z.qy,
        useClass: Be.N.envClasses.storageService
    }, {provide: Z.ux, useClass: Be.N.envClasses.ethService}, {
        provide: Z.LI,
        useClass: Be.N.envClasses.authHostService
    }, {provide: Z.eQ, useClass: Be.N.envClasses.assetsService}, {
        provide: Z.pk,
        useClass: Be.N.envClasses.audioService
    }, u.m, J.x0, Ve.F, Ne.Ho, Ne.n2, Ne.dK, Ro.D, V, Bt._, Et, Ho, Ne.fY, Bo.$z];
    (null === (it = Be.N.sentry) || void 0 === it ? void 0 : it.dsn) && (ut = [...ut, ...function ue() {
        return [{provide: s.qLn, useValue: Le.v({showDialog: !1})}, {provide: Oe.aN, deps: [H.F0]}, {
            provide: s.ip1,
            useFactory: (m, D) => () => D.init(),
            deps: [Oe.aN, _e],
            multi: !0
        }]
    }()]);
    let Pe = (() => {
        class m {
        }

        return m.\u0275fac = function (a) {
            return new (a || m)
        }, m.\u0275mod = s.oAB({type: m, bootstrap: [Mt]}), m.\u0275inj = s.cJS({
            providers: ut,
            imports: [[X.u5, le.JF, Uo, X.UX, Se.PW, c.b2, st.m.forRoot(), me.Aw.forRoot(ps, {metaReducers: ks}), ce.Qi.forRoot(bt), Be.N.production ? [] : N.FT.instrument(), ae.sQ.forRoot([Po]), me.Aw.forFeature("gameResources", So, {initialState: Ks}), ae.sQ.forFeature([xo]), ht.ic, je, Y.j]]
        }), m
    })();
    var ze;
    if (Be.N.production && ((0, s.G48)(), null === (ze = Be.N.sentry) || void 0 === ze ? void 0 : ze.dsn)) {
        const {buildNumber: m} = x;
        $.S({
            release: `gu-cerberus@0.13.3+${m}`,
            environment: Be.N.production ? "production" : "staging",
            dsn: Be.N.sentry.dsn,
            integrations: [],
            tracesSampleRate: Be.N.sentry.tracesSampleRate || 0
        })
    }
    c.q6().bootstrapModule(Pe).catch(m => console.error(m))
}, 12751
:
(se, B, o) => {
    "use strict";
    o(10609), window.process = {env: {DEBUG: void 0}}, window.global = window, global.Buffer = o(93172).Buffer, global.process = o(35736)
}, 73307
:
(se, B, o) => {
    "use strict";
    o.d(B, {
        Ho: () => i,
        mI: () => y,
        ux: () => e,
        qy: () => p,
        LI: () => r,
        eQ: () => t,
        pk: () => n,
        Hd: () => v,
        B3: () => P
    });
    var c = o(5e3);
    const i = new c.OlP("environment-settings"), y = new c.OlP("i-auth-service"), e = new c.OlP("i-eth-service"),
        p = (new c.OlP("i-cards-service"), new c.OlP("i-storage-service")),
        r = (new c.OlP("i-modal-service"), new c.OlP("i-auth-host-service")), t = new c.OlP("i-assets-service"),
        n = new c.OlP("i-audio-service"), v = new c.OlP("i-launchdarkly-client"),
        P = new c.OlP("i-feature-flag-service");
    new c.OlP("i-deck-code-service"), new c.OlP("apollo-token"), new c.OlP("user_id"), new c.OlP("game-status")
}, 51649
:
(se, B, o) => {
    "use strict";
    o.d(B, {R: () => r, E: () => t});
    var c = o(39017), i = o(61737), y = o(36053), e = o(72986), _ = o(24850), p = o(5e3), g = o(69439);
    const r = new p.OlP("deck-code-service");
    let t = (() => {
        class n {
            constructor(P) {
                this.cardsService = P
            }

            decodeDeckCode(P) {
                let w, L, T;
                try {
                    ({domain: w, formatCode: L, libraryIds: T} = (0, c.Jx)(P))
                } catch (b) {
                    return (0, i._)(b)
                }
                return (0, y.aj)([this.cardsService.protoCards$, this.cardsService.inventory$]).pipe((0, e.q)(1), (0, _.U)(([b, O]) => {
                    const {ownedCards: k, unownedProtos: C} = this.buildFromInventory(b, O, w, T, L);
                    return {ownedCards: k, unownedProtos: C, domain: w, formatCode: L}
                }))
            }

            validateProtos(P, w, L) {
                if (w.length > 30) throw new Error("Too many cards in the deck.");
                if (L.length !== w.length) throw new Error("One or more cards in your deck are not valid.");
                w.forEach(T => {
                    const b = P.get(T), O = w.filter(k => k === T).length;
                    if (O > 2 || ("legendary" === b.rarity || "mythic" === b.rarity) && O > 1) throw new Error("There are too many copies of one or more cards in your deck.")
                })
            }

            buildFromInventory(P, w, L, T, b) {
                const O = this.getProtos(T, P, L);
                this.validateProtos(P, O, T);
                const {ownedCards: k, unownedProtos: C} = this.convertToOwnedUnowned(O, w, P);
                return {ownedCards: k, unownedProtos: C, domain: L, formatCode: b}
            }

            convertToOwnedUnowned(P, w, L) {
                const T = [], b = [];
                return P.forEach(O => {
                    const k = w[O];
                    if (!k || !k.length) return void b.push(O);
                    const $ = [...k].sort((s, h) => s.q - h.q).filter(s => !T.map(h => h.id).includes(s.id));
                    if ($ && $.length) {
                        const s = {proto: O, quality: $[0].q, id: $[0].id, protoCard: L.get(O)};
                        T.push(s)
                    } else b.push(O)
                }), {ownedCards: T, unownedProtos: this.sortProtos(b, L)}
            }

            sortProtos(P, w) {
                return [...P.map(k => w.get(k))].sort((k, C) => k.name < C.name ? -1 : 1).sort((k, C) => k.mana - C.mana).map(k => k.proto)
            }

            getProtos(P, w, L) {
                const T = [];
                return w.forEach((b, O) => {
                    if ("neutral" !== b.god && b.god !== L) return;
                    const k = P.filter(C => C === b.lib_id).length;
                    for (let C = 0; C < k; C++) T.push(O)
                }), T
            }

            encodeDeck(P, w) {
                return (0, c.cv)(P, w)
            }
        }

        return n.\u0275fac = function (P) {
            return new (P || n)(p.LFG(g.d))
        }, n.\u0275prov = p.Yz7({token: n, factory: n.\u0275fac, providedIn: "root"}), n
    })()
}, 26982
:
(se, B, o) => {
    "use strict";
    o.d(B, {Rl: () => c.Rl});
    var c = o(39029), i = o(70655), e = (o(61517), o(32830)), _ = o(86041), p = o(56418), g = o(65171), r = o(80102),
        t = o(26532), n = o(65281);
    let v = class extends e.oi {
        constructor() {
            super(...arguments), this.closable = !0
        }

        static get styles() {
            return e.iv`
      :host {
        width: 100%;
        display: flex;
        position: fixed;
        background-color: rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.dark[900]))}, 0.8);
      }

      .closeIcon {
        position: absolute;
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        top: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        right: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        cursor: pointer;
        z-index: 1;
      }
    `
        }

        close() {
            this.dispatchEvent(new CustomEvent("onCloseAnnounceBanner", {bubbles: !1}))
        }

        render() {
            return e.dy`
      ${this.closable ? e.dy`<gu-icon
            fillColor="colors.apocyan.300"
            iconLigature="close_x"
            class="closeIcon"
            @click="${this.close}"
            data-test-id="announce-banner-close-icon"
          ></gu-icon>` : ""}

      <slot></slot>
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: Boolean})], v.prototype, "closable", void 0), v = (0, i.gn)([(0, _.M)("gu-announce-banner-template")], v);
    var P = o(47925);
    let w = class extends e.oi {
        constructor() {
            super(...arguments), this.responsiveSize = []
        }

        static get properties() {
            return {top: {type: String}, bottom: {type: String}, both: {type: String}, responsiveSize: {type: Array}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        margin-top: var(--marginTop);
        margin-bottom: var(--marginBottom);
      }
    `
        }

        pickMarginValue(l, E) {
            return l ? n.measurements.spacingAmountMapping[l] : E ? n.measurements.spacingAmountMapping[E] : 0
        }

        generateVariablesAndMediaQueries() {
            const l = this.pickMarginValue(this.both, this.top), E = this.pickMarginValue(this.both, this.bottom);
            return e.dy`
      <style>

        /* DEFINE BASE SIZING */
        ${(0, t.asCssProp)(`\n          :host {\n            --marginTop: ${l};\n            --marginBottom: ${E};\n          }\n        `)}

        /* DEFINE RESPONSIVE SIZING */
        ${this.responsiveSize.map(({breakpoint: j, topSize: oe, bottomSize: Ee, bothSize: Re}) => {
                const Je = this.pickMarginValue(Re, oe), xt = this.pickMarginValue(Re, Ee);
                return e.iv`
            @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping[j])}) {
              :host {
                ${(0, t.asCssProp)(Je ? `--marginTop: ${Je};` : "")}
                ${(0, t.asCssProp)(xt ? `--marginBottom: ${xt};` : "")}
              }
            }
          `
            })}
      </style>
    `
        }

        render() {
            return e.dy`
      ${this.generateVariablesAndMediaQueries()}
      <slot></slot>
    `
        }
    };
    w = (0, i.gn)([(0, _.M)("gu-vertical-space")], w), o(11015);
    let T = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        width: 100%;
        height: 100vh;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          Gods Unchained is currently offline while we resolve issues affecting the launcher. We’ll be back online
          shortly.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    T = (0, i.gn)([(0, _.M)("gu-outage-banner")], T);
    let b = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        width: 100%;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          Due to ongoing issues, Weekend Ranked will not run this weekend. It will resume the following weekend for a
          special double rewards event.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    b = (0, i.gn)([(0, _.M)("gu-ranked-weekend-cancelled-banner")], b);
    let O = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
      }

      .layout {
        display: flex;
        align-items: flex-start;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        width: 100%;
        justify-content: center;
      }

      .layout__text {
        max-width: 600px;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="layout" both="2x-large">
        <gu-paragraph-text class="layout__text" kind="large" align="center" fillColor="colors.light.300">
          <strong>WEEKEND RANKED IS POSTPONED<strong>
          <br />
          Due to a critical issue, the Weekend Ranked event has been cancelled. Next event will yield double rewards as a result.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    O = (0, i.gn)([(0, _.M)("gu-maintenance-banner")], O);
    var k = o(38872), C = o(98539);
    let $ = class extends e.oi {
        constructor() {
            super(...arguments), this.overlay = !1, this.reveal = !1, this.imageLoader = new Image, this.isLoading = !1
        }

        static get styles() {
            return e.iv`
      :host {
        width: 100vw;
        height: 100vh;
        position: fixed;
        z-index: -10;
        background-position: center center;
        background-size: cover;
      }

      .backdrop__image,
      .backdrop__overlay {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        display: block;
        border: none;
      }

      .backdrop__image {
        background-position: center center;
        background-size: cover;
        transition: opacity ease-in-out 0.5s;
      }

      :host(.loading) .backdrop__image {
        opacity: 0;
        transition: none;
      }

      .backdrop__overlay {
        z-index: 1;
        background: linear-gradient(
          0deg,
          rgba(10, 10, 10, 0.9) 0%,
          rgba(10, 10, 10, 0.5) 51.49%,
          rgba(10, 10, 10, 0.25) 77.04%,
          rgba(10, 10, 10, 0.75) 100%
        );
        mix-blend-mode: normal;
        opacity: 0.75;
      }

      .backdrop__overlay--reveal {
        animation: backdropFade 3s forwards;
      }

      @keyframes backdropFade {
        from {
          background-color: rgba(0, 0, 0, 1);
          opacity: 1;
        }
        to {
          background-color: rgba(0, 0, 0, 0);
          opacity: 0.75;
        }
      }
    `
        }

        updated(l) {
            super.updated(l), l.has("image") && this.image && (this.imageLoader.src = `/assets/images/backdrops/${this.image}`, !this.isLoading && (this.isLoading = !0, (0, r.waitForImageToLoad)(this.imageLoader).then(() => {
                requestAnimationFrame(() => {
                    this.classList.add("loading"), this.style.backgroundImage = this.imageElement.style.backgroundImage, this.imageElement.style.backgroundImage = `url(/assets/images/backdrops/${this.image})`, this.isLoading = !1, requestAnimationFrame(() => {
                        this.dispatchEvent(new CustomEvent("image-changed", {
                            detail: this.image,
                            bubbles: !1,
                            composed: !1
                        })), this.classList.remove("loading")
                    })
                })
            })))
        }

        renderBackdrop() {
            return this.image ? e.dy` <div class="backdrop__image" /> ` : e.dy``
        }

        renderOverlay() {
            return this.overlay ? e.dy`
      <div class="${(0, C.$)({backdrop__overlay: !0, "backdrop__overlay--reveal": this.reveal})}"></div>
    ` : e.dy``
        }

        render() {
            return e.dy` ${this.renderBackdrop()} ${this.renderOverlay()} `
        }
    };
    (0, i.gn)([(0, p.C)()], $.prototype, "image", void 0), (0, i.gn)([(0, p.C)()], $.prototype, "overlay", void 0), (0, i.gn)([(0, p.C)()], $.prototype, "reveal", void 0), (0, i.gn)([(0, k.I)(".backdrop__image")], $.prototype, "imageElement", void 0), $ = (0, i.gn)([(0, _.M)("gu-backdrop")], $);
    var s = o(14879), I = (o(89534), o(51256), o(72650)), Y = o(93270), ae = o(40010);
    const le = e.iv`
  ${ae.W2}

  /* host element establishes 1px outline */
  :host {
    background: ${(0, t.asCssProp)(n.colors.dark[500])};
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  /* golden border */
  :host::before {
    ${(0, t.inset)(1)}
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
    z-index: 1;
  }

  /* inner outline */
  :host::after {
    position: absolute;
    content: ' ';
    ${(0, t.inset)(5, 6)}
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
    z-index: 2;
  }

  /* button content and inner brackground */
  :host .button__content {
    position: absolute;
    ${(0, t.inset)(7, 8)}
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
    z-index: 3;
  }

  .button__icon,
  .button__text {
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .button__icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5.5))};
  }

  .button__text {
    line-height: ${(0, t.asCssProp)("48px")};
  }

  /* Default style */

  :host([type='default'])::before {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='default'])::after {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host([type='default']) .button__icon,
  :host([type='default']) .button__text {
    background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='default']:hover) .button__content,
  :host([type='default']:active) .button__content {
    background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='default']:hover) .button__text,
  :host([type='default']:hover) .button__icon,
  :host([type='default']:active) .button__text,
  :host([type='default']:active) .button__icon {
    background-image: none;
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  /* Inverted style */

  :host([type='inverted'])::before {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='inverted'])::after {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host([type='inverted']) .button__content {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host([type='inverted']) .button__text,
  :host([type='inverted']) .button__icon {
    background-image: none;
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='inverted']:hover) .button__content,
  :host([type='inverted']:active) .button__content {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='inverted']:hover) .button__text,
  :host([type='inverted']:hover) .button__icon,
  :host([type='inverted']:active) .button__text,
  :host([type='inverted']:active) .button__icon {
    background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  /* Flat silver style */

  :host([type='silver'])::before {
    background: ${(0, t.asCssProp)(n.colors.light[500])};
  }

  :host([type='silver'])::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='silver']) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.light[500])};
  }

  :host([type='silver']:hover) .button__content,
  :host([type='silver']:active) .button__content {
    background-color: ${(0, t.asCssProp)(n.colors.light[500])};
  }

  :host([type='silver']:hover) .button__text,
  :host([type='silver']:active) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='silver']:active)::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    opacity: 0.2;
  }

  /* Flat gold style */

  :host([type='gold'])::before {
    background: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='gold'])::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='gold']) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='gold']:hover) .button__content,
  :host([type='gold']:active) .button__content {
    background-color: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='gold']:hover) .button__text,
  :host([type='gold']:active) .button__text {
    background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host([type='gold']:active)::after {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    opacity: 0.2;
  }
`;

    class X extends s.o {
        constructor() {
            super(...arguments), this.type = "default"
        }

        static get styles() {
            return le
        }

        renderText() {
            return e.dy`
      <gu-heading-text class="button__text" size="2x-small">
        <slot></slot>
      </gu-heading-text>
    `
        }
    }

    (0, i.gn)([(0, p.C)({reflect: !0})], X.prototype, "type", void 0), customElements.define("gu-gilded-hex-button", (0, I.b)((0, Y.Z)(X))), o(43977);
    let Z = class extends e.oi {
        constructor() {
            super(...arguments), this.gap = 16, this.layout = "centered", this.visible = !0, this.layouts = {
                centered: "center",
                justified: "space-between"
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        justify-content: var(--layout, center);
        align-items: center;
        gap: var(--gap, 16px);
      }

      ${(0, t.asCssProp)((0, t.fadeReveal)(":host", ":host(.visible)"))}
    `
        }

        render() {
            return this.classList.toggle("visible", this.visible), this.style.setProperty("--gap", `${this.gap}px`), this.style.setProperty("--layout", this.layouts[this.layout]), e.dy`<slot></slot>`
        }
    };
    (0, i.gn)([(0, p.C)()], Z.prototype, "gap", void 0), (0, i.gn)([(0, p.C)()], Z.prototype, "layout", void 0), (0, i.gn)([(0, p.C)()], Z.prototype, "visible", void 0), Z = (0, i.gn)([(0, _.M)("gu-button-group")], Z), o(1949);
    var _e = o(26711);
    const Le = e.iv`
  :host {
    display: inline-flex;
    position: relative;
    min-width: var(--gu-button-min-width);
    height: var(--gu-button-height);
    line-height: var(--gu-button-height);

    --gu-button-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
    --gu-button-border-width: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
    --gu-button-min-width: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
    --gu-button-height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
    --gu-button-padding-x: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    --gu-button-margin: 0px;
    --gu-button-disabled-color: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    --gu-button-font-family: 'Open Sans', sans-serif;
    --gu-button-text-transform: inherit;
    --gu-button-text-shadow: 0px 1px 1px rgba(0, 0, 0, 0.3);
  }

  :host([theme='dark']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(n.colors.dark[900])};
    --gu-button-secondary-text-shadow: none;

    --gu-button-subtle-background-color: ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-subtle-background-color-hover: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-button-subtle-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[700])};
    --gu-button-subtle-border-color-hover: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-button-subtle-color: ${(0, t.asCssProp)(n.colors.light[700])};
    --gu-button-subtle-color-hover: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-subtle-text-shadow: var(--gu-button-text-shadow);

    --gu-button-danger-background-color: ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-background-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-border-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-text-shadow: var(--gu-button-text-shadow);
  }

  :host([theme='light']) {
    --gu-button-primary-background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-background-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.apocyan[500])};
    --gu-button-primary-border-color-hover: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    --gu-button-primary-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-secondary-background-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-border-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-color: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-secondary-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-secondary-text-shadow: none;

    --gu-button-subtle-background-color: ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-subtle-background-color-hover: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-subtle-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-subtle-border-color-hover: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-subtle-color: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-subtle-color-hover: ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-button-subtle-text-shadow: none;

    --gu-button-danger-background-color: ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-background-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.god.war.tertiary)};
    --gu-button-danger-border-color-hover: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
    --gu-button-danger-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-color-hover: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-button-danger-text-shadow: var(--gu-button-text-shadow);

    --gu-button-disabled-color: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-disabled-border: hover var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.light[300])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host([theme='gunmetal']) {
    --gu-button-primary-background-color: var(--gu-blue-dark);
    --gu-button-primary-background-color-hover: var(--gu-blue-dark);
    --gu-button-primary-border: var(--gu-button-border-width) solid var(--gu-blue);
    --gu-button-primary-border-color-hover: var(--gu-blue-hover);
    --gu-button-primary-color: var(--gu-blue);
    --gu-button-primary-color-hover: var(--gu-blue-hover);
    --gu-button-primary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-secondary-background-color: var(--gu-blue-dark);
    --gu-button-secondary-background-color-hover: var(--gu-blue-dark);
    --gu-button-secondary-border: var(--gu-button-border-width) solid var(--gu-blue);
    --gu-button-secondary-border-color-hover: var(--gu-blue-hover);
    --gu-button-secondary-color: var(--gu-blue);
    --gu-button-secondary-color-hover: var(--gu-blue-hover);
    --gu-button-secondary-text-shadow: var(--gu-button-text-shadow);

    --gu-button-disabled-color: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-disabled-border: var(--gu-button-border-width) solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    --gu-button-disabled-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  .standard-button {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    line-height: var(--gu-button-height);
    font-size: var(--gu-button-font-size);
    font-family: var(--gu-button-font-family);
    font-weight: 700;
    color: var(--gu-button-color);
    border-radius: var(--gu-button-border-radius);
    padding: 0px var(--gu-button-padding-x);
    margin: var(--gu-button-margin);
    min-width: calc(var(--gu-button-min-width) - var(--gu-button-padding-x));
    z-index: 3;
    text-decoration-line: none;
    flex-grow: 1;
  }

  .standard-button__loader {
    display: flex;
    align-items: center;
    justify-content: center;
    position: absolute;
    z-index: 1;
    top: 0px;
    left: 0px;
    width: 100%;
    height: 100%;
    border-radius: var(--gu-button-border-radius);
  }

  .standard-button__icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
  }

  .standard-button--icon-right .standard-button__icon {
    order: 1;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
    margin-right: 0px;
  }

  .standard-button--icon-only .standard-button__icon {
    position: absolute;
    left: 50%;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(-2))};
    margin-right: 0px;
  }

  .standard-button--primary {
    background-color: var(--gu-button-primary-background-color);
    border: var(--gu-button-primary-border);
    color: var(--gu-button-primary-color);
    text-shadow: var(--gu-button-primary-text-shadow);
  }
  .standard-button--primary .standard-button__loader {
    background-color: var(--gu-button-primary-background-color);
  }

  .standard-button--secondary {
    background-color: var(--gu-button-secondary-background-color);
    border: var(--gu-button-secondary-border);
    color: var(--gu-button-secondary-color);
    text-shadow: var(--gu-button-secondary-text-shadow);
  }
  .standard-button--secondary .standard-button__loader {
    background-color: var(--gu-button-secondary-background-color);
  }

  .standard-button--subtle {
    background-color: var(--gu-button-subtle-background-color);
    border: var(--gu-button-subtle-border);
    color: var(--gu-button-subtle-color);
    text-shadow: var(--gu-button-subtle-text-shadow);
  }
  .standard-button--subtle .standard-button__loader {
    background-color: var(--gu-button-subtle-background-color);
  }

  .standard-button--danger {
    background-color: var(--gu-button-danger-background-color);
    border: var(--gu-button-danger-border);
    color: var(--gu-button-danger-color);
    text-shadow: var(--gu-button-danger-text-shadow);
  }
  .standard-button--danger .standard-button__loader {
    background-color: var(--gu-button-danger-background-color);
  }

  /* Hover states
    ----------------------------------------------------------------------------------- */
  .standard-button--primary:hover {
    background-color: var(--gu-button-primary-background-color-hover);
    border-color: var(--gu-button-primary-border-color-hover);
    color: var(--gu-button-primary-color-hover);
  }
  .standard-button--secondary:hover {
    background-color: var(--gu-button-secondary-background-color-hover);
    border-color: var(--gu-button-secondary-border-color-hover);
    color: var(--gu-button-secondary-color-hover);
  }

  :host([theme='light']) .standard-button--secondary:hover {
    text-shadow: var(--gu-button-text-shadow);
  }

  .standard-button--subtle:hover {
    background-color: var(--gu-button-subtle-background-color-hover);
    border-color: var(--gu-button-subtle-border-color-hover);
    color: var(--gu-button-subtle-color-hover);
  }
  .standard-button--danger:hover {
    background-color: var(--gu-button-danger-background-color-hover);
    border-color: var(--gu-button-danger-border-color-hover);
    color: var(--gu-button-danger-color-hover);
  }

  /* Active states
    ----------------------------------------------------------------------------------- */
  :host([theme='light']) .standard-button:active > * {
    opacity: 0.7;
  }

  :host([theme='dark']) .standard-button:active > * {
    opacity: 0.7;
  }

  :host([theme='gunmetal']) .standard-button:active {
    box-shadow: inset 0px 2px 6px rgba(0, 0, 0, 0.75);
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */

  :host([expand='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }
  :host([expand='true']) .standard-button {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Disabled and Loading states
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']) .standard-button {
    color: var(--gu-button-disabled-color);
    border: var(--gu-button-disabled-border);
    background-color: var(--gu-button-disabled-background-color);
    text-shadow: none;
  }

  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
  }

  /* Icon coloring rules
    ----------------------------------------------------------------------------------- */
  :host(.standard-button-icon-success) gu-icon {
    --textFillColor: ${(0, t.asCssProp)(n.colors.apocyan[500])};
  }
`;
    let Oe = class extends e.oi {
        constructor() {
            super(...arguments), this.loading = !1, this.disabled = !1, this.expand = !1, this.iconPosition = "left", this.iconOnly = !1, this.type = "primary", this.theme = "light"
        }

        static get styles() {
            return Le
        }

        renderIcon() {
            return this.icon ? e.dy`<gu-icon iconLigature=${this.icon} class="standard-button__icon"></gu-icon>` : e.dy``
        }

        renderLoader() {
            return !this.loading || this.disabled ? e.dy`` : e.dy` <div class="standard-button__loader">
      <gu-rectangular-spinner color="grey"></gu-rectangular-spinner>
    </div>`
        }

        getClassMap() {
            return {
                "standard-button": !0,
                "standard-button--icon-only": this.iconOnly,
                [`standard-button--icon-${this.iconPosition}`]: !0,
                [`standard-button--${this.type}`]: !0
            }
        }

        render() {
            return this.href ? e.dy` <a
        ?disabled="${this.disabled}"
        href=${this.href}
        target=${this.target}
        class=${(0, C.$)(this.getClassMap())}
      >
        ${this.renderLoader()} ${this.renderIcon()}
        <div class="standard-button__content">
          <slot data-test-id="standard-button-text-slot"></slot>
        </div>
      </a>` : e.dy` <button ?disabled="${this.disabled}" class=${(0, C.$)(this.getClassMap())}>
        ${this.renderLoader()} ${this.renderIcon()}
        <div class="standard-button__content">
          <slot data-test-id="standard-button-text-slot"></slot>
        </div>
      </button>`
        }
    };
    (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Oe.prototype, "loading", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Oe.prototype, "disabled", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Oe.prototype, "expand", void 0), (0, i.gn)([(0, p.C)()], Oe.prototype, "iconPosition", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Oe.prototype, "iconOnly", void 0), (0, i.gn)([(0, p.C)()], Oe.prototype, "icon", void 0), (0, i.gn)([(0, p.C)({reflect: !0})], Oe.prototype, "type", void 0), (0, i.gn)([(0, p.C)({reflect: !0})], Oe.prototype, "theme", void 0), (0, i.gn)([(0, p.C)()], Oe.prototype, "href", void 0), (0, i.gn)([(0, p.C)()], Oe.prototype, "target", void 0), Oe = (0, i.gn)([(0, _.M)("gu-standard-button")], Oe);
    var H = o(12052), ue = o(25297), K = o(72985), ee = o(58672);
    const pe = {text: {type: String}, href: {type: String}, target: {type: String}},
        ye = Object.assign(Object.assign({}, pe), {
            loading: {type: String},
            loadingColor: {type: String},
            disabled: {type: String},
            icon: {type: String},
            leftIconPosition: {type: Boolean},
            size: {type: String},
            enableSounds: {type: Boolean},
            horizontalStretch: {type: String}
        }), Ce = Object.assign(Object.assign({}, pe), {
            color: {type: String},
            loading: {type: String},
            loadingColor: {type: String},
            disabled: {type: String},
            size: {type: String},
            enableSounds: {type: Boolean},
            horizontalStretch: {type: String}
        });
    var je = o(91418);
    const at = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    cursor: pointer;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    flex-grow: 0;
    height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
  }

  .buttonContent--square {
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
    position: relative;
    z-index: 2;
    order: 1;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
  }

  :host([iconColor]) .buttonContent__icon {
    color: var(--iconColor);
  }

  .buttonContent__text {
    position: relative;
    z-index: 2;
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    order: 1;
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([horizontalStretch='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0 0;
  }

  /* Button content when layout is vertical
    ----------------------------------------------------------------------------------- */
  .buttonContent--vertical {
    flex-direction: column;
    align-items: center;
    min-width: 70px;
    max-width: 80px;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} ${(0, t.asCssProp)((0, r.gridUnits)(3))};
  }

  .buttonContent--vertical .buttonContent__icon {
    order: 0;
    margin: 0;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
  }

  .buttonContent--vertical .buttonContent__text {
    text-align: center;
  }

  :host([backgroundFillColor='colors.apocyan.500']) {
    text-shadow: 0px 1px 1px rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.black))}, 0.3);
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
  }

  :host([disabled='true']) {
    filter: grayscale(100%);
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.gunmetal[300])};
    color: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host(:active) {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.light[300])};
    color: ${(0, t.asCssProp)(n.colors.light[100])};
  }

  :host([borderColorHover]:hover),
  :host([borderColorHover]:hover) ::slotted(*) {
    box-shadow: 0px 0px ${(0, t.asCssProp)((0, r.gridUnits)(1))} var(--borderColorHover);
  }

  ${(0, t.asCssProp)(je.fillColoringRules)}
`, We = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: flex;
    flex-grow: 0;
    justify-self: center;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    overflow: hidden;
    cursor: pointer;
    color: ${(0, t.asCssProp)(n.colors.light[100])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(12, 12))};
    ${(0, t.asCssProp)(n.animation.standardTransition("all"))};

    /* NORMAL SIZING BY DEFAULT */
    min-width: 140px;
    height: ${(0, t.asCssProp)("32px")};
    line-height: ${(0, t.asCssProp)("32px")};
  }

  /* The background "fill" color of the button */
  :host::before {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
    ${(0, t.asCssProp)(n.animation.standardTransition("all"))};
  }

  /* "LARGE" SIZE BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([size='large']) {
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(18, 18))};
  }

  :host([size='large']) .buttonContent {
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  :host([size='large'])::before {
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  :host([size='large']) .buttonContent__icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5.5))};
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([horizontalStretch='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("12px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
    position: relative;
    z-index: 2;
    order: 2;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
  }

  .buttonContent__text {
    position: relative;
    z-index: 2;
    color: inherit;
    text-shadow: 0 calc(var(--vh) * 0.2) calc(var(--vh) * 0.2) rgba(${(0, t.asCssProp)(n.colors.dark[900])}, 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    align-content: center;
    order: 1;
    gap: 8px;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0 0;
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    filter: grayscale(100%);
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))};
  }

  /*  MOUSE-DOWN FX
    ----------------------------------------------------------------------------------- */
  :host(:active)::after {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, t.asCssProp)(n.gradients.apocyan.simple())};
    opacity: 0.2;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(11, 11))};
  }
`, U = e.iv`
  ${We}

  :host {
    color: var(--gu-blue);
    border: solid 1px var(--gu-blue);
    background: var(--gu-blue-dark);
    border-radius: 25px;
  }

  .waveArtwork {
    display: none;
  }

  /* "LARGE" SIZE BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([size='large']) .waveArtwork__side--top {
    height: calc(${(0, t.asCssProp)("48px")} * 1.4);
  }

  :host([size='large']) .waveArtwork__side--bottom {
    height: calc(${(0, t.asCssProp)("48px")} * 2);
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    color: var(--gu-blue-hover);
  }

  :host(:hover)::before,
  :host(:active)::before,
  :host(:active)::after {
    background: var(--gu-blue-dark);
  }

  :host(:hover) .waveArtwork__side {
    opacity: 0.8;
  }
`, te = e.iv`
  ${We}

  :host {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
  }

  :host::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
  }

  :host(:hover)::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }
`, $e = (e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: inline-flex;
    justify-content: flex-start;
    cursor: pointer;
  }

  .buttonText {
    color: ${(0, t.asCssProp)(n.colors.apocyan[100])};
    border-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.apocyan[100])};
    padding-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) .buttonText {
    border-color: ${(0, t.asCssProp)(n.colors.gold[300])};
    color: ${(0, t.asCssProp)(n.colors.gold[300])};
  }
`, e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}
  ${We}

  :host {
    display: flex;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    cursor: pointer;
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
  }

  :host::before {
    background: none;
  }

  .hexLayer {
    position: absolute;
  }

  .outerKeyline {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: ${(0, t.asCssProp)(n.colors.dark[500])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(18, 18))};
  }

  .outerGolden {
    top: 1px;
    bottom: 1px;
    left: 1px;
    right: 1px;
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }

  .innerGunmetal {
    top: 5px;
    bottom: 5px;
    left: 6px;
    right: 6px;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
  }

  .innerButtonFill {
    top: 7px;
    bottom: 7px;
    left: 8px;
    right: 8px;
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  .buttonContent__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    position: relative;
    z-index: 2;
    order: 1;
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5.5))};
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .buttonContent__text {
    display: inline;
    position: relative;
    z-index: 2;
    text-decoration: none;
    line-height: ${(0, t.asCssProp)("48px")};
    order: 1;
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .buttonContent--leftIcon .buttonContent__icon {
    order: 0;
    margin: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0 0;
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) .innerButtonFill,
  :host(:active) .innerButtonFill {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host(:hover) .buttonContent__text,
  :host(:hover) .buttonContent__icon,
  :host(:active) .buttonContent__text,
  :host(:active) .buttonContent__icon {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    background-clip: text;
    -webkit-background-clip: text;
  }

  /*  INVERTED COLORING
  ----------------------------------------------------------------------------------- */
  :host(.invertColoring) .innerButtonFill {
    background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
  }

  :host(.invertColoring) .buttonContent__text,
  :host(.invertColoring) .buttonContent__icon {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    background-clip: text;
    -webkit-background-clip: text;
  }

  /*  INVERTED HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(.invertColoring:hover) .innerButtonFill,
  :host(.invertColoring:active) .innerButtonFill {
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
  }

  :host(.invertColoring:hover) .buttonContent__text,
  :host(.invertColoring:hover) .buttonContent__icon,
  :host(.invertColoring:active) .buttonContent__text,
  :host(.invertColoring:active) .buttonContent__icon {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }
`), dt = n.colors.light[500], Fe = n.colors.gold[500], bt = n.colors.dark[500], Ct = n.colors.dark[900], Tt = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}
  ${We}

  :host {
    display: flex;
    justify-content: center;
    position: relative;
    white-space: nowrap;
    cursor: pointer;
    overflow: hidden;
    cursor: pointer;
    min-width: 180px;
    height: ${(0, t.asCssProp)("48px")};
    line-height: ${(0, t.asCssProp)("48px")};
  }

  :host::before {
    background: none; // fixing the dark bleed in common-hex-button
  }

  .hexLayer {
    position: absolute;
  }

  .outerKeyline {
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    background: ${(0, t.asCssProp)(bt)};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(18, 18))};
  }

  .outer {
    top: 1px;
    bottom: 1px;
    left: 1px;
    right: 1px;
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(17, 17))};
  }
  .outerSilver {
    background-color: ${(0, t.asCssProp)(dt)};
  }
  .outerGold {
    background-color: ${(0, t.asCssProp)(Fe)};
  }

  .innerDark {
    top: 5px;
    bottom: 5px;
    left: 6px;
    right: 6px;
    background: ${(0, t.asCssProp)(n.colors.dark[900])};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(14, 14))};
  }

  .innerButtonFill {
    top: 7px;
    bottom: 7px;
    left: 8px;
    right: 8px;
    background: ${(0, t.asCssProp)(Ct)};
    ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(13, 13))};
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .buttonContent {
    position: relative;
    display: flex;
    justify-content: center;
    padding: 0 calc(${(0, t.asCssProp)("18px")} + ${(0, t.asCssProp)((0, r.gridUnits)(2))});
  }

  .buttonContent__text {
    display: inline;
    position: relative;
    z-index: 2;
    text-decoration: none;
    line-height: ${(0, t.asCssProp)("48px")};
    order: 1;
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }
  .buttonContent__textSilver {
    background-color: ${(0, t.asCssProp)(dt)};
  }
  .buttonContent__textGold {
    background-color: ${(0, t.asCssProp)(Fe)};
  }

  /*  HOVER & MOUSEDOWN FX
  ----------------------------------------------------------------------------------- */
  :host(:hover) .innerButtonFillSilver,
  :host(:active) .innerButtonFillSilver {
    background-color: ${(0, t.asCssProp)(dt)};
  }
  :host(:hover) .innerButtonFillGold,
  :host(:active) .innerButtonFillGold {
    background-color: ${(0, t.asCssProp)(Fe)};
  }

  :host(:hover) .buttonContent__text,
  :host(:active) .buttonContent__text {
    background-color: ${(0, t.asCssProp)(Ct)};
    background-clip: text;
    -webkit-background-clip: text;
  }

  :host(:active)::after {
    background: ${(0, t.asCssProp)(Ct)};
    opacity: 0.2;
  }
`, nt = e.iv`
  ${We}

  :host {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(n.colors.apocyan[100])};
    text-transform: uppercase;
  }

  :host::before {
    display: none;
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }
`;

    function Qe(G, l) {
        return l && "true" !== G ? e.dy` <gu-icon iconLigature=${l} class="buttonContent__icon"></gu-icon> ` : null
    }

    function qe(G, l, E = "grey") {
        return "true" === l ? e.dy`<gu-rectangular-spinner color=${E}></gu-rectangular-spinner>` : G || e.dy` <slot></slot> `
    }

    const Be = e.dy`
  <div class="waveArtwork">
  </div>
`, xe = Object.assign(Object.assign({}, ye), {invertColoring: {type: Boolean}});
    customElements.define("gu-special-hex-button", (0, ee.x)({
        renderer: function re({
                                  text: G,
                                  loading: l,
                                  loadingColor: E,
                                  icon: j,
                                  leftIconPosition: oe,
                                  invertColoring: Ee
                              }) {
            return (0, H.d4)(() => {
                Ee ? this.classList.add("invertColoring") : this.classList.remove("invertColoring")
            }, [Ee]), e.dy` ${(({icon: G, leftIconPosition: l, text: E, loading: j, loadingColor: oe}) => e.dy`
  <i class="hexLayer outerKeyline"></i>
  <i class="hexLayer outerGolden"></i>
  <i class="hexLayer innerGunmetal"></i>
  <i class="hexLayer innerButtonFill"></i>

  <div class=${(0, C.$)({buttonContent: !0, "buttonContent--leftIcon": l})}>
    <gu-heading-text class="buttonContent__text" size="2x-small">
      ${qe(E, j, oe)}
    </gu-heading-text>
    ${Qe(j, G)}
  </div>
`)({text: G, icon: j, loading: l, loadingColor: E, leftIconPosition: oe})} `
        }, baseClass: (0, K.lH)((0, K.Am)((0, K.s)((0, K.Xg)(ue.J)))), props: {properties: xe, styles: $e}
    })), customElements.define("gu-special-hex-flat-button", (0, ee.x)({
        renderer: function Ge({color: G, text: l, loading: E, loadingColor: j}) {
            return e.dy` ${(({color: G, text: l, loading: E, loadingColor: j}) => {
                const oe = G ? G[0].toUpperCase() + G.slice(1) : "Silver";
                return e.dy`
    <i class="hexLayer outerKeyline"></i>
    <i class="hexLayer outer outer${oe}"></i>
    <i class="hexLayer innerDark"></i>
    <i class="hexLayer innerButtonFill innerButtonFill${oe}"></i>

    <div class=${(0, C.$)({buttonContent: !0})}>
      <gu-heading-text class="buttonContent__text buttonContent__text${oe}" size="2x-small">
        ${qe(l, E, j)}
      </gu-heading-text>
    </div>
  `
            })({color: G, text: l, loading: E, loadingColor: j})} `
        }, props: {properties: Ce, styles: Tt}, baseClass: (0, K.Am)((0, K.s)((0, K.Xg)(ue.J)))
    })), customElements.define("gu-primary-hex-button", (0, ee.x)({
        renderer: function z({text: G, loading: l, loadingColor: E, size: j, icon: oe, leftIconPosition: Ee}) {
            return e.dy`
    ${Be} ${(({icon: G, leftIconPosition: l, size: E, text: j, loading: oe, loadingColor: Ee}) => e.dy`
  <div class=${(0, C.$)({buttonContent: !0, "buttonContent--leftIcon": l})}>
    <gu-heading-text class="buttonContent__text" size=${"large" === E ? "2x-small" : "3x-small"}>
      ${qe(j, oe, Ee)}
    </gu-heading-text>
    ${Qe(oe, G)}
  </div>
`)({text: G, icon: oe, size: j, loading: l, loadingColor: E, leftIconPosition: Ee})}
  `
        }, props: {properties: ye, styles: U}, baseClass: (0, K.lH)((0, K.Am)((0, K.s)((0, K.Xg)(ue.J))))
    })), customElements.define("gu-secondary-hex-button", (0, ee.x)({
        renderer: function W({text: G, loading: l, loadingColor: E, icon: j, leftIconPosition: oe}) {
            return e.dy` ${(({icon: G, leftIconPosition: l, text: E, loading: j, loadingColor: oe}) => e.dy`
  <div class=${(0, C.$)({buttonContent: !0, "buttonContent--leftIcon": l})}>
    <gu-simple-text class="buttonContent__text" kind="small">
      ${qe(E, j, oe)}
    </gu-simple-text>
    ${Qe(j, G)}
  </div>
`)({text: G, icon: j, loading: l, loadingColor: E, leftIconPosition: oe})} `
        }, props: {properties: ye, styles: te}, baseClass: (0, K.Am)((0, K.s)((0, K.Xg)(ue.J)))
    })), customElements.define("gu-subtle-hex-button", (0, ee.x)({
        renderer: function d({text: G, loading: l, loadingColor: E, size: j, icon: oe, leftIconPosition: Ee}) {
            return e.dy` ${(({icon: G, leftIconPosition: l, text: E, loading: j, loadingColor: oe, size: Ee}) => e.dy`
  <div class=${(0, C.$)({buttonContent: !0, "buttonContent--leftIcon": l})}>
    <gu-heading-text class="buttonContent__text" size=${"large" === Ee ? "2x-small" : "3x-small"}>
      ${qe(E, j, oe)}
    </gu-heading-text>
    ${Qe(j, G)}
  </div>
`)({text: G, icon: oe, size: j, loading: l, loadingColor: E, leftIconPosition: Ee})} `
        }, props: {properties: ye, styles: nt}, baseClass: (0, K.Am)((0, K.s)((0, K.Xg)(ue.J)))
    }));
    var f = o(5284), R = o(52102);
    const {asCssProp: ne} = f.ZB, {gridUnits: we} = f.dz, Ve = e.iv`
  :host {
    display: inline-flex;
    justify-content: flex-start;
    cursor: pointer;
  }

  :host,
  :host([kind='small']),
  :host([kind='help']) {
    border-bottom: ${ne(we(.25))} solid;
    padding-bottom: ${ne(we(.25))};
  }

  :host([kind='large']) {
    border-bottom: ${ne(we(.5))} solid;
    padding-bottom: ${ne(we(.25))};
  }

  :host([kind='tag']) {
    border-bottom: ${ne(we(.5))} solid;
    padding-bottom: ${ne(we(.25))};
  }

  /*  HOVER FX
    ----------------------------------------------------------------------------------- */
  :host(:hover) {
    border-color: ${ne(n.colors.gold[300])};
    color: ${ne(n.colors.gold[300])};
  }
`;
    let Et = class extends ((0, K.Xg)(R._)) {
        static get styles() {
            const l = [];
            return super.styles && l.push(super.styles), l.push(Ve), l
        }

        static get properties() {
            return Object.assign(Object.assign({}, super.properties), pe)
        }
    };
    Et = (0, i.gn)([(0, _.M)("gu-simple-text-button")], Et);
    const Bt = Object.assign(Object.assign({}, ye), {
        iconColor: {type: String},
        fillColor: {type: String},
        fillColorHover: {type: String},
        fillGradient: {type: String},
        fillGradientTarget: {type: String},
        backgroundFillColor: {type: String},
        backgroundFillColorHover: {type: String},
        backgroundFillGradient: {type: String},
        backgroundFillGradientTarget: {type: String},
        borderColor: {type: String},
        borderColorHover: {type: String},
        verticalLayout: {type: Boolean},
        square: {type: Boolean}
    });
    customElements.define("gu-plain-square-button", (0, ee.x)({
        renderer: function rt({
                                  text: G,
                                  loading: l,
                                  loadingColor: E,
                                  icon: j,
                                  iconColor: oe,
                                  leftIconPosition: Ee,
                                  fillColor: Re,
                                  fillColorHover: Je,
                                  fillGradient: xt,
                                  fillGradientTarget: Xt,
                                  backgroundFillColor: wt,
                                  backgroundFillColorHover: Lt,
                                  backgroundFillGradient: ft,
                                  backgroundFillGradientTarget: Te,
                                  borderColor: Ie,
                                  borderColorHover: Ut,
                                  verticalLayout: Ue,
                                  square: ot
                              }) {
            return (0, H.d4)(() => {
                (0, g.updateColoringVariables)({
                    component: this,
                    iconColor: oe,
                    fillColor: Re,
                    fillColorHover: Je,
                    fillGradient: xt,
                    fillGradientTarget: Xt,
                    backgroundFillColor: wt,
                    backgroundFillColorHover: Lt,
                    backgroundFillGradient: ft,
                    backgroundFillGradientTarget: Te,
                    borderColor: Ie,
                    borderColorHover: Ut
                })
            }, [oe, Re, Je, xt, Xt, wt, Lt, ft, Te, Ie, Ut]), e.dy`${(({
                                                                           icon: G,
                                                                           leftIconPosition: l,
                                                                           text: E,
                                                                           loading: j,
                                                                           loadingColor: oe,
                                                                           verticalLayout: Ee,
                                                                           square: Re
                                                                       }) => e.dy`
  <div
    class=${(0, C.$)({
                buttonContent: !0,
                "buttonContent--leftIcon": l,
                "buttonContent--vertical": Ee,
                "buttonContent--square": Re
            })}
  >
    <gu-paragraph-text class="buttonContent__text" kind=${Ee ? "tag" : "small"} fontWeight="bold">
      ${qe(E, j, oe)}
    </gu-paragraph-text>
    ${Qe(j, G)}
  </div>
`)({icon: j, leftIconPosition: Ee, loading: l, loadingColor: E, text: G, verticalLayout: Ue, square: ot})}`
        }, props: {properties: Bt, styles: at}, baseClass: (0, K.Am)((0, K.s)((0, K.Xg)(ue.J)))
    }));
    var Qt = (() => {
        return (G = Qt || (Qt = {})).img2text = "img2text", G.text2img = "text2img", Qt;
        var G
    })();
    let ts = class extends e.oi {
        constructor() {
            super(...arguments), this.direction = Qt.img2text, this.headerSize = "small", this.headerColor = n.colors.light[100], this.textKind = "small", this.textColor = n.colors.light[500], this.backgroundPosition = "top", this.backgroundSize = "contain", this.headerResponsiveSize = [], this.textResponsiveKind = [], this.backgroundImageResponsive = [], this.breakpoint = "medium"
        }

        static get properties() {
            return {
                background: {type: String},
                direction: {type: String},
                header: {type: String},
                headerSize: {type: String},
                headerColor: {type: String},
                text: {type: String},
                textKind: {type: String},
                textColor: {type: String},
                backgroundPosition: {type: String},
                backgroundSize: {type: String},
                headerResponsiveSize: {type: Array},
                textResponsiveKind: {type: Array},
                backgroundImageResponsive: {type: Array},
                breakpoint: {type: String}
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
      }
      .flex-box-col {
        display: flex;
        flex-direction: column;
      }
      .character {
        display: flex;
        background-repeat: no-repeat;
        border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.dark[500])};
        align-items: flex-end;
        justify-content: center;
        min-height: 450px;
      }
      .character-text {
        box-sizing: border-box;
        margin: 280px 20px 20px;
        width: 100%;
        padding-left: 20px;
        border-left: 4px solid ${(0, t.asCssProp)(n.colors.gold[500])};
        text-align: left;
      }
      @media only screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping["x-small"])}) ) {
        .character {
          height: 440px;
        }
        .character-text {
          margin: 40px;
        }
      }
    `
        }

        generateBackgroundImageMediaQueries() {
            return this.backgroundImageResponsive.map(({
                                                           breakpoint: l,
                                                           pos: E,
                                                           size: j
                                                       }) => `\n        @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping[l])}) {\n          .character {\n            background-image: ${["x-small", "small"].includes(l) ? "linear-gradient(to bottom, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 1) 80%), " : ""}\n            url('${this.background}') !important;\n            background-position: ${(0, t.asCssProp)(E)} !important;\n            background-size: ${(0, t.asCssProp)(j)} !important;\n          }\n        }\n    `).join("\n")
        }

        generateMediaQueries() {
            return `\n      /* DEFINE RESPONSIVE SIZING */\n      ${this.generateBackgroundImageMediaQueries()}\n        @media\n        screen\n        and\n        (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping[this.breakpoint])}) {\n        .character {\n          flex-direction: column !important;\n          align-items: flex-end !important;\n          justify-content: center !important;\n        }\n        .character-img2text {\n          align-items: flex-end !important;\n        }\n        .character-text2img {\n          align-items: flex-start !important;\n        }\n        .character-text {\n          width: 50% !important;\n          margin: 20px !important;\n        }\n        .character-text-img2text {\n          padding-left: 0 !important;\n          border-left: none !important;\n          padding-right: 20px !important;\n          border-right: 4px solid ${(0, t.asCssProp)(n.colors.gold[500])} !important;\n          text-align: right !important;\n        }\n        .character-text-text2img {\n          padding-right: 0 !important;\n          border-right: none !important;\n          padding-left: 20px !important;\n          border-left: 4px solid ${(0, t.asCssProp)(n.colors.gold[500])} !important;\n          text-align: left !important;\n        }\n      }`
        }

        generateAllStyles() {
            return e.dy`<style>
      .character {
        background-image: linear-gradient(to bottom, rgba(0, 0, 0, 0) 25%, rgba(0, 0, 0, 1) 45%),
          url('${this.background}');
        background-color: #000;
        background-position: ${this.backgroundPosition};
        background-size: ${this.backgroundSize};
      }
      ${this.generateMediaQueries()}
    </style>`
        }

        render() {
            return e.dy`
      ${this.generateAllStyles()}
      <div class="character character-${this.direction} ">
        <div class="character-text character-text-${this.direction}">
          <gu-heading-text
            class="character-textAllignment"
            fillcolor="${this.headerColor}"
            size="${this.headerSize}"
            .responsiveSize=${this.headerResponsiveSize}
          >
            ${this.header}
          </gu-heading-text>
          <gu-vertical-space both="medium"></gu-vertical-space>
          <gu-paragraph-text
            class="character-textAllignment"
            fillcolor="${this.textColor}"
            kind="${this.textKind}"
            .responsiveKind=${this.textResponsiveKind}
          >
            ${this.text}
          </gu-paragraph-text>
        </div>
      </div>
    `
        }
    };
    ts = (0, i.gn)([(0, _.M)("gu-card-character")], ts);
    var lt = o(7302), tt = o(49219);
    const pt = G => `https://images.godsunchained.com/cardpack-images--${G}`, ss = G => "undefined" === G || !G;
    let ct = class extends e.oi {
        constructor() {
            super(...arguments), this.type = "marketing", this.responsiveSrcsetSizes = `${tt.imageQualities.normal}px`
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        width: 100%;
      }

      .picture {
        display: block;
        width: 100%;
        padding-bottom: 100%;
        position: relative;
      }

      .picture--marketing {
        padding-bottom: 128%;
      }

      .image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;

        transition: opacity 0.2s ease-in-out;

        -webkit-touch-callout: none;
        -webkit-user-drag: none;
      }

      :host(.loading) .image {
        opacity: 0;
      }
    `
        }

        update(l) {
            l.has("god") && (this.sanitizedGod = "all" === this.god || "core" === this.god ? "neutral" : this.god), super.update(l)
        }

        updated(l) {
            super.updated(l), this.image && (this.image.complete ? (this.classList.remove("loading", "error"), this.notifyState("loaded")) : (this.classList.remove("error"), this.classList.add("loading"), this.notifyState("loading"), (0, r.waitForImageToLoad)(this.image).then(() => {
                this.classList.remove("loading", "error"), this.notifyState("loaded")
            }).catch(() => {
                this.classList.remove("loading"), this.classList.add("error"), this.notifyState("error")
            })))
        }

        notifyState(l) {
            this.dispatchEvent(new CustomEvent(l, {detail: this, bubbles: !1, composed: !1}))
        }

        render() {
            const {type: l, set: E, rarity: j, sanitizedGod: oe, responsiveSrcsetSizes: Ee} = this;
            return ss(l) || ss(E) || ss(oe) || ss(j) ? e.dy`` : e.dy`
      <picture class="picture picture--${l}">
        <source
          srcset=${Object.keys(tt.imageQualities).map(Re => {
                const Je = tt.imageQualities[Re];
                return `${pt(l)}/${Je}/${E}--${oe}--${j}.webp ${Je}w`
            }).join(", ")}
          type="image/webp"
          sizes="${Ee}"
        />
        <source
          srcset=${Object.keys(tt.imageQualities).map(Re => {
                const Je = tt.imageQualities[Re];
                return `${pt(l)}/${Je}/${E}--${oe}--${j}.png ${Je}w`
            }).join(",")}
          type="image/png"
          sizes="${Ee}"
        />
        <img
          class="image"
          src="${pt(l)}/${tt.imageQualities.small}/${E}--${oe}--${j}.png"
          alt="Card Pack Image"
        />
      </picture>
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: String})], ct.prototype, "set", void 0), (0, i.gn)([(0, p.C)({type: String})], ct.prototype, "rarity", void 0), (0, i.gn)([(0, p.C)({type: String})], ct.prototype, "god", void 0), (0, i.gn)([(0, p.C)({type: String})], ct.prototype, "type", void 0), (0, i.gn)([(0, p.C)({type: String})], ct.prototype, "responsiveSrcsetSizes", void 0), (0, i.gn)([(0, lt.S)()], ct.prototype, "sanitizedGod", void 0), (0, i.gn)([(0, k.I)(".image")], ct.prototype, "image", void 0), ct = (0, i.gn)([(0, _.M)("gu-card-pack-picture")], ct);
    const Zt = (G, l) => `https://card.godsunchained.com/?id=${G}&q=${l}`;
    let Gt = class extends e.oi {
        constructor() {
            super(...arguments), this.quality = 1, this.protoId = 1, this.responsiveSrcsetSizes = `${tt.imageQualities.normal}px`, this.showLoadingState = !1
        }

        updated(l) {
            super.updated(l), (l.has("protoId") || l.has("quality")) && (this.classList.add("loading"), (0, r.waitForImageToLoad)(this.image).then(() => this.classList.remove("loading")))
        }

        render() {
            return e.dy`
      <picture class="picture">
        <source
          srcset=${Object.keys(tt.imageQualities).map(l => {
                const E = tt.imageQualities[l];
                return `${Zt(this.protoId, this.quality)}&w=${E} ${E}w`
            }).join(", ")}
          type="image/webp"
          sizes="${this.responsiveSrcsetSizes}"
        />
        <source
          srcset=${Object.keys(tt.imageQualities).map(l => {
                const E = tt.imageQualities[l];
                return `${Zt(this.protoId, this.quality)}&w=${E}&png=true ${E}w`
            }).join(", ")}
          type="image/png"
          sizes="${this.responsiveSrcsetSizes}"
        />
        <img
          class="image"
          src="${Zt(this.protoId, this.quality)}&w=${tt.imageQualities.small}&png=true"
          alt="Card Pack Image"
        />
      </picture>
      <gu-icon iconLigature="action_hidePassword" class="loadingIcon"></gu-icon>
    `
        }
    };
    Gt.styles = e.iv`
    :host {
      position: relative;
      display: block;
      width: 100%;
    }

    :host(.loading) .image {
      opacity: 0.9;
    }

    :host(.loading) .loadingIcon {
      opacity: 0.9;
    }

    .picture {
      display: block;
      width: 100%;
      padding-bottom: 134.75%; /* ratio of card images is: 1.347583643122677 */
      position: relative;
    }

    .image {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    }

    .loadingIcon {
      position: absolute;
      top: 40%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      color: ${(0, t.asCssProp)(n.colors.light[100])};
      opacity: 0;
    }
  `, (0, i.gn)([(0, p.C)()], Gt.prototype, "quality", void 0), (0, i.gn)([(0, p.C)()], Gt.prototype, "protoId", void 0), (0, i.gn)([(0, lt.S)()], Gt.prototype, "responsiveSrcsetSizes", void 0), (0, i.gn)([(0, lt.S)()], Gt.prototype, "showLoadingState", void 0), (0, i.gn)([(0, k.I)("img.image")], Gt.prototype, "image", void 0), Gt = (0, i.gn)([(0, _.M)("gu-card-picture")], Gt);
    var he = o(92436), It = o(71459), oo = o.n(It), os = o(49749), no = o(63082), Ms = o.n(no);
    const ns_ALL = "slidesListing__slide", ns_CURRENT = "slidesListing__slide--currentSlide", St = new he.do(G => {
        G.forEach(l => {
            l.target.handleResize()
        })
    });
    let Os = class extends e.oi {
        constructor() {
            super(...arguments), this.slidesPerView = 1, this.spaceBetween = 0, this.centeredSlides = !1, this.responsiveBreakpoints = [], this.state = {
                leftLocked: !1,
                rightLocked: !1,
                translateRatio: 1,
                slidesPerView: 1,
                spaceBetween: 0,
                specialRemainderSlideActive: !1,
                lockTranslateX: null,
                hasRemainderSlide: !1,
                translateX: 0,
                startTranslateX: 0,
                currentSlideIndexes: [],
                totalSlidesCount: 0,
                centeredSlides: !1
            }, this.dimensions = {
                width: 0,
                height: 0,
                slideWidth: 0,
                totalWidth: 0,
                slideCenteringSideMargin: 0,
                left: 0,
                top: 0
            }, this.debouncedResize = Ms()(() => {
                this.layoutSlides(), this.updatePaneClasses(), this.reset()
            }, 500)
        }

        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: block;
        position: relative;
        overflow: hidden;
      }

      .slidesListing {
        display: flex;
        align-items: flex-start;
        height: 100%;
        overflow: hidden;
        position: relative;
        transition: height ${250}ms ease-in-out;
      }

      ::slotted(.slidesListing__slide) {
        display: flex;
        flex-shrink: 0;
        flex-grow: 0;
      }

      ::slotted(.slideListing__slide--currentSlide) {
        z-index: 1;
      }
    `
        }

        static get properties() {
            return {
                slidesPerView: {type: Number},
                spaceBetween: {type: Number},
                centeredSlides: {type: Boolean},
                responsiveBreakpoints: {type: Array}
            }
        }

        firstUpdated() {
            St.observe(this), this.slidesListingDom = this.shadowRoot.querySelector(".slidesListing"), this.gestureControl = new (oo())(this, {
                sensitivity: 0,
                swipeVelocity: 60,
                passive: !1,
                capture: !0,
                startDirectionLoopCount: 1
            }), this.gestureControl.on("pan.prestart", l => {
                l.sourceEvent instanceof MouseEvent && l.sourceEvent.preventDefault()
            }), this.gestureControl.on("pan.start", l => this.onPanStart(l)), this.gestureControl.on("pan.all", l => this.onPan(l)), this.gestureControl.on("pan.end", l => this.onPanEnd(l)), this.storeSlideDoms(), this.handleResize(), this.updatePaneClasses()
        }

        disconnectedCallback() {
            this.gestureControl.destroy(), St.unobserve(this), super.disconnectedCallback()
        }

        get onLastSlide() {
            const {state: {currentSlideIndexes: l}} = this;
            return this.state.centeredSlides ? l[l.length - 1] >= this.state.totalSlidesCount : l[l.length - 1] >= this.state.totalSlidesCount - 1
        }

        get onFirstSlide() {
            return 0 === this.state.currentSlideIndexes[0]
        }

        get isMultiSlide() {
            return this.state.slidesPerView > 1
        }

        get hasRemainderSlide() {
            return this.state.slidesPerView - Math.floor(this.state.slidesPerView) != 0
        }

        layoutSlides() {
            this.slidesListingDom.style.width = `${this.dimensions.totalWidth + 2 * this.dimensions.slideCenteringSideMargin}px`, os.p8.set(this.slideDoms, {
                width: this.dimensions.slideWidth,
                marginLeft: l => this.state.centeredSlides && 0 === l ? this.dimensions.slideCenteringSideMargin : 0,
                marginRight: l => l === this.state.totalSlidesCount - 1 ? this.dimensions.slideCenteringSideMargin : this.state.spaceBetween
            })
        }

        onPanStart(l) {
            this.slidesListingDom.style.cursor = "grabbing", this.direction = null, this.state.startTranslateX = 0 === this.state.currentSlideIndexes[0] ? 0 : this.state.translateX, this.state.translateX = 0, this.state.rightLocked = !1, this.state.leftLocked = !1, this.setXTrans("left", 0)
        }

        onPan(l) {
            this.setXTrans(l.deltaX < 0 ? "left" : "right", l.deltaX)
        }

        setXTrans(l, E) {
            this.direction = l;
            let j = 1;
            const oe = E * j, Ee = this.state.startTranslateX + oe;
            "right" === l && Ee >= 0 ? this.state.rightLocked || (this.state.lockTranslateX = oe, this.state.rightLocked = !0) : this.state.rightLocked = !1, "left" === l && this.dimensions.totalWidth - this.dimensions.width + Ee + 2 * this.dimensions.slideCenteringSideMargin <= 0 ? this.state.leftLocked || (this.state.lockTranslateX = oe, this.state.leftLocked = !0) : this.state.leftLocked = !1, j = this.state.leftLocked || this.state.rightLocked ? .1 : 1;
            let Je = this.state.startTranslateX + oe;
            (this.state.rightLocked || this.state.leftLocked) && (Je = this.state.startTranslateX + this.state.lockTranslateX + (E - this.state.lockTranslateX) * j), this.state.translateX = Je, this.drawFrame()
        }

        onPanEnd(l) {
            console.log("!!!!!!!! PAN END"), this.slidesListingDom.style.cursor = null;
            const E = Math.abs(this.state.translateX - this.state.startTranslateX),
                j = this.state.slidesPerView > 1 ? .8 : .5;
            let oe = Math.abs(E) / (this.dimensions.slideWidth * j);
            return !this.state.centeredSlides && !this.onLastSlide && Math.abs(this.state.translateX - this.dimensions.width) >= this.dimensions.totalWidth ? this.nextSlides(null, [this.state.totalSlidesCount - 2, this.state.totalSlidesCount - 1, this.state.totalSlidesCount]) : (!this.state.centeredSlides && this.onLastSlide && this.state.hasRemainderSlide && (oe = oe >= .5 ? 1 : oe), Math.floor(oe) >= 1 ? this.state.translateX < this.state.startTranslateX ? this.nextSlides(Math.floor(oe)) : this.prevSlides(Math.floor(oe)) : l.isSwipe ? "right" === l.swipeDirection ? this.prevSlides(1) : "left" === l.swipeDirection ? this.nextSlides(1) : null : this.reset())
        }

        drawFrame() {
            this.resetAnimation && this.resetAnimation.kill(), os.p8.set(this.slidesListingDom, {x: this.state.translateX})
        }

        onSlotChange(l) {
            this.storeSlideDoms(), this.updatePaneClasses(), this.setCarouselHeight()
        }

        storeSlideDoms() {
            const l = this.shadowRoot.getElementById("slidesSlot");
            this.slideDoms = l.assignedElements(), this.state.totalSlidesCount = this.slideDoms.length
        }

        updatePaneClasses() {
            this.slideDoms.forEach((l, E) => {
                l.classList.remove(ns_ALL, ns_CURRENT), l.classList.add(ns_ALL), -1 !== this.state.currentSlideIndexes.indexOf(E) && l.classList.add(ns_CURRENT)
            })
        }

        getTransToLastSlide() {
            return -1 * (this.dimensions.totalWidth - this.dimensions.width + 2 * this.dimensions.slideCenteringSideMargin)
        }

        getTransToFirstSlide() {
            const l = this.state.currentSlideIndexes[0];
            return -1 * (l * this.dimensions.slideWidth + this.state.spaceBetween * l)
        }

        reset({duration: l = .25, specialResetForEndOfSlides: E = !1} = {}) {
            E && (this.state.specialRemainderSlideActive = E);
            let j = this.state.specialRemainderSlideActive ? this.getTransToLastSlide() : this.getTransToFirstSlide();
            this.state.centeredSlides && this.onLastSlide && (j = this.getTransToLastSlide()), j !== this.state.translateX && (this.state.translateX = j, this.resetAnimation = os.p8.to(this.slidesListingDom, {
                duration: l,
                x: this.state.translateX,
                ease: "power2.inOut"
            })), this.setCarouselHeight()
        }

        setCarouselHeight() {
            if (this.state.centeredSlides) return !1;
            const l = this.getMaxCurrentSlideHeight();
            this.slidesListingDom.style.height = `${l}px`
        }

        getMaxCurrentSlideHeight() {
            return this.state.currentSlideIndexes.reduce((E, j) => {
                const oe = this.slideDoms[j];
                return E < oe.offsetHeight ? oe.offsetHeight : E
            }, 0)
        }

        emitSlideChange(l) {
            let E = this.state.currentSlideIndexes;
            this.state.centeredSlides && (E = E.map(this.onFirstSlide ? (j, oe) => 0 === oe ? null : j - 1 : this.onLastSlide ? (j, oe) => oe === E.length - 1 ? null : j : (j, oe) => j - 1)), this.dispatchEvent(new CustomEvent("onSlideChange", {
                detail: {
                    direction: l,
                    currentActiveSlides: E,
                    atEnd: this.onLastSlide,
                    atStart: this.onFirstSlide
                }
            }))
        }

        incrementCurrentIndexes(l, E) {
            this.state.currentSlideIndexes = l || this.state.currentSlideIndexes.map(j => null === j ? 0 : j + E)
        }

        assignResponsiveVariables(l) {
            const E = this.responsiveBreakpoints.filter(j => {
                const oe = parseInt(P.breakpointSizeMapping[j.minWidth], 10);
                return l >= oe
            }).sort((j, oe) => {
                const Ee = parseInt(P.breakpointSizeMapping[j.minWidth], 10);
                return parseInt(P.breakpointSizeMapping[oe.minWidth], 10) - Ee
            })[0];
            if (E) {
                const {slidesPerView: j, spaceBetween: oe, minWidth: Ee} = E,
                    Re = parseInt(P.breakpointSizeMapping[Ee], 10);
                l >= Re && ("number" == typeof j && (this.state.slidesPerView = j), "number" == typeof oe && (this.state.spaceBetween = oe))
            } else this.state.slidesPerView = this.slidesPerView, this.state.spaceBetween = this.spaceBetween;
            1 === this.state.slidesPerView ? (this.state.spaceBetween = 0, this.state.centeredSlides = !1) : this.state.centeredSlides = this.centeredSlides, this.state.currentSlideIndexes.length !== Math.ceil(this.state.slidesPerView) && (this.state.currentSlideIndexes = Array(Math.ceil(this.state.slidesPerView)).fill(0).map((j, oe) => oe))
        }

        nextSlides(l = 1, E) {
            if (this.onLastSlide) return E && this.incrementCurrentIndexes(E), this.reset({specialResetForEndOfSlides: !0});
            this.incrementCurrentIndexes(E, l), this.state.translateX = this.state.startTranslateX + (this.dimensions.slideWidth + this.state.spaceBetween) * l * -1, os.p8.to(this.slidesListingDom, {
                duration: .25,
                x: this.state.translateX,
                ease: "power2.inOut",
                onComplete: () => {
                    this.reset(), this.updatePaneClasses(), this.emitSlideChange(this.direction)
                }
            })
        }

        prevSlides(l = 1, E) {
            if (this.onFirstSlide || this.state.specialRemainderSlideActive) return this.state.specialRemainderSlideActive = !1, this.reset();
            this.incrementCurrentIndexes(E, -1 * l), this.state.translateX = this.state.startTranslateX + (this.dimensions.slideWidth + this.state.spaceBetween) * l, os.p8.to(this.slidesListingDom, {
                duration: .25,
                x: this.state.translateX,
                ease: "power2.inOut",
                onComplete: () => {
                    this.reset(), this.updatePaneClasses(), this.emitSlideChange(this.direction)
                }
            })
        }

        gotoSlide(l) {
            if (l < 0 || l > this.state.totalSlidesCount - 1 || this.state.centeredSlides) return console.error("Error! Application requested a bad slide index:", l), !1;
            this.state.currentSlideIndexes = this.state.currentSlideIndexes.map(() => l).map((E, j) => E + j), this.reset(), this.emitSlideChange()
        }

        handleResize() {
            const {width: l, height: E, left: j, top: oe} = this.getBoundingClientRect();
            this.assignResponsiveVariables(l);
            const Ee = Math.floor(l - this.state.spaceBetween * (this.state.slidesPerView - 1)),
                Re = Math.floor(Ee / this.state.slidesPerView),
                Je = Math.floor(this.state.totalSlidesCount * Re + this.state.spaceBetween * (this.state.totalSlidesCount - 1)),
                xt = this.state.centeredSlides ? Math.floor(.5 * (l - Re)) : 0;
            this.dimensions = {
                width: l,
                height: E,
                slideWidth: Re,
                totalWidth: Je,
                slideCenteringSideMargin: xt,
                left: j,
                top: oe
            }, this.debouncedResize(this.dimensions)
        }

        render() {
            return e.dy`
      <div class="slidesListing">
        <slot id="slidesSlot" @slotchange=${this.onSlotChange}></slot>
      </div>
    `
        }
    };
    Os = (0, i.gn)([(0, _.M)("gu-carousel")], Os);
    var ro = o(89728), et = o(19444);
    const hs = "20px";
    let ms = class extends e.oi {
        constructor() {
            super(...arguments), this.labelText = "", this.size = "normal", this.checked = !1, this.labelPlacement = "left", this.id = "", this.kind = "tag"
        }

        static get properties() {
            return {
                kind: {type: String},
                iconLigature: {type: String},
                labelText: {type: String},
                size: {type: String},
                checked: {type: Boolean},
                labelPlacement: {type: String},
                id: {type: String}
            }
        }

        static get styles() {
            return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  /* DEFAULTS ARE SMALL AND LEFT LABEL PLACEMENT */
  :host {
    display: flex;
    align-items: center;
    position: relative;
    min-height: ${(0, t.asCssProp)(hs)};
  }

  :host([size='large']) .checkmark {
    font-size: 20px;
    width: ${(0, t.asCssProp)("30px")};
    height: ${(0, t.asCssProp)("30px")};
  }

  :host([size='large']) .label {
    font-size: ${(0, t.asCssProp)(n.typography.simpleTextSizeMapping.small)};
  }

  :host([labelPlacement='right']) .checkboxLabel {
    padding-right: 15px;
    order: 1;
  }

  :host([labelPlacement='right']) .checkmark {
    order: 2;
    margin-left: auto;
    margin-right: 0;
  }

  :host(:hover) .checkmark {
    border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
  }

  .input {
    cursor: pointer;
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    display: block;
    margin: 0;
  }

  .checkmark {
    width: ${(0, t.asCssProp)(hs)};
    height: ${(0, t.asCssProp)(hs)};
    border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
    display: flex;
    flex-shrink: 0;
    font-size: 16px;
    margin-right: 15px;
    ${(0, t.asCssProp)(n.uifx.userSelect("none"))}
  }

  .label {
    position: relative;
  }

  .input:checked ~ .checkmark {
    border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
  }

  /*
  .input:checked ~ .label {
    color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
  }

  .input:checked ~ .checkmark {
    color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
  }
  */
`
        }

        onCheck() {
            this.checked = !this.checked, this.dispatchEvent(new CustomEvent("onCheck", {detail: {checked: this.checked}}))
        }

        render() {
            const {onCheck: l, checked: E, labelText: j, kind: oe} = this, Ee = (0, et.v4)();
            return e.dy`
      <input id=${Ee} type="checkbox" class="input" @change=${l} .checked=${E} />
      <gu-icon class="checkmark" iconLigature=${this.checked ? "checkbox_tick" : ""}></gu-icon>
      ${void 0 !== j ? e.dy`
            <label for=${Ee} class="label">
              <gu-simple-text .kind=${oe}> ${(0, ro.A)(j)} </gu-simple-text>
            </label>
          ` : ""}
    `
        }
    };
    ms = (0, i.gn)([(0, _.M)("gu-checkbox-input")], ms);
    const Ts = [824, 825, 826, 827, 828, 829];
    let qt = class extends e.oi {
        constructor() {
            super(...arguments), this.videoId = 412954513, this.cropVideoFromTop = !0, this.randomChampionProto = Ts[parseInt("" + (Math.random() * Ts.length - 1), 10)]
        }

        connectedCallback() {
            super.connectedCallback(), this.style.setProperty("--headerAreaHeight", `${n.measurements.standardHeaderHeight}px`)
        }

        render() {
            return e.dy`
      <gu-background-vimeo-embed
        class="videoBackground"
        cropFromTop=${this.cropVideoFromTop}
        videoId=${this.videoId}
      ></gu-background-vimeo-embed>
      <picture class="fallbackImage">
        <source
          type="image/webp"
          sizes="100vw"
          srcset="
            //images.godsunchained.com/art2/250/${this.randomChampionProto}.webp   250w,
            //images.godsunchained.com/art2/375/${this.randomChampionProto}.webp   375w,
            //images.godsunchained.com/art2/500/${this.randomChampionProto}.webp   500w,
            //images.godsunchained.com/art2/720/${this.randomChampionProto}.webp   720w,
            //images.godsunchained.com/art2/1024/${this.randomChampionProto}.webp 1024w,
            //images.godsunchained.com/art2/1280/${this.randomChampionProto}.webp 1280w
          "
        />
        <source
          type="image/jpg"
          sizes="100vw"
          srcset="
            //images.godsunchained.com/art2/250/${this.randomChampionProto}.jpg    250w,
            //images.godsunchained.com/art2/375/${this.randomChampionProto}.jpg    375w,
            //images.godsunchained.com/art2/500/${this.randomChampionProto}.jpg   500w,
            //images.godsunchained.com/art2/720/${this.randomChampionProto}.jpg   720w,
            //images.godsunchained.com/art2/1024/${this.randomChampionProto}.jpg 1024w,
            //images.godsunchained.com/art2/1280/${this.randomChampionProto}.jpg 1280w
          "
        />
        <img src="//images.godsunchained.com/art2/720/827.jpg" alt="" class="fallbackImage__img" />
      </picture>
      <i class="overlaySkrimGradient"></i>
      <slot name="bannerLogo"></slot>
      <div class="slotContent">
        <slot name="bannerContent"></slot>
      </div>
    `
        }
    };
    qt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}

    :host {
      display: flex;
      flex-direction: column;
      justify-content: flex-end;
      position: relative;
      min-height: calc(100vh - var(--headerAreaHeight));
    }

    :host([centerContent='true']) {
      justify-content: center;
    }

    .overlaySkrimGradient {
      content: '';
      position: absolute;
      top: calc((100vh - var(--headerAreaHeight)) / 2);
      height: calc((100vh - var(--headerAreaHeight)) / 2);
      left: 0;
      right: 0;
      background: linear-gradient(
        to top,
        rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.dark[900]))}, 1) 0%,
        rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.dark[900]))}, 0) 100%
      );
    }

    .slotContent {
      position: relative;
    }

    .fallbackImage {
      position: absolute;
      top: 0;
      left: 0;
      height: calc(100vh - var(--headerAreaHeight));
      width: 100%;
    }

    .fallbackImage__img {
      display: block;
      width: 100%;
      height: 100%;
      object-fit: cover;
      object-position: center top;
    }

    .videoBackground {
      display: none;
      position: absolute;
      top: 0;
      left: 0;
    }

    @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping.small)}) {
      .videoBackground {
        display: block;
      }
      .fallbackImage {
        display: none;
      }
      .overlaySkrimGradient {
        top: auto;
        bottom: 0;
        height: 50%;
      }
    }
  `, (0, i.gn)([(0, p.C)()], qt.prototype, "videoId", void 0), (0, i.gn)([(0, p.C)()], qt.prototype, "cropVideoFromTop", void 0), (0, i.gn)([(0, lt.S)()], qt.prototype, "randomChampionProto", void 0), qt = (0, i.gn)([(0, _.M)("gu-hero-video-banner")], qt), o(4477);
    const As = new he.do(G => {
        G.forEach(l => {
            l.target.handleResize()
        })
    });
    let Is = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        width: 100%;
        height: 100%;
        overflow: hidden;
        pointer-events: none;
      }

      /* Make the iframe keep an aspect ratio, and
      position it in the middle of its parent wrapper*/
      iframe {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);

        width: calc(var(--cw) * 100);
        height: calc(var(--cw) * 56.25);
        /* Given a 16:9 aspect ratio, 9/16*100 = 56.25 */
        min-height: calc(var(--ch) * 100);
        min-width: calc(var(--ch) * 177.77);
        /* Given a 16:9 aspect ratio, 16/9*100 = 177.77 */
      }

      :host([cropFromTop='true']) iframe {
        top: 0;
        transform: translate(-50%, 0%);
      }
    `
        }

        static get properties() {
            return {videoId: {type: String}, cropFromTop: {type: String}, quality: {type: String}}
        }

        firstUpdated() {
            As.observe(this), this.handleResize()
        }

        disconnectedCallback() {
            As.unobserve(this)
        }

        handleResize(l) {
            const Ee = .01 * this.offsetHeight;
            this.style.setProperty("--cw", .01 * this.offsetWidth + "px"), this.style.setProperty("--ch", `${Ee}px`)
        }

        qualityParam() {
            return this.quality ? `&quality=${this.quality}` : ""
        }

        render() {
            return e.dy`
      <iframe
        src=${`https://player.vimeo.com/video/${this.videoId}?autoplay=1&loop=1&title=0&byline=0&portrait=0&background=1&muted=1${this.qualityParam()}`}
        frameborder="0"
        allow="autoplay; fullscreen"
      ></iframe>
    `
        }
    };
    Is = (0, i.gn)([(0, _.M)("gu-background-vimeo-embed")], Is);
    const Ds = ["days", "hours", "minutes", "seconds"];
    let Mt = class extends e.oi {
        constructor() {
            super(...arguments), this.darkBackground = !1, this.targetTime = 1755790779, this.showFields = Ds, this.size = "large", this.simpleTextDisplay = !1, this.simpleTextKind = "small", this.padZeroes = !1, this.getDelta = () => new Date(1e3 * this.targetTime).getTime() - (new Date).getTime(), this.getTimeRemaining = () => {
                const l = this.getDelta();
                let E = Math.floor(l / 864e5), j = Math.floor(l % 864e5 / 36e5), oe = Math.floor(l % 36e5 / 6e4),
                    Ee = Math.floor(l % 6e4 / 1e3);
                return E = E < 0 ? 0 : E, j = j < 0 ? 0 : j, oe = oe < 0 ? 0 : oe, Ee = Ee < 0 ? 0 : Ee, {
                    seconds: this.addPadding(`${Ee}`),
                    minutes: this.addPadding(`${oe}`),
                    hours: this.addPadding(`${j}`),
                    days: this.addPadding(`${E}`)
                }
            }, this.addPadding = l => l.length < 2 && this.padZeroes ? `0${l}` : l, this.getHeadingTextSize = l => "small" === l ? "small" : "large", this.getDividerHeadingTextSize = l => "small" === l ? "large" : "x-large", this.getSimpleTextKind = l => "small" === l ? "micro" : "small"
        }

        update(l) {
            l.has("targetTime") && this.initializeCounter(), l.has("simpleTextDisplay") && (this.simpleTextDisplay ? this.classList.add("simpleTextMode") : this.classList.remove("simpleTextMode")), super.update(l)
        }

        disconnectedCallback() {
            clearInterval(this.timer)
        }

        initializeCounter() {
            this.timeLeft = this.getTimeRemaining(), clearInterval(this.timer), this.timer = window.setInterval(() => {
                this.timeLeft = this.getTimeRemaining(), this.getDelta() < 0 && (clearInterval(this.timer), this.dispatchEvent(new CustomEvent("onCountdownComplete")))
            }, 1e3)
        }

        maybePluralise(l, E) {
            return 1 === l ? E.replace(/s$/, "") : E
        }

        render() {
            return void 0 === this.timeLeft ? e.dy`` : ((0, g.updateColoringVariables)({
                component: this,
                fillColor: this.fillColor
            }), this.simpleTextDisplay ? e.dy`
          ${this.showFields.map((l, E) => e.dy` <gu-simple-text
              fillColor=${this.fillColor}
              .kind=${this.simpleTextKind}
              align="center"
            >
              ${this.timeLeft[l]}
              ${E < this.showFields.length - 1 ? e.dy`<span class="simpleTextDivider"> : </span>` : null}
            </gu-simple-text>`)}
        ` : e.dy`
          ${this.showFields.map((l, E) => e.dy`
              <div
                class=${(0, C.$)({digit: !0, [`digit--${this.size}`]: !0, darkBackground: this.darkBackground})}
              >
                <gu-heading-text size=${this.getHeadingTextSize(this.size)}> ${this.timeLeft[l]} </gu-heading-text>
                <gu-simple-text
                  fillColor=${this.fillColor}
                  kind=${this.getSimpleTextKind(this.size)}
                  align="center"
                  class="label"
                  .text=${this.maybePluralise(parseInt(this.timeLeft[l], 10), l)}
                ></gu-simple-text>
              </div>
              ${E < this.showFields.length - 1 ? e.dy`<gu-heading-text
                    class="divider divider--${this.size}"
                    size=${this.getDividerHeadingTextSize(this.size)}
                    >:</gu-heading-text
                  >` : null}
            `)}
        `)
        }
    };
    Mt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}

    :host {
      display: flex;
      align-items: center;
    }

    :host(.simpleTextMode) {
      display: inline-flex;
    }

    .divider {
      color: ${(0, t.asCssProp)(n.colors.gold[500])};
      margin: ${(0, t.asCssProp)((0, r.gridUnits)(-11))} ${(0, t.asCssProp)((0, r.gridUnits)(.5))} 0;
      line-height: 1;
    }

    .divider--small {
      margin: ${(0, t.asCssProp)((0, r.gridUnits)(-9))} ${(0, t.asCssProp)((0, r.gridUnits)(.5))} 0;
    }

    .divider:last-child {
      display: none;
    }
    .label {
      text-transform: uppercase;
    }

    .digit {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    .digit > gu-heading-text {
      width: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      height: ${(0, t.asCssProp)((0, r.gridUnits)(22))};
      line-height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      background: url('/assets/images/countdown-timer/ui-embellishments--digit-background.svg') no-repeat;
      background-size: contain;
      background-position: center top;
      text-align: center;
    }

    .digit.darkBackground > gu-heading-text {
      background: url('/assets/images/countdown-timer/ui-embellishments--digit-dark-background.svg') no-repeat;
      background-size: contain;
      background-position: center top;
    }

    .digit--large > gu-heading-text {
      width: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      height: ${(0, t.asCssProp)((0, r.gridUnits)(22))};
      line-height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
      margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    }

    .digit--small > gu-heading-text {
      width: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      height: ${(0, t.asCssProp)((0, r.gridUnits)(17))};
      line-height: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
    }
  `, (0, i.gn)([(0, p.C)()], Mt.prototype, "darkBackground", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "targetTime", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "showFields", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "fillColor", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "size", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "simpleTextDisplay", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "simpleTextKind", void 0), (0, i.gn)([(0, p.C)()], Mt.prototype, "padZeroes", void 0), (0, i.gn)([(0, lt.S)()], Mt.prototype, "timeLeft", void 0), Mt = (0, i.gn)([(0, _.M)("gu-countdown-timer")], Mt);
    const Us = (0, t.asCssProp)(`${n.measurements.standardBorderSize} solid ${n.colors.gold[500]}`);
    let jt = class extends e.oi {
        constructor() {
            super(...arguments), this.expanded = !1, this.selectedId = "", this.items = [], this.placeholderText = ""
        }

        static get styles() {
            return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: block;
    position: relative;
  }

  .dropdownToggle {
    display: block;
    cursor: pointer;
    border-bottom: ${Us};
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .dropdownToggle--expanded {
  }

  .dropdownMenu {
    position: absolute;
    height: 0px;
    right: 0;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    ${(0, t.asCssProp)(n.animation.standardTransition("height"))}
  }

  .dropdownMenu--expanded {
    height: auto;
    background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    border-right: ${Us};
    padding: ${(0, t.asCssProp)(`${f.dz.gridUnits(2)}`)} 0;
    z-index: 1;
  }

  .dropdownMenu__item {
    padding: ${(0, t.asCssProp)(`${f.dz.gridUnits(2)} ${f.dz.gridUnits(4)};`)};
    cursor: pointer;
    margin: 0;
    white-space: nowrap;
    text-align: right;
  }

  .dropdownMenu__item--selected {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  .dropdownMenu__item:hover {
    color: ${(0, t.asCssProp)(n.colors.light[100])};
  }
`
        }

        static get properties() {
            return {
                expanded: {type: Boolean},
                selectedId: {type: String},
                items: {type: Array},
                placeholderText: {type: String}
            }
        }

        toggleMenu(l) {
            l.stopPropagation(), this.expanded = !this.expanded
        }

        get selectedItem() {
            return this.items ? this.items.find(l => l.id === this.selectedId) : null
        }

        selectDropDownItem(l) {
            this.selectedId = l, this.expanded = !1, this.dispatchEvent(new CustomEvent("onSelect", {detail: {item: this.selectedItem}}))
        }

        render() {
            return e.dy`
      <gu-simple-text
        class=${(0, C.$)({dropdownToggle: !0, "dropdownToggle--expanded": this.expanded})}
        @click=${this.toggleMenu}
        kind="tag"
      >
        <gu-vertical-space bottom="x-small">
          ${this.selectedItem ? this.selectedItem.name : this.placeholderText}
        </gu-vertical-space>
      </gu-simple-text>

      <div
        class=${(0, C.$)({dropdownMenu: !0, "dropdownMenu--expanded": this.expanded})}
      >
        ${this.items.map(l => e.dy`
            <gu-simple-text
              class=${(0, C.$)({dropdownMenu__item: !0, "dropdownMenu__item--selected": l.id === this.selectedId})}
              @click=${() => this.selectDropDownItem(l.id)}
              kind="tag"
            >
              ${l.name}
            </gu-simple-text>
          `)}
      </div>
    `
        }
    };
    jt = (0, i.gn)([(0, _.M)("gu-dropdown")], jt), o(99454);
    let rs = class extends e.oi {
        constructor() {
            super(...arguments), this.time = ""
        }

        static get styles() {
            return e.iv`
      :host {
      }
    `
        }

        start() {
            this.timer || (this.updateTime(), this.timer = setInterval(() => this.updateTime(), 1e3))
        }

        updateTime() {
            const l = new Date, E = Math.floor((this.target.getTime() - l.getTime()) / 1e3), j = [];
            E > 604800 && j.push(this.withUnit(Math.floor(E / 604800), "w")), E > 86400 && j.push(this.withUnit(Math.floor(E % 604800 / 86400), "d")), E > 3600 && j.push(this.withUnit(Math.floor(E % 86400 / 3600), "h")), E > 60 && j.push(this.withUnit(Math.floor(E % 3600 / 60), "min")), j.push(this.withUnit(E % 60, "s")), this.time = j.join(" "), this.requestUpdate("time")
        }

        withUnit(l, E) {
            return `${Math.max(l, 0)}${E}`
        }

        stop() {
            this.timer && clearInterval(this.timer), this.time = "", this.timer = void 0, this.requestUpdate("time")
        }

        render() {
            return this.target ? this.start() : this.stop(), e.dy`${this.time}`
        }
    };
    (0, i.gn)([(0, p.C)()], rs.prototype, "target", void 0), rs = (0, i.gn)([(0, _.M)("gu-textual-timer")], rs);
    let Vt = class extends e.oi {
        constructor() {
            super(...arguments), this.isRunning = !1, this.complete = !1, this.type = "", this.images = {
                "": "",
                tutorial: "/assets/images/game-modes/options/tutorial.png",
                solo: "/assets/images/game-modes/options/solo.png",
                "server-solo": "/assets/images/game-modes/options/solo.png",
                ranked: "/assets/images/game-modes/options/ranked.png",
                sealed: "/assets/images/game-modes/options/ranked.png",
                "direct-challenge": "/assets/images/game-modes/options/direct-challenge.png"
            }
        }

        static get styles() {
            return e.iv`
      :host {
        height: 100%;
        display: flex;
        place-content: stretch stretch;
        overflow: hidden;
        margin: 0 0 0 -8px;
        padding: 0 8px;
      }

      .game-mode-options {
        display: flex;
        flex: 1 1 auto;
        flex-direction: column;
        background: linear-gradient(
            180deg,
            rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.gunmetal[900]))}, 0.7) 0%,
            #0c1620 100%
          ),
          var(--image, ''), ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        background-size: cover;
        background-position: center;
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
        place-content: stretch stretch;
        opacity: 1;
        transition: opacity 0.25s ease, transform 0.25s cubic-bezier(0.42, 0.01, 0.54, 1.31);
        overflow: hidden;
        padding: 12px;
      }

      .game-mode-options--hidden {
        opacity: 0;
        transform: translateX(100%);
      }

      .game-mode-options__actions {
        margin: 16px 0 0 0;
      }

      .game-mode-options__scroll-area {
        flex: 1 1 auto;
        overflow: hidden;
        overflow-y: scroll;
        display: flex;
        flex-direction: column;
        place-content: stretch flex-start;
        margin: -12px -8px -12px -12px;
        padding: 12px 4px 12px 12px;
        -webkit-mask-image: linear-gradient(0deg, transparent, black 16px, black calc(100% - 16px), transparent);
      }

      ${(0, t.asCssProp)((0, t.styleScrollbars)(".game-mode-options__scroll-area"))}

      .game-mode-options__timer,
      .game-mode-options__description {
        margin: 4px 0;
      }

      .game-mode-options__extra {
        vertical-align: baseline;
        transform: translateY(3px) scale(90%);
      }
    `
        }

        startGame() {
            this.dispatchEvent(new CustomEvent("startGame", {detail: Object.assign({}, this.gameMode)}))
        }

        renderStartButton() {
            return e.dy`
      <gu-button-group class="game-mode-options__actions">
        <gu-gilded-hex-button
          data-test-id="launch-game-cta"
          size="large"
          .disabled=${this.isRunning || !this.complete}
          .loading=${this.isRunning}
          @click=${this.startGame}
        >
          Start
        </gu-gilded-hex-button>
      </gu-button-group>
    `
        }

        renderActions() {
            return this.renderStartButton()
        }

        renderHeader() {
            var l, E, j, oe;
            return e.dy`
      <gu-vertical-space bottom="small" data-test-id="game-mode-options-header">
        <gu-heading-text
          class="game-mode-options__title"
          size="x-small"
          data-test-id="game-mode-title"
          fillGradient="gradients.gold.simple"
        >
          ${null !== (E = null === (l = this.gameMode) || void 0 === l ? void 0 : l.name) && void 0 !== E ? E : ""} ${this.renderTitleExtras()}
        </gu-heading-text>
        ${this.renderCountdownTimer()}
        <gu-paragraph-text
          class="game-mode-options__description"
          kind="micro"
          fillColor="white"
          data-test-id="game-mode-description"
        >
          ${null !== (oe = null === (j = this.gameMode) || void 0 === j ? void 0 : j.description) && void 0 !== oe ? oe : ""}
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }

        renderCountdownTimer() {
            var l, E;
            return null !== (E = null === (l = this.gameMode) || void 0 === l ? void 0 : l.expiry) && void 0 !== E && E ? Math.floor((this.gameMode.expiry.getTime() - (new Date).getTime()) / 1e3) > 7776e3 ? e.dy`` : e.dy`
      <gu-paragraph-text
        class="game-mode-options__timer"
        kind="micro"
        fontWeight="bold"
        fillColor="${(0, t.asCssProp)(n.colors.gunmetal[100])}"
      >
        <gu-textual-timer .target=${this.gameMode.expiry} data-test-id="game-mode-timer"></gu-textual-timer>
      </gu-paragraph-text>
    ` : e.dy``
        }

        renderTitleExtras() {
            var l, E;
            return null !== (E = null === (l = this.gameMode) || void 0 === l ? void 0 : l.ranked) && void 0 !== E && E ? e.dy`<gu-icon class="game-mode-options__extra" iconLigature="flux_symbol"></gu-icon>` : e.dy``
        }

        render() {
            var l;
            return this.gameMode && (this.type = this.gameMode.key), this.style.setProperty("--image", `url(${null !== (l = this.images[this.type]) && void 0 !== l ? l : ""})`), e.dy`
      <div
        class=${(0, C.$)({
                "game-mode-options": !0,
                [`game-mode-options--${this.type}`]: "" !== this.type,
                "game-mode-options--hidden": "" === this.type
            })}
      >
        <div class="game-mode-options__scroll-area">
          ${this.renderHeader()}
          <slot class="game-mode-options__body" data-test-id="game-mode-options-body"></slot>
        </div>
        ${this.renderActions()}
      </div>
    `
        }
    };
    (0, i.gn)([(0, p.C)()], Vt.prototype, "gameMode", void 0), (0, i.gn)([(0, p.C)()], Vt.prototype, "isRunning", void 0), (0, i.gn)([(0, p.C)()], Vt.prototype, "error", void 0), (0, i.gn)([(0, p.C)()], Vt.prototype, "complete", void 0), Vt = (0, i.gn)([(0, _.M)("gu-game-mode-panel")], Vt);
    let Kt = class extends e.oi {
        constructor() {
            super(...arguments), this.gameModes = [], this.images = {
                tutorial: "/assets/images/game-modes/selector/tutorial.png",
                solo: "/assets/images/game-modes/selector/solo.png",
                "server-solo": "/assets/images/game-modes/selector/solo.png",
                ranked: "/assets/images/game-modes/selector/ranked.png",
                sealed: "/assets/images/game-modes/selector/ranked.png",
                "direct-challenge": "/assets/images/game-modes/selector/direct-challenge.png"
            }
        }

        static get properties() {
            return {gameModes: {type: Array}, active: {type: Object}}
        }

        static get styles() {
            return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        width: 100%;
        height: 100%;
        display: block;
        overflow-y: scroll;
      }

      :host::-webkit-scrollbar {
        display: none;
      }

      .game-modes {
        display: flex;
        flex-direction: column;
        padding: 4px 12px 4px 8px;
        margin: 0;
        position: relative; // apply stacking context on iOS, thereby avoiding scrolling issues
        z-index: 1; // apply stacking context on iOS, thereby avoiding scrolling issues
      }

      .game-mode-tile {
        display: block;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        border-radius: 4px;
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.4);
        background-position: center center;
        background-size: cover;
        margin: 4px 0;
        transition: transform 0.5s ease;
        user-select: none;
      }

      .game-mode-tile--active {
        transform: translateX(4px);
      }

      .game-mode-tile--active .game-mode-tile__link {
        border: 1px solid #54bbcd;
        box-shadow: 0 0 8px #8be1e0;
      }

      .game-mode-tile__link {
        display: block;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        background: linear-gradient(270deg, rgba(15, 27, 39, 0.2) 0%, rgba(15, 27, 39, 0.7) 43.4%, #0f1b27 100%);
        padding: 8px 12px 8px 12px;
        border-radius: 4px;
        text-decoration: none;
        height: 54px;
        position: relative;

        -webkit-touch-callout: none;
        -webkit-user-drag: none;
      }

      .game-mode-tile__title {
        text-overflow: ellipsis;
        white-space: nowrap;
        overflow: hidden;
        margin: 0 0 8px 0;
      }

      .game-mode-tile__title,
      .game-mode-tile__description {
        text-shadow: 0 1px 2px rgba(0, 0, 0, 0.75);
      }

      .game-mode-tile__description {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
      }

      .game-mode-tile__extra {
        position: absolute;
        font-size: 24px;
        right: 4px;
        top: 4px;
        text-color: black;
        background: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
        border-radius: 4px;
        box-shadow: 0 2px 2px rgba(0, 0, 0, 0.5);
        padding: 2px;
      }

      ${(0, t.asCssProp)((0, t.listReveal)(".game-mode-tile"))}
    `
        }

        onClick(l) {
            this.active = l, this.dispatchEvent(new CustomEvent("gameModeSelection", {
                detail: l,
                bubbles: !0,
                composed: !0
            }))
        }

        renderTile(l) {
            var E;
            return e.dy`
      <li
        class=${(0, C.$)({"game-mode-tile": !0, "game-mode-tile--active": this.active && this.active.key === l.key})}
        style="background-image: url(${null !== (E = this.images[l.key]) && void 0 !== E ? E : this.images.solo});"
      >
        <a
          class="game-mode-tile__link"
          data-test-id="game-mode-tile-link"
          href="javascript:void(0)"
          @click=${() => this.onClick(l)}
        >
          <gu-heading-text class="game-mode-tile__title" size="2x-small" fillColor="${n.colors.light[100]}">
            ${l.name}
          </gu-heading-text>
          <gu-paragraph-text class="game-mode-tile__description" kind="micro" fillColor="${n.colors.light[100]}">
            ${l.description}
          </gu-paragraph-text>
          ${this.renderExtras(l)}
        </a>
      </li>
    `
        }

        renderExtras(l) {
            return l.ranked ? e.dy`
        <div class="game-mode-tile__extra">
          <gu-icon iconLigature="flux_symbol" fillColor="black"></gu-icon>
        </div>
      ` : e.dy``
        }

        render() {
            return e.dy`
      <ul class="game-modes">
        ${this.gameModes.map(l => this.renderTile(l))}
      </ul>
    `
        }
    };
    Kt = (0, i.gn)([(0, _.M)("gu-game-modes")], Kt);
    let bs = class extends e.oi {
        constructor() {
            super(...arguments), this.time = "00:00"
        }

        static get styles() {
            return e.iv`
      :host {
        width: 84px;
      }
    `
        }

        start() {
            this.timer || (this.timer = setInterval(() => {
                const l = new Date, E = Math.floor((l.getTime() - this.started.getTime()) / 1e3),
                    j = ("00" + Math.floor(E / 60)).substr(-2, 2), oe = ("00" + E % 60).substr(-2, 2);
                this.time = `${j}:${oe}`, this.requestUpdate("time")
            }, 1e3))
        }

        stop() {
            this.timer && clearInterval(this.timer), this.time = "00:00", this.timer = void 0, this.requestUpdate("time")
        }

        render() {
            return this.started ? this.start() : this.stop(), e.dy` <gu-heading-text size="medium" data-test-id="queue-time">${this.time}</gu-heading-text> `
        }
    };
    (0, i.gn)([(0, p.C)({type: Date})], bs.prototype, "started", void 0), bs = (0, i.gn)([(0, _.M)("gu-queue-timer")], bs);
    let Cs = class extends e.oi {
        constructor() {
            super(...arguments), this.type = "queue"
        }

        static get properties() {
            return {gameMode: {type: Object}, type: {type: String}, queueStarted: {type: Date}}
        }

        static get styles() {
            return e.iv`
      :host {
        position: absolute;
        width: 100%;
        bottom: 0;
        height: 0;
        transition: transform 1s ease;
        transform: translateY(70px);
      }

      :host(.visible) {
        transform: translateY(0);
      }

      .game-queue-panel__finish {
        content: '';
        position: absolute;
        bottom: 0;
        display: block;
        height: 4px;
        width: 100%;
        left: 0;
        background: ${(0, t.asCssProp)(n.gradients.gold.mirror("left"))};
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
      }

      .game-queue-panel__content {
        position: absolute;
        bottom: 0;
        left: 50%;
        height: 60px;
        width: 50%;
        display: flex;
        place-content: stretch stretch;
        overflow: hidden;
      }

      .game-queue-panel__content::before {
        content: '';
        position: absolute;
        left: 0;
        bottom: 0;
        transform: skew(-15deg) translateX(15px);
        display: block;
        height: 60px;
        width: 50vw;
        background: ${(0, t.asCssProp)(n.gradients.gunmetal.simple("left"))};
        box-shadow: -2px 0 8px rgba(0, 0, 0, 0.75);
        z-index: -1;
      }

      .game-queue-panel__left,
      .game-queue-panel__right {
        display: flex;
        place-content: center;
        flex: 1 1 auto;
        width: 40%;
      }

      .game-queue-panel__devider {
        width: 2px;
        flex: 0 0 auto;
        background: linear-gradient(180deg, rgba(198, 160, 82, 0) 0%, #fff2d8 50.99%, rgba(198, 160, 82, 0) 100%);
        margin: 8px 12px 12px 12px;
      }

      .game-queue-panel__left {
        text-align: right;
        padding-left: 28px;
        flex-direction: column;
      }

      .game-queue-panel__right {
        flex-direction: row;
        place-items: center;
        gap: 8px;
        flex-wrap: nowrap;
        flex: 0 1 0;
        padding-right: 8px;
      }

      .ellipsis {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }
    `
        }

        handleCancelButton() {
            this.dispatchEvent(new CustomEvent("cancel", {detail: this.gameMode}))
        }

        render() {
            return this.classList.toggle("visible", !!this.gameMode), e.dy`
      <div
        data-test-id="game-queue-panel-panel"
        class=${(0, C.$)({
                "game-queue-panel__content": !0,
                [`game-queue-panel__content--type-${this.gameMode ? this.gameMode.key : ""}`]: !!this.gameMode
            })}
        data-test-id="game-queue-panel"
      >
        <div class="game-queue-panel__left">
          <gu-simple-text kind="tag" fillColor="${n.colors.gunmetal[100]}" align="right">
            ${this.gameMode ? "In Queue" : " "}
          </gu-simple-text>
          <gu-heading-text class="ellipsis" size="x-small" fillColor="white" align="right">
            ${this.gameMode ? this.gameMode.name : " "}
          </gu-heading-text>
        </div>
        <div class="game-queue-panel__devider"></div>
        <div class="game-queue-panel__right">
          <gu-queue-timer data-test-id="queue-timer" .started=${this.queueStarted}></gu-queue-timer>
          <gu-circular-close-button
            data-test-id="queue-cancel-button"
            @click=${this.handleCancelButton}
          ></gu-circular-close-button>
        </div>
      </div>
      <div class="game-queue-panel__finish"></div>
    `
        }
    };
    Cs = (0, i.gn)([(0, _.M)("gu-game-queue-panel")], Cs);
    let mt = class extends e.oi {
        render() {
            return e.dy`<slot></slot>`
        }
    };
    mt.styles = e.iv`
    ${(0, t.asCssProp)((0, t.setBoxSizing)())}
    :host {
      height: ${(0, t.asCssProp)(`${n.measurements.standardHeaderAlertBarHeight}px`)};
      position: relative;
      display: flex;
      background: ${(0, t.asCssProp)(n.colors.light[100])};
    }
  `, mt = (0, i.gn)([(0, _.M)("gu-header-alert-bar")], mt);
    const is = (0, r.gridUnits)(5), lo = (0, r.gridUnits)(5), Rs = (0, r.gridUnits)(8), Bs = (0, r.gridUnits)(10),
        co = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    width: 100%;
    height: ${n.measurements.standardHeaderHeight}px;
    display: flex;
    justify-content: space-between;
    position: relative;
    padding: 0 calc(var(--vw) * 3);
  }

  .userArea {
    position: absolute;
    top: 0;
    right: 0;
  }

  .menuToggleButton {
    cursor: pointer;
    padding: 0 ${(0, t.asCssProp)(is)};
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(7))};
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
  }

  .menuToggleButton--open {
    transform: rotate(180deg);
  }

  .notificationBubble {
    position: absolute;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(6.7))};
    left: ${(0, t.asCssProp)((0, r.gridUnits)(10.5))};
    opacity: 1;
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
    background: var(--gu-yellow);
  }

  .notificationBubble--hide {
    opacity: 0;
  }

  .logoArea {
    display: none;
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      justify-content: space-between;
    }

    .notificationBubble {
      display: none;
    }

    .menuToggleButton,
    .logoArea__guWordMark {
      display: none;
    }
  }
`;
    var Ot = o(4390), uo = o(97223);
    const Gs = "TOGGLE_NAV", Fs = "CLOSE_NAV", Ns = "TOGGLE_SUB_MENU", zs = "UPDATE_CURRENT_ROUTE",
        Ws = "CLOSE_ALL_SUB_MENUS", Hs = "TOGGLE_USER_MENU", Zs = "CLOSE_USER_MENU", ys = () => ({type: Fs}),
        ho = G => ({type: zs, payload: G}),
        as = {currentRoute: "", navMenuOpen: !1, navSubMenusOpen: {}, userMenuOpen: !1},
        Pt = (0, uo.MT)((G = as, {type: l, payload: E}) => {
            switch (l) {
                case Gs:
                    return Object.assign(Object.assign({}, G), {navMenuOpen: !G.navMenuOpen, userMenuOpen: !1});
                case Fs:
                    return Object.assign(Object.assign({}, G), {navSubMenusOpen: {}, navMenuOpen: !1});
                case Ns:
                    return Object.assign(Object.assign({}, G), {navSubMenusOpen: {[E]: !G.navSubMenusOpen[E]}});
                case Ws:
                    return Object.assign(Object.assign({}, G), {navSubMenusOpen: {}});
                case zs:
                    return Object.assign(Object.assign({}, G), {currentRoute: E});
                case Hs:
                    return Object.assign(Object.assign({}, G), {userMenuOpen: !G.userMenuOpen, navMenuOpen: !1});
                case Zs:
                    return Object.assign(Object.assign({}, G), {userMenuOpen: !1});
                default:
                    return G
            }
        }, as), mo = {
            navigationItems: {type: Array},
            loggedIn: {type: Boolean},
            router: {type: Object},
            ngZone: {type: Object}
        };
    customElements.define("gu-header-bar", (0, ee.x)({
        renderer: function Nt({navigationItems: G, router: l, ngZone: E}) {
            if (!G) return null;
            const j = (0, c.v9)({store: Pt, selector: wt => wt.navMenuOpen}),
                oe = (0, c.I0)(Pt), [Ee, Re] = (0, H.eJ)(!1), Je = () => {
                    oe(ys()), (0, Ot.pR)(l, E, G.home.path), this.dispatchEvent(new CustomEvent("onLogoClick"))
                };
            return (0, H.d4)(() => {
                Re((() => {
                    if (!G) return !1;
                    let wt = !1;
                    e:for (const Lt of Object.keys(G)) {
                        const ft = G[Lt];
                        if (ft.children) {
                            for (const Te of Object.keys(ft.children)) if (ft.children[Te].showNotificationBubble) {
                                wt = !0;
                                break e
                            }
                        } else if (ft.showNotificationBubble) {
                            wt = !0;
                            break e
                        }
                    }
                    return wt
                })())
            }, [G]), e.dy`
    <gu-icon
      class="menuToggleButton ${j ? "menuToggleButton--open" : ""}"
      iconLigature=${j ? "close_x" : "hamburger_menu"}
      @click=${wt => {
                wt.cancelBubble = !0, oe({type: Gs})
            }}
      fillColor=${n.colors.gunmetal[100]}
    >
    </gu-icon>
    ${Ee ? e.dy`
          <gu-notification-bubble class="notificationBubble ${j ? "notificationBubble--hide" : ""}">
          </gu-notification-bubble>
        ` : null}
    <div class="logoArea" @click=${() => Je()}>
      <picture class="logoArea__guIcon">
        <source type="image/webp" srcset="/assets/images/internal-logos/logo--gods-unchained-icon.webp" />
        <source type="image/png" srcset="/assets/images/internal-logos/logo--gods-unchained-icon.png" />
        <img
          class="logoArea__guIcon__img"
          alt="A digital trading card game where you can trade cards you purchase or earn for real-world currency."
          src="/assets/images/internal-logos/logo--gods-unchained-icon.png"
        />
      </picture>

      <gu-heading-text
        class="logoArea__guWordMark"
        size="3x-small"
        .responsiveSize=${[{breakpoint: "2x-small", size: "2x-small"}]}
      >
        Gods Unchained
      </gu-heading-text>
    </div>

    <gu-menu .router=${l} .ngZone=${E} .navigationItems=${G}></gu-menu>

    <div class="userArea">
      <slot name="userArea"></slot>
    </div>
  `
        }, props: {properties: mo, styles: co}
    }));
    var Fo = o(92198), No = o(11735);
    const _o = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    position: absolute;
    top: ${n.measurements.standardHeaderHeight}px;
    height: calc(100vh - ${n.measurements.standardHeaderHeight}px);
    width: 100%;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    list-style: none;
    margin: 0;
    padding: 0 ${(0, t.asCssProp)(is)};
    transform: translateX(-101%);
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
    display: flex;
    flex-direction: column;
    overflow: hidden;
    overflow-y: auto;
    scrollbar-width: thin;
    scrollbar-color: ${(0, t.asCssProp)(n.colors.gunmetal[500])} ${(0, t.asCssProp)(n.colors.gunmetal[900])};
  }

  :host::-webkit-scrollbar {
    width: 10px;
    height: 10px;
  }

  :host::-webkit-scrollbar-track {
    background: var(--gu-blue-dark);
  }

  :host::-webkit-scrollbar-thumb {
    background: var(--gu-blue);
    box-shadow: none;
  }

  :host::-webkit-scrollbar-corner {
    background-color: var(--gu-blue-dark);
  }

  :host(.open) {
    transform: translateX(0);
  }

  .menuItem {
    flex-shrink: 0;
    flex-grow: 0;
    cursor: pointer;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(5))} 0;
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    text-transform: uppercase;
    white-space: nowrap;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
  }

  .menuItem__icon {
    display: block;
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-1))};
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    line-height: 0;
  }

  .menuItem__longName + .menuItem__shortName {
    display: none;
  }

  .menuItem__caret {
    display: block;
    line-height: 0;
    transform-origin: center;
    ${(0, t.asCssProp)(n.animation.slowTransition("transform"))};
  }

  .menuItem__externalIcon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-1))};
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    line-height: 0;
  }

  .menuItem__caret--rotated {
    transform: rotate(180deg);
  }

  .menuItem > * {
    color: var(--gu-blue);
  }

  .menuItem--selected > *:not(gu-sub-menu):not(gu-notification-bubble) {
    background: var(--gu-yellow);
    background-clip: text;
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
  }

  .menuItem--opened > * {
    color: var(--gu-blue-hover);
  }

  gu-notification-bubble {
    position: absolute;
    right: 0;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(7))};
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  .menuItem--opened gu-notification-bubble {
    opacity: 0;
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      position: relative;
      transform: translateX(0);
      background: transparent;
      flex-direction: row;
      top: auto;
      width: auto;
      height: auto;
      padding: 0;
      overflow: unset;
    }

    .menuItem {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(6.5))};
      padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))};
      border: none;
    }

    .menuItem--hasSubMenu {
      padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
    }

    .menuItem--isExternal {
      padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    }

    .menuItem:last-of-type {
      margin: 0;
    }

    .menuItem:hover > * {
      color: var(--gu-blue-hover);
    }

    .menuItem__icon {
      margin: 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    }

    .menuItem__longName {
      display: none;
    }

    .menuItem__longName + .menuItem__shortName {
      display: block;
    }

    .menuItem__caret {
      position: absolute;
      right: 0;
      bottom: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
    }

    .menuItem__externalIcon {
      margin: 0;
      position: absolute;
      right: 0;
      bottom: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
      font-size: ${(0, t.asCssProp)((0, r.gridUnits)(2.75))};
    }

    gu-notification-bubble {
      top: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
      right: 50%;
      transform: translateX(150%);
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
    .menuItem {
      flex-direction: row;
      padding: 0;
      margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    }

    .menuItem--hasSubMenu {
      padding-right: 0;
    }

    .menuItem__icon {
      position: static;
      margin: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))} ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0 0;
      top: unset;
      left: unset;
      transform: unset;
    }

    .menuItem--hasSubMenu .menuItem__caret {
      position: relative;
      right: auto;
      bottom: auto;
    }

    .menuItem__longName {
      display: block;
    }

    .menuItem__longName + .menuItem__shortName {
      display: none;
    }

    gu-notification-bubble {
      top: 50%;
      right: auto;
      left: ${(0, t.asCssProp)((0, r.gridUnits)(3.4))};
      transform: translate(0%, -170%);
    }

    .menuItem--hasSubMenu gu-notification-bubble {
      margin-right: 0;
    }
  }
`;
    customElements.define("gu-menu", (0, ee.x)({
        renderer: function xs({navigationItems: G, router: l, ngZone: E}) {
            const j = (0, c.v9)({store: Pt, selector: Te => Te.navMenuOpen}),
                oe = (0, c.v9)({store: Pt, selector: Te => Te.currentRoute}),
                Ee = (0, c.v9)({store: Pt, selector: Te => Te.navSubMenusOpen}), Re = (0, c.I0)(Pt);
            (0, H.d4)(() => {
                Re(ho(l.url));
                const Te = l.events.pipe((0, Fo.h)(Ie => Ie instanceof No.m2)).subscribe(Ie => {
                    Re(ho(Ie.url))
                });
                return () => {
                    Te.unsubscribe()
                }
            }, []), (0, H.d4)(() => {
                j ? this.classList.add("open") : this.classList.remove("open")
            }, [j]);
            const Je = Te => {
                this.dispatchEvent(new CustomEvent("onMenuDropDownOpen", {
                    detail: {navItem: Te},
                    bubbles: !0,
                    composed: !0
                })), Re((G => ({type: Ns, payload: G}))(Te.path))
            }, Xt = Te => Te.children ? Je(Te) : (Te => {
                Te(), Re(ys())
            })(Te.url ? () => {
                this.dispatchEvent((0, Ot.Cs)(Te)), (0, Ot.rb)(Te)
            } : () => (0, Ot.pR)(l, E, Te.path)), wt = Te => {
                let Ie = !1;
                const {children: Ut} = Te;
                return ("/" === oe && "home" === Te.shortName || -1 !== oe.indexOf(Te.path) && "home" !== Te.shortName || !!Ut && (0, Ot.M0)(Ut, oe)) && (Ie = !0), Ie
            }, Lt = Te => !!Ee[Te.path];
            return e.dy`
    ${Object.keys(G).map(Te => {
                const Ie = G[Te], Ut = !Ie.children && !!Ie.url;
                return e.dy`
        <div
          class=${(0, C.$)({
                    menuItem: !0,
                    "menuItem--selected": wt(Ie),
                    "menuItem--opened": Lt(Ie),
                    "menuItem--hasSubMenu": !!Ie.children,
                    "menuItem--isExternal": Ut
                })}
          @click=${() => Xt(Ie)}
        >
          <gu-icon class="menuItem__icon" iconLigature=${Ie.icon}> </gu-icon>
          ${Ie.longName ? e.dy`
                <gu-simple-text
                  class="menuItem__longName"
                  kind="large"
                  fontWeight="bold"
                  .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
                >
                  ${Ie.longName}
                </gu-simple-text>
              ` : null}

          <gu-simple-text
            class="menuItem__shortName"
            kind="large"
            fontWeight="bold"
            .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
          >
            ${Ie.shortName}
          </gu-simple-text>

          ${Ut ? e.dy` <gu-icon class="menuItem__externalIcon" iconLigature="leave_website"></gu-icon> ` : null}
          ${Ie.children ? e.dy`
                <gu-icon
                  class=${(0, C.$)({menuItem__caret: !0, "menuItem__caret--rotated": Lt(Ie)})}
                  iconLigature="caret_down"
                ></gu-icon>
                <gu-sub-menu
                  .router=${l}
                  .ngZone=${E}
                  .subMenuItems=${Ie.children}
                  .topLevelPath=${Ie.path}
                ></gu-sub-menu>
              ` : null}
          ${Ie.showNotificationBubble || (Te => !!Te.children && Object.keys(Te.children).reduce((Ie, Ut) => {
                    const Ue = Te.children[Ut];
                    return !(!Ue || !Ue.showNotificationBubble) || Ie
                }, !1))(Ie) ? e.dy` <gu-notification-bubble></gu-notification-bubble> ` : null}
        </div>
      `
            })}
  `
        },
        props: {
            properties: {navigationItems: {type: Array}, router: {type: Object}, ngZone: {type: Object}},
            styles: _o
        }
    }));
    const fo = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: flex;
    flex-flow: column;
    color: ${(0, t.asCssProp)(n.colors.light[500])};
    overflow: hidden;
    max-height: 0px;
    padding-top: 0px;
    opacity: 0;
    width: 100%;
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
    transition-property: max-height, padding, opacity;
  }

  .subMenu {
    margin: 0;
    padding: 0 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(7))};
    list-style: none;
  }

  .subMenu__item {
    padding-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    color: var(--gu-blue);
    line-height: 1;
    position: relative;
    white-space: normal;
  }

  .subMenu__item:last-of-type {
    padding-bottom: 0;
  }

  .subMenu__item--selected {
    ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
  }

  :host(.open) {
    max-height: calc(var(--maxHeight) + ${(0, t.asCssProp)((0, r.gridUnits)(5))});
    opacity: 1;
    padding-top: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
  }

  gu-notification-bubble {
    position: absolute;
    right: 0;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(1.75))};
  }

  .item__externalIcon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4.75))};
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      position: absolute;
      top: 100%;
      left: ${(0, t.asCssProp)((0, r.gridUnits)(-4))};
      width: ${(0, t.asCssProp)((0, r.gridUnits)(36))};
      padding: 0;
      z-index: 1;
    }

    :host::after {
      content: '';
      display: block;
      height: var(--maxHeight);
      width: 100%;
    }

    :host(.open) {
      max-height: var(--maxHeight);
      padding: 0;
      box-shadow: 0px ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(3))} 0px
        rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.black))}, 0.5);
    }

    .subMenu {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      padding: 0;
      border-left: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      border-top: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    }

    .subMenu__item,
    .subMenu__item:last-of-type {
      padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    }

    .subMenu__item:hover {
      color: var(--gu-blue-hover);
    }

    .subMenu__item--selected:hover {
      ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
    }

    .item__externalIcon {
      font-size: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
      margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
    }

    gu-notification-bubble {
      right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      top: 50%;
      transform: translateY(-50%);
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.large)}) {
    :host {
      left: 0;
    }
  }
`;
    customElements.define("gu-sub-menu", (0, ee.x)({
        renderer: function vo({topLevelPath: G, subMenuItems: l, router: E, ngZone: j}) {
            const oe = (0, c.v9)({store: Pt, selector: Ue => Ue.navSubMenusOpen}),
                Ee = (0, c.v9)({store: Pt, selector: Ue => Ue.currentRoute}), Re = (0, c.I0)(Pt), Je = Ue => {
                    Ue.url ? (this.dispatchEvent((0, Ot.Cs)(Ue)), (0, Ot.rb)(Ue)) : function ot() {
                        Re(ys()), (0, Ot.pR)(E, j, Ue.path)
                    }()
                }, Xt = Ue => Ee.includes(Ue.path), wt = Ms()(() => {
                    this.style.setProperty("--maxHeight", `${ft.offsetHeight}px`)
                }, 500), Lt = new he.do(Ue => {
                    Ue.forEach(() => wt())
                });
            let ft;
            (0, H.d4)(() => (ft = this.shadowRoot.querySelector(".subMenu"), Lt.observe(ft), () => Lt.unobserve(ft)), []);
            const Ie = () => {
                document.removeEventListener("click", Ut)
            }, Ut = Ue => {
                Re({type: Ws})
            };
            return (0, H.d4)(() => (oe[G] ? (this.classList.add("open"), setTimeout(() => {
                document.addEventListener("click", Ut)
            })) : (this.classList.remove("open"), Ie()), () => Ie()), [oe]), e.dy`
    <ul class="subMenu">
      ${Object.keys(l).map(Ue => {
                const ot = l[Ue], Jo = {subMenu__item: !0, "subMenu__item--selected": Xt(ot)};
                return e.dy`
          <li
            class=${(0, C.$)(Jo)}
            @click=${Qo => {
                    Qo.cancelBubble = !0, Je(ot)
                }}
          >
            ${ot.longName ? e.dy`
                  <gu-simple-text
                    class="item__longName"
                    kind="large"
                    .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
                  >
                    ${ot.longName}
                  </gu-simple-text>
                ` : null}

            <gu-simple-text
              class="item__shortName"
              kind="large"
              .responsiveKind=${[{breakpoint: "small", kind: "tag"}]}
            >
              ${ot.shortName}
            </gu-simple-text>

            ${ot.url ? e.dy` <gu-icon class="item__externalIcon" iconLigature="leave_website"></gu-icon> ` : null}
            ${ot.showNotificationBubble ? e.dy` <gu-notification-bubble></gu-notification-bubble> ` : null}
          </li>
        `
            })}
    </ul>
  `
        },
        props: {
            properties: {
                subMenuItems: {type: Array},
                router: {type: Object},
                ngZone: {type: Object},
                topLevelPath: {type: String}
            }, styles: fo
        }
    }));
    const js = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: block;
    height: ${tt.standardHeaderHeight}px;
  }

  gu-user-details {
    padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
  }

  .signedOutArea {
    height: 100%;
    display: flex;
    align-items: center;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(4))} 0;
    padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .signedOutArea__signInButton {
    cursor: pointer;
    height: 100%;
    position: relative;
    display: flex;
    align-items: center;
    padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .signedOutArea__signInButton::after {
    content: '';
    position: absolute;
    top: 0;
    bottom: 0;
    left: ${(0, t.asCssProp)((0, r.gridUnits)(-2))};
    height: 100%;
    width: 1px;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  .signedOutArea__downloadButton {
    display: none;
  }

  .userDetailsArea {
    height: 100%;
    display: flex;
    align-items: center;
    cursor: pointer;
  }

  .userDetailsArea__imgContainer {
    display: none;
  }

  .userDetailsArea__imgContainer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--gu-yellow);
    border-radius: 50%;
    z-index: 2;
  }

  .userDetailsArea__imgContainer__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
    border-radius: 50%;
    position: relative;
    z-index: 2;
  }

  .userDetailsArea__imgContainer__bannerSide {
    width: ${(0, t.asCssProp)((0, r.gridUnits)(1.75))};
    height: ${(0, t.asCssProp)((0, r.gridUnits)(4.5))};
    position: absolute;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    z-index: 1;
    bottom: 1px;
  }

  .userDetailsArea__imgContainer__bannerSide--left {
    left: 0;
    transform: translateX(-90%);
  }

  .userDetailsArea__imgContainer__bannerSide--right {
    right: 0;
    transform: translateX(90%);
  }

  .userDetailsArea__imgContainer__levelLabel {
    position: absolute;
    width: 58px;
    bottom: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
    left: 50%;
    transform: translateX(-50%);
    z-index: 3;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} 0;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }

  .userDetailsArea__imgContainer__tinyCorner {
    position: absolute;
    top: 50%;
    left: -3px;
    border: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))} solid transparent;
    border-bottom-color: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    z-index: 1;
  }

  .userDetailsArea__imgContainer__tinyCorner--right {
    left: auto;
    right: -3px;
  }

  gu-user-details {
    display: none;
  }

  gu-notification-bubble {
    position: absolute;
    top: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
    right: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  .userDetailsArea--open gu-notification-bubble {
    opacity: 0;
  }
  .userDetailsArea--open .userDetailsArea__imgContainer::before {
    transform: rotate(-180deg);
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
    .signedOutArea {
      padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    }
    .signedOutArea__signInButton {
      padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    }
    .signedOutArea__signInButton::after {
      left: ${(0, t.asCssProp)((0, r.gridUnits)(-3))};
    }
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.large)}) {
    gu-user-details {
      display: flex;
      height: 100%;
      align-items: center;
    }

    .signedOutArea__downloadButton {
      display: flex;
      min-width: ${(0, t.asCssProp)((0, r.gridUnits)(45))};
    }

    .signedOutArea__signInButton {
      margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
      padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    }

    .signedOutArea__signInButton::after {
      right: 0;
      left: auto;
    }
  }
`;
    customElements.define("gu-header-user-area", (0, ee.x)({
        renderer: function Ye({
                                  menuItems: G,
                                  router: l,
                                  ngZone: E,
                                  userProperties: j,
                                  downloadLauncherUrl: oe,
                                  userStarsTotal: Ee,
                                  userFluxTotal: Re
                              }) {
            if (!G) return null;
            const Je = (0, c.v9)({store: Pt, selector: Ie => Ie.userMenuOpen}),
                xt = (0, c.I0)(Pt), [Xt, wt] = (0, H.eJ)(!1), Te = () => {
                    this.dispatchEvent(new CustomEvent("onUserDetailsClick"))
                };
            return e.dy`
    ${j ? e.dy`
          <div
            class=${(0, C.$)({userDetailsArea: !0, "userDetailsArea--open": Je})}
          >
            <gu-user-details
              .userProperties=${j}
              .userStarsTotal=${Ee}
              .userFluxTotal=${Re}
              @click=${Te}
            ></gu-user-details>
            <div class="userDetailsArea__imgContainer" @click=${() => xt({type: Hs})}>
              ${Xt ? e.dy`<gu-notification-bubble highPriority="true"></gu-notification-bubble>` : null}
              <img class="userDetailsArea__imgContainer__img" src=${j.image_url} alt="user avatar image" />
              <i class="userDetailsArea__imgContainer__bannerSide userDetailsArea__imgContainer__bannerSide--left"></i>
              <i class="userDetailsArea__imgContainer__bannerSide userDetailsArea__imgContainer__bannerSide--right"></i>
              <i class="userDetailsArea__imgContainer__tinyCorner"></i>
              <i class="userDetailsArea__imgContainer__tinyCorner userDetailsArea__imgContainer__tinyCorner--right"></i>
              <gu-simple-text kind="tag" class="userDetailsArea__imgContainer__levelLabel" align="center">
                LVL${j.level}
              </gu-simple-text>
            </div>
          </div>

          <gu-user-menu
            .userProperties=${j}
            .userStarsTotal=${Ee}
            .userFluxTotal=${Re}
            .router=${l}
            .ngZone=${E}
            .menuItems=${G}
            @onUserDetailsClick=${Te}
          ></gu-user-menu>
        ` : e.dy`
          <div class="signedOutArea">
            <gu-simple-text kind="tag" @click=${() => {
                this.dispatchEvent(new CustomEvent("onLoginModal"))
            }} class="signedOutArea__signInButton" data-test-id="signinButton">
              sign in
            </gu-simple-text>
            ${oe ? e.dy`
                  <gu-primary-hex-button
                    class="signedOutArea__downloadButton"
                    size="large"
                    href=${oe}
                    @click=${() => {
                this.dispatchEvent(new CustomEvent("onRegisterModal"))
            }}
                  >
                    play now
                  </gu-primary-hex-button>
                ` : null}
          </div>
        `}
  `
        },
        props: {
            properties: {
                menuItems: {type: Array},
                router: {type: Object},
                ngZone: {type: Object},
                userProperties: {type: Object},
                downloadLauncherUrl: {type: String},
                userStarsTotal: {type: String},
                userFluxTotal: {type: String}
            }, styles: js
        }
    }));
    const yo = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    position: absolute;
    top: ${n.measurements.standardHeaderHeight}px;
    right: 0;
    width: ${(0, t.asCssProp)((0, r.gridUnits)(65))};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    list-style: none;
    margin: 0;
    transform: translateX(101%);
    opacity: 0;
    display: flex;
    flex-direction: column;
    border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    border-left: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    ${(0, t.asCssProp)(n.animation.slowTransition("all"))};
  }

  :host(.open) {
    transform: translateX(0);
    opacity: 1;
  }

  .menuItem {
    cursor: pointer;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(5))} ${(0, t.asCssProp)(is)};
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    white-space: nowrap;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    position: relative;
  }

  .menuItem:hover {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  .menuItem__subMenu {
    display: flex;
    align-items: center;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    border-left: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
  }

  .menuItem__subMenu__item {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  gu-notification-bubble {
    position: absolute;
    right: ${(0, t.asCssProp)(is)};
    top: 50%;
    transform: translateY(-50%);
    ${(0, t.asCssProp)(n.animation.slowTransition("opacity"))};
  }

  gu-user-details {
    border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))} ${(0, t.asCssProp)(is)};
    cursor: pointer;
  }

  gu-user-details:hover {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.large)}) {
    gu-user-details {
      display: none;
    }
  }
`, xo = new CustomEvent("onLogout", {bubbles: !0, composed: !0}),
        Vs = new CustomEvent("onConnectWallet", {bubbles: !0, composed: !0});
    customElements.define("gu-user-menu", (0, ee.x)({
        renderer: function Ks({
                                  userProperties: G,
                                  router: l,
                                  ngZone: E,
                                  menuItems: j,
                                  userStarsTotal: oe,
                                  userFluxTotal: Ee
                              }) {
            const Re = (0, c.v9)({store: Pt, selector: Ue => Ue.userMenuOpen}), Je = (0, c.I0)(Pt),
                xt = () => this.dispatchEvent(Vs), Xt = () => this.dispatchEvent(xo), Lt = () => {
                    document.removeEventListener("click", ft)
                }, ft = Ue => {
                    Je({type: Zs})
                };
            return (0, H.d4)(() => (Re ? (this.classList.add("open"), setTimeout(() => {
                document.addEventListener("click", ft)
            })) : (this.classList.remove("open"), Lt()), () => Lt()), [Re]), e.dy`
    <gu-user-details
      verticalLayout
      .userProperties=${G}
      .userStarsTotal=${oe}
      .userFluxTotal=${Ee}
      @click=${() => {
                this.dispatchEvent(new CustomEvent("onUserDetailsClick"))
            }}
    ></gu-user-details>
    ${Object.keys(j).map(Ue => {
                const ot = j[Ue];
                return ot.visible ? e.dy`
            <div class="menuItem" @click=${() => (Ue => {
                    "Log Out" === Ue.shortName ? Xt() : "Connect Wallet" === Ue.shortName ? xt() : Ue.url ? (0, Ot.rb)(Ue) : Ue.path && (0, Ot.pR)(l, E, Ue.path)
                })(ot)}>
              <gu-simple-text class="menuItem__shortName" kind="small"> ${ot.shortName} </gu-simple-text>

              ${ot.showNotificationBubble ? e.dy` <gu-notification-bubble highPriority="true"></gu-notification-bubble> ` : null}
              ${ot.children ? e.dy`
                    <div class="menuItem__subMenu">
                      ${Object.keys(ot.children).map(Jo => {
                    const Qo = ot.children[Jo];
                    return e.dy`
                          <gu-simple-text
                            kind="tag"
                            class="menuItem__subMenu__item"
                            @click=${wn => ((Ue, ot) => {
                        Ue.stopPropagation(), ot.url ? (0, Ot.rb)(ot) : ot.path && (0, Ot.pR)(l, E, ot.path)
                    })(wn, Qo)}
                            fillColor=${n.colors.gunmetal[100]}
                          >
                            ${Qo.shortName}
                          </gu-simple-text>
                        `
                })}
                    </div>
                  ` : null}
            </div>
          ` : null
            })}
  `
        },
        props: {
            properties: {
                userProperties: {type: Object},
                userStarsTotal: {type: Number},
                userFluxTotal: {type: Number},
                menuItems: {type: Object},
                router: {type: Object},
                ngZone: {type: Object}
            }, styles: yo
        }
    }));
    const Po = e.iv`
  :host {
    display: flex;
  }

  .side {
    display: flex;
    flex-direction: column;
    justify-content: center;
    height: 100%;
  }

  .side--left {
    position: relative;
    align-items: stretch;
    white-space: nowrap;
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    padding-left: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
  }

  .side--right {
    max-width: 190px;
    flex: 1;
    padding-top: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
    padding-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
  }

  .side--left:hover .side__hoverGradient {
    opacity: 1;
  }

  .side__border {
    position: absolute;
    right: 0;
    top: 25%;
    height: 50%;
    border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  .side__hoverGradient {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-image: linear-gradient(180deg, #0f1b27 0%, #1d2f41 51.56%, rgba(61, 90, 116, 0.75) 100%);
    opacity: 0;
    z-index: 0;
    border-radius: 4px;
  }

  .side__part {
    position: relative;
    z-index: 1;
    display: flex;
    align-items: center;
    justify-content: flex-start;
  }

  .side__part > gu-icon {
    font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
  }

  .row {
    display: flex;
    text-align: right;
  }

  .row--top {
    color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
    align-items: center;
  }

  .row--bottom {
    justify-content: flex-end;
  }

  .row__userName {
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
  }

  .row__rank {
    text-transform: uppercase;
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
    padding-left: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
    border-left: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }

  :host(.verticalLayout) {
    flex-direction: column;
  }

  :host(.verticalLayout) .side__border {
    display: none;
  }

  :host(.verticalLayout) .side--left {
    order: 2;
    flex-direction: row;
    justify-content: flex-start;
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    padding-left: 0;
  }

  :host(.verticalLayout) .side--left:hover .side__hoverGradient {
    opacity: 0;
  }

  :host(.verticalLayout) .side--right {
    max-width: 100%;
    padding: 0;
  }

  :host(.verticalLayout) .side__part:first-child {
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2.5))};
  }

  :host(.verticalLayout) .row {
    text-align: left;
  }

  :host(.verticalLayout) .row--bottom {
    justify-content: flex-start;
  }

  :host(.verticalLayout) .row__userName {
    margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
  }
`, Wo = {
        userProperties: {type: Object},
        userStarsTotal: {type: String},
        userFluxTotal: {type: String},
        verticalLayout: {type: Boolean}
    };
    customElements.define("gu-user-details", (0, ee.x)({
        renderer: function Ss({userProperties: G, userStarsTotal: l = "0", userFluxTotal: E = "0", verticalLayout: j}) {
            return (0, H.d4)(() => {
                j ? this.classList.add("verticalLayout") : this.classList.remove("verticalLayout")
            }, [j]), e.dy`
    <div class="side side--left">
      <gu-simple-text kind="small" fontWeight="bold" fillColor=${n.colors.gold[300]} class="side__part side__part--flux">
        <gu-icon iconLigature="flux_symbol" class="side__part__icon"></gu-icon>
        ${E || "0"} FLUX
      </gu-simple-text>

      <gu-simple-text
        kind="small"
        fontWeight="bold"
        fillColor=${n.colors.apocyan[300]}
        class="side__part side__part--stars"
      >
        <gu-icon iconLigature="collectable_stars" class="side__part__icon"></gu-icon>
        ${l || "0"} STARS
      </gu-simple-text>
      <div class="side__hoverGradient"></div>
    </div>
  `
        }, props: {properties: Wo, styles: Po}
    }));
    var Qs = o(66974);
    const ko = ["xx-small", "x-small", "small", "medium", "large"],
        Js = {"xx-small": "10px", "x-small": "12px", small: "14px", medium: "16px", large: "20px"},
        Xs = {"xx-small": "18px", "x-small": "20px", small: "22px", medium: "24px", large: "28px"},
        wo = {light: 100, regular: 300, "semi-bold": 500, bold: 700, "extra-bold": 900};
    var qs;
    let zt = qs = class extends e.oi {
        constructor() {
            super(...arguments), this.fontWeight = "regular", this.fontStyle = "regular", this.align = "center", this.plain = !1, this.responsiveSizes = []
        }

        static get styles() {
            return e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    display: inline;
    font-family: 'Open Sans', sans-serif;
    ${(0, t.asCssProp)(f.uA.enhancedTextRenderingStyles)};
    font-size: ${(0, t.asCssProp)(Js.medium)};
  }

  :host:not([plain]) {
    line-height: ${(0, t.asCssProp)(Xs.medium)};
  }

  ${(0, t.asCssProp)(ko.map(G => e.iv`
          :host([size=${(0, t.asCssProp)(G)}]),
          :host([size=${(0, t.asCssProp)(G)}]) ::slotted(*) {
            font-size: ${(0, t.asCssProp)(Js[G])};
          }

          :host([size='${(0, t.asCssProp)(G)}]):not([plain']),
          :host([size='${(0, t.asCssProp)(G)}]):not([plain']) ::slotted(*) {
            line-height: ${(0, t.asCssProp)(Xs[G])};
          }
        `).join("\n"))}

  :host([fontStyle='italic']),
  :host([fontStyle='italic']) ::slotted(*) {
    font-style: italic;
  }

  ${(0, t.asCssProp)(Object.keys(wo).map(G => e.iv`
          :host([fontWeight=${(0, t.asCssProp)(G)}]),
    :host([fontWeight=${(0, t.asCssProp)(G)}]) ::slotted(*) {
            font-weight: ${wo[G]};
          }
        `).join("\n"))}

  ${(0, t.asCssProp)(Qs.textAlignRules)}
  ${(0, t.asCssProp)(je.fillColoringRules)}
`
        }

        static hasColoringPropertyChanged(l) {
            return l.has("fillColor") || l.has("fillGradient") || l.has("fillGradientTarget")
        }

        updated(l) {
            if (qs.hasColoringPropertyChanged(l)) {
                const {fillColor: E, fillGradient: j, fillGradientTarget: oe} = this;
                (0, g.updateColoringVariables)({component: this, fillColor: E, fillGradient: j, fillGradientTarget: oe})
            }
        }

        generateMediaQueries() {
            const {breakpointSizeMapping: l} = n.breakpoints, {asCssProp: E} = f.ZB;
            return this.responsiveSizes.length ? e.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveSizes.map(({breakpoint: j, size: oe = "small"}) => e.iv`
                @media screen and (min-width: ${E(l[j])}) {
                  :host(.overWrite[size='${E(this.size)}']),
                  :host(.overWrite[size='${E(this.size)}']) ::slotted(*) {
                    font-size: ${E(Js[oe])} !important;
                  }

                  :host(.overWrite[size='${E(this.size)}']):not([plain]),
                  :host(.overWrite[size='${E(this.size)}']):not([plain]) ::slotted(*) {
                    line-height: ${E(Xs[oe])} !important;
                  }
                }
              `)}
          </style>
        ` : null
        }

        render() {
            return this.responsiveSizes.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), e.dy`
      ${this.generateMediaQueries()}
      <slot data-test-id="body-text-slot"></slot>
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: String, reflect: !0})], zt.prototype, "size", void 0), (0, i.gn)([(0, p.C)({
        type: String,
        reflect: !0
    })], zt.prototype, "fontWeight", void 0), (0, i.gn)([(0, p.C)({
        type: String,
        reflect: !0
    })], zt.prototype, "fontStyle", void 0), (0, i.gn)([(0, p.C)({type: String})], zt.prototype, "align", void 0), (0, i.gn)([(0, p.C)({type: String})], zt.prototype, "fillColor", void 0), (0, i.gn)([(0, p.C)({type: String})], zt.prototype, "fillGradient", void 0), (0, i.gn)([(0, p.C)({type: String})], zt.prototype, "fillGradientTarget", void 0), (0, i.gn)([(0, p.C)({
        type: Boolean,
        reflect: !0
    })], zt.prototype, "plain", void 0), (0, i.gn)([(0, p.C)({type: Array})], zt.prototype, "responsiveSizes", void 0), zt = qs = (0, i.gn)([(0, _.M)("gu-body-text")], zt);

    class kt extends e.oi {
        constructor() {
            super(...arguments), this.disabled = !1, this.valid = void 0, this.dirty = !1, this.status = "initial", this.keyHandlers = {Escape: () => this.reset()}
        }

        static get styles() {
            return e.iv`
      :host([disabled]) {
        filter: grayscale(100%);
      }
    `
        }

        firstUpdated(l) {
            this.initialValue = this.value, this.dispatchEvent(new CustomEvent("registerFormControl", {
                detail: {control: this},
                bubbles: !0,
                composed: !0
            })), super.firstUpdated(l)
        }

        connectedCallback() {
            super.connectedCallback(), this.addEventListener("keyup", this.handleKey), this.addEventListener("input", this.setDirty)
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.removeEventListener("keyup", this.handleKey), this.removeEventListener("input", this.setDirty)
        }

        setDirty() {
            this.dirty = !0
        }

        update(l) {
            this.status = this.disabled ? "disabled" : this.dirty ? this.valid ? "valid" : "invalid" : "initial", super.update(l)
        }

        handleKey(l) {
            if (this.disabled) return;
            const E = this.keyHandlers[l.code];
            E && E(l)
        }

        reset() {
            this.value = this.initialValue, this.dirty = !1
        }
    }

    (0, i.gn)([(0, p.C)()], kt.prototype, "name", void 0), (0, i.gn)([(0, p.C)()], kt.prototype, "value", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean
    })], kt.prototype, "disabled", void 0), (0, i.gn)([(0, p.C)()], kt.prototype, "valid", void 0), (0, i.gn)([(0, lt.S)()], kt.prototype, "dirty", void 0), (0, i.gn)([(0, lt.S)()], kt.prototype, "status", void 0);
    let ps = class extends kt {
        constructor() {
            super(...arguments), this.size = "normal"
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: inline;
      }

      .checkbox__input {
        cursor: pointer;
        display: inline-block;
        width: 20px;
        height: 20px;
        appearance: none;
        border-radius: 2px;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        margin: 0 8px 0 0;
        transition: background-size 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        outline: none;
        background-size: 0 0;
      }

      .checkbox__input:focus {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      :host([size='large']) .checkbox__input {
        width: 24px;
        height: 24px;
        padding: 11px;
      }

      .checkbox__input:checked {
        background-image: url("data:image/svg+xml,%3Csvg width='10' height='8' viewBox='0 0 10 8' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath fill-rule='evenodd' clip-rule='evenodd' d='M2 3L4 5L8 0L10 1L4 8L0 4L2 3Z' fill='%238BE1E0'%3E%3C/path%3E%3C/svg%3E");
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .checkbox__input:indeterminate {
        background-image: linear-gradient(
          0deg,
          ${(0, t.asCssProp)(n.colors.gunmetal[900])} 45%,
          ${(0, t.asCssProp)(n.colors.apocyan[300])} 45%,
          ${(0, t.asCssProp)(n.colors.apocyan[300])} 55%,
          ${(0, t.asCssProp)(n.colors.gunmetal[900])} 55%
        );
        background-size: 60%;
        background-repeat: no-repeat;
        background-position: center;
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .checkbox__label {
        position: relative;
        display: flex;
        place-content: center stretch;
        place-items: center;
        flex: 1 0 auto;
      }

      .checkbox__input:focus {
        box-shadow: 0 0 6px ${(0, t.asCssProp)(n.colors.apocyan[300])}, 0 0 2px ${(0, t.asCssProp)(n.colors.apocyan[300])} inset;
      }
    `
        }

        getInputHandler(l) {
            return E => {
                E.stopPropagation(), this.updateValue(l, E.target.checked), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
            }
        }

        onChange(l) {
            l.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        updateValue(l, E) {
            this.value = E
        }

        activate() {
            const l = this.renderRoot.querySelector("input");
            l && l.click()
        }

        unfocus(l) {
            l.x > 0 && l.y > 0 && l.target.blur()
        }

        render() {
            return e.dy`
      <input
        type="checkbox"
        class="checkbox__input"
        @input=${this.getInputHandler(!0)}
        @change=${this.onChange}
        @click=${this.unfocus}
        .checked=${this.value}
        .indeterminate="${void 0 === this.value}"
        .disabled=${this.disabled}
        data-test-id="checkbox-native-element"
      />
    `
        }
    };
    (0, i.gn)([(0, p.C)()], ps.prototype, "size", void 0), ps = (0, i.gn)([(0, _.M)("gu-checkbox")], ps);
    let Ps = class extends ps {
        constructor() {
            super(...arguments), this.options = [], this.value = []
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        place-content: center space-between;
        margin: 8px 0 16px 0;
        gap: 8px;
      }

      :host([layout='vertical']) {
        flex-direction: column;
      }
    `
        }

        updateValue(l, E) {
            E ? this.value.splice(this.value.push(l)) : this.value.splice(this.value.indexOf(l), 1)
        }

        activate() {
            const l = this.renderRoot.querySelector("input");
            l && l.focus()
        }

        render() {
            return e.dy`
      ${this.options.map(l => e.dy`
          <label class="checkbox__label">
            <input
              type="checkbox"
              class="checkbox__input"
              @input=${this.getInputHandler(l.value)}
              @change=${this.onChange}
              @click=${this.unfocus}
              .checked=${!!this.value.find(E => E == l.value)}
              .disabled=${this.disabled}
              data-test-id="checkbox-native-element"
            />
            <gu-body-text size="medium" plain="true">${l.label}</gu-body-text>
          </label>
        `)}
    `
        }
    };
    (0, i.gn)([(0, p.C)()], Ps.prototype, "options", void 0), Ps = (0, i.gn)([(0, _.M)("gu-checkbox-group")], Ps);
    var ks = o(30252);
    let eo = class extends e.oi {
        constructor() {
            super(...arguments), this.controls = []
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
      }
    `
        }

        connectedCallback() {
            super.connectedCallback(), this.addEventListener("registerFormControl", this.registerControl), this.addEventListener("implicitSubmit", this.handleSubmissionRequest)
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.removeEventListener("registerFormControl", this.registerControl), this.removeEventListener("implicitSubmit", this.handleSubmissionRequest)
        }

        registerControl(l) {
            l.stopPropagation(), this.controls.push(l.detail.control)
        }

        handleSubmissionRequest(l) {
            l.stopPropagation();
            const E = this.findInvalidControl();
            E ? E.activate() : this.submit()
        }

        findInvalidControl() {
            return this.controls.find(l => !l.valid)
        }

        submit() {
            this.dispatchEvent(new CustomEvent("submit", {detail: {values: this.controls.reduce((l, E) => (l[E.name] = E.value, l), {})}}))
        }

        render() {
            return e.dy`<slot></slot>`
        }
    };
    (0, i.gn)([(0, ks.v)("", !0)], eo.prototype, "slotted", void 0), eo = (0, i.gn)([(0, _.M)("gu-form")], eo);
    let ls = class extends e.oi {
        constructor() {
            super(...arguments), this.for = "", this.id = `gu-label-${(0, et.v4)()}`
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        place-content: center flex-start;
        cursor: default;
        pointer-events: all;
      }
    `
        }

        connectedCallback() {
            super.connectedCallback(), this.addEventListener("click", this.onClick), this.associate()
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.removeEventListener("click", this.onClick)
        }

        associate(l) {
            Promise.resolve().then(() => {
                const E = this.findTarget();
                !E || E === this.target || (this.target && this.target.removeAttribute("aria-labelledby"), E.setAttribute("aria-labelledby", this.id), this.target = E)
            })
        }

        findTarget() {
            return this.for ? this.getRootNode().getElementById(this.for) : this.slotted ? this.slotted.find(l => l instanceof kt) : void 0
        }

        onClick(l) {
            const E = this.target;
            E && l.target !== E && E.activate()
        }

        render() {
            return e.dy`<slot @slotchange=${this.associate} class="label__slot"></slot>`
        }
    };
    (0, i.gn)([(0, p.C)()], ls.prototype, "for", void 0), (0, i.gn)([(0, p.C)({reflect: !0})], ls.prototype, "id", void 0), (0, i.gn)([(0, ks.v)("", !0)], ls.prototype, "slotted", void 0), ls = (0, i.gn)([(0, _.M)("gu-label")], ls);
    const Ho = {
        email: "email",
        phone: "tel",
        name: "text",
        search: "search",
        text: "text",
        url: "url",
        number: "number"
    }, S = {invalid: "alert_triangle", valid: "checkbox_tick", initial: ""};
    let V = class extends kt {
        constructor() {
            super(...arguments), this.size = "normal", this.type = "text", this.placeholder = "", this.keyHandlers = {
                Escape: () => this.reset(),
                Enter: () => this.dispatchEvent(new CustomEvent("implicitSubmit", {
                    detail: {control: this},
                    bubbles: !0,
                    composed: !0
                }))
            }
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        margin: 8px 0 16px 0;
        position: relative;
      }

      .input__input {
        appearance: none;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        background: transparent;
        display: inline-block;
        height: 26px;
        border-radius: 2px;
        padding: 4px 28px 4px 8px;
        transition: background-color 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        flex: 1 1 auto;
        outline: none;
        color: ${(0, t.asCssProp)(n.colors.light[100])};
        font-size: 16px;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      .input__input::selection {
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .input__input::placeholder {
        color: ${(0, t.asCssProp)(n.colors.light[700])};
      }

      .input__input--status-initial {
        padding-right: 8px;
      }

      .input__icon {
        position: absolute;
        display: flex;
        top: 0;
        right: 0;
        width: 36px;
        height: 36px;
        font-size: 24px;
        place-content: center;
        place-items: center;
        color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        transition: color 0.2s ease;
        pointer-events: none;
      }

      :host(:focus-within) .input__input {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      :host(:focus-within) .input__icon {
        color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .input__icon--status-initial {
        opacity: 0;
      }

      .input__input--status-invalid,
      :host(:focus-within) .input__input--status-invalid {
        border-color: ${(0, t.asCssProp)(n.colors.alert)};
      }

      .input__icon--status-invalid,
      :host(:focus-within) .input__icon--status-invalid {
        color: ${(0, t.asCssProp)(n.colors.alert)};
      }

      :host([size='large']) .input__input {
        height: 30px;
        font-size: 16px;
        padding: 4px 36px 4px 8px;
      }

      :host([size='large']) .input__icon {
        height: 38px;
        width: 38px;
        font-size: 28px;
      }
    `
        }

        onChange() {
            this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        onInput(l) {
            this.value = l.target.value, l.stopPropagation(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
        }

        activate() {
            this.input.focus()
        }

        getInputType() {
            return Ho[this.type]
        }

        renderIcon() {
            return e.dy`
      <gu-icon class="input__icon input__icon--status-${this.status}" iconLigature=${S[this.status]}></gu-icon>
    `
        }

        render() {
            var l;
            return e.dy`
      <input
        type=${this.getInputType()}
        .value=${null !== (l = this.value) && void 0 !== l ? l : ""}
        class="input__input input__input--status-${this.status}"
        @input="${this.onInput}"
        @change=${this.onChange}
        placeholder=${this.placeholder}
        .disabled=${this.disabled}
        data-test-id="input-native-element"
      />
      ${this.renderIcon()}
    `
        }
    };
    (0, i.gn)([(0, p.C)()], V.prototype, "size", void 0), (0, i.gn)([(0, p.C)()], V.prototype, "type", void 0), (0, i.gn)([(0, p.C)()], V.prototype, "placeholder", void 0), (0, i.gn)([(0, k.I)(".input__input")], V.prototype, "input", void 0), V = (0, i.gn)([(0, _.M)("gu-input")], V);
    var u = o(61462);
    const A = {hidden: "password", visible: "text"},
        Q = {visible: "action_showPassword", hidden: "action_hidePassword"};
    let fe = class extends V {
        constructor() {
            super(...arguments), this.mode = "hidden"
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      .input__toggle {
        display: block;
        position: absolute;
        top: 0;
        right: 0;
        width: 36px;
        height: 36px;
        outline: none;
        text-decoration: none;
      }

      .input__toggle:focus {
        box-shadow: 0 0 2px ${(0, t.asCssProp)(n.colors.apocyan[300])}, 0 0 8px ${(0, t.asCssProp)(n.colors.apocyan[300])} inset;
      }

      .input__icon--status-initial {
        opacity: 1;
      }

      :host([disabled]) .input__toggle {
        ${(0, t.asCssProp)((0, u.userSelect)("none"))};
      }
    `
        }

        toggleMode(l) {
            l.stopPropagation(), l.preventDefault(), !this.disabled && (this.mode = "hidden" === this.mode ? "visible" : "hidden", l.detail > 0 && this.input.focus())
        }

        getInputType() {
            return A[this.mode]
        }

        renderIcon() {
            return e.dy`
      <a
        class="input__toggle"
        href="javascript:void(0)"
        @click=${this.toggleMode}
        @keyup=${l => l.stopPropagation()}
        data-test-id="password-input-visibility-toggle"
      >
        <gu-icon
          class="input__icon input__icon--status-${this.status} input__icon--mode-${this.mode}"
          iconLigature=${Q[this.mode]}
        ></gu-icon>
      </a>
    `
        }
    };
    (0, i.gn)([(0, lt.S)()], fe.prototype, "mode", void 0), fe = (0, i.gn)([(0, _.M)("gu-password-input")], fe);
    let st = class extends kt {
        constructor() {
            super(...arguments), this.options = [], this.size = "normal"
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        place-content: center space-between;
        margin: 8px 0 16px 0;
        gap: 8px;
      }

      .radio-button__input {
        ${(0, t.asCssProp)((0, u.userSelect)("none"))}
        cursor: pointer;
        display: inline-block;
        width: 20px;
        height: 20px;
        appearance: none;
        border-radius: 50%;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        margin: 0 8px 0 0;
        transition: background-size 0.2s ease, border-color 0.2s ease;
        outline: none;
        background: radial-gradient(
            circle at center,
            ${(0, t.asCssProp)(n.colors.apocyan[300])} 50%,
            ${(0, t.asCssProp)(n.colors.gunmetal[900])} 50%
          )
          no-repeat center;
        background-size: 0 0;
      }

      .radio-button__input:focus {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .radio-button__input:checked,
      :host([size='large']) .radio-button__input:checked {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        background-size: 18px 18px;
      }

      :host([size='large']) .radio-button__input {
        width: 24px;
        height: 24px;
      }

      .radio-button__label {
        display: flex;
        place-content: center stretch;
        place-items: center;
        flex: 1 0 auto;
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      :host([layout='vertical']) {
        flex-direction: column;
      }

      .radio-button__input:focus,
      .radio-button__input:focus-within {
        box-shadow: 0 0 6px ${(0, t.asCssProp)(n.colors.apocyan[300])}, 0 0 2px ${(0, t.asCssProp)(n.colors.apocyan[300])} inset;
      }
    `
        }

        getInputHandler(l) {
            return E => {
                E.stopPropagation(), this.value = l, this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
            }
        }

        onChange(l) {
            l.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        activate() {
            let l = this.renderRoot.querySelector("input:checked");
            l || (l = this.renderRoot.querySelector("input")), l.focus()
        }

        unfocus(l) {
            l.x > 0 && l.y > 0 && l.target.blur()
        }

        render() {
            return e.dy`
      ${this.options.map(l => e.dy`
          <label class="radio-button__label">
            <input
              type="radio"
              class="radio-button__input"
              @input=${this.getInputHandler(l.value)}
              @change=${this.onChange}
              @click=${this.unfocus}
              .checked=${this.value == l.value}
              .disabled=${this.disabled}
              data-test-id="radio-button-native-element"
            />
            <gu-body-text size="medium" plain="true">${l.label}</gu-body-text>
          </label>
        `)}
    `
        }
    };
    (0, i.gn)([(0, p.C)()], st.prototype, "options", void 0), (0, i.gn)([(0, p.C)()], st.prototype, "size", void 0), st = (0, i.gn)([(0, _.M)("gu-radio-button-group")], st);
    let it = class extends kt {
        constructor() {
            super(...arguments), this.value = 50, this.min = 0, this.max = 100, this.updateHelper = l => {
                requestAnimationFrame(() => requestAnimationFrame(l))
            }
        }

        static get styles() {
            const l = e.iv`linear-gradient(90deg, #AFFAED 0%, #8BE1E0 50.34%, #54BBCD 100%)`, E = e.iv`
      border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      height: 26px;
      width: 8px;
      border-radius: 4px;
      background: ${(0, t.asCssProp)(n.colors.apocyan[100])};
      cursor: pointer;
    `, j = e.iv`
      width: 100%;
      height: 16px;
      cursor: pointer;
      border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      box-shadow: 0 0 6px rgba(0, 0, 0, 0.35);
      border-radius: 4px;
    `, oe = e.iv`
      background: ${l}, ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      background-size: var(--value, 0) 100%;
      background-repeat: no-repeat;
      transition: var(--transition, 'background-size') 0.5s ease;
    `;
            return e.iv`
      ${super.styles}

      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        margin: 8px 0 16px 0;
      }

      .range__input {
        -webkit-appearance: none;
        width: 100%;
        background: transparent;
        outline: none;
      }

      .range__input:focus {
        outline: none;
      }

      .range__input::-webkit-slider-thumb {
        -webkit-appearance: none;
        margin-top: -7px;
        ${E}
      }

      .range__input::-moz-range-thumb {
        ${E}
      }

      .range__input::-ms-thumb {
        ${E}
      }

      .range__input::-webkit-slider-runnable-track {
        ${j}
        ${oe}
      }

      .range__input::-moz-range-track {
        ${j}
        ${oe}
      }

      .range__input::-ms-track {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        ${j}
      }

      .range__input::-ms-fill-lower {
        background: ${l};
        border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      }

      .range__input::-ms-fill-upper {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])}
        border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
      }

      .range__input:focus,
      .range__input:focus-within,
      .range__input:focus::-webkit-slider-thumb,
      .range__input:focus-within::-webkit-slider-thumb {
        box-shadow: 0 0 8px ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }
    `
        }

        updateSelectedRangeHighlight() {
            this.style.setProperty("--value", Math.min(100, Math.max(0, (this.value - this.min) / (this.max - this.min) * 100)) + "%")
        }

        onInput(l) {
            l.stopPropagation();
            const E = l.target;
            void 0 !== E.value && (this.value = parseFloat(E.value), this.updateSelectedRangeHighlight(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}})))
        }

        onChange(l) {
            l.stopPropagation(), this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        update(l) {
            super.update(l), l.has("value") && this.updateHelper(this.updateSelectedRangeHighlight.bind(this))
        }

        firstUpdated(l) {
            super.firstUpdated(l), this.style.setProperty("--value", "0%"), this.updateHelper = E => E(), this.style.setProperty("--transition", "background-size"), setTimeout(() => {
                this.style.setProperty("--transition", "none")
            }, 500)
        }

        activate() {
            this.input.focus()
        }

        render() {
            return e.dy`
      <input
        type="range"
        class="range__input"
        .value=${this.value}
        min=${this.min}
        max=${this.max}
        @input=${this.onInput}
        @change=${this.onChange}
        .disabled=${this.disabled}
        data-test-id="range-input-native-element"
      />
    `
        }
    };
    (0, i.gn)([(0, p.C)()], it.prototype, "value", void 0), (0, i.gn)([(0, p.C)()], it.prototype, "min", void 0), (0, i.gn)([(0, p.C)()], it.prototype, "max", void 0), (0, i.gn)([(0, k.I)(".range__input")], it.prototype, "input", void 0), it = (0, i.gn)([(0, _.M)("gu-range-input")], it);
    const _t = e.iv`
  :host {
    display: flex;
    position: relative;
    height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
    z-index: 1;
  }

  :host([theme='gunmetal']) {
    --gu-select-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    --gu-select-border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    --gu-select-menu-webkit-scrollbar-thumb-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    --gu-select-option-hover-background-color: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
  }

  :host([theme='white']) {
    --gu-select-background-color: ${(0, t.asCssProp)(n.colors.light[100])};
    --gu-select-border: 2px solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-select-menu-webkit-scrollbar-thumb-background-color: ${(0, t.asCssProp)(n.colors.light[500])};
    --gu-select-option-hover-background-color: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host([theme='black']) {
    --gu-select-background-color: ${(0, t.asCssProp)(n.colors.dark[900])};
    --gu-select-border: 2px solid ${(0, t.asCssProp)(n.colors.dark[300])};
    --gu-select-menu-webkit-scrollbar-thumb-background-color: ${(0, t.asCssProp)(n.colors.dark[500])};
    --gu-select-option-hover-background-color: ${(0, t.asCssProp)(n.colors.dark[700])};
  }

  .select__container {
    position: absolute;
    display: flex;
    flex-direction: column;
    background-color: var(--gu-select-background-color);
    border: var(--gu-select-border);
    border-radius: 2px;
    box-sizing: border-box;
    min-height: 36px;
    cursor: pointer;
  }

  :host([stretch]) .select__container {
    width: 100%;
  }

  .select__heading {
    display: flex;
    justify-content: space-between;
    align-items: center;
    vertical-align: center;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(1.75))};
    height: 20px;
    line-height: 20px;
    outline: none;
    text-decoration: none;
  }

  .select__icon {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .select__menu {
    display: flex;
    flex-direction: column;
    max-height: 200px;
    overflow-y: auto;
    border-top: var(--gu-select-border);
    transition: max-height 0.2s ease;
  }

  .select__menu::-webkit-scrollbar {
    width: 12px;
    border: 2px solid transparent;
  }

  .select__menu::-webkit-scrollbar-thumb {
    background-color: --gu-select-menu-webkit-scrollbar-thumb-background-color;
    border-radius: 6px;
    background-clip: padding-box;
    border: 4px solid rgba(0, 0, 0, 0);
  }

  .select__menu--visibility-hidden {
    border: 0px;
    max-height: 0;
  }

  .select__option {
    width: 100%;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))} ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    box-sizing: border-box;
    text-decoration: none;
  }

  .select__option:hover {
    background-color: var(--gu-select-option-hover-background-color);
  }

  .select__option--selected {
    font-weight: bold;
  }

  :host(:focus-within) .select__container {
    border: var(--gu-select-border);
  }

  :host([disabled]) .select__heading {
    ${(0, t.asCssProp)((0, u.userSelect)("none"))};
  }
`;
    let ut = class extends kt {
        constructor() {
            super(...arguments), this.placeholder = "", this.options = [], this.stretch = !1, this.open = !1
        }

        static get styles() {
            return _t
        }

        update(l) {
            var E;
            if (l.has("disabled") && this.disabled && (this.open = !1), l.has("options")) {
                const j = this.findSelectedOption();
                this.value = null !== (E = null == j ? void 0 : j.value) && void 0 !== E ? E : void 0
            }
            (l.has("value") || l.has("options")) && this.notify(), super.update(l)
        }

        toggleOpen(l) {
            this.open = !this.disabled && (void 0 !== l ? l : !this.open)
        }

        getToggleIcon() {
            return this.open ? "chevron_up" : "chevron_down"
        }

        renderSelectOptions(l) {
            return e.dy`
      ${this.options.map(E => e.dy`<a
            href="javascript:void(0)"
            @click=${() => this.selectOption(E)}
            class=${(0, C.$)({select__option: !0, "select__option--selected": this.value === E.value})}
            ><gu-body-text
              size="medium"
              fillColor=${l}
              fontWeight=${this.value === E.value ? "bold" : "normal"}
              plain="true"
              >${E.label}</gu-body-text
            >
          </a>`)}
    `
        }

        selectOption(l) {
            this.value = l ? l.value : void 0, this.open = !1
        }

        notify() {
            this.dispatchEvent(new CustomEvent("input", {
                composed: !0,
                bubbles: !0,
                detail: {value: this.value}
            })), this.dispatchEvent(new CustomEvent("change", {composed: !0, bubbles: !0, detail: {value: this.value}}))
        }

        activate() {
            this.link.focus()
        }

        handleKeyPress(l) {
            if (!this.disabled) switch (l.code) {
                case"Enter":
                case"Space":
                    this.toggleOpen();
                    break;
                case"Escape":
                    this.toggleOpen(!1)
            }
        }

        findSelectedOption() {
            return this.options.find(l => l.value === this.value)
        }

        getTextColor() {
            let l;
            switch (this.theme) {
                case"gunmetal":
                default:
                    l = "colors.light.300";
                    break;
                case"white":
                    l = "colors.dark.300";
                    break;
                case"black":
                    l = "colors.light.500"
            }
            return l
        }

        render() {
            const l = this.findSelectedOption(), E = this.getTextColor();
            return e.dy`
      <div class="select__container">
        <a
          href="javascript:void(0)"
          @click=${() => this.toggleOpen()}
          @keyup=${this.handleKeyPress}
          data-test-id="select.heading.anchor"
          class="select__heading"
          tabindex="0"
        >
          <gu-body-text
            size="medium"
            data-test-id="select.heading.text"
            fillColor="${E}"
            plain="true"
            fontWeight="bold"
          >
            ${this.value && l ? l.label : this.placeholder}
          </gu-body-text>
          <gu-icon class="select__icon" iconLigature="${this.getToggleIcon()}" fillColor="${E}"></gu-icon>
        </a>
        <div
          class=${(0, C.$)({select__menu: !0, "select__menu--visibility-hidden": !this.open})}
        >
          ${this.renderSelectOptions(E)}
        </div>
      </div>
    `
        }
    };
    (0, i.gn)([(0, p.C)()], ut.prototype, "theme", void 0), (0, i.gn)([(0, p.C)()], ut.prototype, "placeholder", void 0), (0, i.gn)([(0, p.C)({type: Array})], ut.prototype, "options", void 0), (0, i.gn)([(0, p.C)({
        type: Boolean,
        reflect: !0
    })], ut.prototype, "stretch", void 0), (0, i.gn)([(0, lt.S)()], ut.prototype, "open", void 0), (0, i.gn)([(0, k.I)(".select__heading")], ut.prototype, "link", void 0), ut = (0, i.gn)([(0, _.M)("gu-select")], ut);
    let Pe = class extends kt {
        constructor() {
            super(...arguments), this.size = "normal", this.placeholder = ""
        }

        static get styles() {
            return e.iv`
      ${super.styles}

      :host {
        display: flex;
        margin: 8px 0 16px 0;
        position: relative;
      }

      .textarea__input {
        appearance: none;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        background: transparent;
        display: inline-block;
        height: 26px;
        border-radius: 2px;
        padding: 4px 8px 4px 8px;
        transition: background-color 0.2s ease, border-color 0.2s ease, padding 0.2s ease;
        flex: 1 1 auto;
        outline: none;
        color: ${(0, t.asCssProp)(n.colors.light[100])};
        font-size: 16px;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        min-height: 5em;
      }

      .textarea__input::selection {
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .textarea__input::placeholder {
        color: ${(0, t.asCssProp)(n.colors.light[700])};
      }

      .textarea__input--status-initial {
        padding-right: 8px;
      }

      :host(:focus-within) .textarea__input {
        border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
      }

      .textarea__input--status-invalid,
      :host(:focus-within) .textarea__input--status-invalid {
        border-color: ${(0, t.asCssProp)(n.colors.alert)};
      }

      :host([size='large']) .textarea__input {
        height: 30px;
        font-size: 16px;
        padding: 4px 36px 4px 8px;
      }
    `
        }

        onChange() {
            this.dispatchEvent(new CustomEvent("change", {detail: {value: this.value}}))
        }

        onInput(l) {
            this.value = l.target.value, l.stopPropagation(), this.dispatchEvent(new CustomEvent("input", {detail: {value: this.value}}))
        }

        activate() {
            this.input.focus()
        }

        render() {
            var l;
            return e.dy`
      <textarea
        class="textarea__input textarea__input--status-${this.status}"
        @input="${this.onInput}"
        @change=${this.onChange}
        placeholder=${this.placeholder}
        .disabled=${this.disabled}
        data-test-id="textarea-native-element"
        .value=${null !== (l = this.value) && void 0 !== l ? l : ""}
      ></textarea>
    `
        }
    };
    (0, i.gn)([(0, p.C)()], Pe.prototype, "size", void 0), (0, i.gn)([(0, p.C)()], Pe.prototype, "placeholder", void 0), (0, i.gn)([(0, k.I)(".textarea__input")], Pe.prototype, "input", void 0), Pe = (0, i.gn)([(0, _.M)("gu-textarea")], Pe);
    let ze = class extends e.oi {
        constructor() {
            super(...arguments), this.errors = [], this.enabled = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        cursor: default;
        pointer-events: all;
        color: ${(0, t.asCssProp)(n.colors.alert)};
        margin: -12px 0 0 0;
        padding: 0 0 16px 0;
      }

      ::slotted(*) {
        display: block;
        max-height: 0;
        opacity: 0;
        transition: max-height 0.2s ease, opacity 0.2s ease;
        overflow: hidden;
      }

      ::slotted(.validation-errors--active) {
        max-height: 1.4em;
        opacity: 1;
      }
    `
        }

        updated(l) {
            super.updated(l), l.has("errors") && this.updateErrors()
        }

        updateErrors() {
            Promise.resolve().then(() => {
                !this.slotted || this.slotted.forEach(l => l.classList.toggle("validation-errors--active", !(!this.enabled || !this.errors.find(E => E === l.getAttribute("key")))))
            })
        }

        render() {
            return e.dy`<slot @slotchange=${this.updateErrors()}></slot>`
        }
    };
    (0, i.gn)([(0, p.C)()], ze.prototype, "errors", void 0), (0, i.gn)([(0, p.C)()], ze.prototype, "enabled", void 0), (0, i.gn)([(0, ks.v)("", !0, "[key]")], ze.prototype, "slotted", void 0), ze = (0, i.gn)([(0, _.M)("gu-validation-errors")], ze);
    const m = (0, r.gridUnits)(.5), D = e.iv`
  :host {
    width: 100%;
    display: flex;
  }

  .innerContainer {
    width: 100%;
    padding-bottom: 140%;
    margin: auto;
    position: relative;
    cursor: pointer;
  }

  .innerContainer__board {
    position: absolute;
    height: 71%;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
  }

  .innerContainer__trinkets {
    padding-top: ${(0, t.asCssProp)(m)};
    position: absolute;
    bottom: 0;
    left: 0;
    height: 28%;
    width: 100%;
    display: flex;
  }

  .innerContainer__trinkets__trinket,
  .innerContainer__trinkets__emptyTrinket {
    flex: 1;
    overflow: hidden;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
    position: relative;
  }

  .innerContainer__trinkets__emptyTrinket {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    color: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }

  .innerContainer__trinkets__trinket::after,
  .innerContainer__trinkets__emptyTrinket::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 1px rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.white))}, 0.15);
  }

  .innerContainer__trinkets__trinket--left {
    margin-right: ${(0, t.asCssProp)(m)};
    order: -1;
  }

  .innerContainer__trinkets__trinket--right {
    order: 2;
  }

  .innerContainer__trinkets__emptyTrinket:first-of-type:not(:last-of-type) {
    margin-right: ${(0, t.asCssProp)(m)};
  }
`;
    let a = class extends e.oi {
        static get styles() {
            return D
        }

        renderIcon() {
            return this.trinkets.length > 0 ? e.dy`` : e.dy`<gu-icon
      iconLigature="empty"
      class="innerContainer__trinkets__emptyTrinket"
      data-test-id="loadout-display-icon"
    ></gu-icon>`
        }

        render() {
            return e.dy`
      <div class="innerContainer">
        <gu-loadout-part
          class="innerContainer__board"
          .board=${this.board}
          ?owned=${!0}
          ?hideCount=${!0}
          ?noAspectRatio=${!0}
          ?hideText=${this.hideText}
          data-test-id="loadout-display-board"
        ></gu-loadout-part>
        <div class="innerContainer__trinkets">
          ${this.trinkets.map(l => e.dy`
              <gu-loadout-part
                class=${(0, C.$)({
                innerContainer__trinkets__trinket: !0,
                "innerContainer__trinkets__trinket--left": 1 === l.slot,
                "innerContainer__trinkets__trinket--right": 2 === l.slot
            })}
                .trinket=${l}
                ?hideText=${!0}
                ?noAspectRatio=${!0}
                ?hideCount=${!0}
                data-test-id="loadout-display-trinket"
              ></gu-loadout-part>
            `)}
          ${this.renderIcon()}
        </div>
      </div>
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: Object})], a.prototype, "board", void 0), (0, i.gn)([(0, p.C)({type: Array})], a.prototype, "trinkets", void 0), (0, i.gn)([(0, p.C)({type: Boolean})], a.prototype, "hideText", void 0), a = (0, i.gn)([(0, _.M)("gu-loadout-display")], a), o(90004);
    let F = class extends e.oi {
        constructor() {
            super(...arguments), this.size = 40, this.type = "godsunchained", this.images = {
                godsunchained: "/assets/images/logo--gods-unchained.svg",
                "godsunchained-icon": "/assets/images/internal-logos/logo--gods-unchained-icon.png",
                immutable: "/assets/images/internal-logos/logo--immutable.svg",
                "immutable-icon": "/assets/images/logo--immutable-icon.svg"
            }
        }

        static get properties() {
            return {size: {type: Number}, type: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
      }

      .logo {
        max-width: var(--logoSize, 400px);
        width: 100%;

        /* Allow to make image non-interactable with host styles */
        -webkit-touch-callout: inherit;
        -webkit-user-drag: inherit;
      }

      .logo--icon {
        width: var(--logoSize, 40px);
      }
    `
        }

        render() {
            return this.size && this.style.setProperty("--logoSize", `${this.size}px`), e.dy`
      <img class="${this.size < 100 ? "logo--icon" : "logo"}" alt="Gods Unchained Logo" src="${this.images[this.size < 100 ? `${this.type}-icon` : this.type]}" />
    `
        }
    };
    F = (0, i.gn)([(0, _.M)("gu-logo")], F);
    const ge = G => !G || G.length < 11 ? G : `${G.slice(0, 6)}...${G.slice(G.length - 4)}`;
    let De = class extends e.oi {
        constructor() {
            super(...arguments), this.walletDropdownMenuOptions = [], this.onGuUnlinkClick = (() => {
                this.dispatchEvent(new CustomEvent("onGuUnlinkClick", {
                    composed: !0,
                    bubbles: !0,
                    detail: {address: this.address}
                }))
            }).bind(this), this.onDropdownSelect = (l => {
                l.stopPropagation(), this.dispatchEvent(new CustomEvent("onDropdownSelect", {
                    composed: !0,
                    bubbles: !0,
                    detail: {address: this.address, menuItem: l.detail}
                }))
            }).bind(this)
        }

        static get styles() {
            return e.iv`
      :host {
        position: relative;
        display: flex;
        align-items: center;
        justify-content: space-between;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        background-color: ${(0, t.asCssProp)(n.colors.light[100])};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid ${(0, t.asCssProp)(n.colors.light[300])};
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      .defaultSticker {
        position: absolute;
        top: 0;
        left: 0;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(1.5))};
        background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
        border-radius: 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0;
      }

      .address__text--regular {
        display: none;
      }

      .address__shortener {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(34))};
      }

      .action {
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.dark[300])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        display: flex;
        justify-content: center;
        cursor: pointer;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        user-select: none;
      }

      .action:hover {
        background: ${(0, t.asCssProp)(n.colors.dark[300])};
      }

      .action:hover .action__icon {
        color: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .action__icon {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      .imxLinked_status {
        display: flex;
        align-items: center;
        justify-content: center;
        cursor: default;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        margin-left: auto;
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(41.25))};
      }

      .imxLinked_status__tick {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        }
        .address__text--small {
          display: none;
        }
        .address__text--regular {
          display: unset;
        }
        .imxLinked_status {
          margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        }
      }
    `
        }

        render() {
            return e.dy`
      ${this.defaultWalletEnabled && this.defaultWallet ? e.dy` <gu-paragraph-text
            text="Default"
            data-test-id="wallet-display-default-sticker"
            kind="tag"
            class="defaultSticker"
            fillColor="${n.colors.light[100]}"
            align="center"
          >
          </gu-paragraph-text>` : null}

      <gu-paragraph-text
        title=${this.address}
        class="address"
        data-test-id="wallet-display-address"
        fillColor="colors.dark.500"
        kind="small"
        .responsiveKind=${[{breakpoint: "small", kind: "large"}]}
        fontWeight="bold"
        align="left"
      >
        <span class="address__text--regular"> ${this.address} </span>
        <span class="address__text--small"> ${ge(this.address)} </span>
        <span></span>
      </gu-paragraph-text>

      ${this.imxLinked ? e.dy`
            <!-- Can't replace this with gu-standard-button as it's non standard -->
            <gu-plain-square-button
              backgroundFillColor="colors.light.300"
              borderColor="colors.light.300"
              fillColor="colors.dark.300"
              icon="immutableX"
              class="imxLinked_status"
              iconColor="colors.dark.300"
              data-test-id="wallet-display-imx-linked-status"
            >
              <gu-icon
                fillColor="colors.apocyan.500"
                iconLigature="checkbox_tick"
                class="imxLinked_status__tick"
              ></gu-icon>
              Linked to
            </gu-plain-square-button>
          ` : e.dy`
            <!-- Can't replace this with gu-standard-button as it's non standard -->
            <gu-plain-square-button
              backgroundFillColor="colors.light.300"
              borderColor="colors.light.300"
              fillColor="colors.light.500"
              class="imxLinked_status"
              data-test-id="wallet-display-imx-linked-status"
            >
              Unlinked
            </gu-plain-square-button>
          `}
      ${this.defaultWalletEnabled ? e.dy`
            <gu-dropdown-menu @onSelect=${this.onDropdownSelect} .items=${this.walletDropdownMenuOptions}>
              <div class="action" slot="dropdownControl">
                <gu-icon
                  class="action__icon"
                  data-test-id="wallet-display-action-icon"
                  fillColor="colors.dark.300"
                  iconLigature="action_kebabMenu"
                ></gu-icon>
              </div>
            </gu-dropdown-menu>
          ` : e.dy`
            <div class="action">
              <gu-icon
                @click=${this.onGuUnlinkClick}
                class="action__icon"
                data-test-id="wallet-display-action-icon"
                fillColor="colors.dark.300"
                iconLigature="action_trash"
              ></gu-icon>
            </div>
          `}
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: String})], De.prototype, "address", void 0), (0, i.gn)([(0, p.C)({type: Boolean})], De.prototype, "imxLinked", void 0), (0, i.gn)([(0, p.C)({type: Boolean})], De.prototype, "defaultWalletEnabled", void 0), (0, i.gn)([(0, p.C)({type: Boolean})], De.prototype, "defaultWallet", void 0), (0, i.gn)([(0, p.C)({type: Array})], De.prototype, "walletDropdownMenuOptions", void 0), De = (0, i.gn)([(0, _.M)("gu-wallet-display")], De);
    let He = class extends e.oi {
        constructor() {
            super(...arguments), this.userWallets = [], this.imxLinkLoading = !1, this.connectedWallet = "", this.connectedWalletGuLinked = !1, this.guLinkLoading = !1, this.walletActionLoading = "", this.defaultWalletEnabled = !1, this.walletDropdownMenuOptions = [], this.showEmptyState = !0, this.showImxLink = !1, this.allImxLinked = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
        background-color: ${(0, t.asCssProp)(n.colors.light[100])};
        border: ${(0, t.asCssProp)(n.colors.light[500])} solid ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        border-top: ${(0, t.asCssProp)(n.colors.gold[500])} solid ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(6))} ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.2);
      }

      .emptyState {
        display: flex;
        flex-direction: column;
        width: 100%;
        justify-content: center;
        align-items: center;
      }

      .emptyState__icon {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      .emptyState__text {
        max-width: 450px;
      }

      .walletsList {
        display: flex;
        flex-direction: column;
        width: 100%;
      }

      .walletsList__header {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
      }

      .walletsList__header__ctaSection {
        display: flex;
        flex-direction: column;
      }

      .walletsList__header__ctaSection__helpButton {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(34))};
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      .walletsList__header__ctaSection__imxLinkButton {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(56))};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }

      .walletsList__header__text {
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }

      .walletsList__wallet {
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))} 0;
      }

      .walletsList__helpText {
      }
      .walletList__addWallet {
        display: flex;
        justify-content: center;
        align-items: center;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1.5))} 0;
        box-shadow: 1px 1px 4px rgba(0, 0, 0, 0.2);
      }
      .walletList__addWallet--added {
        cursor: default;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(10))} ${(0, t.asCssProp)((0, r.gridUnits)(12.5))};
        }
        .walletsList__header {
          flex-direction: row;
        }
        .walletsList__header__ctaSection__imxLinkButton {
          margin-left: auto;
        }
        .walletsList__header__ctaSection {
          flex-direction: row;
        }

        .walletsList__header__ctaSection__helpButton {
          margin-top: 0;
        }
        .walletList__addWallet {
          height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        }
      }
    `
        }

        update(l) {
            this.showEmptyState = !(this.userWallets && this.userWallets.length || this.connectedWallet && this.connectedWallet.length), this.showImxLink = this.userWallets && this.userWallets.length > 0, this.allImxLinked = this.userWallets && this.userWallets.every(E => E.imx_linked), super.update(l)
        }

        onImxLinkClick() {
            this.dispatchEvent(new CustomEvent("onImxLinkClick", {composed: !0}))
        }

        onImxLinkHelpClick() {
            this.dispatchEvent(new CustomEvent("onImxLinkHelpClick", {composed: !0}))
        }

        onGuLinkClick() {
            this.dispatchEvent(new CustomEvent("onGuLinkClick", {bubbles: !1}))
        }

        renderDisconnected() {
            return e.dy`
      <gu-vertical-space class="emptyState" both="2x-large">
        <gu-icon class="emptyState__icon" fillColor="colors.dark.500" iconLigature="action_wallet"></gu-icon>
        <gu-paragraph-text align="center" class="emptyState__text" fillColor="colors.dark.300">
          No wallet detected. Connect your web wallet to get started.
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }

        renderImxLink() {
            return this.showImxLink ? this.allImxLinked ? e.dy`
        <div class="walletsList__header__ctaSection">
          <gu-standard-button
            theme="light"
            icon="immutableX"
            iconPosition="right"
            class="walletsList__header__ctaSection__imxLinkButton"
            type="primary"
            .disabled=${!0}
          >
            All wallets linked to
          </gu-standard-button>
        </div>
      ` : e.dy`
      <div class="walletsList__header__ctaSection">
        <gu-standard-button
          theme="light"
          icon="immutableX"
          iconPosition="right"
          class="walletsList__header__ctaSection__imxLinkButton"
          type="primary"
          @click=${this.onImxLinkClick}
          .loading=${this.imxLinkLoading}
        >
          Link a wallet to
        </gu-standard-button>

        <gu-standard-button
          theme="light"
          class="walletsList__header__ctaSection__helpButton"
          type="secondary"
          @click=${this.onImxLinkHelpClick}
        >
          How to link?
        </gu-standard-button>
      </div>
    ` : e.dy``
        }

        renderWallet() {
            return this.connectedWallet && this.connectedWallet.length ? this.connectedWalletGuLinked ? e.dy`
        <!-- Can't replace this with gu-standard-button as it's non standard -->
        <gu-plain-square-button
          backgroundFillColor="colors.light.100"
          borderColor="colors.light.300"
          fillColor="colors.dark.300"
          iconColor="colors.god.nature.secondary"
          icon="checkbox_tick"
          leftIconPosition="true"
          class="walletList__addWallet walletList__addWallet--added"
        >
          Current wallet added
        </gu-plain-square-button>
      ` : e.dy`
      <!-- Can't replace this with gu-standard-button as it's non standard -->
      <gu-plain-square-button
        backgroundFillColor="colors.light.100"
        borderColor="colors.light.300"
        fillColor="colors.apocyan.500"
        class="walletList__addWallet"
        @click=${this.onGuLinkClick}
        icon="add_item"
        leftIconPosition="true"
        loading=${this.guLinkLoading ? "true" : "false"}
        loadingColor="apocyan"
      >
        Add wallet to GU
      </gu-plain-square-button>
    ` : e.dy``
        }

        render() {
            return this.showEmptyState ? this.renderDisconnected() : e.dy`
      <gu-vertical-space class="walletsList">
        <gu-vertical-space class="walletsList__header" bottom="large">
          <gu-paragraph-text class="walletsList__header__text" fillColor="colors.dark.300">
            Wallets connected to Gods Unchained account
          </gu-paragraph-text>
          ${this.renderImxLink()}
        </gu-vertical-space>
        ${this.userWallets.map(l => this.walletActionLoading === l.address ? e.dy`
              <div class="walletList__addWallet"><gu-rectangular-spinner color="apocyan"></gu-rectangular-spinner></div>
            ` : e.dy` <gu-wallet-display
            address=${l.address}
            .walletDropdownMenuOptions=${this.walletDropdownMenuOptions}
            ?imxLinked="${l.imx_linked}"
            ?defaultWallet="${l.is_default}"
            ?defaultWalletEnabled="${this.defaultWalletEnabled}"
            class="walletsList__wallet"
          ></gu-wallet-display>`)}
        ${this.renderWallet()}
        <gu-vertical-space top="large">
          <gu-paragraph-text align="left" class="walletsList__helpText" fillColor="colors.dark.300">
            If you have any questions, please contact
            <a target="_blank" href="https://support.godsunchained.com">support</a>.
          </gu-paragraph-text>
        </gu-vertical-space>
      </gu-vertical-space>
    `
        }
    };
    (0, i.gn)([(0, p.C)()], He.prototype, "userWallets", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "imxLinkLoading", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "connectedWallet", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "connectedWalletGuLinked", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "guLinkLoading", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "walletActionLoading", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "defaultWalletEnabled", void 0), (0, i.gn)([(0, p.C)()], He.prototype, "walletDropdownMenuOptions", void 0), (0, i.gn)([(0, lt.S)()], He.prototype, "showEmptyState", void 0), (0, i.gn)([(0, lt.S)()], He.prototype, "showImxLink", void 0), (0, i.gn)([(0, lt.S)()], He.prototype, "allImxLinked", void 0), He = (0, i.gn)([(0, _.M)("gu-wallets-list")], He);
    let Ke = class extends e.oi {
        constructor() {
            super(...arguments), this.connectedWallet = "", this.webWalletConnecting = !1
        }

        onConnectBrowserWalletClick() {
            this.dispatchEvent(new CustomEvent("onConnectBrowserWalletClick", {bubbles: !1}))
        }

        onHardwareWalletClick() {
            this.dispatchEvent(new CustomEvent("onHardwareWalletClick", {bubbles: !1}))
        }

        onLearnMoreClick() {
            this.dispatchEvent(new CustomEvent("onLearnMoreClick", {bubbles: !1}))
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: column;
        width: 100%;
        background: ${(0, t.asCssProp)(n.colors.dark[900])};
        border-radius: 4px 4px 0 0;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(10))} ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        justify-content: space-between;
      }
      .leftSection {
        display: flex;
        flex-direction: column;
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      }
      .rightSection {
        display: flex;
        flex-direction: column;
        align-items: flex-start;
      }
      .rightSection__button {
        min-width: ${(0, t.asCssProp)((0, r.gridUnits)(50))};
      }
      .rightSection__button--connectedWallet {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        cursor: default;
      }
      .rightSection__button--connectedWallet__connectedDot {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        border-radius: 50%;
        background: ${(0, t.asCssProp)(n.colors.god.nature.secondary)};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }
      .rightSection__button--walletAdded {
        cursor: default;
      }
      .rightSection__button__address {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(30))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
        .rightSection {
          flex-direction: row;
          align-items: center;
        }
        .rightSection__button--connectedWallet {
          margin-bottom: 0;
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        :host {
          flex-direction: row;
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(10))} ${(0, t.asCssProp)((0, r.gridUnits)(12.5))};
        }

        .leftSection {
          margin-bottom: 0;
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space class="leftSection">
        <gu-heading-text fillGradient="gradients.gold.simple" fillGradientTarget="bottom" size="large">
          WALLETS
        </gu-heading-text>

        <gu-vertical-space class="leftSection__infoCtas">
          <gu-simple-text-button @click=${this.onLearnMoreClick}>
            Learn more about wallet linking
          </gu-simple-text-button>
          |
          <gu-simple-text-button @click=${this.onHardwareWalletClick}> Hardware Wallet? </gu-simple-text-button>
        </gu-vertical-space>
      </gu-vertical-space>
      <gu-vertical-space class="rightSection">
        ${this.connectedWallet ? e.dy`
              <!-- We need a dot icon before we can switch to using standard button -->
              <gu-plain-square-button
                backgroundFillColor="colors.dark.700"
                borderColor="colors.dark.700"
                iconColor="colors.god.nature.secondary"
                fillColor="colors.light.700"
                class="rightSection__button rightSection__button--connectedWallet"
                title=${this.connectedWallet}
              >
                <div class="rightSection__button--connectedWallet__connectedDot"></div>
                Current web wallet: ${ge(this.connectedWallet)}
              </gu-plain-square-button>

              <!-- <gu-standard-button
                class="rightSection__button rightSection__button--connectedWallet"
                theme="dark"
                type="subtle"
                title=${this.connectedWallet}
              >
                <div class="rightSection__button--connectedWallet__connectedDot"></div>
                Current web wallet: ${ge(this.connectedWallet)}
              </gu-standard-button> -->
            ` : e.dy`
              <gu-standard-button
                class="rightSection__button rightSection__button--connectedWallet"
                theme="dark"
                icon="action_wallet"
                class="rightSection__button"
                @click=${this.onConnectBrowserWalletClick}
                type="primary"
                .loading=${this.webWalletConnecting}
              >
                Connect Web Wallet
              </gu-standard-button>
            `}
      </gu-vertical-space>
    `
        }
    };
    (0, i.gn)([(0, p.C)()], Ke.prototype, "connectedWallet", void 0), (0, i.gn)([(0, p.C)()], Ke.prototype, "webWalletConnecting", void 0), Ke = (0, i.gn)([(0, _.M)("gu-wallets-header")], Ke);
    let yt = class extends e.oi {
        constructor() {
            super(...arguments), this.goldBorder = null
        }

        static get properties() {
            return {goldBorder: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        position: absolute !important;
        height: 100%;
        width: 100%;
        background: ${(0, t.asCssProp)(n.gradients.gunmetal.mirror("left"))};
      }

      .border {
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        height: 100%;
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        position: relative;
      }

      .borderGoldTop:before {
        content: '';
        display: block;
        position: absolute;
        width: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(1))});
        left: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        top: ${(0, t.asCssProp)((0, r.gridUnits)(-.5))};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.mirror("right"))};
        border-image-slice: 1;
        border-image-width: ${(0, t.asCssProp)((0, r.gridUnits)(1))} 0 0 0;
      }
    `
        }

        render() {
            return e.dy`<div class="border ${"top" === this.goldBorder ? "borderGoldTop" : ""}"></div>`
        }
    };
    yt = (0, i.gn)([(0, _.M)("gu-modal-background")], yt);
    const gt = `\nlinear-gradient(\n  90deg,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.gunmetal[900]))}, 1) 0%,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.gunmetal[900]))}, 0.8) 25%,\n  rgba(0, 0, 0, 0) 50%,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.gunmetal[900]))}, 0.8) 75%,\n  rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.gunmetal[900]))}, 1) 100%\n)`;
    let Jt = class extends e.oi {
        static get properties() {
            return {background: {type: String}}
        }

        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        position: relative;
        flex-direction: column;
        justify-content: center;
        width: 1200px;
        height: 800px;
        max-height: 85vh;
        border: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};

        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        background-size: cover;
      }

      :host([background='nature']) {
        background-image: ${(0, t.asCssProp)(gt)},
          url('https://images.godsunchained.com/god-art/1024/nature--aeona.webp');
        background-position-y: -238px;
      }

      :host([background='war']) {
        background-image: ${(0, t.asCssProp)(gt)},
          url('https://images.godsunchained.com/god-art/1024/war--auros.webp');
        background-position-y: -195px;
      }

      :host([background='magic']) {
        background-image: ${(0, t.asCssProp)(gt)},
          url('https://images.godsunchained.com/god-art/1024/magic--elyrian.webp');
        background-position-y: -195px;
      }

      :host([background='death']) {
        background-image: ${(0, t.asCssProp)(gt)},
          url('https://images.godsunchained.com/god-art/1024/death--malissus.webp');
        background-position-y: -330px;
      }

      :host([background='light']) {
        background-image: ${(0, t.asCssProp)(gt)},
          url('https://images.godsunchained.com/god-art/1024/light--thaeriel.webp');
        background-position-y: -267px;
      }

      :host([background='deception']) {
        background-image: ${(0, t.asCssProp)(gt)},
          url('https://images.godsunchained.com/god-art/1024/deception--ludia.webp');
        background-position-y: -336px;
      }

      :host([background='neutral']) {
        background-image: ${(0, t.asCssProp)(gt)}, url('/assets/images/misc-art/misc-art--C8-026.webp');
        background-position-y: -18px;
      }

      /* This could be improved by rendering any artId, something to look into later.
        Will be difficult though as each bg image will require a different background-position-y
      */
      :host([background='87055']) {
        background-image: ${(0, t.asCssProp)(gt)}, url('https://images.godsunchained.com/art2/1024/87055.webp');
        background-position-y: -180px;
      }

      .closeIcon {
        position: absolute;
        font-size: 24px;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        cursor: pointer;
      }
      .topSection {
        position: relative;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
      }

      .topSection__divider {
        position: absolute;
        bottom: 0;
        width: 100%;
      }

      .bottomSection {
        position: relative;
        display: flex;
        flex-direction: column;
        flex-grow: 1;
        overflow-y: auto;
        justify-content: center;
      }

      .bottomSection__cta {
        display: flex;
        justify-content: center;
      }

      .bottomSection__content {
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(24))};
        overflow-y: auto;
      }

      .bottomSection__background {
        background: #0f1b27;
        opacity: 0.9;
        width: 100%;
        height: 100%;
        position: absolute;
      }

      slot[name='bottomSectionContent']::slotted(*) {
        position: relative;
      }
    `
        }

        closeModal() {
            this.dispatchEvent(new CustomEvent("onCloseSealedDeckModal", {bubbles: !1}))
        }

        render() {
            return this.setAttribute("background", this.background), e.dy`
      <gu-vertical-space class="topSection">
        <gu-icon
          fillColor="colors.apocyan.300"
          iconLigature="close_x"
          class="closeIcon"
          @click=${this.closeModal}
        ></gu-icon>
        <slot name="topSectionSubtitle"></slot>
        <slot name="topSectionTitle"></slot>
        <slot name="topSectionHelptext"></slot>
        <img
          class="topSection__divider"
          src="/assets/images/ui-embellishments/ui--divider-simple-gradient.svg"
          alt="small divider"
        />
      </gu-vertical-space>
      <gu-vertical-space class="bottomSection">
        <div class="bottomSection__background"></div>
        <div class="bottomSection__content">
          <slot name="bottomSectionContent"></slot>
        </div>
        <gu-vertical-space class="bottomSection__cta" bottom="2x-large" top="large">
          <slot name="bottomSectionCta"></slot>
        </gu-vertical-space>
      </gu-vertical-space>
    `
        }
    };
    Jt = (0, i.gn)([(0, _.M)("gu-two-section-modal")], Jt);
    let ve = class extends e.oi {
        constructor() {
            super(...arguments), this.entries = {}, this.active = [], this.visible = !0, this.type = "main"
        }

        static get styles() {
            return e.iv`
      :host {
        font-size: 0 !important;
        line-height: 0 !important;
        height: 100%;
        display: flex;
        justify-content: flex-end;
      }

      .navigation {
        width: 0;
        height: 100%;
        display: flex;
        flex-direction: column;
        place-items: flex-end flex-start;
        justify-content: space-between;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        border-right: 1px solid ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        overflow: hidden;
        transition: width ease 0.3s;
        margin-left: -1px;
      }

      .navigation__items {
        width: 100%;
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        padding: 0;
        margin: -1px 0;
        align-items: flex-end;
      }

      .navigation__item {
        width: 100%;
        padding: 0;
        margin: 0;
        cursor: pointer;
        border-bottom: 1px solid black;
        text-transform: uppercase;
        white-space: nowrap;
        overflow: hidden;
      }

      .navigation__item__link {
        display: flex;
        flex-direction: column;
        flex: 0 0 auto;
        justify-content: center;
        text-decoration: none;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0;
        border-left: 2px solid transparent;
        border-right: 2px solid transparent;
        margin: -1px 0;
        box-sizing: border-box;

        -webkit-user-drag: none;
        -webkit-touch-callout: none;
      }

      .navigation--type-main.navigation--visible {
        width: 80px;
      }

      .navigation--type-main .navigation__items {
        width: 80px;
      }

      .navigation--type-main .navigation__item__link {
        color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        min-height: ${(0, t.asCssProp)((0, r.gridUnits)(16))};
        align-items: center;
      }

      .navigation--type-sub.navigation--visible {
        width: 130px;
      }

      .navigation--type-sub .navigation__items {
        width: 130px;
      }

      .navigation--type-sub .navigation__item__link {
        color: white;
        min-height: ${(0, t.asCssProp)((0, r.gridUnits)(10))};
        padding: 0 8px;
      }

      .navigation__item__icon {
        display: block;
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(7))};
        line-height: 0;
      }

      .navigation__item__name {
        max-width: 100%;
      }

      .navigation__item--active {
        background: linear-gradient(
          90deg,
          ${(0, t.asCssProp)(n.colors.gunmetal[700] + "00")} 0%,
          ${(0, t.asCssProp)(n.colors.gunmetal[700] + "ff")} 100%
        );
      }

      .navigation__item--active .navigation__item__link {
        border-right: 2px solid #c6a052;
      }

      .navigation__item--active .navigation__item__icon,
      .navigation__item--active .navigation__item__name {
        ${(0, t.asCssProp)(n.gradients.textFill(n.gradients.gold.simple("bottom")))};
      }
    `
        }

        onClick(l) {
            this.dispatchEvent(new CustomEvent("navigation", {detail: l, bubbles: !0, composed: !0}))
        }

        renderIcon(l) {
            return l.logo ? e.dy` <gu-logo class="navigation__item__icon" type="${l.logo}" size="28"></gu-logo> ` : l.icon ? e.dy` <gu-icon class="navigation__item__icon" iconLigature=${l.icon}></gu-icon> ` : e.dy``
        }

        renderEntry(l) {
            const E = "main" === this.type ? "micro" : "tag";
            return e.dy`
      <li
        class=${(0, C.$)({
                navigation__item: !0,
                "navigation__item--active": this.active && this.active.indexOf(l.key) > -1
            })}
      >
        <a
          class="navigation__item__link"
          href="javascript:void(0);"
          @click=${() => this.onClick(l)}
          data-test-id="navigation.item.link"
        >
          ${this.renderIcon(l)}

          <gu-simple-text class="navigation__item__name" kind="${E}" fontWeight="bold">
            ${l.name}
          </gu-simple-text>
        </a>
      </li>
    `
        }

        renderGroups(l) {
            return e.dy`
      ${Object.keys(l).map(E => e.dy`
          <ul class="navigation__items navigation__items--${E}">
            ${this.renderEntries(l[E])}
          </ul>
        `)}
    `
        }

        renderEntries(l) {
            return e.dy`
      ${Object.keys(l).map(E => this.renderEntry(Object.assign(Object.assign({}, l[E]), {key: E})))}
    `
        }

        render() {
            return e.dy`
      <nav
        class="${(0, C.$)({navigation: !0, [`navigation--type-${this.type}`]: !0, "navigation--visible": this.visible})}"
      >
        ${this.renderGroups(this.entries)}
        <slot></slot>
      </nav>
    `
        }
    };
    (0, i.gn)([(0, p.C)()], ve.prototype, "entries", void 0), (0, i.gn)([(0, p.C)()], ve.prototype, "active", void 0), (0, i.gn)([(0, p.C)()], ve.prototype, "visible", void 0), (0, i.gn)([(0, p.C)()], ve.prototype, "type", void 0), ve = (0, i.gn)([(0, _.M)("gu-navigation")], ve);
    let be = class extends e.oi {
        constructor() {
            super(...arguments), this.highPriority = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: block;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        border-radius: 50%;
        background: ${(0, t.asCssProp)(n.colors.gold[300])};
        box-shadow: 0 0 0 ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      :host(.highPriority) {
        background: ${(0, t.asCssProp)(n.colors.god.war.primary)};
      }
    `
        }

        render() {
            return this.highPriority ? this.classList.add("highPriority") : this.classList.remove("highPriority"), e.dy``
        }
    };
    (0, i.gn)([(0, p.C)({type: Boolean})], be.prototype, "highPriority", void 0), be = (0, i.gn)([(0, _.M)("gu-notification-bubble")], be);
    const $t = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host([theme='light']) {
    --pageTextColor: ${(0, t.asCssProp)(n.colors.light[900])};
    --activePageTextColor: ${(0, t.asCssProp)(n.colors.light[100])};
    --activePageBackgroundColor: ${(0, t.asCssProp)(n.colors.dark[300])};
  }

  :host([theme='dark']) {
    --pageTextColor: ${(0, t.asCssProp)(n.colors.light[700])};
    --activePageTextColor: ${(0, t.asCssProp)(n.colors.dark[900])};
    --activePageBackgroundColor: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  :host {
    display: flex;
    font-weight: bold;
    font-size: 20px;
    color: var(--pageTextColor);
  }

  .pagination__chevron,
  .pagination__index {
    cursor: pointer;
    padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3))};
    margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }

  .pagination__index.pagination__active-index {
    border-radius: 2px;
    color: var(--activePageTextColor);
    background-color: var(--activePageBackgroundColor);
  }
`;
    let Dt = class extends e.oi {
        constructor() {
            super(...arguments), this.numberOfPages = 3, this.theme = "light"
        }

        previousPage() {
            this.currentPage > 1 && this.goToPage(this.currentPage - 1)
        }

        nextPage() {
            this.currentPage < this.numberOfPages && this.goToPage(this.currentPage + 1)
        }

        goToPage(l) {
            l !== this.currentPage && this.dispatchGoToPageEvent(l)
        }

        dispatchGoToPageEvent(l) {
            const E = new CustomEvent("go-to-page", {detail: {pageNumber: l}});
            this.dispatchEvent(E)
        }

        render() {
            return e.dy`
      <gu-icon class="pagination__chevron" iconLigature="chevron_left" @click=${this.previousPage}></gu-icon>

      ${new Array(this.numberOfPages).fill("").map((l, E) => e.dy`<span
              class="pagination__index ${E + 1 === this.currentPage ? "pagination__active-index" : ""}"
              @click=${() => this.goToPage(E + 1)}
              >${E + 1}</span
            >`)}

      <gu-icon class="pagination__chevron" iconLigature="chevron_right" @click=${this.nextPage}></gu-icon>
    `
        }
    };
    Dt.styles = $t, (0, i.gn)([(0, p.C)()], Dt.prototype, "currentPage", void 0), (0, i.gn)([(0, p.C)()], Dt.prototype, "numberOfPages", void 0), (0, i.gn)([(0, p.C)()], Dt.prototype, "theme", void 0), Dt = (0, i.gn)([(0, _.M)("gu-pagination")], Dt);
    let Wt = class extends e.oi {
        constructor() {
            super(...arguments), this.progress = 0, this.coloring = "apocyan"
        }

        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: block;
        border: solid 1px var(--gu-blue-hover);
        height: 20px;
        padding: 4px;
        position: relative;
        border-radius: 4px;
      }

      :host::before {
        content: '';
        position: absolute;
        top: 1px;
        left: 1.5px;
        height: calc(100% - 2px);
        width: calc(100% - 3px);
      }

      .progress-bar-border {
        position: absolute;
        top: 1px;
        left: 1px;
        bottom: 1px;
        right: 10px;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(10, 10))};
      }

      .progress-bar-border::before {
        content: '';
        display: block;
        height: 100%;
        width: var(--barWidth);
        border-radius: 2px;
      }

      .progress-bar {
        position: absolute;
        top: 1px;
        left: 0;
        bottom: 1px;
        right: 0;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(9, 9, 2))};
      }

      .progress-bar::before {
        content: '';
        display: block;
        height: 100%;
        width: calc(var(--barWidth) - 1px);
        border-radius: 2px;
      }

      :host .progress-bar-border::before {
        background: var(--gu-blue);
      }

      :host .progress-bar::before {
        background: var(--gu-blue);
      }

      :host([size='small']) {
        height: 12px;
        padding: 2px 3px;
      }

      :host([size='small']) .progress-bar-border {
        top: 2px;
        left: 3px;
        bottom: 2px;
        right: 3px;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(4, 4))};
      }

      :host([size='small']) .progress-bar {
        top: 1px;
        left: 0;
        bottom: 1px;
        right: 0;
        ${(0, t.asCssProp)((0, t.drawHexShapePolygonMask)(3, 3, 2))};
      }

      :host([size='small']) .progress-bar-border::before,
      :host([size='small']) .progress-bar::before {
        border-radius: 1px;
      }
    `
        }

        render() {
            return this.setAttribute("coloring", this.coloring), this.style.setProperty("--barWidth", `${this.progress}%`), e.dy`
      <div class="progress-bar-border">
        <div class="progress-bar" data-progress="${this.progress}" data-test-id="progress-bar"></div>
      </div>
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: Number})], Wt.prototype, "progress", void 0), (0, i.gn)([(0, p.C)({type: String})], Wt.prototype, "coloring", void 0), Wt = (0, i.gn)([(0, _.M)("gu-hex-progress-bar")], Wt);
    let Ht = class extends e.oi {
        constructor() {
            super(...arguments), this.progress = 0, this.withLogo = !1
        }

        static get properties() {
            return {progress: {type: Number}, withLogo: {type: Boolean}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        width: 100%;
        flex: 1 1 auto;
        align-items: center;
      }

      .progress-bar {
        display: flex;
        border-radius: 5px;
        position: relative;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        height: 10px;
        width: 100%;
      }

      .progress-bar__fill {
        border-radius: 4px;
        height: 8px;
        background: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        margin: 1px;
        transition: width 500ms linear;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        .box__filling {
          /* Looks better at larger viewports like this. */
          margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
          height: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(2))});
        }
        .bridge {
          /* width: ${(0, t.asCssProp)((0, r.gridUnits)(4))}; */
        }
      }
    `
        }

        render() {
            return e.dy`
      ${this.withLogo ? e.dy`<gu-logo></gu-logo>` : ""}
      <div class="progress-bar">
        <div class="progress-bar__fill" style="width: ${(0, t.asCssProp)(this.progress.toString() + "%")};"></div>
      </div>
    `
        }
    };
    Ht = (0, i.gn)([(0, _.M)("gu-progress-bar")], Ht);

    class gs extends e.oi {
        constructor() {
            super(...arguments), this.active = !1, this.ready = Promise.resolve()
        }

        static get styles() {
            return e.iv`
      :host(:not([active])) {
        opacity: 0;
        display: none;
      }
    `
        }

        prepare() {
            return (0, i.mG)(this, void 0, void 0, function* () {
            })
        }

        wait(l) {
            return new Promise(E => setTimeout(E, l))
        }

        update(l) {
            l.has("active") && this.active && this.execute(), super.update(l)
        }

        execute() {
            return (0, i.mG)(this, void 0, void 0, function* () {
                yield this.ready, yield this.run(), this.notifyCompletion()
            })
        }

        connectedCallback() {
            this.ready = this.prepare(), super.connectedCallback()
        }

        notifyCompletion() {
            this.dispatchEvent(new CustomEvent("complete", {bubbles: !0, composed: !0}))
        }
    }

    (0, i.gn)([(0, p.C)({type: Boolean, reflect: !0})], gs.prototype, "active", void 0);
    let es = class extends gs {
        constructor() {
            super(...arguments), this.progress = 0
        }

        static get styles() {
            return e.iv`
      ${super.styles}
      ${e.iv`
  :host([active]) {
    transform: translateY(60%);

    animation-duration: 0.3s;
    animation-name: scrollIn;
    animation-timing-function: ease-in;
    animation-fill-mode: forwards;
  }

  @keyframes scrollIn {
    from {
      opacity: 0;
      transform: translateY(60%);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
`}

      :host {
        width: 100%;
        display: flex;
        flex-direction: column;
        gap: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
      }

      .milestone-progress__rewards {
        display: flex;
        width: 100%;
        justify-content: center;
      }

      .milestone-progress__rewards-progress-text {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
      }

      .milestone-progress__rewards-titles {
        display: flex;
        width: 100%;
        justify-content: center;

        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
      }

      .milestone-progress__rewards-title {
        width: 20%;
      }

      .milestone-progress__previous-rewards ::slotted(*) {
        transform: translateX(50%);
      }

      .milestone-progress__next-rewards ::slotted(*) {
        transform: translateX(-50%);
      }

      .milestone-progress__rewards-spacer {
        display: flex;
        justify-content: center;
        width: ${(0, t.asCssProp)(this.progressWidth.toString())}%;
      }

      .milestone-progress__progress-bar-container {
        width: 100%;
        height: 16px;
        display: flex;

        box-sizing: border-box;
        padding: 2px 0 2px 0;
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        border: 1px solid ${(0, t.asCssProp)(n.colors.gold[500])};
        border-left: 0;
        border-right: 0;
      }

      .milestone-progress__progress-bar-overlay {
        position: relative;
      }

      .milestone-progress__gradient {
        position: absolute;
        ${(0, t.inset)(0)};
        z-index: 2;
        background: linear-gradient(90deg, #0a0a0add 0%, #00000000 7%, #00000000 93%, #0a0a0add 100%);
      }

      .milestone-progress__extra {
        flex-grow: 1;
      }

      .milestone-progress__extra--first {
        background-color: ${(0, t.asCssProp)(n.colors.apocyan[500])};
      }

      .milestone-progress__extra--last {
        background-color: ${(0, t.asCssProp)(n.colors.apocyan[100])};
      }

      .milestone-progress__container {
        position: relative;
        width: ${(0, t.asCssProp)(`${this.progressWidth.toString()}%`)};
      }

      .milestone-progress__milestone-gem-outer {
        position: absolute;

        width: 18px;
        height: 18px;

        top: 50%;

        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        border: 2px solid ${(0, t.asCssProp)(n.colors.gold[500])};

        z-index: 2;
      }

      .milestone-progress__milestone-gem-outer::before {
        content: '';
        position: absolute;
        ${(0, t.inset)(2)}
        background-image: ${(0, t.asCssProp)(n.gradients.apocyan.simple())};
      }

      .milestone-progress__milestone-gem-inner {
        position: absolute;

        ${(0, t.inset)(4)}

        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};

        z-index: 3;
      }

      .milestone-progress__milestone-gem-inner::before {
        content: '';
        position: absolute;
        display: block;

        ${(0, t.inset)(2)}

        border: 2px solid ${(0, t.asCssProp)(n.colors.god.light.primary)};
        background-image: ${(0, t.asCssProp)(n.gradients.gold.simple("right"))};
        box-shadow: 0px 0px 3px rgba(175, 250, 237, 0.4);
      }

      .milestone-progress__milestone-gem-outer:first-child {
        left: 0;
        transform: translate(-50%, -50%) rotate(45deg);
      }

      .milestone-progress__milestone-gem-outer:last-child {
        right: 0;
        transform: translate(50%, -50%) rotate(45deg);
      }

      /** Unachineved milestone **/
      .milestone-progress__milestone-gem-outer--unachieved::before {
        background-color: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
        background-image: none;
      }

      .milestone-progress__milestone-gem-outer--unachieved .milestone-progress__milestone-gem-inner::before {
        border: 0;
        background-image: none;
        box-shadow: none;
      }

      .milestone-progress__progress-bar {
        position: absolute;
        ${(0, t.inset)(0)}

        z-index: 1;
      }

      .milestone-progress__progress-bar::before {
        content: '';
        position: absolute;
        ${(0, t.inset)(0)}

        width: var(--barWidth);

        border-radius: 4px;
        background-image: ${(0, t.asCssProp)(n.gradients.apocyan.simple("left"))};

        z-index: 1;
      }
    `
        }

        run() {
            return (0, i.mG)(this, void 0, void 0, function* () {
                const l = this.progress >= 100 ? 100 : Math.min(this.progress, 98);
                this.style.setProperty("--barWidth", `${l}%`), yield this.wait(500)
            })
        }

        render() {
            const l = this.progress >= 100 ? 100 : Math.min(this.progress, 98);
            return this.style.setProperty("--barWidth", `${l}%`), e.dy`
      <div class="milestone-progress__rewards">
        <div class="milestone-progress__previous-rewards">
          <slot name="previous-reward-icon"></slot>
        </div>
        <div class="milestone-progress__rewards-spacer">
          <slot name="next-rewards-text"></slot>
        </div>
        <div class="milestone-progress__next-rewards">
          <slot name="next-reward-icon"></slot>
        </div>
      </div>
      <div class="milestone-progress__progress-bar-overlay">
        <div class="milestone-progress__gradient"></div>
        <div class="milestone-progress__progress-bar-container">
          <div class="milestone-progress__extra milestone-progress__extra--first"></div>
          <div class="milestone-progress__container">
            <div
              data-test-id="milestone-progress-bar.gem-start"
              class=${(0, C.$)({
                "milestone-progress__milestone-gem-outer": !0,
                "milestone-progress__milestone-gem-outer--unachieved": 0 === this.progress
            })}
            >
              <div class="milestone-progress__milestone-gem-inner"></div>
            </div>
            <div class="milestone-progress__progress-bar" progress=${this.progress}></div>
            <div
              data-test-id="milestone-progress-bar.gem-end"
              class=${(0, C.$)({
                "milestone-progress__milestone-gem-outer": !0,
                "milestone-progress__milestone-gem-outer--unachieved": this.progress < 100
            })}
            >
              <div class="milestone-progress__milestone-gem-inner"></div>
            </div>
          </div>
          <div
            data-test-id="milestone-progress-bar.trail"
            class=${(0, C.$)({
                "milestone-progress__extra": !0,
                "milestone-progress__extra--last": this.progress >= 100
            })}
          ></div>
        </div>
      </div>
      <div class="milestone-progress__rewards-titles">
        <div class="milestone-progress__rewards-title milestone-progress__previous-rewards">
          <slot name="previous-reward-title"></slot>
        </div>
        <div class="milestone-progress__rewards-spacer"></div>
        <div class="milestone-progress__rewards-title  milestone-progress__next-rewards">
          <slot name="next-reward-title"></slot>
        </div>
      </div>
    `
        }
    };
    es.progressWidth = 60, (0, i.gn)([(0, p.C)({type: Number})], es.prototype, "progress", void 0), es = (0, i.gn)([(0, _.M)("gu-milestone-progress-bar")], es);
    let ws = class extends e.oi {
        constructor() {
            super(...arguments), this.totalSteps = 9, this.filledSteps = 2, this.fillGradient = "gradients.apocyan.simple", this.fillGradientTarget = "bottom", this.bridgeColor = "colors.apocyan.300", this.squareSize = `${(0, r.gridUnits)(4)}`, this.squareBridgeRatio = "3/4"
        }

        static get properties() {
            return {
                filledSteps: {type: Number},
                totalSteps: {type: Number},
                squareSize: {type: String},
                fillGradient: {type: String},
                fillGradientTarget: {type: String},
                bridgeColor: {type: String}
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
      }

      .box {
        display: flex;
        position: relative;
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid;
        border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        position: relative;
        width: var(--squareSize);
        height: var(--squareSize);
        transform: rotate(45deg);
      }

      .box:last-child {
        margin-right: 0;
      }

      .box--filled {
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid;
        border-image-slice: 1;
        border-width: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        border-image-source: var(--backgroundFillGradient);
      }

      .box--filled .box__filling {
        display: block;
      }

      .box__filling {
        display: none;
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        background: var(--backgroundFillGradient);
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(.75))};
        width: 100%;
        height: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(1.5))});
      }

      .bridge {
        margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(-3))};
        margin-right: 0px;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(.25))};
        margin-top: auto;
        margin-bottom: auto;
        /* width: ${(0, t.asCssProp)((0, r.gridUnits)(3))}; */
        width: var(--bridgeSize);

        background: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
      }

      .bridge:last-child {
        display: none;
      }

      .bridge--filled {
        background: var(--backgroundFillColor);
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        .box__filling {
          /* Looks better at larger viewports like this. */
          margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
          height: calc(100% - ${(0, t.asCssProp)((0, r.gridUnits)(2))});
        }
        .bridge {
          /* width: ${(0, t.asCssProp)((0, r.gridUnits)(4))}; */
        }
      }
    `
        }

        render() {
            return (0, g.setPropertyGradientFromVariable)(this.style, this.fillGradient, "--backgroundFillGradient", this.fillGradientTarget), (0, g.setPropertyColorFromVariable)(this.style, this.bridgeColor, "--backgroundFillColor"), this.style.setProperty("--squareSize", this.squareSize), this.style.setProperty("--bridgeSize", `calc(${this.squareSize} * ${this.squareBridgeRatio})`), e.dy`
      ${new Array(this.totalSteps).fill(0).map((l, E) => {
                const j = E < this.filledSteps;
                return e.dy`
          <div class="box ${j ? "box--filled" : ""}">
            <div class="box__filling"></div>
          </div>
          <div class="bridge ${j ? "bridge--filled" : ""}"></div>
        `
            })}
    `
        }
    };
    ws = (0, i.gn)([(0, _.M)("gu-progress-step-counter")], ws);
    let ds = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-flow: column nowrap;
        position: relative;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} 0 0;
      }

      :host::before {
        content: '';
        position: absolute;
        z-index: 1;
        top: 0;
        left: 0;
        width: 100%;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      :host::after {
        content: '';
        position: absolute;
        z-index: 2;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        left: 0;
        width: 100%;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
      }

      .sectionBackground,
      .sectionBackground__picture {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
      }

      .sectionBackground {
        background: ${(0, t.asCssProp)(n.colors.light[100])};
      }

      .sectionBackground__picture {
        opacity: 0.12;
        filter: grayscale(1);
      }

      .sectionBackground__picture__img {
        display: block;
        width: 100%;
        height: 100%;
        object-fit: cover;
      }

      .ribbons {
        position: absolute;
        top: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        left: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(55))};
        display: none;
      }

      .ribbons--right {
        left: auto;
        right: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      }

      .header {
        position: relative;
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      .header__bodyCopy {
        width: 100%;
        margin: 0 auto;
        max-width: 800px;
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(12))};
      }

      .slotContent {
        position: relative;
      }

      @media only screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        .ribbons {
          display: block;
        }
      }
    `
        }

        render() {
            return e.dy`
      <div class="sectionBackground">
        <picture class="sectionBackground__picture">
          <source
            srcset="
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@3x.webp 2250w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@2x.webp 1500w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.webp  750w
            "
            type="image/webp"
          />
          <source
            srcset="
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@3x.jpg 2250w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@2x.jpg 1500w,
              /assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.jpg  750w
            "
            type="image/jpg"
          />
          <img
            src="/assets/images/misc-art/misc-art--outdoor-match-infront-of-palace@1x.jpg"
            alt=""
            class="sectionBackground__picture__img"
          />
        </picture>
      </div>

      <img class="ribbons" src="/assets/images/ui-embellishments/ui--ribbons.svg" alt="Gold and black UI Ribbons" />

      <img
        class="ribbons ribbons--right"
        src="/assets/images/ui-embellishments/ui--ribbons-alt.svg"
        alt="Gold and black UI Ribbons"
      />

      <header class="header">
        <gu-vertical-space top="5x-large" bottom="medium">
          <gu-heading-text size="large" fillColor=${n.colors.dark[900]} align="center"> PRIZE DRAWS </gu-heading-text>
        </gu-vertical-space>

        <gu-paragraph-text class="header__bodyCopy" align="center" size="large" fillColor=${n.colors.dark[700]}>
          Earn draw tickets by purchasing Trial of the Gods packs for a chance to win some truly divine prizes including
          a one-of-a-kind Mythic Card.
        </gu-paragraph-text>

        <gu-vertical-space top="large">
          <gu-simple-text-button href="https://playgu.co/totg-prizes" target="_blank" fillColor=${n.colors.dark[700]}>
            View Prizes
          </gu-simple-text-button>
        </gu-vertical-space>
      </header>

      <div class="slotContent">
        <slot></slot>
      </div>
    `
        }
    };
    ds = (0, i.gn)([(0, _.M)("gu-raffles-and-prizes-section")], ds), o(28917), o(29939);
    let Eo = class extends e.oi {
        static get properties() {
            return {text: {type: String}, iconLigature: {type: String}, imageUrl: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
        position: relative;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(46))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(80))};
        background: linear-gradient(180deg, rgba(255, 255, 255, 0.1) 0%, rgba(15, 27, 39, 0) 100%);
        border: 1px solid;
        border-color: rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.light[100]))}, 0.1);
      }

      .rewardGraphic {
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      }

      .fancyUnderscore {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(25))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(1))};

        /* Unable to use getColor here - it's colors.quality.diamond */
        box-shadow: 0px 0px 8px rgba(148, 230, 251, 0.5);
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        background: linear-gradient(
          270deg,
          rgba(0, 0, 0, 0) -1.52%,
          ${(0, t.asCssProp)(n.colors.apocyan[500])} 33.58%,
          ${(0, t.asCssProp)(n.colors.apocyan[100])} 48.76%,
          ${(0, t.asCssProp)(n.colors.apocyan[500])} 66.2%,
          rgba(0, 0, 0, 0) 102.27%
        );
      }

      .titleText {
        margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        :host {
          width: ${(0, t.asCssProp)((0, r.gridUnits)(57))};
          height: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-reward-graphic
        class="rewardGraphic"
        .imageUrl=${this.imageUrl}
        .iconLigature=${this.iconLigature}
      ></gu-reward-graphic>
      <div class="fancyUnderscore"></div>

      ${this.text ? e.dy`
            <gu-paragraph-text
              class="titleText"
              align="center"
              fillColor="colors.light.100"
              fontWeight="bold"
              kind="large"
              text=${this.text}
            >
            </gu-paragraph-text>
          ` : ""}
    `
        }
    };
    Eo = (0, i.gn)([(0, _.M)("gu-reward-display")], Eo);
    let Xo = class extends e.oi {
        static get properties() {
            return {iconLigature: {type: String}, imageUrl: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        position: relative;
        justify-content: center;
        align-items: center;
      }

      .outerSquare {
        display: flex;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        transform: rotate(45deg);

        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} solid;
        border-image-slice: 1;
        border-image-source: ${(0, t.asCssProp)(n.gradients.apocyan.simple("top"))};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
      }

      .outerSquare__innerSquare {
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        width: 100%;
        background: ${(0, t.asCssProp)(n.colors.dark[900])};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)(n.colors.apocyan[500])} solid;
      }

      .icon {
        position: absolute;
        margin: auto;
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(15))};
      }

      .rewardImage {
        position: absolute;
        margin: auto;
        width: 130%;
      }

      .rewardImage__img {
        width: 100%;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-large"])}) {
        .outerSquare {
          width: ${(0, t.asCssProp)((0, r.gridUnits)(30))};
          height: ${(0, t.asCssProp)((0, r.gridUnits)(30))};
        }
        .icon {
          font-size: ${(0, t.asCssProp)((0, r.gridUnits)(20))};
        }
      }
    `
        }

        render() {
            return e.dy`
      <div class="outerSquare">
        <div class="outerSquare__innerSquare"></div>
      </div>
      ${this.iconLigature ? e.dy`
            <gu-icon
              class="icon"
              iconLigature=${this.iconLigature}
              fillGradientTarget="top"
              fillGradient="gradients.apocyan.simple"
            ></gu-icon>
          ` : ""}
      ${this.imageUrl ? e.dy`
            <picture class="rewardImage">
              <source srcset=${this.imageUrl} type="image/png" />
              <source srcset=${this.imageUrl} type="image/png" />
              <img class="rewardImage__img" alt="image of the reward" src=${this.imageUrl} />
            </picture>
          ` : ""}
    `
        }
    };
    Xo = (0, i.gn)([(0, _.M)("gu-reward-graphic")], Xo);
    const Mo = (0, t.asCssProp)((0, r.gridUnits)(3));
    let qo = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: block;
        position: relative;
      }

      .ribbon-banner__left,
      .ribbon-banner__right {
        display: none;
        position: absolute;
        top: -${Mo};
        width: calc(${Mo} * 2);
        height: 100%;
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
      }

      .ribbon-banner__left::before,
      .ribbon-banner__right::before {
        content: '';
        position: absolute;
        width: ${Mo};
        height: ${Mo};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        top: 0;
        clip-path: polygon(0 100%, 0 0, 100% 100%);
      }

      .ribbon-banner__left {
        left: 0;
      }

      .ribbon-banner__left::before {
        right: 0;
        transform: rotate(-90deg);
      }

      .ribbon-banner__right::before {
        left: 0;
      }

      .ribbon-banner__right {
        right: 0;
      }

      .ribbon-banner__border {
        position: relative;
        background: ${(0, t.asCssProp)(n.colors.quality.mythic)};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(1))} solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
        border-image-slice: 1;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
      }

      .ribbon-banner__content {
        border: 1px solid;
        border-image-source: ${(0, t.asCssProp)(n.gradients.gold.simple("bottom"))};
        border-image-slice: 1;
        display: flex;
        justify-content: space-evenly;
        align-items: center;
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(4))} 0 ${(0, t.asCssProp)((0, r.gridUnits)(5))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
        :host {
          padding: 0 ${Mo};
        }

        .ribbon-banner__left,
        .ribbon-banner__right {
          display: block;
        }
      }
    `
        }

        render() {
            return e.dy`
      <i class="ribbon-banner__left"></i>
      <i class="ribbon-banner__right"></i>
      <div class="ribbon-banner__border">
        <div class="ribbon-banner__content" part="innerContainer">
          <slot data-test-id="ribbon-banner-slot"></slot>
        </div>
      </div>
    `
        }
    };
    qo = (0, i.gn)([(0, _.M)("gu-ribbon-banner")], qo), o(65694);
    let Zo = class extends e.oi {
        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        justify-content: center;
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(11))};
      }

      .socialButton {
        margin-right: 3vw;
        cursor: pointer;
      }

      .socialButton:last-child {
        margin: 0;
      }

      :host([smallIcons='true']) {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
      }
    `
        }

        gotoSocialLink(l) {
            window.open(l)
        }

        render() {
            return e.dy`
      ${this.accounts.map(l => e.dy`
          <gu-icon
            class="socialButton"
            iconLigature="social_${l.name}"
            fillGradient=${n.gradients.gold.simple("bottom")}
            @click=${() => this.gotoSocialLink(l.link)}
          ></gu-icon>
        `)}
    `
        }
    };
    (0, i.gn)([(0, p.C)()], Zo.prototype, "accounts", void 0), (0, i.gn)([(0, p.C)()], Zo.prototype, "smallIcons", void 0), Zo = (0, i.gn)([(0, _.M)("gu-social-buttons-row")], Zo);
    const dn = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
    let en = class extends e.oi {
        constructor() {
            super(...arguments), this.imageUrl = "", this.name = "", this.price = 0, this.title = "", this.showCountdown = !1
        }

        static get properties() {
            return {
                imageUrl: {type: String},
                name: {type: String},
                title: {type: String},
                price: {type: Number},
                durationType: {type: String},
                endTimestamp: {type: String},
                showCountdown: {type: Boolean}
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-basis: 51%;
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(3.5))};
        flex-direction: column;
        justify-content: center;
        background: var(--gu-blue-dark);
        align-items: center;
        min-width: ${(0, t.asCssProp)((0, r.gridUnits)(85))};
        width: ${(0, t.asCssProp)((0, r.gridUnits)(85))};
        position: relative;
        padding-top: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping.medium)}) {
        :host {
          flex-basis: 34%;
          min-width: unset;
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping.large)}) {
        :host {
          flex-basis: 21%;
        }
      }

      .divider {
        max-width: 100%;
        margin-top: auto;
      }

      .image {
        max-width: 100%;
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))} ${(0, t.asCssProp)((0, r.gridUnits)(4))};
        flex-grow: 1;
      }

      .image__img {
        max-width: 100%;
      }

      .middleSection {
        display: flex;
        flex-direction: column;
        height: ${(0, t.asCssProp)((0, r.gridUnits)(35))};
        align-items: center;
      }

      .middleSection__cta {
        margin-top: auto;
      }

      .middleSection__name {
        padding: 0 ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        text-transform: uppercase;
        margin: auto;
      }

      .middleSection__cta__price {
        color: var(--gu-blue);
        display: flex;
        align-items: center;
      }

      .middleSection__cta__icon {
        display: inline-flex;
        font-size: 28px;
      }

      .bottomSection {
        margin-top: auto;
        display: flex;
        justify-content: center;
        align-items: center;
        width: 100%;
        background: var(--gu-blue-dark);
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))} 0;
      }

      .helpIcon {
        position: absolute;
        top: 0;
        right: 0;
        margin: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        font-size: 20px;
        cursor: pointer;
      }

      .specialBanner {
        position: absolute;
        top: 0;
      }
    `
        }

        buyItem() {
            this.dispatchEvent(new CustomEvent("onBuyItem", {composed: !0}))
        }

        moreInfo() {
            this.dispatchEvent(new CustomEvent("onMoreInfo", {composed: !0}))
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.timer && clearInterval(this.timer)
        }

        figureOutTime() {
            this.endTimestampEpoch = Math.round(new Date(this.endTimestamp).getTime() / 1e3), this.endDate = new Date(this.endTimestamp);
            const E = this.endTimestampEpoch - 86400, j = Math.round((new Date).getTime() / 1e3);
            if (j > E) return void (this.showCountdown = !0);
            const oe = E - j;
            this.timer && clearInterval(this.timer), this.timer = window.setInterval(() => {
                this.showCountdown = !0
            }, 1e3 * oe + 1e3)
        }

        render() {
            return this.figureOutTime(), e.dy`
      <gu-icon @click=${this.moreInfo} iconLigature="help" class="helpIcon"></gu-icon>

      <gu-star-store-special-banner
        class="specialBanner"
        durationType=${this.durationType}
      >
      ${this.title}
      </gu-star-store-special-banner>

      <picture class="image">
        <source srcset="${this.imageUrl}" type="image/jpg" />
        <img class="image__img" src="${this.imageUrl}" />
      </picture>

      <img
        src="/assets/images/ui-embellishments/ui--divider-complex-2.svg"
        class="divider"
        alt="extra detailed diamond divider"
      />

      <gu-vertical-space top="large" bottom="x-large" class="middleSection">
        <gu-paragraph-text
          kind="large"
          fontWeight="bold"
          align="center"
          fillColor="colors.light.100"
          class="middleSection__name"
          >${this.name}
        </gu-paragraph-text>

        <gu-primary-hex-button @click=${this.buyItem} class="middleSection__cta" size="large">
          BUY WITH&nbsp;<span class="middleSection__cta__price">
            ${this.price}
            <gu-icon
              class="middleSection__cta__icon"
              iconLigature="collectable_stars"
              fillColor="colors.apocyan.300"
            ></gu-icon
          </span>
        </gu-primary-hex-button>
      </gu-vertical-space>

      ${this.showCountdown ? e.dy`
              <gu-vertical-space class="bottomSection">
                <gu-simple-text kind="tag" align="center" fillColor="colors.light.100" class="name">
                  AVAILABLE FOR &nbsp;
                </gu-simple-text>
                <gu-countdown-timer
                  simpleTextDisplay=${!0}
                  fillColor="#FBC02D"
                  simpleTextKind="tag"
                  .showFields=${["hours", "minutes", "seconds"]}
                  padZeroes=${!0}
                  targetTime=${this.endTimestampEpoch}
                ></gu-countdown-timer>
              </gu-vertical-space>
            ` : e.dy`
              <gu-vertical-space class="bottomSection">
                <gu-simple-text kind="tag" align="center" fillColor="colors.light.100" class="name">
                  AVAILABLE UNTIL ${this.endDate.getDate()} ${dn[this.endDate.getUTCMonth()].slice(0, 3)}
                  ${this.endDate.getUTCFullYear()}
                </gu-simple-text>
              </gu-vertical-space>
            `}
    `
        }
    };
    en = (0, i.gn)([(0, _.M)("gu-star-store-sale-item")], en);
    let tn = class extends e.oi {
        constructor() {
            super(...arguments), this.durationType = "daily"
        }

        static get properties() {
            return {durationType: {type: String}}
        }

        static get styles() {
            return e.iv`
      :host {
        width: ${(0, t.asCssProp)((0, r.gridUnits)(56))};
      }

      gu-vertical-space {
        position: relative;
      }

      gu-paragraph-text {
        padding-left: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        text-transform: uppercase;
      }
    `
        }

        render() {
            return e.dy`
      <gu-vertical-space both="x-small">
        <div class="border"></div>
        <gu-paragraph-text
          kind="large"
          fontWeight="bold"
          fillColor=${"monthly" === this.durationType ? "colors.gunmetal.900" : "colors:light:100"}
        >
          <slot></slot>
        </gu-paragraph-text>
      </gu-vertical-space>
    `
        }
    };
    tn = (0, i.gn)([(0, _.M)("gu-star-store-special-banner")], tn);
    let sn = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: block;
        position: relative;
      }

      .stats-banner__content {
        max-width: 140px;
      }

      .stats-banner__middle {
        max-width: 360px;
      }

      .stats-banner__spacer {
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        box-shadow: inset 0 0 0 1.5px ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        display: flex;
        transform: rotate(-45deg);
      }

      .stats-banner__spacer::before {
        content: '';
        width: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
      }

      .stats-banner__middle,
      .stats-banner__spacer--middle {
        display: none;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        .stats-banner__middle {
          display: block;
        }
        .stats-banner__spacer--middle {
          display: flex;
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-ribbon-banner>
        <div class="stats-banner__content">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "large"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            $52M+
          </gu-heading-text>
          <gu-paragraph-text kind="small" align="center" fillColor="colors.dark.500">
            Worth of cards exchanged
          </gu-paragraph-text>
        </div>

        <i class="stats-banner__spacer stats-banner__spacer--middle"></i>

        <div class="stat stats-banner__middle">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "small"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            <h2>Led by Chris Clay</h2>
          </gu-heading-text>
          <gu-paragraph-text
            kind="small"
            .responsiveKind=${[{breakpoint: "medium", kind: "large"}]}
            align="center"
            fillColor="colors.dark.500"
          >
            Former Game Director of Magic:<br />The Gathering Arena
          </gu-paragraph-text>
        </div>

        <i class="stats-banner__spacer"></i>

        <div class="stat">
          <gu-heading-text
            size="x-small"
            .responsiveSize=${[{breakpoint: "medium", size: "large"}]}
            align="center"
            fillColor="colors.dark.900"
          >
            $570k
          </gu-heading-text>
          <gu-paragraph-text kind="small" align="center" fillColor="colors.dark.500">
            Tournament prize pool
          </gu-paragraph-text>
        </div>
      </gu-ribbon-banner>
    `
        }
    };
    sn = (0, i.gn)([(0, _.M)("gu-stats-banner")], sn);
    let jo = class extends e.oi {
        constructor() {
            super(...arguments), this.selectedOptionIndex = 0
        }

        static get styles() {
            return e.iv`
      .two-value-switch__toggle {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        user-select: none;
      }
    `
        }

        onClick() {
            this.dispatchEvent(new CustomEvent("switched", {
                composed: !0,
                detail: {selectedOption: this.selectedOption}
            })), this.selectedOptionIndex = 0 === this.selectedOptionIndex ? 1 : 0
        }

        get selectedOption() {
            return this.options[this.selectedOptionIndex]
        }

        render() {
            return this.options && 2 === this.options.length ? e.dy`
      <a
        role="button"
        class="two-value-switch__toggle"
        @click=${() => this.onClick()}
        data-test-id="two-value-switch-toggle"
      >
        <gu-icon iconLigature="action_switch" fillColor="colors.light.500"></gu-icon>
        <gu-paragraph-text align="center" kind="tag" fillColor="colors.light.500" .text=${this.selectedOption.value}>
        </gu-paragraph-text>
      </a>
    ` : e.dy``
        }
    };
    (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Array
    })], jo.prototype, "options", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Number
    })], jo.prototype, "selectedOptionIndex", void 0), jo = (0, i.gn)([(0, _.M)("gu-two-value-switch")], jo);
    let Oo = class extends e.oi {
        constructor() {
            super(...arguments), this.values = [], this.selectedIndex = 0, this.idPrefix = "", this.onClick = (l, E) => {
                this.selectedIndex = E, this.dispatchEvent(new CustomEvent("onItemClicked", {
                    composed: !0,
                    detail: {index: E, value: l}
                }))
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: row;
      }
      gu-square-selection-row-item:not(:last-child) {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
      }
    `
        }

        render() {
            return this.values ? e.dy`
          ${this.values.map((l, E) => e.dy`<gu-square-selection-row-item
              .selected=${E === this.selectedIndex}
              .value="${l}"
              @click=${() => this.onClick(l, E)}
              id=${`${this.idPrefix}item-${l}`}
            >
            </gu-square-selection-row-item>`)}
        ` : null
        }
    };
    (0, i.gn)([(0, p.C)({reflect: !0, type: Array})], Oo.prototype, "values", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Number
    })], Oo.prototype, "selectedIndex", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: String
    })], Oo.prototype, "idPrefix", void 0), Oo = (0, i.gn)([(0, _.M)("gu-square-selection-row")], Oo);
    let Vo = class extends e.oi {
        constructor() {
            super(...arguments), this.value = "", this.selected = !1
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        justify-content: center;
        align-items: center;
        cursor: pointer;
        width: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(9))};
        border: ${(0, t.asCssProp)((0, r.gridUnits)(.25))} solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        background: ${(0, t.asCssProp)(n.colors.gunmetal[700])};
        color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
      }

      :host(:hover) {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        color: ${(0, t.asCssProp)(n.colors.light[300])};
      }

      :host([selected='true']) {
        background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        color: ${(0, t.asCssProp)(n.colors.light[300])};
        border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
      }
    `
        }

        render() {
            return e.dy` <gu-paragraph-text id=${this.id} kind="small" fontWeight="bold" .text=${this.value}>
    </gu-paragraph-text>`
        }
    };
    (0, i.gn)([(0, p.C)({reflect: !0})], Vo.prototype, "value", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Vo.prototype, "selected", void 0), Vo = (0, i.gn)([(0, _.M)("gu-square-selection-row-item")], Vo);
    const un = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host([theme='light']) {
    --textColor: ${(0, t.asCssProp)(n.colors.dark[300])};
  }

  :host([theme='dark']) {
    --textColor: ${(0, t.asCssProp)(n.colors.light[700])};
    --backgroundColor: ${(0, t.asCssProp)(n.colors.dark[700])};
  }

  :host([type='success']) {
    --borderColor: ${(0, t.asCssProp)(n.colors.apocyan[500])};
  }

  :host([type='info']) {
    --borderColor: ${(0, t.asCssProp)(n.colors.gold[500])};
  }

  :host([type='error']) {
    --borderColor: ${(0, t.asCssProp)(n.colors.god.war.secondary)};
  }

  :host([theme='light'][type='success']) {
    --backgroundColor: rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.apocyan[300]))}, 0.2);
  }

  :host([theme='light'][type='info']) {
    --backgroundColor: rgba(235, 201, 139, 0.2); //@TODO: colors.gold[300] with 20% opacity;
  }

  :host([theme='light'][type='error']) {
    --backgroundColor: rgba(153, 1, 26, 0.2); //@TODO: colors.war[tertiary] with 20% opacity;
  }

  :host {
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    border-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))} solid var(--borderColor);
    background-color: var(--backgroundColor);
    color: var(--textColor);
  }
`;
    let $o = class extends e.oi {
        constructor() {
            super(...arguments), this.type = "success", this.theme = "light"
        }

        render() {
            return e.dy` <slot></slot> `
        }
    };
    $o.styles = un, (0, i.gn)([(0, p.C)()], $o.prototype, "type", void 0), (0, i.gn)([(0, p.C)()], $o.prototype, "theme", void 0), $o = (0, i.gn)([(0, _.M)("gu-subtle-notification")], $o);
    var pn = o(39017);
    const on = G => new RegExp(`^.{${G},}$`), To = {
        email: new RegExp(/(?:[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-zA-Z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?\.)+[a-z0-9](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-zA-Z0-9-]*[a-zA-Z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])/),
        phoneNumber: new RegExp(/\d+/),
        name: new RegExp(/^\D+$/),
        password: on(8),
        minLength: G => on(G),
        maxLength: G => (G => new RegExp(`^.{${G},${G + 1}}$`))(G),
        deckCode: G => (0, pn.Gu)(G)
    };
    let nn = class extends e.oi {
        constructor() {
            super(...arguments), this.labelText = "", this.initialHelpText = "", this.placeholderText = "", this.successHelpText = "", this.errorHelpText = "", this.align = "left", this.currentStatus = {
                status: "initial",
                helpText: this.initialHelpText
            }, this.inputValue = "", this.validateToPattern = [], this.obfuscateInputText = !1, this.updateValue = l => {
                this.inputValue = l, this.dispatchEvent(new CustomEvent("onValueChange", {
                    detail: {
                        newValue: l,
                        valid: this.validateValue(l)
                    }
                }))
            }, this.onInputChange = l => {
                this.updateValue(l.target.value)
            }, this.onInputType = l => {
                const E = l.target, {value: j} = E;
                this.updateValue(j), this.validateValue(j) && "error" === this.currentStatus.status && this.setCurrentStatus({
                    status: "initial",
                    helpText: this.initialHelpText
                })
            }, this.onInputBlur = l => {
                const E = l.target, {value: j} = E;
                return this.validateValue(j) ? this.setCurrentStatus({
                    status: "success",
                    helpText: this.successHelpText
                }) : this.setCurrentStatus({status: "error", helpText: this.errorHelpText})
            }
        }

        static get properties() {
            return {
                labelText: {type: String},
                placeholderText: {type: String},
                validateToPattern: {type: Array},
                initialHelpText: {type: String},
                successHelpText: {type: String},
                errorHelpText: {type: String},
                disabled: {type: String},
                obfuscateInputText: {type: Boolean},
                initialValue: {type: String},
                align: {type: String}
            }
        }

        createRenderRoot() {
            return this
        }

        firstUpdated() {
            this.initialValue && (this.inputValue = this.initialValue, this.requestUpdate())
        }

        updated(l) {
            super.updated(l), "error" === this.currentStatus.status ? (this.classList.add("error"), this.classList.remove("success", "initial")) : "success" === this.currentStatus.status ? (this.classList.remove("error", "initial"), this.classList.add("success")) : (this.classList.remove("error", "success"), this.classList.add("initial"))
        }

        setCurrentStatus(l) {
            const {status: E, helpText: j} = l;
            this.currentStatus = {status: E, helpText: j}, this.requestUpdate()
        }

        resetCurrentStatus() {
            this.setCurrentStatus({status: "initial", helpText: this.initialHelpText})
        }

        get currentIcon() {
            switch (this.currentStatus.status) {
                case"error":
                    return "alert_triangle";
                case"success":
                    return "checkbox_tick";
                default:
                    return "help"
            }
        }

        validateValue(l) {
            let E = !0;
            return this.validateToPattern.map(j => {
                if (!E) return !1;
                if (j instanceof RegExp) E = j.test(l); else if (-1 !== j.indexOf("not-")) {
                    const oe = j.split("not-").pop();
                    E = !To[oe].test(l)
                } else E = To[j] && "function" == typeof To[j] ? To[j](l) : To[j].test(l)
            }), E
        }

        render() {
            return e.dy`
      <style>
        gu-text-input {
          display: flex;
          flex-direction: column;
        }

        .labelText {
          color: ${(0, t.asCssProp)(n.colors.light[100])};
        }

        .inputArea {
          position: relative;
          width: 100%;
          display: flex;
          flex-direction: row;
          align-items: center;
        }

        .inputArea__input {
          width: 100%;
          background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
          border: 2px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))} ${(0, t.asCssProp)((0, r.gridUnits)(4))};
          ${(0, t.asCssProp)(Qs.baseSimpleTextStyles)};
          font-size: ${(0, t.asCssProp)(n.typography.simpleTextSizeMapping.small)};
          color: ${(0, t.asCssProp)(n.colors.light[100])};
          box-sizing: border-box;
        }

        .inputArea__input::placeholder {
          color: ${(0, t.asCssProp)(n.colors.light[700])} !important;
        }

        .inputArea__icon {
          height: 100%;
          font-size: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
          margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        }

        .helpText {
          margin-top: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
        }

        /* ALIGN */
        gu-text-input[align='center'] .inputArea__input {
          text-align: center;
        }
        /* ERROR STATE COLORING */
        gu-text-input.error .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.god.war.primary)};
        }
        gu-text-input.error .inputArea__icon,
        gu-text-input.error .helpText {
          color: ${(0, t.asCssProp)(n.colors.god.war.primary)};
          padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        }

        /* SUCCESS STATE COLORING */
        gu-text-input.success .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        }
        gu-text-input.success .inputArea__icon,
        gu-text-input.success .helpText {
          color: ${(0, t.asCssProp)(n.colors.apocyan[300])};
        }

        /* INITIAL STATE COLORING */
        gu-text-input.initial .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        }
        gu-text-input.initial .inputArea__icon,
        gu-text-input.initial .helpText {
          color: ${(0, t.asCssProp)(n.colors.gunmetal[100])};
        }

        /* DISABLED STATE COLORING */
        gu-text-input[disabled='true'] .labelText,
        gu-text-input[disabled='true'] .inputArea__icon,
        gu-text-input[disabled='true'] .helpText {
          color: ${(0, t.asCssProp)(n.colors.light[700])};
        }
        gu-text-input[disabled='true'] .inputArea__input {
          border-color: ${(0, t.asCssProp)(n.colors.light[700])};
        }
      </style>

      ${this.labelText ? e.dy` <gu-simple-text class="labelText" fontWeight="bold" kind="small"> ${this.labelText} </gu-simple-text> ` : null}
      <div class=${(0, C.$)({inputArea: !0})}>
        <input
          placeholder=${this.placeholderText ? this.placeholderText : ""}
          type=${this.obfuscateInputText ? "password" : "text"}
          class="inputArea__input"
          value=${this.inputValue}
          @blur=${this.onInputBlur}
          @input=${this.onInputType}
          part="textInput"
        />
        ${"help" !== this.currentIcon ? e.dy` <gu-icon iconLigature=${this.currentIcon} class="inputArea__icon"></gu-icon> ` : null}
      </div>
      ${this.currentStatus.helpText ? e.dy`
            <gu-paragraph-text class="helpText" kind="help" part="helpText">
              ${this.currentStatus.helpText}
            </gu-paragraph-text>
          ` : null}
    `
        }
    };
    nn = (0, i.gn)([(0, _.M)("gu-text-input")], nn);
    let rn = class extends e.oi {
        constructor() {
            super(...arguments), this.headerSize = "x-small", this.headerColor = n.colors.dark[900], this.headerAlign = "center", this.textKind = "small", this.textColor = n.colors.dark[500], this.textAlign = "center"
        }

        static get properties() {
            return {
                image: {type: String},
                header: {type: String},
                headerSize: {type: String},
                headerColor: {type: String},
                headerAlign: {type: String},
                text: {type: String},
                textKind: {type: String},
                textColor: {type: String},
                textAlign: {type: String}
            }
        }

        static get styles() {
            return e.iv`
      .tile {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: space-between;
      }

      .tile-img {
        width: auto;
        height: 100px;
        margin-bottom: 40px;
      }

      .tile-header {
        margin-bottom: 30px;
      }
    `
        }

        render() {
            return e.dy`
      <div class="tile-img-header-text tile">
        <img class="tile-img tile-img" src="${this.image}" />
        <gu-heading-text
          align="${this.headerAlign}"
          fillcolor="${this.headerColor}"
          size="${this.headerSize}"
          class="tile-header"
        >
          ${this.header}
        </gu-heading-text>
        <gu-paragraph-text align="${this.textAlign}" fillcolor="${this.textColor}" kind="${this.textKind}">
          ${this.text}
        </gu-paragraph-text>
      </div>
    `
        }
    };
    rn = (0, i.gn)([(0, _.M)("gu-tile-img-header-text")], rn);
    var hn = o(41363), mn = o(29429), _n = o(55443), fn = o(53718), vn = o(24699), bn = o(25668);
    const Cn = e.iv`
  ${(0, t.asCssProp)((0, t.setBoxSizing)())}

  :host {
    --standardBorderSize: 2px;
    --arrowSideLength: 18px;
  }

  ::slotted(*) {
    text-align: center;
  }

  #tooltip {
    display: none;
    inline-size: 350px;
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    color: ${(0, t.asCssProp)(n.colors.light[100])};
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    border-width: var(--standardBorderSize);
    border-style: solid;
    border-color: ${(0, t.asCssProp)(n.colors.gunmetal[300])};
    border-radius: 2px;
    white-space: break-space;
  }

  #tooltip[data-show] {
    display: block;
  }

  #arrow,
  #arrow::before {
    position: absolute;
    width: var(--arrowSideLength);
    height: var(--arrowSideLength);
    background: inherit;
  }

  #arrow {
    visibility: hidden;
  }

  #arrow::before {
    content: '';
    visibility: visible;
    border-bottom: var(--standardBorderSize) solid ${(0, t.asCssProp)(n.colors.gunmetal[300])};
    border-right: var(--standardBorderSize) solid ${(0, t.asCssProp)(n.colors.gunmetal[300])};
    border-top: var(--standardBorderSize) solid transparent;
    border-left: var(--standardBorderSize) solid transparent;
    border-radius: 2px;
  }

  #tooltip[data-popper-placement^='top'] > #arrow {
    bottom: calc(-1 * var(--arrowSideLength) / 2);
  }

  #tooltip[data-popper-placement^='bottom'] > #arrow {
    top: calc(-1 * var(--arrowSideLength) / 2);
  }

  #tooltip[data-popper-placement^='left'] > #arrow {
    right: calc(-1 * var(--arrowSideLength) / 2);
  }

  #tooltip[data-popper-placement^='right'] > #arrow {
    left: calc(-1 * var(--arrowSideLength) / 2);
  }

  #tooltip[data-popper-placement^='top'] > #arrow:before {
    transform: rotate(45deg);
  }

  #tooltip[data-popper-placement^='bottom'] > #arrow:before {
    transform: rotate(-135deg);
  }

  #tooltip[data-popper-placement^='left'] > #arrow:before {
    transform: rotate(-45deg);
  }

  #tooltip[data-popper-placement^='right'] > #arrow:before {
    transform: rotate(135deg);
  }
`, yn = [hn.Z, mn.Z, _n.Z, fn.Z],
        xn = [{name: "offset", options: {offset: [0, 18]}}, {name: "arrow", enabled: !0, options: {padding: 2}}];
    let Es = class extends e.oi {
        constructor() {
            super(...arguments), this.position = "top", this.showTooltip = () => {
                this.tooltipElement.setAttribute("data-show", ""), this.popperInstance.setOptions(l => Object.assign(Object.assign({}, l), {
                    modifiers: [...l.modifiers, {
                        name: "eventListeners",
                        enabled: !0
                    }]
                })), this.popperInstance.update()
            }, this.hideTooltip = () => {
                this.tooltipElement.removeAttribute("data-show"), this.popperInstance.setOptions(l => Object.assign(Object.assign({}, l), {
                    modifiers: [...l.modifiers, {
                        name: "eventListeners",
                        enabled: !1
                    }]
                }))
            }
        }

        firstUpdated() {
            const l = (0, bn.kZ)({defaultModifiers: [...vn.WX, ...yn]}), E = this.getAnchorElement();
            this.popperInstance = l(E, this.tooltipElement, {
                placement: this.position,
                strategy: "absolute",
                modifiers: xn
            }), ["mouseenter", "focus"].forEach(Ee => E.addEventListener(Ee, this.showTooltip)), ["mouseleave", "blur"].forEach(Ee => E.addEventListener(Ee, this.hideTooltip))
        }

        getAnchorElement() {
            return this.anchorElementId ? document.querySelector(`#${this.anchorElementId}`) : this.parentElement
        }

        disconnectedCallback() {
            this.popperInstance.destroy()
        }

        render() {
            return e.dy` <div id="tooltip" role="tooltip">
      <slot></slot>
      <div id="arrow" data-popper-arrow></div>
    </div>`
        }
    };
    Es.styles = [Cn], (0, i.gn)([(0, p.C)()], Es.prototype, "anchorElementId", void 0), (0, i.gn)([(0, p.C)()], Es.prototype, "position", void 0), (0, i.gn)([(0, k.I)("#tooltip")], Es.prototype, "tooltipElement", void 0), (0, i.gn)([(0, k.I)("#arrow")], Es.prototype, "arrowElement", void 0), Es = (0, i.gn)([(0, _.M)("gu-tooltip")], Es);
    let an = class extends e.oi {
        static get styles() {
            return e.iv`
      :host {
        display: block;
        position: relative;
      }

      gu-ribbon-banner::part(innerContainer) {
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(7))} 0 ${(0, t.asCssProp)((0, r.gridUnits)(10))};
      }

      .will-you-survive-banner__spacer {
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
        box-shadow: inset 0 0 0 1.5px ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
        transform: rotate(-45deg);
        display: none;
      }

      .will-you-survive-banner__spacer::before {
        content: '';
        width: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        height: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        background: ${(0, t.asCssProp)(n.colors.gold[500])};
        border-radius: ${(0, t.asCssProp)((0, r.gridUnits)(.5))};
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping["x-small"])}) {
        .statSpacer {
          display: flex;
        }
      }
    `
        }

        render() {
            return e.dy`
      <gu-ribbon-banner>
        <i class="will-you-survive-banner__spacer"></i>

        <gu-heading-text
          size="2x-small"
          .responsiveSize=${[{breakpoint: "small", size: "x-small"}]}
          fillColor="colors.dark.900"
          align="center"
        >
          WILL YOU SURVIVE THE TRIAL OF THE GODS?
        </gu-heading-text>

        <i class="will-you-survive-banner__spacer"></i>

        <slot></slot>
      </gu-ribbon-banner>
    `
        }
    };
    an = (0, i.gn)([(0, _.M)("gu-will-you-survive-banner")], an);
    let Ko = class extends e.oi {
        constructor() {
            super(...arguments), this.values = [], this.selectedIndex = 0, this.itemClicked = (l, E) => {
                this.selectedIndex = E, this.dispatchEvent(new CustomEvent("onItemClicked", {
                    composed: !0,
                    detail: {index: E, value: l}
                }))
            }
        }

        static get styles() {
            return e.iv`
      :host {
        display: flex;
        flex-direction: row;
        border-bottom: 3px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
        padding-right: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
      }

      gu-tabs-collection-item:not(:last-child) {
        margin-right: ${(0, t.asCssProp)((0, r.gridUnits)(1))};
      }
    `
        }

        render() {
            return this.values ? e.dy`
          ${this.values.map((l, E) => e.dy`<gu-tabs-collection-item
              .selected=${E === this.selectedIndex}
              .firstItem=${0 === E}
              .value="${l}"
              @click=${() => this.itemClicked(l, E)}
            >
            </gu-tabs-collection-item>`)}
        ` : null
        }
    };
    (0, i.gn)([(0, p.C)({reflect: !0, type: Array})], Ko.prototype, "values", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Number
    })], Ko.prototype, "selectedIndex", void 0), Ko = (0, i.gn)([(0, _.M)("gu-tabs-collection")], Ko);
    let Ao = class extends e.oi {
        constructor() {
            super(...arguments), this.value = "", this.selected = !1, this.firstItem = !1
        }

        static get styles() {
            return e.iv`
  :host {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    width: ${(0, t.asCssProp)((0, r.gridUnits)(32.5))};
    height: ${(0, t.asCssProp)((0, r.gridUnits)(12.5))};
  }

  :host::after {
    content: '';
    position: absolute;
    width: 100%;
    height: 100%;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    z-index: -1;
    transform: skew(15deg);
  }

  :host([selected='true'])::after {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }
  :host([firstItem='true']) {
    margin-left: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
  }
  :host([firstItem='true'])::before {
    content: '';
    position: absolute;
    width: 50%;
    height: 100%;
    top: 0;
    left: -6%;
    background: ${(0, t.asCssProp)(n.colors.gunmetal[900])};
    border-bottom: 3px solid ${(0, t.asCssProp)(n.colors.gunmetal[500])};
    z-index: -1;
  }

  :host([selected='true'])::before {
    background: ${(0, t.asCssProp)(n.colors.gunmetal[500])};
  }
`
        }

        render() {
            return e.dy`
      ${this.selected ? e.dy`<gu-heading-text align="center" size="x-small" fillColor=${n.colors.light[100]}>
            ${this.value}
          </gu-heading-text>` : e.dy`<gu-heading-text align="center" size="x-small" fillColor=${n.colors.gunmetal[500]}>
            ${this.value}
          </gu-heading-text>`}
    `
        }
    };
    (0, i.gn)([(0, p.C)({reflect: !0, type: String})], Ao.prototype, "value", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Ao.prototype, "selected", void 0), (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: Boolean,
        converter: _e.b
    })], Ao.prototype, "firstItem", void 0), Ao = (0, i.gn)([(0, _.M)("gu-tabs-collection-item")], Ao);
    let Io = class extends e.oi {
        static get styles() {
            return e.iv`
      ${(0, t.asCssProp)((0, t.setBoxSizing)())}

      :host {
        display: flex;
        flex-direction: column;
        align-items: center;
      }

      img {
        border: 2px solid rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.light[100]))}, 0.2);
        height: ${(0, t.asCssProp)((0, r.gridUnits)(50))};
        object-fit: cover;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping.small)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(58))};
        }

        .description {
          min-height: ${(0, t.asCssProp)((0, r.gridUnits)(42))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping.medium)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(75))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping.large)}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(92))};
        }
      }

      @media screen and (min-width: ${(0, t.asCssProp)(P.breakpointSizeMapping["x-large"])}) {
        img {
          max-width: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
        }
      }

      .card {
        border: 1px solid ${(0, t.asCssProp)(n.colors.dark[900])};
        display: flex;
        flex-direction: column;
        & > div {
          display: inline-block;
        }
        max-width: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
      }

      .description {
        background-color: ${(0, t.asCssProp)(n.colors.light[100])};
        color: ${(0, t.asCssProp)(n.colors.dark[900])};
        padding: ${(0, t.asCssProp)((0, r.gridUnits)(3))};
        max-width: ${(0, t.asCssProp)((0, r.gridUnits)(100))};
      }

      .divider {
        height: 5px;
        background: ${(0, t.asCssProp)(n.gradients.gold.horizontal())};
        border-bottom: 1px solid ${(0, t.asCssProp)(n.colors.dark[900])};
        border-top: 1px solid ${(0, t.asCssProp)(n.colors.dark[900])};
      }
    `
        }

        render() {
            return e.dy`
    <div class="card">
      <img class="image" src="${this.imageSrc}" data-test-id="ascension-card-image"></img>
      <div class="divider"></div>
      <div class="description">
        <gu-heading-text
          align="center"
          fillColor="colors.dark.900"
          size="2x-small"
          data-test-id="ascension-card-title"
        >
          ${this.title}
        </gu-heading-text>
        <gu-vertical-space top="medium">
          <gu-paragraph-text align="center" kind="small" fillColor="colors.dark.500" data-test-id="ascension-card-description">
            ${this.description}
          </gu-paragraph-text>
        </gu-vertical-space>
      </div>
    </div>
  `
        }
    };
    (0, i.gn)([(0, p.C)({type: String})], Io.prototype, "description", void 0), (0, i.gn)([(0, p.C)({type: String})], Io.prototype, "imageSrc", void 0), (0, i.gn)([(0, p.C)({type: String})], Io.prototype, "title", void 0), Io = (0, i.gn)([(0, _.M)("gu-x2-ascension-card")], Io);
    let ln = class extends e.oi {
        static get properties() {
            return {heading: {type: String}, iconLigature: {type: String}, subheading: {type: String}}
        }

        static get styles() {
            return e.iv`
      gu-icon {
        font-size: ${(0, t.asCssProp)((0, r.gridUnits)(27))};
        margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
      }

      header {
        display: flex;
        align-items: center;
        flex-direction: column;
      }

      @media screen and (min-width: ${(0, t.asCssProp)(n.breakpoints.breakpointSizeMapping.small)}) {
        gu-icon {
          margin-bottom: ${(0, t.asCssProp)((0, r.gridUnits)(8))};
        }
      }
    `
        }

        render() {
            return e.dy`
      <header>
        ${this.iconLigature ? e.dy` <gu-icon
              fillGradient="gradients.gold.simple"
              fillGradientTarget="bottom"
              iconLigature="${this.iconLigature}"
            ></gu-icon>` : null}
        <gu-heading-text
          align="center"
          fillGradient="gradients.gold.simple"
          size="small"
          .responsiveSize=${[{breakpoint: "small", size: "large"}, {
                breakpoint: "medium",
                size: "x-large"
            }, {breakpoint: "large", size: "2x-large"}]}
        >
          ${this.heading}
        </gu-heading-text>

        ${this.subheading ? e.dy`
      <gu-heading-text
        align="center"
        size="2x-small"
        .responsiveSize=${[{breakpoint: "small", size: "x-small"}]}
        >
          ${this.subheading}
        </gu-heading-text>
      </div>` : null}
      </header>
    `
        }
    };
    ln = (0, i.gn)([(0, _.M)("gu-x2-section-header")], ln);
    let cn = class extends e.oi {
        constructor() {
            super(...arguments), this.size = "large", this.spinners = {
                small: "/assets/images/loading-spinner/spin-1s-70px.svg",
                medium: "/assets/images/loading-spinner/spin-1s-110px.svg",
                large: "/assets/images/loading-spinner/spin-1s-135px.svg"
            }
        }

        static get properties() {
            return {size: {type: String}}
        }

        render() {
            return e.dy` <img alt="Loading..." src="${this.spinners[this.size]}" /> `
        }
    };
    cn = (0, i.gn)([(0, _.M)("gu-loading-spinner")], cn);
    let so = class extends e.oi {
        constructor() {
            super(...arguments), this.items = [], this.open = !1
        }

        connectedCallback() {
            super.connectedCallback(), window.addEventListener("click", l => this.onClick(l)), window.addEventListener("scroll", () => this.onScroll())
        }

        disconnectedCallback() {
            window.removeEventListener("click", l => this.onClick(l)), window.removeEventListener("scroll", () => this.onScroll()), super.disconnectedCallback()
        }

        static get styles() {
            return e.iv`
  :host {
    display: flex;
    flex-direction: column;
    position: relative;
  }

  .dropdown-menu--hidden {
    display: none;
  }

  .dropdown-menu-content {
    cursor: pointer;
    display: flex;
    flex-direction: column;
    align-items: center;
    position: absolute;
    right: ${(0, t.asCssProp)((0, r.gridUnits)(5))};
    top: ${(0, t.asCssProp)((0, r.gridUnits)(4))};
    outline: 2px solid ${(0, t.asCssProp)(n.colors.dark[300])};
    border-radius: 2px;
    box-shadow: ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(.5))} ${(0, t.asCssProp)((0, r.gridUnits)(2))}
      rgba(${(0, t.asCssProp)((0, g.hexToCssRgbString)(n.colors.black))}, 25%);
    padding: 0;
    margin: 0;
    z-index: ${tt.modalLayerZLevel};
  }
`
        }

        selectDropDownItem(l) {
            this.current = l, this.open = !1, this.dispatchEvent(new CustomEvent("onSelect", {
                composed: !0,
                bubbles: !0,
                detail: Object.assign({}, this.current)
            }))
        }

        toggleOpen() {
            setTimeout(() => {
                this.open = !this.open
            })
        }

        onClick(l) {
            !l.composedPath().includes(this) && this.open && (this.open = !1)
        }

        onScroll() {
            this.open && (this.open = !1)
        }

        render() {
            return e.dy`
      <slot name="dropdownControl" data-test-id="dropdown-control" @click=${this.toggleOpen}></slot>
      <ul
        class=${(0, C.$)({"dropdown-menu--hidden": !this.open, "dropdown-menu-content": this.open})}
      >
        ${this.items.map((l, E, j) => e.dy`
              <gu-dropdown-menu-item
                .align=${this.align}
                .item=${l}
                .last=${j.length - 1 === E}
                @click=${() => this.selectDropDownItem(l)}
              ></gu-dropdown-menu-item>
            `)}
      </ul>
    `
        }
    };
    (0, i.gn)([(0, p.C)({type: Array})], so.prototype, "items", void 0), (0, i.gn)([(0, p.C)({type: String})], so.prototype, "align", void 0), (0, i.gn)([(0, lt.S)()], so.prototype, "open", void 0), (0, i.gn)([(0, lt.S)({hasChanged: (G, l) => (null == G ? void 0 : G.value) !== (null == l ? void 0 : l.value)})], so.prototype, "current", void 0), so = (0, i.gn)([(0, _.M)("gu-dropdown-menu")], so);
    let Do = class extends e.oi {
        constructor() {
            super(...arguments), this.item = {id: "", value: ""}, this.last = !1
        }

        static get styles() {
            return e.iv`
  :host {
    background: ${(0, t.asCssProp)(n.colors.light[100])};
  }

  .dropdown-menu-item:hover {
    background: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  .dropdown-menu-item {
    display: flex;
    flex-direction: column;
  }

  .dropdown-menu-item__text {
    min-height: ${(0, t.asCssProp)((0, r.gridUnits)(6))};
    min-width: ${(0, t.asCssProp)((0, r.gridUnits)(44))};
    padding: ${(0, t.asCssProp)((0, r.gridUnits)(2))};
    display: block;
  }

  hr.solid {
    width: 100%;
    display: block;
    border: 0;
    border-top: 1px solid ${(0, t.asCssProp)(n.colors.light[300])};
    margin: 0;
    padding: 0;
    transform: scaleX(0.88);
    position: absolute;
  }

  .dropdown-menu-item:hover {
    background: ${(0, t.asCssProp)(n.colors.light[300])};
  }

  .dropdown-menu-item:hover + hr {
    display: none;
  }

  a {
    text-decoration: none;
  }
`
        }

        render() {
            return (0, g.updateColoringVariables)({component: this, fillColorHover: "colors.light.100"}), e.dy`
      <li class="dropdown-menu-item" role="dropdown-menu-item">
        <a href="javascript:void(0)">
          <gu-body-text
            class="dropdown-menu-item__text"
            align=${this.align}
            size="medium"
            fillColor=${n.colors.dark[500]}
          >
            ${this.item.value}
          </gu-body-text>
        </a>
      </li>

      ${this.last ? null : e.dy`<hr class="solid" />`}
    `
        }
    };
    (0, i.gn)([(0, p.C)({
        reflect: !0,
        type: String
    })], Do.prototype, "item", void 0), (0, i.gn)([(0, p.C)({type: String})], Do.prototype, "align", void 0), (0, i.gn)([(0, p.C)({
        type: Boolean,
        reflect: !0
    })], Do.prototype, "last", void 0), Do = (0, i.gn)([(0, _.M)("gu-dropdown-menu-item")], Do)
}, 14879
:
(se, B, o) => {
    "use strict";
    o.d(B, {o: () => g});
    var c = o(70655), y = (o(1949), o(32830)), e = o(56418), _ = o(98539), p = o(26711);

    class g extends y.oi {
        constructor() {
            super(...arguments), this.loading = !1, this.disabled = !1, this.expand = !1, this.iconPosition = "right", this.type = "secondary"
        }

        renderIcon(t) {
            return t ? y.dy`<gu-icon iconLigature=${t} class="button__icon"></gu-icon>` : y.dy``
        }

        renderText() {
            return y.dy`<slot class="button__text"></slot>`
        }

        renderContent(t, n) {
            return t ? y.dy`<gu-rectangular-spinner class="button__spinner" color="grey"></gu-rectangular-spinner>` : y.dy` ${this.renderIcon(n)} ${this.renderText()} `
        }

        getClassMap() {
            return {
                button__content: !0,
                [`button__content--icon-${this.iconPosition}`]: !0,
                [`button__content--type-${this.type}`]: !0
            }
        }

        render() {
            return y.dy` <div class=${(0, _.$)(this.getClassMap())}> ${this.renderContent(this.loading, this.icon)} </div> `
        }
    }

    (0, c.gn)([(0, e.C)({
        reflect: !0,
        type: Boolean,
        converter: p.b
    })], g.prototype, "loading", void 0), (0, c.gn)([(0, e.C)({
        reflect: !0,
        type: Boolean,
        converter: p.b
    })], g.prototype, "disabled", void 0), (0, c.gn)([(0, e.C)({
        reflect: !0,
        type: Boolean,
        converter: p.b
    })], g.prototype, "expand", void 0), (0, c.gn)([(0, e.C)()], g.prototype, "icon", void 0), (0, c.gn)([(0, e.C)()], g.prototype, "iconPosition", void 0), (0, c.gn)([(0, e.C)({reflect: !0})], g.prototype, "type", void 0)
}, 43977
:
(se, B, o) => {
    "use strict";
    var c = o(70655), y = (o(61517), o(32830)), e = o(86041), _ = o(80102), p = o(26532), g = o(65281);
    let r = class extends y.oi {
        static get styles() {
            return y.iv`
      :host {
        display: block;
        width: ${(0, p.asCssProp)((0, _.gridUnits)(7))};
        cursor: pointer;
        height: ${(0, p.asCssProp)((0, _.gridUnits)(7))};
        background: ${(0, p.asCssProp)(g.gradients.apocyan.simple("bottom"))};
        position: relative;
        border-radius: 50%;
      }

      .circular-close-button__background {
        position: absolute;
        left: ${(0, p.asCssProp)((0, _.gridUnits)(.5))};
        right: ${(0, p.asCssProp)((0, _.gridUnits)(.5))};
        top: ${(0, p.asCssProp)((0, _.gridUnits)(.5))};
        bottom: ${(0, p.asCssProp)((0, _.gridUnits)(.5))};
        background: ${(0, p.asCssProp)(g.colors.gunmetal[900])};
        border-radius: 50%;
        display: flex;
      }

      .circular-close-button__icon {
        margin: auto;
        font-size: ${(0, p.asCssProp)((0, _.gridUnits)(4))};
      }
    `
        }

        render() {
            return y.dy`
      <div class="circular-close-button__background">
        <gu-icon
          class="circular-close-button__icon"
          iconLigature="close_x"
          fillGradient=${g.gradients.apocyan.simple("bottom")}
        ></gu-icon>
      </div>
    `
        }
    };
    r = (0, c.gn)([(0, e.M)("gu-circular-close-button")], r)
}, 89534
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(56418), e = o(72650), _ = o(93270), p = o(14879), g = o(80102), r = o(26532),
        t = o(65281), n = o(40010);
    const T = i.iv`
  ${n.W2}

  .button__icon {
    font-size: ${(0, r.asCssProp)((0, g.gridUnits)(4))};
  }

  .button__text {
    color: inherit;
    text-shadow: 0 calc(var(--vh) * 0.2) calc(var(--vh) * 0.2) rgba(${(0, r.asCssProp)(t.colors.dark[900])}, 0.5);
    text-decoration: none;
    display: flex;
    align-items: center;
    justify-self: center;
    align-content: center;
    order: 1;
    gap: 8px;
  }

  /*  MOUSE-DOWN FX
    ----------------------------------------------------------------------------------- */
  :host(:active)::after {
    content: '';
    position: absolute;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    z-index: 0;
    background: ${(0, r.asCssProp)(t.gradients.apocyan.simple())};
    opacity: 0.2;
    ${(0, r.asCssProp)((0, r.drawHexShapePolygonMask)(11, 11))};
  }

  /* Primary */

  :host([type='primary']) {
    background: ${(0, r.asCssProp)(t.gradients.apocyan.simple("bottom"))};
  }

  .button__artwork {
    ${(0, r.asCssProp)(t.uifx.userSelect("none"))};
    position: absolute;
    z-index: 2;
    left: 3px;
    right: 3px;
    top: 2px;
    bottom: 2px;
    ${(0, r.asCssProp)((0, r.drawHexShapePolygonMask)(11, 11))};
  }

  .button__artwork__side {
    position: absolute;
    left: 50%;
  }

  .button__artwork__side img {
    display: block;
    height: 100%;
  }

  .button__artwork__side--top {
    height: calc(${(0, r.asCssProp)("32px")} * 1.4);
    bottom: 36%;
    transform: translateX(-42%);
  }

  .button__artwork__side--bottom {
    height: calc(${(0, r.asCssProp)("32px")} * 2);
    top: 32%;
    transform: translateX(-58%);
  }

  :host([size='large']) .button__artwork__side--top {
    height: calc(${(0, r.asCssProp)("48px")} * 1.4);
  }

  :host([size='large']) .button__artwork__side--bottom {
    height: calc(${(0, r.asCssProp)("48px")} * 2);
  }

  :host([type='primary']:hover) {
    color: ${(0, r.asCssProp)(t.colors.light[100])};
  }

  :host([type='primary']:hover)::before {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[700])};
  }

  :host([type='primary']:hover) .artwork__side {
    opacity: 0.8;
  }

  /* Secondary */

  :host([type='secondary']) {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[100])};
  }

  :host([type='secondary'])::before {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[900])};
  }

  :host([type='secondary']:hover)::before {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[700])};
  }

  /* Subtle */

  :host([type='subtle']) {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[900])};
    text-transform: uppercase;
  }

  :host([type='subtle'])::before {
    display: none;
  }

  :host([type='subtle']) .button__text,
  :host([type='subtle']) .button__icon {
    color: ${(0, r.asCssProp)(t.colors.apocyan[100])};
  }

  :host([type='subtle']:hover) {
    background: ${(0, r.asCssProp)(t.colors.gunmetal[700])};
  }
`;

    class b extends p.o {
        constructor() {
            super(...arguments), this.type = "secondary"
        }

        static get styles() {
            return T
        }

        renderArtwork() {
            return "primary" !== this.type ? i.dy`` : i.dy`
      <div class="button__artwork">
        <picture class="button__artwork__side button__artwork__side--top">
          <source srcset="/assets/images/hex-button/hex-button--top-wave-art.webp" type="image/webp" />
          <source srcset="/assets/images/hex-button/hex-button--top-wave-art.png" type="image/png" />
          <img src="/assets/images/hex-button/hex-button--top-wave-art.png" />
        </picture>

        <picture class="button__artwork__side button__artwork__side--bottom">
          <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.webp" type="image/webp" />
          <source srcset="/assets/images/hex-button/hex-button--bottom-wave-art.png" type="image/png" />
          <img src="/assets/images/hex-button/hex-button--bottom-wave-art.png" />
        </picture>
      </div>
    `
        }

        renderText() {
            return i.dy`
      <gu-heading-text class="button__text" size="${"large" === this.size ? "2x-small" : "3x-small"}">
        <slot></slot>
      </gu-heading-text>
    `
        }

        render() {
            return i.dy`${this.renderArtwork()} ${super.render()}`
        }
    }

    (0, c.gn)([(0, y.C)({reflect: !0})], b.prototype, "type", void 0), (0, c.gn)([(0, y.C)()], b.prototype, "size", void 0), customElements.define("gu-hex-button", (0, e.b)((0, _.Z)(b)))
}, 40010
:
(se, B, o) => {
    "use strict";
    o.d(B, {W2: () => n});
    var c = o(32830), i = o(80102), y = o(26532), e = o(65281);
    const _ = c.iv`
  :host {
    cursor: pointer;
    display: inline-flex;
    justify-self: center;
    justify-content: center;
    flex-grow: 0;
    color: ${(0, y.asCssProp)(e.colors.gunmetal[100])};
    border-radius: ${(0, y.asCssProp)((0, i.gridUnits)(1))};
    padding: 1px;
    overflow: hidden;
  }

  /* Button content styles
    ----------------------------------------------------------------------------------- */
  .button__content {
    position: relative;
    display: flex;
    justify-content: center;
    align-items: center;
    padding: ${(0, y.asCssProp)((0, i.gridUnits)(1.5))} ${(0, y.asCssProp)((0, i.gridUnits)(3.5))};
    flex: 1;
    gap: 8px;
  }

  .button__icon {
    position: relative;
    z-index: 2;
    order: 2;
    font-size: ${(0, y.asCssProp)((0, i.gridUnits)(6))};
  }

  .button__text {
    position: relative;
    z-index: 2;
    text-decoration: none;
    order: 1;
    line-height: 20px;
  }

  /* Horizontal stretch functionality:
    ----------------------------------------------------------------------------------- */
  :host([expand='true']) {
    justify-self: stretch;
    flex-grow: 1;
  }

  /* Button content icon on left side state:
    ----------------------------------------------------------------------------------- */
  .button__content--icon-left .button__icon {
    order: 0;
  }

  /* Button content when layout is square
  ----------------------------------------------------------------------------------- */
  .button__content--layout-square {
    padding: ${(0, y.asCssProp)((0, i.gridUnits)(1.5))};
  }

  /* Button content when layout is vertical
    ----------------------------------------------------------------------------------- */
  .button__content--layout-vertical {
    flex-direction: column;
    align-items: center;
    min-width: 70px;
    max-width: 80px;
    padding: ${(0, y.asCssProp)((0, i.gridUnits)(3))} ${(0, y.asCssProp)((0, i.gridUnits)(3))};
    gap: 0px;
  }

  .button__content--layout-vertical .button__icon {
    order: 0;
    margin: 0;
    font-size: ${(0, y.asCssProp)((0, i.gridUnits)(6))};
  }

  .button__content--layout-vertical .button__text {
    text-align: center;
  }

  /* "DISABLED" and "LOADING" BUTTON STYLES
    ----------------------------------------------------------------------------------- */
  :host([disabled='true']),
  :host([loading='true']) {
    ${(0, y.asCssProp)(e.uifx.userSelect("none"))};
  }

  :host([disabled='true']) {
    filter: grayscale(100%);
  }
`, n = c.iv`
  ${_}

  :host {
    position: relative;
    white-space: nowrap;
    color: ${(0, y.asCssProp)(e.colors.light[100])};
    ${(0, y.asCssProp)((0, y.drawHexShapePolygonMask)(12, 12))};
    ${(0, y.asCssProp)(e.animation.standardTransition("all"))};

    /* NORMAL SIZING BY DEFAULT */
    min-width: 140px;
    height: ${(0, y.asCssProp)("32px")};
    line-height: ${(0, y.asCssProp)("32px")};
  }

  /* The background "fill" color of the button */
  :host::before {
    content: '';
    position: absolute;
    ${(0, y.inset)(2, 3)}
    z-index: 0;
    background: ${(0, y.asCssProp)(e.colors.gunmetal[900])};
    ${(0, y.asCssProp)((0, y.drawHexShapePolygonMask)(11, 11))};
    ${(0, y.asCssProp)(e.animation.standardTransition("all"))};
  }

  .button__content {
    padding: 0 ${(0, y.asCssProp)("20px")};
  }

  /* large size */

  :host([size='large']) {
    height: ${(0, y.asCssProp)("48px")};
    line-height: ${(0, y.asCssProp)("48px")};
    ${(0, y.asCssProp)((0, y.drawHexShapePolygonMask)(18, 18))};
  }

  :host([size='large']) .button__content {
    padding: 0 ${(0, y.asCssProp)("26px")};
  }

  :host([size='large'])::before {
    ${(0, y.asCssProp)((0, y.drawHexShapePolygonMask)(17, 17))};
  }

  :host([size='large']) .buttonContent__icon {
    font-size: ${(0, y.asCssProp)((0, i.gridUnits)(5.5))};
  }
`
}, 99454
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(86041), e = o(26532), _ = o(61462);
    let p = class extends i.oi {
        static get properties() {
            return {}
        }

        static get styles() {
            return i.iv`
      ${(0, e.asCssProp)((0, e.setBoxSizing)())}

      :host {
        display: block;
        position: relative;
      }

      /* @NOTE: The hidden submit button cannot be display: none,
      as this breaks the go-button / enter functionality in Safari */
      .formControl__hiddenSubmitInput {
        position: absolute;
        opacity: 0;
        top: 0;
        left: 0;
        ${(0, e.asCssProp)((0, _.userSelect)("none"))};
      }

      .formControl__fakeSlot {
        display: flex;
        flex-direction: column;
      }
    `
        }

        firstUpdated() {
            this.formDom = this.shadowRoot.querySelector(".formControl"), this.formDom.addEventListener("submit", this.formSubmitHandler)
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.formDom.removeEventListener("submit", this.formSubmitHandler)
        }

        formSubmitHandler(r) {
            r.preventDefault(), this.dispatchEvent(new CustomEvent("onFormSubmit", {bubbles: !0, composed: !0}))
        }

        onSlotChange() {
            const r = this.shadowRoot.querySelector(".formSlot"),
                t = this.shadowRoot.querySelector(".formControl__fakeSlot");
            r.assignedElements().forEach(n => t.appendChild(n))
        }

        render() {
            return i.dy`
      <form class="formControl" action="">
        <input type="submit" class="formControl__hiddenSubmitInput" @click=${this.formSubmitHandler} />
        <div class="formControl__fakeSlot"></div>
      </form>
      <slot class="formSlot" @slotchange=${this.onSlotChange}></slot>
    `
        }
    };
    p = (0, c.gn)([(0, y.M)("gu-form-context")], p)
}, 4390
:
(se, B, o) => {
    "use strict";

    function c(p, g, r) {
        g.runTask(() => p.navigate([r]))
    }

    function i(p) {
        window.open(p.url, p._target)
    }

    function e(p, g) {
        return Object.keys(p).reduce((r, t) => -1 !== g.indexOf(p[t].path) || r, !1)
    }

    o.d(B, {pR: () => c, rb: () => i, M0: () => e, Cs: () => _});
    const _ = p => new CustomEvent("onExternalNavItemClick", {detail: {navItem: p}, bubbles: !0, composed: !0})
}, 61517
:
(se, B, o) => {
    "use strict";
    var c = o(32830), i = o(5284), y = o(65171), e = o(26532), _ = o(65281), p = o(91418);
    customElements.define("gu-icon", class g extends c.oi {
        constructor() {
            super(...arguments), this.iconLigature = "", this.fillGradientTarget = "top"
        }

        static get properties() {
            return {
                iconLigature: {type: String},
                fillColor: {type: String},
                fillGradient: {type: String},
                fillGradientTarget: {type: String}
            }
        }

        static get styles() {
            return c.iv`
      :host {
        display: inline-flex;
        font-weight: 400 !important;
        ${(0, e.asCssProp)(i.uA.enhancedTextRenderingStyles)};
        /*
          Adding fill coloring rules for textFillColor here.
          ${(0, e.asCssProp)(p.fillColoringRules)} didn't allow for the case
          where a fillColor wasn't passed a component input, but was
          controlled by a parent component via css variables.
        */
        color: var(--textFillColor);
        border-color: var(--textFillColor);
      }

      .icon {
        -webkit-user-select: none;
        user-select: none;

        margin: auto;
        ${(0, e.asCssProp)(_.typography.iconTextStyles)};
      }

      :host([fillGradient]) {
        display: inline;
        line-height: 0;
      }

      ${(0, e.asCssProp)(p.fillColoringRules)}
    `
        }

        render() {
            return (0, y.updateColoringVariables)({
                component: this,
                fillColor: this.fillColor,
                fillGradient: this.fillGradient,
                fillGradientTarget: this.fillGradientTarget
            }), c.dy`<i class="icon">${this.iconLigature}</i>`
        }
    })
}, 1949
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(56418), e = o(86041), _ = o(80102), p = o(26532), g = o(65281);
    let r = class extends i.oi {
        constructor() {
            super(...arguments), this.color = "grey"
        }

        static get styles() {
            return i.iv`
      :host {
        height: ${(0, p.asCssProp)((0, _.gridUnits)(6))};
        display: flex;
        background: none;
        position: relative;
        transform: translateZ(0) scale(1);
        backface-visibility: hidden;
        transform-origin: 0 0;
      }
      .rect {
        box-sizing: content-box;
        width: ${(0, p.asCssProp)((0, _.gridUnits)(1.5))};
        height: 100%;
        animation: opacityFade 1s cubic-bezier(0.5, 0, 0.5, 1) infinite;
      }
      .rect:not(:first-child) {
        margin-left: ${(0, p.asCssProp)((0, _.gridUnits)(1.5))};
      }
      .rect--1 {
        animation-delay: -0.6s;
      }
      .rect--2 {
        animation-delay: -0.4s;
      }
      .rect--3 {
        animation-delay: -0.2s;
      }
      .rect--4 {
        animation-delay: -1s;
      }
      .grey.rect--1 {
        background: #fafafa;
      }
      .grey.rect--2 {
        background: #f2f2f2;
      }
      .grey.rect--3 {
        background: #e5e5e5;
      }
      .grey.rect--4 {
        background: ${(0, p.asCssProp)(g.colors.light[300])};
      }
      .apocyan.rect--1 {
        background: ${(0, p.asCssProp)(g.colors.apocyan[300])};
      }
      .apocyan.rect--2 {
        background: #6edbdb;
      }
      .apocyan.rect--3 {
        background: #67d9e0;
      }
      .apocyan.rect--4 {
        background: ${(0, p.asCssProp)(g.colors.apocyan[500])};
      }
      @keyframes opacityFade {
        0% {
          opacity: 1;
        }
        50% {
          opacity: 0.5;
        }
        100% {
          opacity: 1;
        }
      }
    `
        }

        render() {
            return i.dy`
      <div class="rect rect--1 ${this.color}"></div>
      <div class="rect rect--2 ${this.color}"></div>
      <div class="rect rect--3 ${this.color}"></div>
      <div class="rect rect--4 ${this.color}"></div>
    `
        }
    };
    (0, c.gn)([(0, y.C)({type: String})], r.prototype, "color", void 0), r = (0, c.gn)([(0, e.M)("gu-rectangular-spinner")], r)
}, 90004
:
(se, B, o) => {
    "use strict";
    var c = o(70655), e = (o(51256), o(52102), o(32830)), _ = o(56418), p = o(86041), g = o(65281), r = o(65171),
        t = o(80102), n = o(26532);
    const v = (0, n.asCssProp)((0, t.gridUnits)(11)), P = e.iv`
  ${(0, n.asCssProp)((0, n.setBoxSizing)())}

  :host {
    display: flex;
    width: 100%;
    cursor: pointer;
    padding: ${(0, n.asCssProp)((0, t.gridUnits)(5))} 0 0;
  }

  .innerContainer {
    margin: auto;
    width: 100%;
    padding-bottom: 140%;
    position: relative;
  }

  .itemImage {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .itemImage--cryptoKittyHead,
  .itemImage--cryptoKitty {
    width: 80%;
    height: 80%;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .itemImage--cryptoKitty {
    width: 85%;
    height: 85%;
  }

  .colorStrip {
    z-index: 1;
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 2.5%;
    background: ${(0, n.asCssProp)(g.colors.quality.plain)};
    box-shadow: 0px 1px 2px rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 0.5);
  }

  .gradientSkrim {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    box-shadow: inset 0 0 0 1px rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.light[100]))}, 0.3);
    background: linear-gradient(
      to top,
      rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 1) 0%,
      rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 0) 70%
    );
  }

  .countDisplay {
    position: absolute;
    z-index: 2;
    left: 50%;
    top: ${(0, n.asCssProp)((0, t.gridUnits)(-5))};
    transform: translate(-50%, 0);
    width: ${v};
    height: ${v};
    line-height: ${v};
    background: url('/assets/images/ui-embellishments/ui--count-background-diamonds.svg') center no-repeat;
    background-size: contain;
  }

  .countDisplay__x {
    font-weight: normal;
    text-transform: none;
  }

  .textFields {
    position: absolute;
    bottom: ${(0, n.asCssProp)((0, t.gridUnits)(5))};
    left: 0;
    width: 100%;
    text-align: center;
    padding: 0 ${(0, n.asCssProp)((0, t.gridUnits)(4))};
  }

  .textFields__qualityName {
    text-shadow: 0px ${(0, n.asCssProp)((0, t.gridUnits)(1))} ${(0, n.asCssProp)((0, t.gridUnits)(1))}
      rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.dark[900]))}, 0.5);
  }

  .textFields__qualityName,
  .textFields__itemName {
    display: block;
  }

  .textFields__qualityName {
    margin-bottom: ${(0, n.asCssProp)((0, t.gridUnits)(1))};
  }

  /*
    @NOTE: style for various UI states ...
  */
  :host(.hideCount) {
    padding: 0;
  }

  :host(:hover) .gradientSkrim {
    box-shadow: inset 0 0 0 ${(0, n.asCssProp)((0, t.gridUnits)(.25))} rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.apocyan[300]))}, 1);
  }

  :host(.noAspectRatio) {
    height: 100%;
  }

  :host(.noAspectRatio) .innerContainer {
    padding-bottom: 0%;
    height: 100%;
  }

  :host(.notOwned) .itemImage,
  :host([count='0']) .itemImage {
    opacity: 0.3;
  }

  :host(.equipped) .gradientSkrim {
    box-shadow: inset 0 0 0 ${(0, n.asCssProp)((0, t.gridUnits)(.5))} rgba(${(0, n.asCssProp)((0, r.hexToCssRgbString)(g.colors.apocyan[300]))}, 1);
  }

  :host(.hideBorder) .gradientSkrim {
    box-shadow: none;
  }
`;
    o(29939), o(28917);
    let k = class extends e.oi {
        static get styles() {
            return P
        }

        renderText() {
            var $, s, h, x;
            if (this.hideText) return e.dy``;
            const I = (null === (s = null === ($ = this.board) || void 0 === $ ? void 0 : $.class_properties) || void 0 === s ? void 0 : s.quality) || (null === (x = null === (h = this.board) || void 0 === h ? void 0 : h.class_properties) || void 0 === x ? void 0 : x.effort),
                Y = this.trinket ? this.trinket.name : this.board ? this.board.name : "";
            return e.dy`
      <i class="gradientSkrim"></i>
      <div class="textFields">
        <gu-simple-text class="textFields__qualityName" kind="tag" fillColor=${g.colors.light[100]}>
          ${I}
        </gu-simple-text>
        <gu-heading-text class="textFields__itemName" size="2x-small" fillGradient=${g.gradients.gold.simple()}>
          ${Y}
        </gu-heading-text>
      </div>
    `
        }

        renderCount() {
            var $, s;
            let h;
            return !this.hideCount && void 0 !== this.count && (h = (null === ($ = this.trinket) || void 0 === $ ? void 0 : $.owned) || (null === (s = this.board) || void 0 === s ? void 0 : s.owned) ? this.count : 0), this.hideCount || void 0 === h ? e.dy`` : e.dy`
        <gu-simple-text class="countDisplay" align="center" kind="micro" data-test-id="loadout-part-count">
          x<strong>${Math.min(h, 99)}</strong>${h > 99 ? "+" : null}
        </gu-simple-text>
      `
        }

        render() {
            var $, s, C;
            return this.noAspectRatio ? this.classList.add("noAspectRatio") : this.classList.remove("noAspectRatio"), (null === ($ = this.trinket) || void 0 === $ ? void 0 : $.owned) || (null === (s = this.board) || void 0 === s ? void 0 : s.owned) ? this.classList.remove("notOwned") : this.classList.add("notOwned"), this.equipped ? this.classList.add("equipped") : this.classList.remove("equipped"), this.hideText ? this.classList.add("hideText") : this.classList.remove("hideText"), this.hideCount ? this.classList.add("hideCount") : this.classList.remove("hideCount"), this.hideBorder ? this.classList.add("hideBorder") : this.classList.remove("hideBorder"), e.dy`
      <div class="innerContainer">
        ${this.trinket ? ((C, $) => "Good Kitty Statue" === C.name ? ((C, $) => {
                var s;
                let h = "#6B6B70", x = "#B1AEB9", I = "#E1E1E1";
                return (null === (s = null == C ? void 0 : C.properties) || void 0 === s ? void 0 : s.fur_color) && (h = C.properties.fur_color, x = C.properties.belly_color, I = C.properties.eyes_color), $ ? e.dy`
      <gu-regular-crypto-kitty-head
        class="itemImage itemImage--trinket itemImage--cryptoKittyHead"
        .furColor=${h}
        .bellyColor=${x}
        .eyeColor=${I}
        data-test-id="loadout-part-trinket"
      ></gu-regular-crypto-kitty-head>
    ` : e.dy`
    <gu-regular-crypto-kitty
      class="itemImage itemImage--trinket itemImage--cryptoKitty"
      .furColor=${h}
      .bellyColor=${x}
      .eyeColor=${I}
      data-test-id="loadout-part-trinket"
    ></gu-regular-crypto-kitty>
  `
            })(C, $) : e.dy`<img
    class="itemImage itemImage--trinket"
    src="https://images.godsunchained.com/collectables/trinkets/${C.proto}--preview.webp"
    alt=""
    data-test-id="loadout-part-trinket"
  />`)(this.trinket, this.noAspectRatio) : null}
        ${this.board ? (C = this.board.proto, e.dy`
  <img
    class="itemImage itemImage--board"
    src="https://images.godsunchained.com/collectables/boards/${C}--thumb.webp"
    alt=""
    data-test-id="loadout-part-board"
  />
  <i class="colorStrip"></i>
`) : null} ${this.renderCount()} ${this.renderText()}
      </div>
    `
        }
    };
    (0, c.gn)([(0, _.C)({
        type: Number,
        reflect: !0
    })], k.prototype, "count", void 0), (0, c.gn)([(0, _.C)({type: Object})], k.prototype, "board", void 0), (0, c.gn)([(0, _.C)({type: Object})], k.prototype, "trinket", void 0), (0, c.gn)([(0, _.C)({type: Boolean})], k.prototype, "equipped", void 0), (0, c.gn)([(0, _.C)({type: Boolean})], k.prototype, "noAspectRatio", void 0), (0, c.gn)([(0, _.C)({type: Boolean})], k.prototype, "hideText", void 0), (0, c.gn)([(0, _.C)({type: Boolean})], k.prototype, "hideCount", void 0), (0, c.gn)([(0, _.C)({type: Boolean})], k.prototype, "hideBorder", void 0), k = (0, c.gn)([(0, p.M)("gu-loadout-part")], k)
}, 29939
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(56418), e = o(86041), _ = o(26532), p = o(65281);
    let g = class extends i.oi {
        static get styles() {
            return i.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: center;
      }

      svg {
        flex: 1;
        max-height: 100%;
        max-width: 100%;
      }
    `
        }

        render() {
            return i.YP`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 204 240">
        <defs>
          <style>
            .furColor {
              fill: ${this.furColor};
            }

            .eyeColor {
              fill: ${this.eyeColor};
            }

            .bellyColor {
              fill: ${this.bellyColor};
            }

            .outlineColor {
              fill: ${(0, _.asCssProp)(p.colors.black)};
              fill-rule: evenodd;
            }
          </style>
        </defs>
        <path
          class="furColor"
          d="M143,209.9c71.5-8.69,66.29-85.92,29.35-129.73,1.14-5-.43-8.14-2.22-12.21-8.7-19.79-9.33-42.93-9.33-60.12a2.57,2.57,0,0,0-3.59-2.53c-13.6,6.29-34.1,29-36.52,44.34-1.45-.11-2.92-.17-4.39-.17-10.13,0-22.78.14-35.51,2.72-9.71-13.55-36.7-39.3-54.08-46a2.78,2.78,0,0,0-3.67,2.88c.34,11.36-1.94,22.37-4.2,33.35-4.29,20.78-8.55,41.43,5,64a5.64,5.64,0,0,0,.62.85A137.93,137.93,0,0,0,21.32,138,80.06,80.06,0,0,0,23,154.35C28.8,193.72,21.32,221.87,13,240H138.1C138.47,227.09,140.14,216.55,143,209.9Z"
        />
        <path class="eyeColor" d="M159.46,111.74l4.6,23.06,18.66-7.22,5.26-19L180.5,90.33l-13.31,6Z" />
        <path class="eyeColor" d="M76.19,133.35l-19.26-23L88.85,98.88l26.66,11.45L126,139.14l-24.1,3Z" />
        <path class="eyeColor" d="M140.43,150.43,142,154.9l11.69,8.49,3.47-.52s5.34-9.08,7.52-13.16l-2.09-3.27Z" />
        <path
          class="bellyColor"
          d="M153.8,60c-2.17-7.88-3.08-23.49,6.54-30.12,1.07,0,1.53,4.45,2,8.75.17,1.56.32,3.1.51,4.4.08.59.16,1.21.24,1.88a60.86,60.86,0,0,0,1.09,6.71A8.17,8.17,0,0,1,173,54a8.75,8.75,0,0,0-4.83,2.94,9.1,9.1,0,0,1-1.67,1.56c2.47-.77,5.31-.14,7.5,4a4,4,0,0,0-2.78,1.09,2.84,2.84,0,0,1-2.67.79c2.45.62,3.61,2.19,3.45,3.12a2.22,2.22,0,0,0-1.89.4c.41.87.85,1.77,1.31,2.69,1.83,3.66,1.69,5.17,1.29,6.78C166.65,70.36,160.05,64.17,153.8,60Z"
        />
        <path
          class="bellyColor"
          d="M42,51c-3.63-7.23-7.36-14.66-11.8-17.73a1,1,0,0,0-1.49.78c-.37,3.48-2,7.21-3.83,11.42C22.6,50.77,20,56.8,19.05,64.06A22.54,22.54,0,0,0,10.5,66.5a27.43,27.43,0,0,1,3.67,3.11,28.69,28.69,0,0,0,4.71,3.87c0,.19,0,.38.05.57-2.71.25-5.55,1.59-6.43,6.45a9.61,9.61,0,0,1,4.69.14,12,12,0,0,0,3,.34c.06.24.12.48.19.72-2.65,2.31-3.3,5-2.88,5.8a5.25,5.25,0,0,1,4.68-.31A75.85,75.85,0,0,0,28,99c1.91-4.67,11.17-21.5,24.25-29.94a1.34,1.34,0,0,0,0-2.1C48.6,64.16,45.35,57.69,42,51Z"
        />
        <path
          class="outlineColor"
          d="M101.91,142.1l-25.72-8.75-19.26-23L88.85,98.88l26.66,11.45L126,139.14Zm-22.2-13.89L67.05,113.07l21.6-7.75,22.11,9.5,7,19.29L102.54,136Z"
        />
        <path
          class="outlineColor"
          d="M163.78,143.69l3.79,5.91-.69,1.29c-1.11,2.09-3,5.41-4.62,8.18l-2.08,3.58-.64,1.08-.84,1.43-.91.14.25,10.17,10.56,6.71a1.87,1.87,0,0,1,.49,2.62,1.93,1.93,0,0,1-2.64.75l-9.85-6.26-13.29,11.78a1.94,1.94,0,0,1-2.66-.39,1.85,1.85,0,0,1,0-2.6l13.41-11.88-.25-10.3L153,166l-13.15-9.55-2.79-8Zm-7.92,16.43-.26.45-1.28.19-10.23-7.42-.33-1,17.62-3.18.39.62c-1.07,2-2.54,4.5-3.84,6.75C157.13,158,156.4,159.21,155.86,160.12Z"
        />
        <path
          class="outlineColor"
          d="M146.64,214.45c-1.69,5.11-4,17.05-3.14,25.55H136c-.5-6.5.66-14.46,1.55-19.26-21.53,2.62-58.9-8.61-71.69-15.82q-4-1.57-7.73-3.44l1.33.42h0c7.27,2.35,33.35,10.77,71.56,7.1q5.43-.36,11.08-1l.58-.06c1.1-.14,2.17-.28,3.23-.45C157.3,205.7,166.45,202,173.66,197a49.09,49.09,0,0,0,11.72-11.44,50,50,0,0,0,3.83-6.14l.07-.14.05-.1,0-.06c.65-1.25,1.25-2.52,1.8-3.82a62.17,62.17,0,0,0,4.36-16.93c0-.4.1-.79.14-1.2q.24-2.4.33-4.86a96,96,0,0,0-3.86-29.69c-1-3.6-2.24-7.19-3.64-10.72-.28-.7-.56-1.41-.86-2.11l-4.91,17.78-18.66,7.22-4.6-23.06,7.73-15.45L178,91.44q-2.13-3.33-4.49-6.5c-1.32-1.77-2.69-3.51-4.11-5.18l-.06-.08c-1.56-1.85-3.18-3.63-4.84-5.34-12.86-13.2-28.62-22-45.55-22.79-.88,0-1.76-.07-2.65-.07a199.22,199.22,0,0,0-29.21,1.65q-2.94.43-5.9,1l-1.27.25-.76-1C74.45,46.75,65.39,37,55.32,28.13S34.35,11.28,26,8.07a.57.57,0,0,0-.59.1,1.07,1.07,0,0,0-.36.86c.34,11.59-2,22.8-4.22,33.7l0,.11a215.77,215.77,0,0,0-3.68,21.45,19.89,19.89,0,0,0-2.05.45,20.52,20.52,0,0,0-2,.63l-.09,0a27.16,27.16,0,0,0-2.52,1.1,21.89,21.89,0,0,1,3.44,2.88l.76.73,0,0c.65.6,1.31,1.2,2,1.75,0,.89,0,1.79,0,2.68a6.06,6.06,0,0,0-3,2.63A8.45,8.45,0,0,0,13,78.64a2.47,2.47,0,0,0-.1.29,10.92,10.92,0,0,0-.39,1.57A6.84,6.84,0,0,1,15,80.29a18.87,18.87,0,0,1,2,.32q.26,2.31.69,4.62a3.12,3.12,0,0,0-.25,2.27,6.31,6.31,0,0,1,.66-.29,61.43,61.43,0,0,0,7.38,18.25,4.52,4.52,0,0,0,.4.56l.67.76-.22,1a130,130,0,0,0-3,25c0,1.69-.08,3.42-.08,5.18,0,2.12.08,4.2.23,6.22a74.67,74.67,0,0,0,1.36,9.74V154h0q.38,1.73.81,3.39c.13,2.13.26,4.13.38,6C28.65,187.86,28,217,17.5,240H8c8.5-14.5,15.68-46.52,10-84.77A84.8,84.8,0,0,1,16.32,138a146.59,146.59,0,0,1,2.8-29.74,68,68,0,0,1-8.29-22.06L6.14,87.52l1.44-7.91a14.77,14.77,0,0,1,2.09-5.48c0-.64,0-1.27,0-1.91a11.73,11.73,0,0,0-1.82-1.48L.29,66l8-4c.74-.37,1.47-.7,2.21-1,.82-6.64,2.17-13.16,3.47-19.48l0-.12c2.29-11.07,4.42-21.52,4.1-32.19-.14-4.79,4.51-10,10.46-7.7C38.09,5.23,49.75,13.85,60,22.88a193.53,193.53,0,0,1,23,23.83c12.19-2.12,24-2.23,33.38-2.23h.49c2.46-7.91,8-16.4,14.16-23.63C138.32,12.2,147.4,4.34,155.13.77a7.35,7.35,0,0,1,7.46.69,7.91,7.91,0,0,1,3.22,6.21c0,.38,0,1.16,0,2.26-.1,5.88-.36,21.08,2.49,36.58.35,0,.7.09,1.06.16a12.57,12.57,0,0,1,7.42,4l5.12,5.84L177.07,58a17.92,17.92,0,0,1,1.35,2.16l3.75,7.09-5.15.16a6.52,6.52,0,0,1-.1,1l-.3,1.69a20.37,20.37,0,0,1,1,8.71c17.69,22.75,28,53.44,24.88,80.16-1.59,13.8-6.76,26.71-16.52,36.76C176.75,205.22,163.72,211.85,146.64,214.45Zm26.07-137a15.73,15.73,0,0,0-.52-4.86,1.55,1.55,0,0,0-.07-.23,10.73,10.73,0,0,0-.61-1.6l-.09-.17c-.22-.44-.43-.88-.64-1.31s-.45-.92-.67-1.38a1.81,1.81,0,0,1,.87-.41,3.18,3.18,0,0,1,1,0v0h0a1.61,1.61,0,0,0,0-.43,3.83,3.83,0,0,0-2.28-2.25l-.2-.08a6.22,6.22,0,0,0-.95-.31,4.69,4.69,0,0,0,.8.05,2.8,2.8,0,0,0,1.87-.84,4.11,4.11,0,0,1,1.51-.89,4.76,4.76,0,0,1,1.27-.2,12,12,0,0,0-1-1.65,8.65,8.65,0,0,0-.77-.89,5.81,5.81,0,0,0-2.3-1.48h0a5.42,5.42,0,0,0-3.38,0,9.1,9.1,0,0,0,1.67-1.56l.2-.22a8.41,8.41,0,0,1,4.15-2.57L173,54a8.36,8.36,0,0,0-6.19-2.58,13.34,13.34,0,0,0-2.61.18,149,149,0,0,1-2.85-19.92c-.2-1.32-.47-4.74-.77-8.59h0c-.55-6.93-1.21-15.25-1.76-15.26a.83.83,0,0,0-.31-.68.48.48,0,0,0-.19-.08.59.59,0,0,0-.25,0c-6.43,3-14.73,10-21.77,18.27a89.1,89.1,0,0,0-7.09,9.51c-2.08,4.07-2,13.09-.58,13.89,14.51,3.1,27.76,11.47,38.75,22.76Q170.14,74.37,172.71,77.45Zm5,45.62-9.19,3.56-2.8-14,5.85-11.7,5.7-2.55,4.35,10.6Z"
        />
      </svg>
    `
        }
    };
    (0, c.gn)([(0, y.C)({type: String})], g.prototype, "furColor", void 0), (0, c.gn)([(0, y.C)({type: String})], g.prototype, "bellyColor", void 0), (0, c.gn)([(0, y.C)({type: String})], g.prototype, "eyeColor", void 0), g = (0, c.gn)([(0, e.M)("gu-regular-crypto-kitty-head")], g)
}, 28917
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(56418), e = o(86041), _ = o(26532), p = o(65281);
    let g = class extends i.oi {
        static get styles() {
            return i.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        align-items: flex-start;
      }

      svg {
        flex: 1;
        max-height: 100%;
        max-width: 100%;
      }
    `
        }

        render() {
            return i.YP`
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 299.94 497.53">
        <defs>
          <style>
            .furColor {
              fill: ${this.furColor};
            }

            .eyeColor {
              fill: ${this.eyeColor};
            }

            .bellyColor {
              fill: ${this.bellyColor};
            }

            .outlineColor {
              fill: ${(0, _.asCssProp)(p.colors.black)};
              fill-rule: evenodd;
            }
          </style>
        </defs>
        <path
          class="furColor"
          d="M253.37,80.11c36.94,43.81,42.15,121-29.35,129.73-5.11,11.79-6.39,35.79-3.45,63.61,1.68-11.47,3.46-22.64,11.69-28.58,18.77-13.57,47.23,2.88,48.4,23.84,1.5,27-24.38,20.89-28,19.59,9.82,41.51,2.15,83.51-18,90.64a8.61,8.61,0,0,1-5.17.17,115.46,115.46,0,0,1-5.68,15.95c9.76-1,17.9-1.49,23.62-1.12,10,.64,17.87,4.13,23.58,9.12,16.23-.65,18.25,14.75,19,20.7a10.07,10.07,0,0,0,.39,2.18c-2.24-.6-4.34-1.37-6.35-2.11h0l-2.29-.83a29.09,29.09,0,0,1,.24,3.49c7.65,14-.78,19.81-7.88,24.66-2.81,1.93-5.4,3.71-6.71,5.8a24.06,24.06,0,0,1-1.15-6.51l-.68.27c-14,12.27-34.76,5.12-36.67-8.76,7.65.59,11.67.83,15.21-1.83,7.74-6.29,8.31-21.09-7.21-24.67-5.8-1.34-15.22.9-27.31,4.72-.69.78-1.39,1.52-2.06,2.25-3.32,3.57-6.2,6.67-5.81,11,13,0,23.5,8.33,21,26.5-4.12,3.92-12.76,6.17-22.36,7a37.44,37.44,0,0,1-3.27,11.29c-23,9.8-67.55,8.24-65.87-11.26.48-5.53.22-13.8-.68-23.78-2.7.5-5.41,1-8.15,1.38,10,14.32,3.52,26.26-1.17,29.9-6.23,4.85-51,7-60.13-4.16.8-8.91-1.27-17.87-4.61-26.56C18.74,435.91,5,415.3,5,395.94c0-13.64,7-22.16,14.27-31.09C24,359,28.91,353.06,32.11,345.39a85.83,85.83,0,0,1,3-11.38c8.59-25.37,18.11-36.79,29-49.8a234.53,234.53,0,0,0,19.26-25.65v-.14c.43-.67.88-1.35,1.33-2.07,3.2-5.18,6.51-11.07,9.92-17.92,8.32-18.14,15.23-44.77,9.39-84.15a79.51,79.51,0,0,1-1.64-16.36,137.9,137.9,0,0,1,3.12-30.65,6.36,6.36,0,0,1-.62-.85c-13.51-22.61-9.25-43.26-5-64.05,2.26-11,4.54-22,4.2-33.34a2.78,2.78,0,0,1,3.67-2.88c17.38,6.69,44.37,32.43,54.08,46,12.73-2.57,25.38-2.71,35.51-2.71,1.47,0,2.94.06,4.39.17,2.42-15.32,22.92-38.06,36.52-44.34a2.56,2.56,0,0,1,3.38,1.33,2.48,2.48,0,0,1,.21,1.2c0,17.19.63,40.33,9.33,60.12C252.94,72,254.51,75.08,253.37,80.11Z"
        />
        <path class="eyeColor" d="M240.46,111.68l4.6,23.06,18.66-7.22,5.26-19L261.5,90.27l-13.31,6Z" />
        <path class="eyeColor" d="M157.19,133.29l-19.26-23,31.92-11.44,26.66,11.44L207,139.08l-24.1,3Z" />
        <path class="eyeColor" d="M221.43,150.37l1.56,4.47,11.69,8.49,3.47-.53s5.34-9.07,7.52-13.15l-2.09-3.27Z" />
        <path
          class="bellyColor"
          d="M234.8,59.92c-2.17-7.87-3.08-23.48,6.54-30.11,1.07,0,1.53,4.45,2,8.74.17,1.56.32,3.1.51,4.4.08.6.16,1.22.24,1.88a61.07,61.07,0,0,0,1.09,6.72A8.16,8.16,0,0,1,254,53.94a8.75,8.75,0,0,0-4.83,2.94,9.15,9.15,0,0,1-1.67,1.56c2.47-.77,5.31-.14,7.5,4a4,4,0,0,0-2.78,1.09,2.81,2.81,0,0,1-2.67.78c2.45.63,3.61,2.2,3.45,3.13a2.17,2.17,0,0,0-1.89.4c.41.87.85,1.76,1.31,2.69,1.83,3.65,1.69,5.17,1.29,6.78C247.65,70.3,241.05,64.1,234.8,59.92Z"
        />
        <path
          class="bellyColor"
          d="M123,51c-3.63-7.23-7.36-14.66-11.8-17.74a1,1,0,0,0-1.36.38.83.83,0,0,0-.13.41c-.37,3.48-2,7.21-3.83,11.42C103.6,50.71,101,56.73,100,64a22.61,22.61,0,0,0-8.54,2.44,27.39,27.39,0,0,1,3.68,3.11,29.06,29.06,0,0,0,4.7,3.87,2.12,2.12,0,0,0,0,.56c-2.71.25-5.55,1.6-6.43,6.46a9.43,9.43,0,0,1,4.69.14,12.12,12.12,0,0,0,3,.34c.06.24.12.48.19.72-2.65,2.3-3.3,5-2.88,5.8a5.25,5.25,0,0,1,4.68-.31A76.35,76.35,0,0,0,109,98.94c1.91-4.67,11.17-21.5,24.25-29.94a1.34,1.34,0,0,0,.22-1.88,1.52,1.52,0,0,0-.22-.22C129.6,64.1,126.35,57.62,123,51Z"
        />
        <path
          class="bellyColor"
          d="M228.32,335.92c5.89,46.14-19.2,96.25-50.26,95.09-7.54-21-11.13-53.22-10-70.21s4-38.63,2.95-59.32c5.4-27.6,12.12-46.36,26.79-48.06C210.26,252,222.32,288.92,228.32,335.92Z"
        />
        <path
          class="outlineColor"
          d="M182.91,142l-25.72-8.75-19.26-23,31.92-11.44,26.66,11.44L207,139.08Zm-22.2-13.89L148.05,113l21.6-7.75,22.11,9.49,7,19.3-15.25,1.87Z"
        />
        <path
          class="outlineColor"
          d="M244.78,143.62l3.79,5.92-.69,1.29c-1.11,2.08-3,5.41-4.62,8.18l-2.08,3.57-.64,1.09-.84,1.43-.91.13.25,10.18,10.56,6.71a1.86,1.86,0,0,1,.51,2.58l0,0a1.92,1.92,0,0,1-2.6.78l0,0-9.85-6.26L224.31,191a1.94,1.94,0,0,1-2.66-.39,1.85,1.85,0,0,1,0-2.6l13.41-11.89-.25-10.29L234,166l-13.15-9.55-2.79-8Zm-7.92,16.44-.26.45-1.28.19-10.23-7.42-.33-1,17.62-3.17.39.62c-1.07,2-2.54,4.5-3.84,6.74C238.13,157.89,237.4,159.15,236.86,160.06Z"
        />
        <path
          class="outlineColor"
          d="M27.31,343.92c-2.89,6.68-7.21,12-11.91,17.76l-.27.34C8,370.77,0,380.51,0,395.94a45.28,45.28,0,0,0,13,31.67A60.46,60.46,0,0,0,26.9,438.3C11.8,444.35,3,451.64,3,459.47c0,21,63.28,38.06,141.34,38.06s141.34-17,141.34-38.06a13,13,0,0,0-3.26-8.16,23.55,23.55,0,0,0,5.67-6.7,18,18,0,0,0,1.19-13.82l10.66,2.84-4.73-9.45v-.76l-.07-.48c-.38-3-1.19-9.14-4.33-14.53a20.56,20.56,0,0,0-7.41-7.55A21.66,21.66,0,0,0,273,398.05,44.78,44.78,0,0,0,247.82,389a121,121,0,0,0-16.27.38c.59-1.63,1.15-3.28,1.68-5a12.77,12.77,0,0,0,3.17-.71c6.43-2.28,11.49-7.21,15.28-13.45s6.5-14.06,8.18-22.74c3-15.33,2.85-34-.7-52.82a32.34,32.34,0,0,0,10.65-.69,20,20,0,0,0,11.7-7.73c3.1-4.38,4.56-10.28,4.14-17.79-.7-12.66-9.53-23.38-20.27-29s-24.74-6.78-36,1.4a24.21,24.21,0,0,0-5.31,5.24q0-5.34.25-10.16c.49-9.1,1.68-16.4,3.37-21.51,17.08-2.61,30.11-9.23,39.35-18.76,9.76-10,14.93-23,16.52-36.76,3.07-26.72-7.19-57.41-24.88-80.16a20.45,20.45,0,0,0-1-8.71l.3-1.69a6.64,6.64,0,0,0,.1-1l5.15-.16-3.75-7.09a18.69,18.69,0,0,0-1.35-2.17l4.81-1.44-5.12-5.84a12.56,12.56,0,0,0-7.42-4l-1.06-.15c-2.85-15.5-2.59-30.7-2.49-36.58V7.64a7.89,7.89,0,0,0-3.22-6.2,7.32,7.32,0,0,0-7.46-.69c-7.77,3.53-16.85,11.39-24.17,20-6.14,7.22-11.7,15.72-14.16,23.63h-.49c-9.34,0-21.19.11-33.38,2.23a193.27,193.27,0,0,0-23-23.83c-10.22-9-21.87-17.66-31.44-21.34-6-2.29-10.6,2.91-10.46,7.7.32,10.67-1.81,21.11-4.1,32.18v.13C93.64,47.8,92.29,54.33,91.47,61c-.74.3-1.47.63-2.21,1l-8,4,7.56,4.73a10.81,10.81,0,0,1,1.82,1.48v1.91a14.53,14.53,0,0,0-2.09,5.47L87.11,87.5l4.69-1.33a68.13,68.13,0,0,0,8.29,22,147.08,147.08,0,0,0-2.8,29.75A84.57,84.57,0,0,0,99,155.16c5.65,38.25-1.06,63.85-9,81.11-3.33,6.67-6.54,12.4-9.65,17.42-.44.7-.87,1.37-1.29,2l-.23.37-.07.14A229,229,0,0,1,60.17,281l-.12.14c-10.94,13.13-20.87,25.12-29.72,51.25A89.64,89.64,0,0,0,27.31,343.92Zm216.5,88.52a9,9,0,0,0,.59-4.85c-.45-2.67-2.45-5.88-8.52-7.28-1.87-.43-4.85-.37-9.25.47a132.52,132.52,0,0,0-14.14,3.74l-1.18,1.27h0l-.11.13A286.78,286.78,0,0,1,243.81,432.44ZM94,65.34a25.61,25.61,0,0,0-2.52,1.1,21.53,21.53,0,0,1,3.44,2.88l.77.73h0c.65.61,1.31,1.21,2,1.76v2.68a6,6,0,0,0-3,2.63A7.8,7.8,0,0,0,94,78.58a2.47,2.47,0,0,0-.1.29,10.59,10.59,0,0,0-.39,1.57A7.2,7.2,0,0,1,96,80.22a17,17,0,0,1,2,.33q.25,2.31.69,4.62a3.09,3.09,0,0,0-.25,2.27q.33-.16.66-.3a61.15,61.15,0,0,0,7.38,18.25,3.78,3.78,0,0,0,.4.56l.67.77-.22,1a129.87,129.87,0,0,0-3,25c0,1.69-.08,3.42-.08,5.18q0,3.18.23,6.22a74.19,74.19,0,0,0,1.36,9.73v.06h0c.24,1.14.51,2.28.8,3.39q.19,3.19.38,6c2.54,24.51,0,43.8-4.4,59a122.71,122.71,0,0,1-6,16.18v.16c-.25.54-.5,1.07-.76,1.61-1.64,3.49-3.33,6.66-5,9.54l.21-.61c-1.6,2.8-3.3,5.66-5.13,8.71h0c-7.35,11.82-14.17,20-20.49,27.59l-2.38,2.87C53.4,300.15,44.8,311.47,37,334.65c-3.36,9.91-5,22.28-4.83,34.5s2.23,24.12,6.11,33.09c2,4.55,4.62,9.49,7.5,14.79l.62,1.15c2.68,4.93,5.51,10.15,8.07,15.52,5.37,11.28,9.67,23.53,8.82,35.86,2,2,5.72,3.63,10.76,4.79a86.36,86.36,0,0,0,15.78,1.92c1.43-3.66,3.07-11.07-1-18.07,6.76,3,8.51,13.23,6.56,18.17a119.33,119.33,0,0,0,15-1c.74-.11,1.46-.21,2.14-.33,1.58-3.71,4.55-12.06-.27-19.36,6.24,3.72,7.57,13,5.89,18.06a7.46,7.46,0,0,0,2-.94c2.61-2,6.22-7.5,5.59-14.83s-5.42-16.72-20.44-26.68l-1-.62.08-1.69c.36-7.53,1.12-23.44-1.31-40.62-2.5-17.67-8.65-35.89-21.4-48.21C77.3,336,75.16,330,74,323.74a55.16,55.16,0,0,0,12.26,16.45C100,353.44,104.48,369.87,107,387.84a216,216,0,0,1,1.42,39.79,102,102,0,0,0,14.9,3.69l-.09-.07c2.57-6.79-4.88-47.67-8.8-68.16-2.5-9.81-5.25-19.26-8.19-27.85h0c5.39,3.53,8,12.31,10,19.61h.06c4,14.59,7.42,30.23,10.15,45.21,5.13,28.16,7.81,54.3,6.72,66.92-.34,3.93,1.56,7,5.43,9.51s9.73,4.17,16.49,4.95A82.32,82.32,0,0,0,164,482c1.61-4,4.25-12.94-.41-20,6.43,3.84,7.31,14.86,5.34,19.91a94,94,0,0,0,16.61-2.23c1.27-9.21,1.56-14.34-3.52-22,6.48,3.87,9.52,10.49,8,20.89,2-.59,3.86-1.24,5.61-1.95,2.36-5.29,3.66-12,2.62-17.74a15.35,15.35,0,0,0-3.56-7.71,15.11,15.11,0,0,0-8.36-4.52,12.45,12.45,0,0,1-6.88-4.7,36.19,36.19,0,0,1-5-8.94c-2.89-7-5.07-16.11-6.67-25.47-3.18-18.7-4.73-40.34-3.89-48.4.33-4.92.74-10,1.16-15.06h0c2-25.12,4.23-52-2.08-75.58,7.28,7.59,7.83,27.15,8.15,38.31,0,.88,0,1.71.08,2.48.42,12.83-.79,24.76-1.87,35.37h0c-.52,5.15-1,10-1.27,14.48-.78,13.7.52,29.22,3.67,47.73,1.55,9.1,3.63,17.74,6.3,24.33h.27c18.8-.09,34.67-17.29,43.45-40.57.63-1.58,1.22-3.21,1.79-4.88,9-26.51,9.88-62.84-2.65-104.35v-.26q-4.16-26-3.83-44a99.83,99.83,0,0,1,1.48-16.46c-21.53,2.63-58.9-8.6-71.69-15.81-2.67-1.05-5.24-2.2-7.73-3.44l1.33.42h0c7.27,2.35,33.35,10.77,71.56,7.1q5.43-.36,11.08-1l.58-.07c1.1-.13,2.17-.28,3.23-.44,11.39-1.78,20.54-5.45,27.75-10.47a49.16,49.16,0,0,0,11.72-11.44,50.55,50.55,0,0,0,3.83-6.15l.07-.13.05-.1v-.06c.65-1.25,1.25-2.52,1.8-3.83a62.28,62.28,0,0,0,4.36-16.92c.05-.4.1-.8.14-1.2q.24-2.4.33-4.86a96.14,96.14,0,0,0-3.86-29.69,106.54,106.54,0,0,0-3.64-10.72c-.28-.7-.56-1.41-.85-2.11l-4.92,17.78L245,134.72l-4.6-23.06,7.73-15.45L259,91.38q-2.13-3.33-4.49-6.5-2-2.67-4.11-5.19l-.06-.07c-1.56-1.85-3.18-3.63-4.84-5.34-12.86-13.21-28.62-22-45.55-22.8-.88,0-1.76-.06-2.65-.06a198.1,198.1,0,0,0-29.21,1.65q-2.94.43-5.9,1l-1.27.26-.76-1C155.43,46.67,146.37,37,136.3,28s-21-16.82-29.3-20a.54.54,0,0,0-.59.1,1,1,0,0,0-.36.86c.34,11.59-2,22.8-4.22,33.7v.11a215.94,215.94,0,0,0-3.68,21.45,18.7,18.7,0,0,0-2,.44c-.64.18-1.31.39-2,.64Zm159.69,12a15.7,15.7,0,0,0-.52-4.87.31.31,0,0,0-.07-.23,11.33,11.33,0,0,0-.61-1.59l-.09-.17c-.22-.44-.43-.88-.64-1.31l-.67-1.38a1.89,1.89,0,0,1,.87-.41,3.35,3.35,0,0,1,1,0h0a1.55,1.55,0,0,0,0-.43,3.81,3.81,0,0,0-2.28-2.25l-.2-.08a8.16,8.16,0,0,0-.95-.32,3.55,3.55,0,0,0,.8.06,2.75,2.75,0,0,0,1.87-.84,4.3,4.3,0,0,1,1.51-.9,4.94,4.94,0,0,1,1.27-.19,11.5,11.5,0,0,0-1-1.65,11.06,11.06,0,0,0-.77-.9,6,6,0,0,0-2.3-1.48h0a5.42,5.42,0,0,0-3.38,0,9.15,9.15,0,0,0,1.67-1.56l.2-.22a8.41,8.41,0,0,1,4.15-2.57l.48-.15a8.35,8.35,0,0,0-6.19-2.58,12.69,12.69,0,0,0-2.61.18,148.75,148.75,0,0,1-2.85-19.93c-.2-1.31-.47-4.73-.77-8.58h0c-.55-6.92-1.21-15.24-1.76-15.25a.82.82,0,0,0-.31-.68.46.46,0,0,0-.19-.08.53.53,0,0,0-.25,0c-6.43,3-14.73,10-21.77,18.27a90,90,0,0,0-7.09,9.51c-2.08,4.07-2,13.09-.58,13.89,14.51,3.1,27.76,11.47,38.75,22.75,1.82,1.95,3.59,3.94,5.3,6ZM20.9,366c1.46-1.79,3-3.61,4.41-5.51,2.38.09,2.54,3.37,2.65,5.75a11.21,11.21,0,0,0,.16,1.83h0v1.14c.2,12.56,2.28,25,6.44,34.62,2,4.74,4.79,9.83,7.65,15.11l.61,1.13c1.9,3.49,3.85,7.07,5.71,10.73a1,1,0,0,0,0,.16h0c.49,1.52,1.64,5.07-2.08,8.12A74.57,74.57,0,0,1,25.28,429C12.18,419.68,7,407.53,7,395.94c0-12.84,6.49-20.86,13.82-29.83Zm198.47,49.24-1.82.49a39.66,39.66,0,0,0,3.12-4.68c2.89-4.77,6.79-11.2,13.19-14.87a106.87,106.87,0,0,1,13.51-.26c9.58.62,17,3.95,22.39,8.64l.6.52h.8a15.52,15.52,0,0,1,8.63,1.85,13.65,13.65,0,0,1,4.87,5c2.17,3.72,2.92,8.11,3.34,11.14-1.06-.36-2.11-.74-3.16-1.13h0l-2.31-.84-3.07-1.1.41,3.21a27.15,27.15,0,0,1,.22,3.25v.5l.24.44c3.6,6.6,3.22,10.82,1.59,13.87-1.77,3.29-5.19,5.69-8.84,8.18h0c-1.37.94-2.78,1.91-4,2.91l-.45.38c-.12-.82-.2-1.64-.24-2.47l-.12-2.84-2.64,1.08c-.2.09-.42.17-.63.25l-.33.13-.27.24a22.65,22.65,0,0,1-21,5c-5.67-1.58-10.09-5.29-11.75-10.06,5.93.41,10.11.36,13.83-2.43h0a16.52,16.52,0,0,0,5.83-15.24c-1-5.84-5.41-11-13.85-12.94-4.58-1-10.83-.08-18.09,1.79Zm-8,47.89a64.41,64.41,0,0,1-8.72,1.53,29.3,29.3,0,0,0-.39-6.48,19.41,19.41,0,0,0-4.52-9.67,19.13,19.13,0,0,0-10.51-5.77,8.5,8.5,0,0,1-4.6-3.29,25.37,25.37,0,0,1-2.7-4.24c2.41.76,15.08-.86,19.88-4.44a13.67,13.67,0,0,0,0,2.86l.2,1.78h1.78c6.1,0,11.37,1.95,14.83,5.78s5.27,9.45,4.29,17.72a19.9,19.9,0,0,1-6,3.17c1-2.84,1-8.32-5.31-11.54,4.75,5.21,3.15,9.75,2.1,12.51l-.18.05ZM251.94,353c-3.57,10.58-13.47,16.36-19.87,15.6,4.38-24.74,2.78-54.93-7.24-88.21q-.92-5.76-1.6-11.09a83.06,83.06,0,0,1,2-9.5c1.62-5.67,4-10.26,8.22-13.28,8.61-6.23,19.58-5.66,28.7-.87s16,13.6,16.53,23.2a32.11,32.11,0,0,1-.11,5.46,12.36,12.36,0,0,0-4.68-6.16A18.74,18.74,0,0,1,276.62,281q-.33.58-.69,1.11a11.88,11.88,0,0,1-5.25,4.23c-.05-.43-.1-.84-.15-1.25-.77-6.33-1.32-10.92-8-15.49a31.73,31.73,0,0,1,3.93,18l-.95.14c-1.48.14-3.57.24-5.87.27h-1.15a17.32,17.32,0,0,0-8.17-15.25c.32.79.69,1.57,1.07,2.38A24.94,24.94,0,0,1,254.31,288a42,42,0,0,1-8.14-1c-5.62-1.5-10.15-4.46-10.94-5.79a11,11,0,0,0,3.7,6.24c3.4,3.92,10.25,9.26,14.08,9.2,3.58,18.4,3.51,36.19.47,50.46C253,349.09,252.51,351.07,251.94,353Zm6.8-230-9.19,3.56-2.8-14,5.85-11.7,5.7-2.55,4.35,10.6Z"
        />
      </svg>
    `
        }
    };
    (0, c.gn)([(0, y.C)({type: String})], g.prototype, "furColor", void 0), (0, c.gn)([(0, y.C)({type: String})], g.prototype, "bellyColor", void 0), (0, c.gn)([(0, y.C)({type: String})], g.prototype, "eyeColor", void 0), g = (0, c.gn)([(0, e.M)("gu-regular-crypto-kitty")], g)
}, 65694
:
(se, B, o) => {
    "use strict";
    var c = o(70655), g = (o(90004), o(51256), o(11015), o(61517), o(43977), o(32830)), r = o(56418), t = o(7302),
        n = o(86041), v = o(98539), P = o(65281), w = o(65171), L = o(80102), T = o(26532);
    const b = g.iv`
  :host {
    display: block;
    width: 100%;
  }

  .innerContainer {
    position: relative;
    width: 100%;
    padding-bottom: 100%;
  }

  .gradientSkrim {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    background: linear-gradient(
      to top,
      rgba(${(0, T.asCssProp)((0, w.hexToCssRgbString)(P.colors.dark[900]))}, 1) 0%,
      rgba(${(0, T.asCssProp)((0, w.hexToCssRgbString)(P.colors.dark[900]))}, 0) 70%
    );
  }

  .trinket {
    width: 100%;
    height: 100%;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    border-radius: 50%;
    border: ${(0, T.asCssProp)((0, L.gridUnits)(.5))} solid ${(0, T.asCssProp)(P.colors.gunmetal[500])};
    background: ${(0, T.asCssProp)(P.colors.gunmetal[900])};
    overflow: hidden;
    box-shadow: 0px 0px ${(0, T.asCssProp)((0, L.gridUnits)(2))} rgba(${(0, T.asCssProp)((0, w.hexToCssRgbString)(P.colors.dark[900]))}, 0.65);
  }

  .trinketName {
    position: absolute;
    bottom: 13%;
    left: 50%;
    width: 70%;
    transform: translateX(-50%);
  }

  .clearButton {
    position: absolute;
    top: 6%;
    right: 6%;
    cursor: pointer;
  }

  .uiTextArea {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    color: ${(0, T.asCssProp)(P.colors.gunmetal[500])};
  }

  .uiTextArea__icon {
    font-size: ${(0, T.asCssProp)((0, L.gridUnits)(7))};
    margin-bottom: ${(0, T.asCssProp)((0, L.gridUnits)(1))};
  }

  .uiTextArea__text--choose {
  }

  .uiTextArea__text--replace {
    display: none;
  }

  /*

    @NOTE: Handle various UI states:

  */

  /*
    HIGHLIGHT STATES:
  */
  .innerContainer--highlight {
    cursor: pointer;
  }

  .innerContainer--highlight .trinket {
    border-color: ${(0, T.asCssProp)(P.colors.gold[300])};
  }

  .innerContainer--highlight:hover .trinket {
    border-color: ${(0, T.asCssProp)(P.colors.apocyan[300])};
  }

  .innerContainer--highlight .uiTextArea {
    color: ${(0, T.asCssProp)(P.colors.light[100])};
  }

  /*
    EQUIPPED STATES:
  */
  .innerContainer--equipped .uiTextArea__icon,
  .innerContainer--equipped .uiTextArea__text--choose,
  .innerContainer--equipped .uiTextArea__text--replace {
    display: none;
  }
  .innerContainer--equipped:hover .uiTextArea__icon {
    display: inline-flex;
  }
  .innerContainer--equipped:hover .uiTextArea__text--replace {
    display: block;
  }
`;
    let O = class extends g.oi {
        constructor() {
            super(...arguments), this.highlight = !1, this.hideNameText = !1
        }

        static get styles() {
            return b
        }

        update(C) {
            C.has("highlight") && !C.get("highlight") && (this.hideNameText = !1), super.update(C)
        }

        renderTrinketName() {
            return this.hideNameText ? g.dy`` : g.dy`
      <gu-heading-text
        fillGradient=${P.gradients.gold.simple()}
        class="trinketName"
        align="center"
        size="2x-small"
        data-test-id="selected-trinket-name"
      >
        ${this.trinket.name}
      </gu-heading-text>
    `
        }

        renderTrinket() {
            return this.trinket ? g.dy`
      <div class="gradientSkrim"></div>
      ${this.renderTrinketName()}
      <gu-circular-close-button
        class="clearButton"
        @click=${() => this.dispatchEvent(new CustomEvent("xButtonClick", {bubbles: !0, composed: !0}))}
        data-test-id="selected-trinket-close-button"
      ></gu-circular-close-button>
    ` : g.dy``
        }

        renderInstructions() {
            return this.highlight ? g.dy`
        <gu-icon class="uiTextArea__icon" iconLigature="add_item"></gu-icon>
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--choose" kind="tag" align="center">
          choose slot
        </gu-paragraph-text>
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--replace" kind="tag" align="center">
          replace
        </gu-paragraph-text>
      ` : this.trinket ? g.dy`` : g.dy`
        <gu-paragraph-text class="uiTextArea__text uiTextArea__text--empty" kind="tag" align="center">
          select a trinket
        </gu-paragraph-text>
      `
        }

        onClick() {
            this.dispatchEvent(new CustomEvent("trinketClick", {bubbles: !0, composed: !0}))
        }

        onMouseEnter() {
            this.trinket && this.highlight && (this.hideNameText = !0)
        }

        onMouseLeave() {
            this.trinket && this.highlight && (this.hideNameText = !1)
        }

        render() {
            return g.dy`
      <div
        class=${(0, v.$)({
                innerContainer: !0,
                "innerContainer--highlight": this.highlight,
                "innerContainer--equipped": !!this.trinket
            })}
        @click=${this.onClick}
        @mouseenter=${this.onMouseEnter}
        @mouseleave=${this.onMouseLeave}
        data-test-id="selected-trinket-container"
      >
        <gu-loadout-part
          class="trinket"
          .trinket=${this.trinket}
          ?noAspectRatio=${!0}
          ?hideCount=${!0}
          ?hideBorder=${!0}
          ?hideText=${!0}
        ></gu-loadout-part>
        ${this.renderTrinket()}
        <div class="uiTextArea">${this.renderInstructions()}</div>
      </div>
    `
        }
    };
    (0, c.gn)([(0, r.C)({type: Object})], O.prototype, "trinket", void 0), (0, c.gn)([(0, r.C)({type: Boolean})], O.prototype, "highlight", void 0), (0, c.gn)([(0, t.S)()], O.prototype, "hideNameText", void 0), O = (0, c.gn)([(0, n.M)("gu-selected-trinket")], O)
}, 69039
:
(se, B, o) => {
    "use strict";
    o.d(B, {Q: () => y});
    var c = o(30109);
    const y = (0, c.XM)(class i extends c.Xe {
        constructor(_) {
            super(_)
        }

        update(_, [p]) {
            p.current = _.element
        }

        render(_) {
        }
    })
}, 25297
:
(se, B, o) => {
    "use strict";
    o.d(B, {J: () => e});
    var c = o(12052), i = o(32830);
    const y = Promise.resolve().then.bind(Promise.resolve());

    class e extends i.oi {
        constructor() {
            super(), this.haunted = new c.ZM(() => this.requestUpdate(), this)
        }

        update(p) {
            this.haunted.run(() => {
                super.update(p)
            })
        }

        updated(p) {
            super.updated(p), this.haunted.runLayoutEffects(), y(() => this.haunted.runEffects())
        }

        disconnectedCallback() {
            this.haunted.teardown(), super.disconnectedCallback()
        }
    }
}, 65171
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        componentToHex: () => i,
        loopForVariable: () => y,
        rgbToHex: () => e,
        hexToRgb: () => _,
        hexToCssRgbString: () => p,
        setPropertyGradientFromVariable: () => g,
        setPropertyGradient: () => r,
        setPropertyColorFromVariable: () => t,
        setPropertyColor: () => n,
        setBorderColorHoverFromVariable: () => v,
        setBorderColorHover: () => P,
        setBackgroundFillHoverFromVariable: () => w,
        setBackgroundFillHover: () => L,
        updateColoringVariables: () => T
    });
    var c = o(65281);
    const i = b => {
        const O = b.toString(16);
        return 1 === O.length ? "0" + O : O
    }, y = b => {
        const O = b.split(".");
        let k = c;
        for (let C = 0; C < O.length; C++) k = k[O[C]];
        return k
    }, e = (b, O, k) => `#${i(b)}${i(O)}${i(k)}`, _ = b => {
        const O = /^#?([a-f\d]{2})([a-f\d]{2})([a-f\d]{2})$/i.exec(b);
        return O ? {r: parseInt(O[1], 16), g: parseInt(O[2], 16), b: parseInt(O[3], 16)} : void 0
    }, p = b => {
        const O = _(b);
        return O ? `${O.r}, ${O.g}, ${O.b}` : b
    }, g = (b, O, k, C) => {
        const s = y(O)(C).replace(/;/gm, "");
        b.setProperty(k, s)
    }, r = (b, O, k) => {
        b.setProperty(k, O.replace(/;/gm, ""))
    }, t = (b, O, k) => {
        const C = y(O);
        b.setProperty(k, C)
    }, n = (b, O, k) => {
        b.setProperty(k, O)
    }, v = (b, O) => {
        const k = y(O);
        b.setProperty("--borderColorHover", k)
    }, P = (b, O) => {
        b.setProperty("--borderColorHover", O)
    }, w = (b, O) => {
        const k = y(O);
        b.setProperty("--backgroundFillColorHover", k)
    }, L = (b, O) => {
        b.setProperty("--backgroundFillColorHover", O)
    }, T = ({
                component: b,
                fillColor: O,
                fillColorHover: k,
                fillGradient: C,
                fillGradientTarget: $,
                borderColor: s,
                borderColorHover: h,
                backgroundFillColor: x,
                backgroundFillColorHover: I,
                backgroundFillGradient: Y,
                backgroundFillGradientTarget: ae,
                iconColor: ce
            }) => {
        O && (b.setAttribute("fillColor", O), /colors\./.test(O) ? t(b.style, O, "--textFillColor") : n(b.style, O, "--textFillColor")), k && (b.setAttribute("fillColorHover", k), /colors\./.test(k) ? t(b.style, k, "--textFillColorHover") : n(b.style, k, "--textFillColorHover")), s && (b.setAttribute("borderColor", s), /colors\./.test(s) ? t(b.style, s, "--borderColor") : n(b.style, s, "--borderColor")), h && (b.setAttribute("borderColorHover", h), /colors\./.test(h) ? t(b.style, h, "--borderColorHover") : n(b.style, h, "--borderColorHover")), h && (b.setAttribute("borderColorHover", h), /colors\./.test(h) ? v(b.style, h) : P(b.style, h)), x && (b.setAttribute("backgroundFillColor", x), /colors\./.test(x) ? t(b.style, x, "--backgroundFillColor") : n(b.style, x, "--backgroundFillColor")), I && (b.setAttribute("backgroundFillColorHover", I), /colors\./.test(I) ? t(b.style, I, "--backgroundFillColorHover") : n(b.style, I, "--backgroundFillColorHover")), ce && (b.setAttribute("iconColor", ce), /colors\./.test(ce) ? t(b.style, ce, "--iconColor") : n(b.style, ce, "--iconColor")), I && (b.setAttribute("backgroundFillColorHover", I), /colors\./.test(I) ? w(b.style, I) : L(b.style, I)), Y && (b.setAttribute("backgroundFillGradient", Y), /gradients\./.test(Y) ? g(b.style, Y, "--backgroundFillGradient", ae) : r(b.style, Y, "--backgroundFillGradient")), C && (b.setAttribute("fillGradient", C), /gradients\./.test(C) ? g(b.style, C, "--textFillGradient", $) : r(b.style, C, "--textFillGradient"))
    }
}, 5284
:
(se, B, o) => {
    "use strict";
    o.d(B, {gt: () => y, I5: () => c, dz: () => p, ZB: () => r, uA: () => i});
    var c = {};
    o.r(c), o.d(c, {isIos: () => e, isSafari: () => _});
    var i = {};
    o.r(i), o.d(i, {enhancedTextRenderingStyles: () => P, stringContainsEmoji: () => v, uppercaseWord: () => w});
    var y = o(65171);

    function e() {
        return ["iPad Simulator", "iPhone Simulator", "iPod Simulator", "iPad", "iPhone", "iPod"].includes(navigator.platform) || navigator.userAgent.includes("Mac") && "ontouchend" in document
    }

    const _ = () => /^((?!chrome|android).)*safari/i.test(navigator.userAgent);
    var p = o(80102), r = (o(26711), o(26532)), t = o(89747), n = o.n(t);
    const v = L => n()().test(L),
        P = "\n  /* Get fonts to look slightly nicer where possible */\n  -webkit-font-smoothing: subpixel-antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-rendering: optimizeLegibility\n",
        w = L => L.charAt(0).toUpperCase() + L.slice(1)
}, 80102
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        gridUnits: () => c,
        checkOutOfBounds: () => i,
        getOuterHeight: () => y,
        waitForImageToLoad: () => e
    });
    const c = _ => 4 * _ + "px", i = ({
                                          x: _,
                                          y: p,
                                          left: g,
                                          top: r,
                                          width: t,
                                          height: n,
                                          tolerance: v = 2
                                      }) => (window.scrollY >= r && (r -= window.scrollY, n += window.scrollY), p >= Math.floor(n + r - v) || p <= r + v || _ >= Math.floor(t + g - v) || _ <= g + v),
        y = _ => {
            const p = window.getComputedStyle(_), g = parseInt(p.getPropertyValue("margin-top")),
                r = parseInt(p.getPropertyValue("margin-bottom"));
            return _.offsetHeight + g + r
        }, e = _ => new Promise((p, g) => {
            const r = () => {
                _.removeEventListener("load", n), _.removeEventListener("error", t)
            }, t = v => {
                console.error("Awww snap! <img> or <picture> LOAD ERROR:", v, _.src), r(), g()
            }, n = () => {
                r(), p()
            };
            _.complete ? p() : (_.addEventListener("load", n), _.addEventListener("error", t))
        })
}, 26711
:
(se, B, o) => {
    "use strict";
    o.d(B, {b: () => c});
    const c = {fromAttribute: i => i && "false" !== i, toAttribute: i => i ? "true" : "false"}
}, 26532
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        asCssProp: () => y,
        drawHexShapePolygonMask: () => e,
        drawBottomHexShapePolygonMask: () => _,
        setBoxSizing: () => p,
        fadeReveal: () => g,
        listReveal: () => r,
        styleScrollbars: () => t,
        inset: () => n
    });
    var c = o(32830), i = o(65281);
    const y = v => c.iv`${(0, c.$m)(v)}`,
        e = (v, P, w = 0) => ``,
        _ = v => ``,
        p = (v = "border-box") => `\n  :host,\n  :host *,\n  :host *::before,\n  :host *::after {\n    box-sizing: ${v};\n  }\n`,
        g = (v, P, w = "initial", L = .3, T = 0) => `\n  ${v} {\n    opacity: 0;\n    height: 0;\n    transition: opacity ${L}s ease, height 0s ${L}s, transform ${L}s ease;\n    ${T ? `transform: translateY(${T}px);` : ""}\n  }\n  ${P} {\n    opacity: 1;\n    height: ${w};\n    transition: opacity ${L}s ease, height 0s 0s, transform ${L}s ease;\n    ${T ? "transform: translateY(0);" : ""}\n  }\n`,
        r = (v, P = .3, w = 10, L = 12) => `\n  ${v} {\n    animation: listReveal ${P}s ease-out backwards;\n    animation-delay: ${.1 * w}s;\n  }\n\n  ${[...Array(w).keys()].map(T => `\n      ${v}:nth-of-type(${T}) {\n        animation-delay: ${.1 * T}s;\n      }\n    `).join("\n")}\n\n  @keyframes listReveal {\n    from {\n      transform: translateY(${L}px);\n      opacity: 0;\n    }\n    to {\n      transform: translateY(0);\n      opacity: 1;\n    }\n  }\n`,
        t = (v = "") => `\n  ${v}::-webkit-scrollbar {\n    width: 4px;\n  }\n\n  ${v}::-webkit-scrollbar-thumb {\n    width: 4px;\n    background: ${i.colors.gunmetal[500]};\n    border-radius: 2px;\n  }\n`,
        n = (v, P = v, w = v, L = P) => c.iv`
  top: ${v}px;
  right: ${P}px;
  bottom: ${w}px;
  left: ${L}px;
`
}, 39029
:
(se, B, o) => {
    "use strict";
    o.d(B, {x1: () => i.x, I0: () => _, v9: () => e, Rl: () => g}), o(25297);
    var i = o(58672), y = o(12052);
    const e = ({store: n, selector: v}) => {
        const [P, w] = (0, y.eJ)(v(n.getState()));
        return (0, y.d4)(() => n.subscribe(() => {
            const L = v(n.getState());
            w(L)
        }), [v]), P
    }, _ = n => v => n.dispatch(v);
    o(5284);
    var g = o(65281);
    o(72985), o(69039)
}, 72650
:
(se, B, o) => {
    "use strict";
    o.d(B, {b: () => g});
    var c = o(70655), i = o(46461), e = o(56418);
    const _ = {
        default: {
            ogg: "/assets/audio/buttons/hover--primary.ogg",
            mp3: "/assets/audio/buttons/hover--primary.mp3"
        }
    }, p = {
        primary: {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        secondary: {
            ogg: "/assets/audio/buttons/click--secondary.ogg",
            mp3: "/assets/audio/buttons/click--secondary.mp3"
        }
    }, g = r => {
        class t extends r {
            constructor() {
                super(...arguments), this.audibleHover = "", this.audibleClick = "", this.howl = i.Howl
            }

            updated(v) {
                super.updated(v), this.updateHoverSound(), this.updateClickSound()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.disconnectHover(), this.disconnectClick()
            }

            handleHover(v) {
                v.preventDefault(), this.hoverControl.play()
            }

            handleClick(v) {
                v.preventDefault(), this.clickControl.play()
            }

            updateHoverSound() {
                this.audibleHover && !this.hoverControl ? this.connectHover() : !this.audibleHover && this.hoverControl && this.disconnectHover()
            }

            updateClickSound() {
                this.audibleClick ? this.connectClick() : !this.audibleClick && this.clickControl && this.disconnectClick()
            }

            connectHover() {
                this.hoverControl = new this.howl({src: [_[this.audibleHover].ogg, _[this.audibleHover].mp3]}), this.addEventListener("mouseover", this.handleHover)
            }

            connectClick() {
                this.clickControl && this.disconnectClick(), this.clickControl = new this.howl({src: [p[this.audibleClick].ogg, p[this.audibleClick].mp3]}), this.addEventListener("mousedown", this.handleClick), this.addEventListener("touchstart", this.handleClick)
            }

            disconnectHover() {
                !this.hoverControl || (this.hoverControl.unload(), this.hoverControl = void 0, this.removeEventListener("mouseover", this.handleHover))
            }

            disconnectClick() {
                !this.clickControl || (this.clickControl.unload(), this.clickControl = void 0, this.removeEventListener("mousedown", this.handleClick), this.removeEventListener("touchstart", this.handleClick))
            }
        }

        return (0, c.gn)([(0, e.C)({type: String})], t.prototype, "audibleHover", void 0), (0, c.gn)([(0, e.C)({type: String})], t.prototype, "audibleClick", void 0), t
    }
}, 72985
:
(se, B, o) => {
    "use strict";
    o.d(B, {Am: () => _, lH: () => g, Xg: () => i, s: () => c});
    const c = t => class extends t {
        update(n) {
            this.setAttribute("disabled", `${this.disabled}`), this.setAttribute("loading", `${this.loading}`), this.setAttribute("horizontalStretch", `${this.horizontalStretch}`), super.update(n)
        }
    }, i = t => class extends t {
        constructor() {
            super(...arguments), this.clickLinkListenerBound = !1
        }

        update(n) {
            this.href && !this.clickLinkListenerBound ? (this.addEventListener("click", this.clickLinkHandler), this.clickLinkListenerBound = !0) : !this.href && this.clickLinkListenerBound && (this.removeEventListener("click", this.clickLinkHandler), this.clickLinkListenerBound = !1), super.update(n)
        }

        disconnectedCallback() {
            this.removeEventListener("click", this.clickLinkHandler)
        }

        clickLinkHandler() {
            const {target: n, href: v} = this;
            n ? window.open(v, n) : window.location.href = v
        }
    };
    var y = o(46461);
    const e = {
        "GU-SPECIAL-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        "GU-SPECIAL-HEX-FLAT-BUTTON": {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        "GU-PRIMARY-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--primary.ogg",
            mp3: "/assets/audio/buttons/click--primary.mp3"
        },
        "GU-SECONDARY-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--secondary.ogg",
            mp3: "/assets/audio/buttons/click--secondary.mp3"
        },
        "GU-SUBTLE-HEX-BUTTON": {
            ogg: "/assets/audio/buttons/click--secondary.ogg",
            mp3: "/assets/audio/buttons/click--secondary.mp3"
        }
    }, _ = t => class extends t {
        constructor() {
            super(...arguments), this.clickSoundListenerBound = !1
        }

        updated(n) {
            super.updated(n), this.checkToEnableClickSound()
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.destroyClickSound(), this.destroyClickEvents()
        }

        clickSoundHandler(n) {
            n.preventDefault(), this.clickSoundControl.play()
        }

        checkToEnableClickSound() {
            this.enableSounds && !this.clickSoundListenerBound ? (this.initClickEvents(), this.initClickSound()) : !this.enableSounds && this.clickSoundListenerBound && (this.destroyClickSound(), this.destroyClickEvents())
        }

        initClickSound() {
            this.clickSoundControl = new y.Howl({src: [e[this.nodeName].ogg, e[this.nodeName].mp3]})
        }

        initClickEvents() {
            this.addEventListener("mousedown", this.clickSoundHandler), this.addEventListener("touchstart", this.clickSoundHandler), this.clickSoundListenerBound = !0
        }

        destroyClickSound() {
            this.clickSoundControl && this.clickSoundControl.unload()
        }

        destroyClickEvents() {
            this.removeEventListener("mousedown", this.clickSoundHandler), this.removeEventListener("touchstart", this.clickSoundHandler), this.clickSoundListenerBound = !1
        }
    }, g = t => class extends t {
        constructor() {
            super(...arguments), this.hoverSoundListenerBound = !1
        }

        updated(n) {
            super.updated(n), this.checkToEnableHoverSound()
        }

        disconnectedCallback() {
            super.disconnectedCallback(), this.destroyHoverSound(), this.removeEventListener("mouseover", this.hoverSoundHandler)
        }

        hoverSoundHandler(n) {
            n.preventDefault(), this.hoverSoundControl.play()
        }

        checkToEnableHoverSound() {
            this.enableSounds && !this.hoverSoundListenerBound ? (this.addEventListener("mouseover", this.hoverSoundHandler), this.hoverSoundListenerBound = !0, this.initHoverSound()) : !this.enableSounds && this.hoverSoundListenerBound && (this.removeEventListener("mouseover", this.hoverSoundHandler), this.hoverSoundListenerBound = !1, this.destroyHoverSound())
        }

        initHoverSound() {
            this.hoverSoundControl = new y.Howl({src: ["/assets/audio/buttons/hover--primary.ogg", "/assets/audio/buttons/hover--primary.mp3"]})
        }

        destroyHoverSound() {
            this.hoverSoundControl && this.hoverSoundControl.unload()
        }
    };
    o(72650)
}, 93270
:
(se, B, o) => {
    "use strict";
    o.d(B, {Z: () => y});
    var c = o(70655), i = o(56418);
    const y = e => {
        class _ extends e {
            constructor() {
                super(...arguments), this.href = "", this.target = "", this.bound = !1, this.window = window
            }

            updated(g) {
                super.updated(g), this.href && !this.bound ? (this.addEventListener("click", this.handleClick), this.bound = !0) : !this.href && this.bound && this.removeListener()
            }

            disconnectedCallback() {
                super.disconnectedCallback(), this.removeListener()
            }

            removeListener() {
                this.bound && this.removeEventListener("click", this.handleClick)
            }

            handleClick() {
                const {target: g, href: r} = this;
                g ? this.window.open(r, g) : this.window.location.href = r
            }
        }

        return (0, c.gn)([(0, i.C)({type: String})], _.prototype, "href", void 0), (0, c.gn)([(0, i.C)({type: String})], _.prototype, "target", void 0), _
    }
}, 47925
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {breakpointSizeMapping: () => c});
    const c = {
        "2x-small": "360px",
        "x-small": "512px",
        small: "768px",
        medium: "960px",
        large: "1200px",
        "x-large": "1400px",
        "2x-large": "1600px"
    }
}, 91418
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        gunmetal: () => c,
        light: () => i,
        white: () => y,
        black: () => e,
        dark: () => _,
        apocyan: () => p,
        yellow: () => g,
        gold: () => r,
        aqua: () => t,
        card: () => n,
        alert: () => v,
        quality: () => P,
        rarity: () => w,
        god: () => L,
        fillColoringRules: () => T
    });
    const c = {100: "#90CAF9", 300: "#527493", 500: "#3D5A74", 700: "#1D2F41", 900: "#0F1B27"},
        i = {100: "#F6F6F6", 300: "#D7D7D7", 500: "#B6B6B6", 700: "#979797", 900: "#7F7F7F"}, y = "#ffffff",
        e = "#000000", _ = {100: "#7F7F7F", 300: "#646464", 500: "#464646", 700: "#272727", 900: "#0A0A0A"},
        p = {100: "#AFFAED", 300: "#03A9F4", 500: "#54BBCD"}, g = {100: "#FCF7D4", 300: "#F7EA9B", 500: "#F2DC63"},
        r = {100: "#FFF2D8", 300: "#FBC02D", 500: "#C6A052"}, t = {200: "#affaed", 300: "#8be1e0", 500: "#54bbcd"},
        n = {creature: "#ebd08a", spell: "#76b5ad", weapon: "#7a608c"}, v = "#FF8B01", P = {
            plain: "#8295A2",
            bronze: "#6A8B35",
            iron: "#3D91B9",
            meteorite: "#84343E",
            shadow: "#B461C5",
            gold: "#E5D93C",
            diamond: "#94E6FB",
            mythic: "#ffffff"
        }, w = {common: "#6D6C6D", rare: "#3C8ED2", epic: "#6D1FC4", legendary: "#D8A638", mythic: "#D02C3A"}, L = {
            deception: {primary: "#FA77FC", secondary: "#CA3FD8", tertiary: "#8F189B"},
            war: {primary: "#FF8B01", secondary: "#D73333", tertiary: "#99011A"},
            death: {primary: "#9C4EF9", secondary: "#35145B", tertiary: "#35145B"},
            magic: {primary: "#50BCFF", secondary: "#3884DE", tertiary: "#1752BA"},
            nature: {primary: "#9DE764", secondary: "#5AC33F", tertiary: "#4C772F"},
            light: {primary: "#FBE29F", secondary: "#FFD76E", tertiary: "#FAB248"}
        },
        T = "\n  /* Styles to use when there is a gradientFill set ... */\n  :host([fillGradient]),\n  :host([fillGradient]) ::slotted(*) {\n    background: var(--textFillGradient);\n    -webkit-background-clip: text;\n    background-clip: text;\n    -webkit-text-fill-color: transparent;\n  }\n\n  /* Styles to use when there is a simple fill color set ... */\n  :host([fillColor]),\n  :host([fillColor]) ::slotted(*) {\n    color: var(--textFillColor);\n\n    /* Use the text coloring for border color, and allow it to be over-written */\n    border-color: var(--textFillColor);\n  }\n\n  /* Styles to use when there is a simple fill color hover set ... */\n  :host([fillColorHover]:hover),\n  :host([fillColorHover]:hover) ::slotted(*) {\n    color: var(--textFillColorHover);\n\n    /* Use the text coloring for border color, and allow it to be over-written */\n    border-color: var(--textFillColorHover);\n  }\n\n  /* Styles to use when there is a simple border color set ... */\n  :host([borderColor]),\n  :host([borderColor]) ::slotted(*) {\n    border-color: var(--borderColor);\n  }\n\n  /* Styles to use when there is a simple border color hover set ... */\n  :host([borderColorHover]:hover),\n  :host([borderColorHover]:hover) ::slotted(*) {\n    border-color: var(--borderColorHover);\n  }\n\n  /* Styles to use when there is a simple background color fill set ... */\n  :host([backgroundFillColor]),\n  :host([backgroundFillColor]) ::slotted(*) {\n    background-color: var(--backgroundFillColor);\n  }\n\n  /* Styles to use when there is a simple background color fill hover set ... */\n  :host([backgroundFillColorHover]:hover),\n  :host([backgroundFillColorHover]:hover) ::slotted(*) {\n    background-color: var(--backgroundFillColorHover);\n  }\n"
}, 65281
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        animation: () => c,
        breakpoints: () => r,
        colors: () => t,
        gradients: () => i,
        measurements: () => k,
        typography: () => C,
        uifx: () => $
    });
    var c = {};
    o.r(c), o.d(c, {
        slowTransition: () => g,
        slowTransitionDuration: () => _,
        standardTransition: () => p,
        standardTransitionDuration: () => y,
        standardTransitionEasing: () => e
    });
    var i = {};
    o.r(i), o.d(i, {
        apocyan: () => w,
        dark: () => L,
        god: () => b,
        gold: () => n,
        gunmetal: () => v,
        light: () => T,
        textFill: () => O,
        yellow: () => P
    });
    const y = "150ms", e = "ease-in-out", _ = "300ms", p = s => `\n  transition: ${s} ${y}\n  ${e};\n`,
        g = s => `\n  transition: ${s} ${_}\n  ${e};\n`;
    var r = o(47925), t = o(91418);
    const n = {
            simple: (s = "bottom") => `var(--gu-yellow)`,
            mirror: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[500]} 0%,\n    ${t.gold[100]} 50%,\n    ${t.gold[500]} 100%\n  );\n`,
            complex: (s = "top") => `\n  linear-gradient(\n    to ${s},\n    #FFFDF0 0%,\n    #FBEBC1 14%,\n    #E6C675 25%,\n    #F6DF6E 40%,\n    #B27E18 60%,\n    #DEAB61 73%,\n    #A67B4B 85%,\n    #664320 100%\n  );\n`,
            horizontal: (s = "right") => `\n  linear-gradient(\n    to ${s},\n    ${t.gold[500]} 3%,\n    ${t.gold[300]} 25%,\n    ${t.gold[100]} 50%,\n    ${t.gold[300]} 75%,\n    ${t.gold[500]} 97%\n  );\n`
        }, v = {
            simple: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gunmetal[900]} 0%,\n    ${t.gunmetal[700]} 100%\n  );`,
            mirror: (s = "bottom") => `\n  linear-gradient(\n    to ${s},\n    ${t.gunmetal[900]} 0%,\n    ${t.gunmetal[700]} 50%,\n    ${t.gunmetal[900]} 100%\n  );\n`
        },
        P = {simple: (s = "top") => `\n  linear-gradient(\n    to ${s},\n    ${t.yellow[100]} 0%,\n    ${t.yellow[300]} 50%,\n    ${t.yellow[500]} 100%\n  );\n`},
        w = {
            simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.apocyan[100]} 0%,\n    ${t.apocyan[500]} 100%\n  );`,
            mirror: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.apocyan[500]} 0%,\n    ${t.apocyan[100]} 50%,\n    ${t.apocyan[500]} 100%\n  );`
        },
        L = {simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.dark[500]} 100%,\n    ${t.dark[900]} 100%\n  );`},
        T = {simple: (s = "top") => `linear-gradient(\n    to ${s},\n    ${t.light[100]} 100%,\n    ${t.light[300]} 100%\n  );`},
        b = {
            deception: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.deception.primary} 0%,\n      ${t.god.deception.secondary} 50%,\n      ${t.god.deception.tertiary} 100%\n    )`,
            war: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.war.primary} 0%,\n      ${t.god.war.secondary} 50%,\n      ${t.god.war.tertiary} 100%\n    )`,
            death: (s = "top") => `linear-gradient(\n      to ${s},\n      ${t.god.death.primary} 0%,\n      ${t.god.death.secondary} 50%,\n      ${t.god.death.tertiary} 100%\n    )`,
            magic: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.magic.primary} 0%,\n      ${t.god.magic.secondary} 50%,\n      ${t.god.magic.tertiary} 100%\n    )`,
            nature: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.nature.primary} 0%,\n      ${t.god.nature.secondary} 50%,\n      ${t.god.nature.tertiary} 100%\n    )`,
            light: (s = "top") => `\n    linear-gradient(\n      to ${s},\n      ${t.god.light.primary} 0%,\n      ${t.god.light.secondary} 50%,\n      ${t.god.light.tertiary} 100%\n    )`
        },
        O = s => `background: ${s};\n  background-clip: text;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;`;
    var k = o(49219), C = o(66974), $ = o(61462)
}, 49219
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        spacingAmountMapping: () => i,
        standardTransitionDuration: () => y,
        standardTransitionEasing: () => e,
        standardBorderSize: () => _,
        draggableTitleBarHeight: () => p,
        standardHeaderHeight: () => g,
        standardHeaderHeightInCss: () => r,
        standardHeaderAlertBarHeight: () => t,
        headerBarZLevel: () => n,
        electronMenuBarZLevel: () => v,
        modalLayerZLevel: () => P,
        electronTitleBarHeight: () => w,
        imageQualities: () => L
    });
    var c = o(80102);
    const i = {
            "2x-small": "2px",
            "x-small": "4px",
            small: "8px",
            medium: "12px",
            large: "16px",
            "x-large": "24px",
            "2x-large": "32px",
            "3x-large": "40px",
            "4x-large": "56px",
            "5x-large": "72px",
            "6x-large": "96px",
            "7x-large": "128px",
            "8x-large": "192px",
            "9x-large": "320px"
        }, y = "150ms", e = "ease-in-out", _ = "1px", p = (0, c.gridUnits)(7), g = 80, r = "80px", t = 50, n = 22, v = 23,
        P = 22, w = (0, c.gridUnits)(7), L = {small: 128, normal: 256, high: 512, xHigh: 720, best: 1024}
}, 66974
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {
        iconTextStyles: () => c,
        headingFont: () => i,
        simpleFont: () => y,
        textAlignRules: () => e,
        headingSizeMapping: () => _,
        simpleTextSizeMapping: () => p,
        baseSimpleTextStyles: () => g
    });
    const c = "\n  font-family: 'gu-cons';\n  font-feature-settings: 'liga' 1;\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  vertical-align: middle;\n  letter-spacing: 0;\n  line-height: 1;\n\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n",
        i = "\n  font-family: 'Unchained', serif;\n", y = "\n  font-family: 'Open Sans', sans-serif;\n",
        e = "\n  :host([align='center']),\n  :host([align='center']) ::slotted(*) {\n    text-align: center;\n  }\n\n  :host([align='left']),\n  :host([align='left']) ::slotted(*) {\n    text-align: left;\n  }\n\n  :host([align='right']),\n  :host([align='right']) ::slotted(*) {\n    text-align: right;\n  }\n",
        _ = {
            "3x-small": "14px",
            "2x-small": "18px",
            "x-small": "24px",
            small: "32px",
            large: "40px",
            "x-large": "48px",
            "2x-large": "72px"
        }, p = {large: "20px", small: "16px", help: "14px", tag: "12px", micro: "10px"},
        g = `\n  ${y}\n  line-height: 1.1;\n`
}, 61462
:
(se, B, o) => {
    "use strict";
    o.r(B), o.d(B, {userSelect: () => c});
    const c = i => `\n    -webkit-user-select: ${i};\n    user-select: ${i};\n    pointer-events: ${i};\n  `
}, 58672
:
(se, B, o) => {
    "use strict";
    o.d(B, {x: () => i});
    var c = o(25297);

    function i({renderer: y, baseClass: e = c.J, props: _ = {}}) {
        const p = class extends e {
            render() {
                return y.call(this, this)
            }
        };
        return Object.entries(_).forEach(([g, r]) => p[g] = r), p
    }
}, 51256
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(56418), e = o(86041), _ = o(5284), p = o(65171), g = o(26532), r = o(65281),
        t = o(47925), n = o(91418);
    let v = class extends i.oi {
        constructor() {
            super(...arguments), this.size = "small", this.align = "center", this.responsiveSize = []
        }

        static get styles() {
            return i.iv`
      :host {
        display: block;
        ${(0, g.asCssProp)(_.uA.enhancedTextRenderingStyles)};
      }

      :host,
      ::slotted(*) {
        ${(0, g.asCssProp)(r.typography.headingFont)};
        color: ${(0, g.asCssProp)(r.colors.light[100])};
        line-height: 1.2;
        font-weight: 700;
        text-transform: uppercase;
        margin: 0;
      }

      ${(0, g.asCssProp)(r.typography.textAlignRules)}

      :host([size='2x-large']),
      :host([size='2x-large']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["2x-large"])} !important;
      }

      :host([size='x-large']),
      :host([size='x-large']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["x-large"])} !important;
      }

      :host([size='large']),
      :host([size='large']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping.large)} !important;
      }

      /* 'Small' size is the default size... */
      :host,
      :host ::slotted(*),
      :host([size='small']),
      :host([size='small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping.small)} !important;
      }

      :host([size='x-small']),
      :host([size='x-small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["x-small"])} !important;
      }

      :host([size='2x-small']),
      :host([size='2x-small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["2x-small"])} !important;
      }

      :host([size='3x-small']),
      :host([size='3x-small']) ::slotted(*) {
        font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping["3x-small"])} !important;
      }

      ${(0, g.asCssProp)(n.fillColoringRules)}
    `
        }

        generateMediaQueries() {
            return this.responsiveSize.length ? i.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveSize.map(({breakpoint: w, size: L}) => i.iv`
                @media screen and (min-width: ${(0, g.asCssProp)(t.breakpointSizeMapping[w])}) {
                  :host(.overWrite[size='${(0, g.asCssProp)(this.size)}']),
                  :host(.overWrite[size='${(0, g.asCssProp)(this.size)}']) ::slotted(*) {
                    font-size: ${(0, g.asCssProp)(r.typography.headingSizeMapping[L])} !important;
                  }
                }
              `)}
          </style>
        ` : null
        }

        render() {
            const {fillColor: w, fillGradient: L, fillGradientTarget: T} = this;
            return (0, p.updateColoringVariables)({
                component: this,
                fillColor: w,
                fillGradient: L,
                fillGradientTarget: T
            }), this.setAttribute("size", this.size), this.responsiveSize.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), i.dy`
      ${this.generateMediaQueries()}
      <slot></slot>
    `
        }
    };
    (0, c.gn)([(0, y.C)({type: String})], v.prototype, "size", void 0), (0, c.gn)([(0, y.C)({type: String})], v.prototype, "align", void 0), (0, c.gn)([(0, y.C)({type: String})], v.prototype, "fillColor", void 0), (0, c.gn)([(0, y.C)({type: String})], v.prototype, "fillGradient", void 0), (0, c.gn)([(0, y.C)({type: String})], v.prototype, "fillGradientTarget", void 0), (0, c.gn)([(0, y.C)({type: Array})], v.prototype, "responsiveSize", void 0), v = (0, c.gn)([(0, e.M)("gu-heading-text")], v)
}, 11015
:
(se, B, o) => {
    "use strict";
    var c = o(70655), i = o(32830), y = o(86041), e = o(52102);
    let _ = class extends e._ {
        static get styles() {
            return i.iv`
      ${super.styles}

      :host {
        display: block;
      }

      :host,
      :host ::slotted(*) {
        line-height: 1.375;
      }

      :host([kind='large']) ::slotted(*) {
        line-height: 1.4;
      }

      :host([kind='small']) ::slotted(*) {
        line-height: 1.5;
      }

      :host([kind='help']) ::slotted(*) {
        line-height: 1.43;
      }

      :host([kind='tag']) ::slotted(*) {
        line-height: 1.67;
      }
    `
        }
    };
    _ = (0, c.gn)([(0, y.M)("gu-paragraph-text")], _)
}, 52102
:
(se, B, o) => {
    "use strict";
    o.d(B, {_: () => w});
    var c = o(70655), i = o(32830), y = o(56418), e = o(86041), _ = o(5284), p = o(65281), g = o(26532), r = o(91418),
        t = o(66974), n = o(61462);
    const v = `\n  font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.tag)};\n  font-weight: 700;\n  text-transform: uppercase;\n`;
    let w = class extends i.oi {
        constructor() {
            super(...arguments), this.align = "center", this.fontStyle = "regular", this.responsiveKind = []
        }

        static get styles() {
            return i.iv`
  ${(0, g.asCssProp)((0, g.setBoxSizing)())}

  :host,
    :host ::slotted(*) {
    ${(0, g.asCssProp)(_.uA.enhancedTextRenderingStyles)};
    ${(0, g.asCssProp)(t.baseSimpleTextStyles)};
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.small)};

    ${(0, g.asCssProp)((0, n.userSelect)("inherit"))};
  }

  :host([kind='large']),
  :host([kind='large']) ::slotted(*) {
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.large)};
  }

  :host([kind='small']),
  :host([kind='small']) ::slotted(*) {
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.small)};
  }

  :host([kind='micro']),
  :host([kind='micro']) ::slotted(*) {
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.micro)};
  }

  :host([kind='help']),
  :host([kind='help']) ::slotted(*) {
    font-style: italic;
    font-size: ${(0, g.asCssProp)(p.typography.simpleTextSizeMapping.help)};
  }

  :host([kind='tag']),
  :host([kind='tag']) ::slotted(*) {
    ${(0, g.asCssProp)(v)};
  }

  :host([fontStyle='italic']),
  :host([fontStyle='italic']) ::slotted(*) {
    font-style: italic;
  }

  :host([fontWeight='bold']),
  :host([fontWeight='bold']) ::slotted(*) {
    font-weight: 700;
  }

  ${(0, g.asCssProp)(p.typography.textAlignRules)}
  ${(0, g.asCssProp)(r.fillColoringRules)}
`
        }

        generateMediaQueries() {
            const {breakpointSizeMapping: T} = p.breakpoints, {asCssProp: b} = _.ZB, {simpleTextSizeMapping: O} = p.typography;
            return this.responsiveKind.length ? i.dy`
          <style>
            /* DEFINE RESPONSIVE SIZING */
            ${this.responsiveKind.map(({breakpoint: k, kind: C = "small"}) => i.iv`
                @media screen and (min-width: ${b(T[k])}) {
                  :host(.overWrite[kind='${b(this.kind)}']),
                  :host(.overWrite[kind='${b(this.kind)}']) ::slotted(*) {
                    font-size: ${b(O[C])} !important;
                    ${b("tag" !== C ? "bold" === this.fontWeight ? "font-weight: 700" : "font-weight: 400" : "")};
                    ${b("tag" === C ? v : "")};
                    ${b("help" === C ? "font-style: italic" : "")};
                  }
                }
              `)}
          </style>
        ` : null
        }

        render() {
            const {updateColoringVariables: T} = _.gt, {
                fillColor: b,
                fillGradient: O,
                fillGradientTarget: k,
                borderColor: C,
                fillColorHover: $
            } = this;
            return T({
                component: this,
                fillColor: b,
                fillColorHover: $,
                fillGradient: O,
                fillGradientTarget: k,
                borderColor: C
            }), this.setAttribute("kind", this.kind), this.responsiveKind.length ? this.classList.add("overWrite") : this.classList.remove("overWrite"), i.dy`
      ${this.generateMediaQueries()} ${this.text ? this.text : ""}
      <slot></slot>
    `
        }
    };
    (0, c.gn)([(0, y.C)()], w.prototype, "kind", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "align", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "fontStyle", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "fontWeight", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "text", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "fillColor", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "fillColorHover", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "borderColor", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "fillGradient", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "fillGradientTarget", void 0), (0, c.gn)([(0, y.C)()], w.prototype, "responsiveKind", void 0), w = (0, c.gn)([(0, e.M)("gu-simple-text")], w)
}, 4477
:
(se, B, o) => {
    "use strict";
    o.d(B, {w: () => P});
    var c = o(70655), i = o(92436), y = o(87435), e = o(32830), _ = o(86041), p = o(5284), g = o(26532), r = o(65281);
    const t = new i.do(L => {
        L.forEach(T => {
            T.target.handleResize()
        })
    }), n = new CustomEvent("onVideoEnd"), P = L => new Promise(T => {
        setTimeout(() => T(), L)
    });
    let w = class extends e.oi {
        constructor() {
            super(...arguments), this.muted = !1, this.autoPlay = !1, this.loopVideo = !1, this.showControls = !1, this.pauseOnEndFrame = !1, this.startPausedOnFirstFrame = !1, this.volume = 1, this.dimensions = {
                width: 0,
                height: 0
            }, this.hasSignalledEnd = !1, this.onVideoLoaded = () => {
                console.log("VIDEO IS LOADED (not necessarily fully buffered though)", this.videoId);
                const T = () => {
                    this.bindPlayListeners(), this.delayedEmitVideoReady(), this.setVolume()
                };
                this.startPausedOnFirstFrame ? this.gotoTimeAndPause(.02).then(() => T()) : T()
            }, this.onVideoUpdate = T => {
                const {percent: b} = T;
                this.dispatchEvent(new CustomEvent("onVideoProgress", {detail: {percent: b}})), this.pauseOnEndFrame && b >= .88 && (this.pauseVideo(), this.hasSignalledEnd || (this.hasSignalledEnd = !0, this.dispatchEvent(n)))
            }, this.delayedEmitVideoReady = () => setTimeout(() => {
                this.hasSignalledEnd = !1, this.classList.remove("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoReady"))
            }, 350)
        }

        static get styles() {
            return e.iv`
      :host {
        width: 100%;
        height: 100%;
        display: flex;
        ${(0, g.asCssProp)(r.animation.standardTransition("opacity"))};
      }

      :host ::slotted(iframe) {
        width: 100%;
        height: 100%;
        display: block;
      }

      gu-rectangular-spinner {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        display: none;
      }

      :host(.hideVideo) gu-rectangular-spinner {
        display: flex;
      }
    `
        }

        static get properties() {
            return {
                videoId: {type: Number},
                loopVideo: {type: Boolean},
                autoPlay: {type: Boolean},
                pauseOnEndFrame: {type: Boolean},
                startPausedOnFirstFrame: {type: Boolean},
                showControls: {type: Boolean},
                volume: {type: Number},
                muted: {type: Boolean}
            }
        }

        firstUpdated() {
            this.handleResize(), t.observe(this)
        }

        updated(T) {
            super.updated(T), T.has("videoId") && this.videoId ? this.handleVideoIdUpdated() : T.has("volume") && this.setVolume()
        }

        disconnectedCallback() {
            t.unobserve(this), this.vimeoControl && this.vimeoControl.destroy()
        }

        handleVideoIdUpdated() {
            return (0, c.mG)(this, void 0, void 0, function* () {
                if (this.vimeoControl) {
                    const T = yield this.vimeoControl.getVideoId();
                    return console.log("@@@@@@@@@@@@", T, this.videoId), this.videoId === T ? this.reInitCurrentVideo() : this.loadNewVideoId()
                }
                this.initVideo()
            })
        }

        unBindEventsAndReset() {
            this.classList.add("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoLoading")), this.vimeoControl.off("timeupdate", this.onVideoUpdate), this.vimeoControl.off("loaded", this.onVideoLoaded)
        }

        reInitCurrentVideo() {
            console.log("@@@@@ RE-INIT CURRENT VIDEO @@@@@@"), this.unBindEventsAndReset(), this.onVideoLoaded()
        }

        loadNewVideoId() {
            console.log("@@@@@ LOAD NEW VIDEO ID @@@@@@"), this.unBindEventsAndReset(), this.vimeoControl.loadVideo(this.videoId).then(() => this.onVideoLoaded()).catch(T => console.log(T))
        }

        initVideo() {
            const T = {
                title: !1,
                byline: !1,
                portrait: !1,
                controls: this.showControls,
                playsinline: !0,
                autopause: !1,
                muted: !0,
                id: this.videoId,
                loop: this.loopVideo,
                autoplay: this.autoPlay
            };
            this.classList.add("hideVideo"), this.dispatchEvent(new CustomEvent("onVideoLoading")), this.vimeoControl = new y.Z(this, T), this.vimeoControl.on("loaded", this.onVideoLoaded)
        }

        setVolume() {
            return !!this.vimeoControl && (this.muted ? this.vimeoControl.setMuted(!0) : this.vimeoControl.setVolume(this.volume))
        }

        bindPlayListeners() {
            this.vimeoControl.on("ended", () => {
                this.dispatchEvent(n)
            }), this.vimeoControl.on("timeupdate", this.onVideoUpdate)
        }

        gotoTimeAndPause(T) {
            return (0, c.mG)(this, void 0, void 0, function* () {
                try {
                    return console.log("gotoTimeAndPause(time)", T, this.videoId), yield this.vimeoControl.setMuted(!0), console.log("gotoTimeAndPause > this.vimeoControl.setMuted(true) resolved", this.videoId, T), yield this.vimeoControl.play(), console.log("gotoTimeAndPause > this.vimeoControl.play() resolved", this.videoId, T), p.I5.isSafari() && (yield P(350), console.log("gotoTimeAndPause > artificialDelay() resolved", this.videoId, T)), yield this.vimeoControl.pause(), console.log("gotoTimeAndPause > this.vimeoControl.pause() resolved", this.videoId, T), yield this.vimeoControl.setCurrentTime(T), console.log("gotoTimeAndPause > this.vimeoControl.setCurrentTime(time) resolved", this.videoId, T), this.setVolume(), console.log("gotoTimeAndPause > ALL STEPS resolved")
                } catch (b) {
                    console.error("gotoTimeAndPause ERROR:", b)
                }
            })
        }

        playVideo(T) {
            console.log("playVideo(time)", T);
            const b = () => {
                this.hasSignalledEnd = !1, this.vimeoControl.play()
            };
            return void 0 !== T ? this.gotoTimeAndPause(T).then(() => b()) : b()
        }

        pauseVideo() {
            this.vimeoControl.pause()
        }

        handleResize() {
            this.dimensions = {width: this.offsetWidth, height: this.offsetHeight}
        }

        destroyVideo() {
            this.vimeoControl.destroy()
        }

        render() {
            return e.dy`
      <slot></slot>
      <gu-rectangular-spinner></gu-rectangular-spinner>
    `
        }
    };
    w = (0, c.gn)([(0, _.M)("gu-controllable-vimeo-embed")], w)
}, 56302
:
(se, B, o) => {
    "use strict";
    o.d(B, {X8: () => c, IU: () => _, Qo: () => r});
    var c = (() => {
        return (t = c || (c = {})).FETCH_USER_WALLET = "[Account] Fetch User Wallet", t.FETCH_USER_WALLET_SUCCESS = "[Account] Fetch User Wallet Success", t.FETCH_USER_WALLET_ERROR = "[Account] Fetch User Wallet Error", t.UPDATE_USER_ETH_BALANCE = "[Account] Update User Eth Balance", t.FETCH_USER_ACCOUNT = "[Account] Fetch User Account", t.FETCH_USER_ACCOUNT_SUCCESS = "[Account] Fetch User Account Success", t.FETCH_USER_ACCOUNT_ERROR = "[Account] Fetch User Account Error", c;
        var t
    })();

    class _ {
        constructor() {
            this.type = c.FETCH_USER_WALLET
        }
    }

    class r {
        constructor(n) {
            this.payload = n, this.type = c.UPDATE_USER_ETH_BALANCE
        }
    }
}, 43991
:
(se, B, o) => {
    "use strict";
    o.d(B, {z: () => w});
    var c = o(40520), i = o(73307), y = o(52909), e = o(591), _ = o(30567), p = o(72986), g = o(24850), r = (() => {
        return (L = r || (r = {})).CARD = "card", L.DECK = "deck", L.PACKAGE = "package", L.TOME = "tome", L.CARD_BACK = "cardback", L.BOARD = "board", L.TRINKET = "trinket", L.EMOTE = "emote", L.ICON = "icon", r;
        var L
    })(), v = o(5e3), P = o(74449);
    let w = (() => {
        class L {
            constructor(b, O, k, C) {
                this.authService = b, this.marketplaceApiService = O, this.authHostService = k, this.guApiService = C, this.dataStore = {
                    usersSoldCards: [],
                    userHasNewSoldCards: !1
                }, this._usersSoldCards = new e.X([]), this._userHasNewSoldCards = new e.X(!1), console.log("@Cerberus/AssetsService constructor")
            }

            get usersSoldCards$() {
                return this._usersSoldCards.asObservable()
            }

            get userHasNewSoldCards$() {
                return this._userHasNewSoldCards.asObservable()
            }

            getBoardsAndTrinkets() {
                const b = this.authService.getUserId();
                return this.marketplaceApiService.get(`/user/${b}/asset?type=board&type=trinket`)
            }

            getAssetFilters(b) {
                return this.marketplaceApiService.get("/property", {params: this.appendFilterParams(b)})
            }

            getAssetGroups(b, O) {
                return this.marketplaceApiService.get("/assetgroup", {params: this.appendSearchParams(b, O)})
            }

            appendSearchParams(b, O) {
                let k = new c.LE;
                if (O.sortBy && (k = k.append("sort", O.sortBy)), O.orderBy && (k = k.append("order", O.orderBy)), O.groupBy) {
                    switch (k = k.append("group", O.groupBy), O.assetType) {
                        case r.CARD:
                            k = k.append("group", "quality_name"), k = k.append("group", "quality");
                            break;
                        case r.BOARD:
                            k = k.append("group", "level");
                            break;
                        case r.TRINKET:
                            k = k.append("group", "heads");
                            break;
                        default:
                            k = k.append("group", "quality_name"), k = k.append("group", "quality")
                    }
                    k = k.append("group", "proto")
                }
                return O.splitBy && (k = k.append("split", O.splitBy)), O.currentPage && (k = k.append("page", O.currentPage.toString())), O.perPage && (k = k.append("perPage", O.perPage.toString())), O.assetType && (k = k.append("asset_type", O.assetType)), b.owner && (k = k.append("owner", b.owner)), b.token_id && (k = k.append("token_id", b.token_id)), b.contract && (k = k.append("contract", b.contract)), b.properties && b.properties.length > 0 && (k = k.append("properties", this.stringifyMetaDataFilters(b.properties))), b.class_properties && b.class_properties.length > 0 && (k = k.append("class_properties", this.stringifyMetaDataFilters(b.class_properties))), k
            }

            appendFilterParams(b) {
                let O = new c.LE;
                return b.owner && (O = O.append("owner", b.owner)), b.asset_type && (O = O.append("asset_type", b.asset_type)), b.token_id && (O = O.append("token_id", b.token_id)), b.contract && (O = O.append("contract", b.contract)), b.properties && b.properties.length > 0 && (console.log("properties", this.stringifyMetaDataFilters(b.properties)), O = O.append("properties", this.stringifyMetaDataFilters(b.properties))), b.class_properties && b.class_properties.length > 0 && (O = O.append("class_properties", this.stringifyMetaDataFilters(b.class_properties))), O
            }

            stringifyMetaDataFilters(b) {
                const O = JSON.stringify(b);
                return encodeURI(O)
            }

            getSoldAssets({userId: b = this.authService.getUserId(), showNotifications: O = !0} = {}) {
                console.log("@Cerberus/AssetsService.getSoldAssets({ userId, showNotifications })", b, O), this.marketplaceApiService.get(`/user/${b}/sold`).pipe((0, p.q)(1)).subscribe(k => {
                    O && this.checkForNewCards(k) && (this.dataStore.userHasNewSoldCards = !0, this._userHasNewSoldCards.next(this.dataStore.userHasNewSoldCards)), this.dataStore.usersSoldCards = k, this._usersSoldCards.next([...this.dataStore.usersSoldCards])
                })
            }

            checkForNewCards(b) {
                return !(!b[0] || this.dataStore.usersSoldCards[0] && this.cardsAreTheSame(b[0], this.dataStore.usersSoldCards[0]))
            }

            cardsAreTheSame(b, O) {
                return b.address === O.address && b.token_id === O.token_id
            }

            getProtoDetails(b) {
                return this.guApiService.get(`/proto/${b}`)
            }

            clearNewSoldCards() {
                this.dataStore.userHasNewSoldCards = !1, this._userHasNewSoldCards.next(this.dataStore.userHasNewSoldCards)
            }

            getSellingAssets$(b = 1, O = 31, k = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${k}/selling?page=${b}&perPage=${O}`)
            }

            getUsernamesFromAddresses(b) {
                const O = [];
                for (let k = 0; k < b.length; k++) O.push(this.getUsernameFromAddress(b[k].owner).pipe((0, g.U)(C => C)));
                return (0, _.D)(O)
            }

            getUsernameFromAddress(b) {
                return this.authHostService.get(`/account/${b}/username`)
            }

            mapPriceHistory(b) {
                return b ? b.map(O => {
                    const C = new Date(0).setUTCSeconds(O.block_timestamp), $ = y.O$.from(10).pow(18);
                    return {price: y.O$.from(O.taker_asset_amount).div($).toNumber(), timestamp: C}
                }) : []
            }

            getAssetGroupPriceHistory(b, O, k, C) {
                console.log(O, k);
                let $ = {};
                switch (C) {
                    case r.CARD:
                        $ = JSON.stringify({proto: parseInt(O, 10), quality: parseInt(k, 10)});
                        break;
                    case r.TRINKET:
                        $ = void 0 !== k && "undefined" !== k ? JSON.stringify({heads: parseInt(k, 10)}) : JSON.stringify({});
                        break;
                    case r.BOARD:
                        $ = JSON.stringify({level: parseInt(k, 10)});
                        break;
                    default:
                        $ = JSON.stringify({})
                }
                return this.marketplaceApiService.get(`/asset/${b}/price`, {
                    params: {
                        type: C,
                        asset_group: $
                    }
                }).pipe((0, g.U)(s => this.mapPriceHistory(s)))
            }

            getAssetPriceHistory(b, O) {
                return this.marketplaceApiService.get(`/asset/${b}/${O}/price`).pipe((0, g.U)(k => this.mapPriceHistory(k)))
            }

            getOwnedAssets$(b = 1, O = 31, k = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${k}/asset/ethereumgroup?page=${b}&perPage=${O}`)
            }

            getOwnedAssets(b, O, k = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${k}/asset/ethereumgroup`, {params: this.appendSearchParams(b, O)})
            }

            getOwnedAssetFilters(b, O = this.authService.getUserId()) {
                return this.marketplaceApiService.get(`/user/${O}/asset/ethereum/property`, {params: this.appendFilterParams(b)})
            }
        }

        return L.\u0275fac = function (b) {
            return new (b || L)(v.LFG(i.mI), v.LFG(P._q), v.LFG(i.LI), v.LFG(P.Ho))
        }, L.\u0275prov = v.Yz7({token: L, factory: L.\u0275fac}), L
    })()
}, 40886
:
(se, B, o) => {
    "use strict";
    o.d(B, {Y: () => c, t: () => i});
    const c = 3, i = 1
}, 72224
:
(se, B, o) => {
    "use strict";
    o.d(B, {v: () => c});
    const c = 2147483647
}, 69181
:
(se, B, o) => {
    "use strict";
    o.d(B, {$: () => c});
    const c = [{name: "twitter", link: "https://twitter.com/GodsUnchained"}, {
        name: "reddit",
        link: "https://www.reddit.com/r/GodsUnchained/"
    }, {name: "facebook", link: "https://www.facebook.com/godsunchained/"}, {
        name: "instagram",
        link: "https://www.instagram.com/godsunchained/?hl=en"
    }, {name: "discord", link: "https://discordapp.com/invite/godsunchained"}, {
        name: "youtube",
        link: "https://www.youtube.com/channel/UCGQ1oWpKFfjsLYiTYALAlSA"
    }, {name: "twitch", link: "https://www.twitch.tv/godsunchained/videos"}]
}, 94057
:
(se, B, o) => {
    "use strict";
    o.d(B, {gv: () => y, zy: () => c, CF: () => i});
    var c = {};
    o.r(c), o.d(c, {Y: () => e});
    var i = {};
    o.r(i), o.d(i, {J: () => je, Y: () => at});
    var y = {};
    o.r(y), o.d(y, {routeContent: () => Xe, userMenuItemsContent: () => vt});
    const e = [{
        name: "lysander",
        title: "Lysander: Champion of Light",
        description: "Lysander of Parthon was a respected Olympian military leader, a father, and a man of faith. All that changed the day he was confronted by an overwhelming enemy force led by a daemonic entity.",
        byline: "Wield the might of Lysander's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/01/29/chapter-2-lysanders-origin-broken/",
        protoId: 824
    }, {
        name: "neferu",
        title: "Neferu: Champion of Death",
        description: "Neferu served with distinction in the Anubian army, fighting to reclaim ancestral land from the hated Olympians. She thought she was the embodiment of death herself, until she met her fate on the Mukhnod fields.",
        byline: "Unearth the fury of Neferu's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/02/04/chapter-3-neferus-origin-blessed-rest/",
        protoId: 828
    }, {
        name: "pallas",
        title: "Pallas: Champion of Magic",
        description: "Growing up in a commune of mages, Pallas always seemed to defy categorization: style of magic, philosophy, even gender. This made Evaluation at the Academy of Mystical Arts more complicated than even they expected.",
        byline: "Channel the power of Pallas' cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/02/13/chapter-4-pallas-origin-all-is-magic/",
        protoId: 825
    }, {
        name: "orfeo",
        title: "Orfeo: Champion of Deception",
        description: "Orphaned at a young age, Orfeo quickly learned that one face wasn't enough to survive on the streets of Ronella. But managing multiple lives was never going to be easy, especially when it\u2019s uncertain who is really pulling the strings.",
        byline: "Unveil the skill behind Orfeo's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/03/05/chapter-5-orfeos-origin-masks/",
        protoId: 829
    }, {
        name: "selena",
        title: "Selena: Champion of Nature",
        description: "As a child, many of the Amazons of Agrodor saw Selena a frail young boy... but she knew better. She was a warrior at heart and \u2013 even though she was less athletic than her peers \u2013 she was determined to prove her skills.",
        byline: "Discover the strength of Selena's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/03/19/chapter-6-selenas-origin-truth-is-told-by-moonlight/",
        protoId: 826
    }, {
        name: "valka",
        title: "Valka: Champion of War",
        description: "Battle-hardened and proud, Valka endured devastating adversity before she was selected by Auros to become the Champion of War.",
        byline: "Unleash the wrath of Valka's cards by collecting Trial of the Gods packs.",
        link: "https://blog.godsunchained.com/2020/04/02/chapter-7-valkas-origin-a-traitors-blood/",
        protoId: 827
    }];
    o(69181), o(94417), o(40520), o(591), o(8929), o(36053), o(21086), o(61737), o(24850), o(2994), o(72986), o(61709), o(27221);
    var k = o(73175);
    o(73307), o(5e3), o(74449), new k.N0, o(40886), o(52909), o(67806), o(26959), o(74323), o(47760), o(18499), o(45425), o(5254), o(68896), o(56498), o(92198), o(56302), o(96727), o(11735), o(43991);
    var Ce = o(1025);
    const je = {
        home: {
            shortName: "home",
            path: "",
            icon: "nav_arena",
            pageTitle: "Gods Unchained",
            keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game,CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn",
            description: "The ultimate digital trading card game that gives players true ownership of their collection. Play for free, play for keeps, or trade on open marketplaces. Download now. "
        },
        expansions: {
            shortName: "expansions",
            path: "expansions",
            icon: "set_order",
            children: {
                trial: {
                    shortName: "trial of the gods",
                    path: "expansions/trial-of-the-gods",
                    pageTitle: "Trial of the Gods"
                }, divineOrder: {shortName: "divine order", path: "expansions/divine-order", pageTitle: "Divine Order"}
            }
        },
        buyPacks: {shortName: "buy packs", path: "buy-packs", icon: "trader_package", pageTitle: "Buy new card packs"},
        market: {
            shortName: "market",
            path: "market_trader",
            icon: "nav_market",
            children: {
                imxMarketplace: {
                    shortName: "Buy & Sell",
                    url: "https://market.ropsten.immutable.com/assets?collection=0xc6185055ea9891d5d9020c927ff65229baebdef2",
                    _target: "_blank"
                }, starStore: {shortName: "star store", path: "star-store", pageTitle: "Star Store"}
            }
        },
        learn: {
            shortName: "learn",
            path: "learn",
            icon: "nav_library",
            children: {
                cards: {
                    shortName: "cards",
                    path: "learn/cards",
                    angularRouterPath: "cards",
                    pageTitle: "Learn: Explore the cards",
                    keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, gu cards, gods unchained cards, card info",
                    description: "A complete list of collectable cards in Gods Unchained. Build your deck, trade and play using core and Genesis cards."
                },
                faq: {
                    shortName: "faq",
                    url: "//support.godsunchained.com/hc/en-us/sections/1500001033441-Gods-Unchained-FAQ",
                    _target: "_blank"
                },
                lore: {shortName: "lore", url: "//blog.godsunchained.com/category/lore", _target: "_blank"},
                blog: {shortName: "blog", url: "//blog.godsunchained.com", _target: "_blank"},
                guide: {shortName: "guide", url: "//blog.godsunchained.com/learn-to-play", _target: "_blank"},
                referrals: {
                    shortName: "Referrals",
                    path: "learn/referrals",
                    angularRouterPath: "referrals",
                    pageTitle: "Learn: Referrals",
                    keywords: "",
                    description: "",
                    featureFlag: Ce.v.referralsEnabled
                }
            }
        },
        collections: {
            shortName: "collections",
            path: "collections",
            icon: "nav_inventory",
            pageTitle: "Collections: Your collections",
            keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, gu inventory, gods unchained inventory",
            description: "View your Gods Unchained collection."
        },
        openPacks: {
            shortName: "open packs",
            path: "open-packs",
            icon: "nav_temple",
            pageTitle: "Open Gods Unchained card packs you've purchased.",
            keywords: "Gods Unchained,Godsunchained,TCG,Trading Card Game, CCG,card game,lore,strategy game,blockchain game,crypto game, free to play, play to earn, temple, gods unchained temple, gu card packs, open card packs, gu temple",
            description: "Open Gods Unchained card packs you've purchased."
        },
        token: {
            shortName: "$GODS token",
            path: "token",
            icon: "GUToken",
            children: {
                about: {
                    shortName: "About",
                    path: "token/about",
                    pageTitle: "Learn about GODS token",
                    featureFlag: Ce.v.tokenEnabled
                },
                airdrop: {
                    shortName: "Claim",
                    path: "token/claim",
                    pageTitle: "Claim GODS token",
                    featureFlag: Ce.v.claimAirdropEnabled
                },
                staking: {
                    shortName: "Staking",
                    path: "token/staking",
                    pageTitle: "Staking $GODS token",
                    featureFlag: Ce.v.stakingEnabled
                }
            }
        }
    }, at = {
        manageWallets: {
            shortName: "Manage Wallets",
            path: "manage-wallets",
            pageTitle: "Connect a wallet to your GodsUnchained user account",
            visible: !0
        }, logOut: {shortName: "Log Out", visible: !0}
    }, Xe = ke => ({
        home: {shortName: "arena", path: "game/gu/game-modes", icon: "nav_arena", pageTitle: "Gods Unchained homepage"},
        market: {
            shortName: "market",
            path: "market_trader",
            icon: "nav_market",
            children: {
                imxMarketplace: {
                    shortName: "Buy & Sell",
                    url: `${ke.immutableXMarketplaceUrlGUCollection}`,
                    _target: "_blank"
                }, starStore: {shortName: "star store", path: "game/gu/star-store", pageTitle: "Star Store"}
            }
        },
        collections: {
            shortName: "collections",
            path: "game/gu/inventory",
            icon: "nav_inventory",
            pageTitle: "Collections: Your collections"
        },
        workshop: {shortName: "workshop", path: "game/gu/my-decks", icon: "nav_workshop"},
        forge: {path: "game/gu/forge", icon: "nav_forge", shortName: "forge", featureFlag: Ce.v.forgeEnabled},
        openPacks: {shortName: "open packs", path: "game/gu/temple", icon: "nav_temple"},
        learn: {
            shortName: "learn",
            icon: "nav_library",
            path: "learn",
            children: {
                cards: {shortName: "cards", url: `${ke.guWebsite}/${je.learn.children.cards.path}`},
                faq: {
                    shortName: "faq",
                    url: "//support.godsunchained.com/hc/en-us/sections/1500001033441-Gods-Unchained-FAQ"
                },
                lore: {shortName: "lore", url: "//blog.godsunchained.com/category/lore"},
                blog: {shortName: "blog", url: "//blog.godsunchained.com"},
                guide: {shortName: "guide", url: "//blog.godsunchained.com/learn-to-play"},
                referrals: {shortName: "Referrals", path: "game/gu/referrals"}
            }
        },
        buyPacks: {
            shortName: "buy packs",
            icon: "trader_package",
            url: `${ke.guWebsite}/${je.buyPacks.path}`,
            external: !0
        }
    }), vt = ke => ({
        playToEarn: {
            shortName: "Play to Earn",
            path: "game/gu/play-to-earn",
            featureFlag: Ce.v.playToEarnEnabled,
            visible: !0
        },
        manageWallets: {
            shortName: "Manage Wallets",
            url: `${ke.guWebsite}/${at.manageWallets.path}`,
            pageTitle: "Connect a wallet to your GodsUnchained user account",
            visible: !0
        },
        logOut: {shortName: "Log Out", visible: !0}
    })
}, 52886
:
(se, B, o) => {
    "use strict";
    o.d(B, {Zb: () => y, nE: () => P, nJ: () => c, Xl: () => i, PE: () => w});
    var c = (() => {
        return (k = c || (c = {}))[k.DIAMOND = 1] = "DIAMOND", k[k.GOLD = 2] = "GOLD", k[k.SHADOW = 3] = "SHADOW", k[k.METEORITE = 4] = "METEORITE", k[k.PLAIN = 5] = "PLAIN", c;
        var k
    })();
    const i = {
        [c.DIAMOND]: "diamond",
        [c.GOLD]: "gold",
        [c.SHADOW]: "shadow",
        [c.METEORITE]: "meteorite",
        [c.PLAIN]: "plain"
    };

    class y {
        constructor(C, $, s, h, x) {
            this.id = C, this.proto = $, this.quality = s, this.protoCard = h, this.status = x
        }
    }

    var P = (() => {
        return (k = P || (P = {}))[k.All = -1] = "All", k[k.Owned = 0] = "Owned", k[k.Unowned = 1] = "Unowned", k[k.Processing = 2] = "Processing", P;
        var k
    })(), w = (() => {
        return (k = w || (w = {}))[k.AscID = 0] = "AscID", k[k.DescID = 1] = "DescID", k[k.AscQuality = 2] = "AscQuality", k[k.DescQuality = 3] = "DescQuality", k[k.AscMana = 4] = "AscMana", k[k.DescMana = 5] = "DescMana", k[k.AscScarcity = 6] = "AscScarcity", k[k.AscHealth = 7] = "AscHealth", k[k.DescHealth = 8] = "DescHealth", k[k.AscAttack = 9] = "AscAttack", k[k.DescAttack = 10] = "DescAttack", k[k.AscTribe = 11] = "AscTribe", k[k.DescTribe = 12] = "DescTribe", k[k.AscRarity = 13] = "AscRarity", k[k.DescRarity = 14] = "DescRarity", k[k.AscType = 15] = "AscType", k[k.DescType = 16] = "DescType", k[k.AscGod = 17] = "AscGod", k[k.DescGod = 18] = "DescGod", k[k.AscSet = 19] = "AscSet", k[k.DescSet = 20] = "DescSet", w;
        var k
    })()
}, 28510
:
(se, B, o) => {
    "use strict";
    o.d(B, {mX: () => y.mX, Qz: () => c.Q, Zd: () => e});
    var c = o(55943), i = o(5e3), y = o(46688);
    let e = (() => {
        class _ {
        }

        return _.\u0275fac = function (g) {
            return new (g || _)
        }, _.\u0275mod = i.oAB({type: _}), _.\u0275inj = i.cJS({providers: [c.Q]}), _
    })()
}, 46688
:
(se, B, o) => {
    "use strict";
    o.d(B, {m3: () => c, mX: () => i, x0: () => y});

    class c {
        constructor(_, p, g) {
            this.nodes = _, this.viewRef = p, this.componentRef = g
        }
    }

    class i {
        close(_) {
        }

        dismiss(_) {
        }
    }

    class y {
        constructor(_, p, g, r) {
            this.windowComponentRef = _, this.contentRef = p, this.backdropComponentRef = g, this._beforeDismiss = r, _.instance.dismissEvent.subscribe(t => {
                this.dismiss(t)
            }), this.result = new Promise((t, n) => {
                this.resolve = t, this.reject = n
            }), this.result.then(null, () => {
            })
        }

        get componentInstance() {
            if (this.contentRef && this.contentRef.componentRef) return this.contentRef.componentRef.instance
        }

        close(_) {
            this.windowComponentRef && (this.resolve(_), this.removeModalElements())
        }

        dismissModal(_) {
            this.reject(_), this.removeModalElements()
        }

        dismiss(_) {
            if (this.windowComponentRef) if (this._beforeDismiss) {
                const p = this._beforeDismiss();
                p && p.then ? p.then(g => {
                    !1 !== g && this.dismissModal(_)
                }, () => {
                }) : !1 !== p && this.dismissModal(_)
            } else this.dismissModal(_)
        }

        removeModalElements() {
            const _ = this.windowComponentRef.location.nativeElement;
            if (_.parentNode.removeChild(_), this.windowComponentRef.destroy(), this.backdropComponentRef) {
                const p = this.backdropComponentRef.location.nativeElement;
                p.parentNode.removeChild(p), this.backdropComponentRef.destroy()
            }
            this.contentRef && this.contentRef.viewRef && this.contentRef.viewRef.destroy(), this.windowComponentRef = null, this.backdropComponentRef = null, this.contentRef = null
        }
    }
}, 55943
:
(se, B, o) => {
    "use strict";
    o.d(B, {Q: () => Oe});
    var c = o(5e3), i = o(69808), y = o(8929), e = o(23753), _ = o(7625), p = o(24850), g = o(92198), r = o(87168),
        t = (() => {
            return (H = t || (t = {}))[H.Tab = 9] = "Tab", H[H.Enter = 13] = "Enter", H[H.Escape = 27] = "Escape", H[H.Space = 32] = "Space", H[H.PageUp = 33] = "PageUp", H[H.PageDown = 34] = "PageDown", H[H.End = 35] = "End", H[H.Home = 36] = "Home", H[H.ArrowLeft = 37] = "ArrowLeft", H[H.ArrowUp = 38] = "ArrowUp", H[H.ArrowRight = 39] = "ArrowRight", H[H.ArrowDown = 40] = "ArrowDown", t;
            var H
        })();
    const n = ["a[href]", "button:not([disabled])", 'input:not([disabled]):not([type="hidden"])', "select:not([disabled])", "textarea:not([disabled])", "[contenteditable]", '[tabindex]:not([tabindex="-1"])'].join(", ");

    function v(H) {
        const ue = Array.from(H.querySelectorAll(n)).filter(K => -1 !== K.tabIndex);
        return [ue[0], ue[ue.length - 1]]
    }

    var w = o(46688);

    function $(H) {
        return null != H
    }

    "undefined" != typeof Element && !Element.prototype.closest && (Element.prototype.matches || (Element.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector), Element.prototype.closest = function (H) {
        let ue = this;
        if (!document.documentElement.contains(ue)) return null;
        do {
            if (ue.matches(H)) return ue;
            ue = ue.parentElement || ue.parentNode
        } while (null !== ue && 1 === ue.nodeType);
        return null
    });
    var Y = o(73307);
    let ae = (() => {
        class H {
            constructor(K) {
                this._environment = K
            }

            ngOnInit() {
                this.modalEnviornment = this._environment.clientType
            }
        }

        return H.\u0275fac = function (K) {
            return new (K || H)(c.Y36(Y.Ho))
        }, H.\u0275cmp = c.Xpm({
            type: H,
            selectors: [["cerberus-modal-backdrop"]],
            hostVars: 2,
            hostBindings: function (K, ee) {
                2 & K && c.Tol("cerberusModal__backdrop" + (ee.backdropClass ? " " + ee.backdropClass : ""))
            },
            inputs: {backdropClass: "backdropClass"},
            decls: 0,
            vars: 0,
            template: function (K, ee) {
            },
            encapsulation: 2
        }), H
    })();
    var ce = o(2994), me = o(87545), N = o(72986), J = (() => {
        return (H = J || (J = {}))[H.BACKDROP_CLICK = 0] = "BACKDROP_CLICK", H[H.ESC = 1] = "ESC", J;
        var H
    })();
    const le = ["dialog"], X = ["*"];
    let Se = (() => {
        class H {
            constructor(K, ee, pe, ye) {
                this.environment = K, this.document = ee, this.elRef = pe, this.zone = ye, this.closed$ = new y.xQ, this.backdrop = !0, this.keyboard = !0, this.defaultStylings = !0, this.dismissEvent = new c.vpe
            }

            dismiss(K) {
                this.dismissEvent.emit(K)
            }

            ngOnInit() {
                this.elWithFocus = this.document.activeElement, this.modalEnviornment = this.environment.clientType
            }

            ngAfterViewInit() {
                const {nativeElement: K} = this.elRef;
                if (this.zone.runOutsideAngular(() => {
                    (0, e.R)(K, "keydown").pipe((0, _.R)(this.closed$), (0, g.h)(pe => pe.which === t.Escape && this.keyboard)).subscribe(pe => requestAnimationFrame(() => {
                        pe.defaultPrevented || this.zone.run(() => this.dismiss(J.ESC))
                    }));
                    let ee = !1;
                    (0, e.R)(this._dialogEl.nativeElement, "mousedown").pipe((0, _.R)(this.closed$), (0, ce.b)(() => ee = !1), (0, me.w)(() => (0, e.R)(K, "mouseup").pipe((0, _.R)(this.closed$), (0, N.q)(1))), (0, g.h)(({target: pe}) => K === pe)).subscribe(() => {
                        ee = !0
                    }), (0, e.R)(K, "click").pipe((0, _.R)(this.closed$)).subscribe(({target: pe}) => {
                        !0 === this.backdrop && K === pe && !ee && this.zone.run(() => this.dismiss(J.BACKDROP_CLICK)), ee = !1
                    })
                }), !K.contains(document.activeElement)) {
                    const ee = K.querySelector("[ngbAutofocus]"), pe = v(K)[0];
                    (ee || pe || K).focus()
                }
            }

            ngOnDestroy() {
                const K = this.document.body, ee = this.elWithFocus;
                let pe;
                pe = ee && ee.focus && K.contains(ee) ? ee : K, this.zone.runOutsideAngular(() => {
                    setTimeout(() => pe.focus()), this.elWithFocus = null
                }), this.closed$.next()
            }
        }

        return H.\u0275fac = function (K) {
            return new (K || H)(c.Y36(Y.Ho), c.Y36(i.K0), c.Y36(c.SBq), c.Y36(c.R0b))
        }, H.\u0275cmp = c.Xpm({
            type: H,
            selectors: [["cerberus-modal-window"]],
            viewQuery: function (K, ee) {
                if (1 & K && c.Gf(le, 7), 2 & K) {
                    let pe;
                    c.iGM(pe = c.CRH()) && (ee._dialogEl = pe.first)
                }
            },
            hostAttrs: ["role", "dialog", "tabindex", "-1"],
            hostVars: 4,
            hostBindings: function (K, ee) {
                2 & K && (c.uIk("aria-modal", !0)("aria-labelledby", ee.ariaLabelledBy), c.Tol("cerberusModal" + (ee.windowClass ? " " + ee.windowClass : "")))
            },
            inputs: {
                ariaLabelledBy: "ariaLabelledBy",
                backdrop: "backdrop",
                centered: "centered",
                keyboard: "keyboard",
                scrollable: "scrollable",
                size: "size",
                windowClass: "windowClass",
                defaultStylings: "defaultStylings"
            },
            outputs: {dismissEvent: "dismiss"},
            ngContentSelectors: X,
            decls: 4,
            vars: 4,
            consts: [["role", "document"], ["dialog", ""]],
            template: function (K, ee) {
                1 & K && (c.F$t(), c.TgZ(0, "div", 0, 1)(2, "div"), c.Hsn(3), c.qZA()()), 2 & K && (c.Tol("cerberusModal__dialog" + (ee.size ? " cerberus-modal-" + ee.size : "") + (ee.defaultStylings ? " cerberusModal__dialog--defaultStylings" : "") + (ee.centered ? " cerberusModal__dialog--centered" : "") + (ee.scrollable ? " cerberusModal__dialog--scrollable" : "") + (ee.modalEnviornment ? " cerberusModal__dialog--" + ee.modalEnviornment : "")), c.xp6(2), c.Tol("cerberusModal__content" + (ee.defaultStylings ? " cerberusModal__content--defaultStylings" : "")))
            },
            styles: ['.cerberusModal__open{overflow:hidden;height:100vh;width:100vw;user-select:none;pointer-events:none}.cerberusModal__open .cerberusModal{overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch;user-select:auto;pointer-events:auto}.cerberusModal{position:fixed;top:0;left:0;z-index:22;width:100%;height:100%;overflow:hidden;outline:0;display:flex;justify-content:center;align-items:flex-start}.cerberusModal__dialog{position:relative;width:auto;pointer-events:none;justify-content:center;display:flex}.cerberusModal__dialog--scrollable{display:flex;max-height:calc(100% - 16px)}.cerberusModal__dialog--scrollable .cerberusModal__content{max-height:calc(100vh - 16px);overflow:hidden}.cerberusModal__dialog--scrollable .cerberusModal__header .cerberusModal__footer{flex-shrink:0}.cerberusModal__dialog--scrollable .cerberusModal__body{overflow-y:auto}.cerberusModal__dialog--defaultStylings{margin:8px}.cerberusModal__dialog--centered{display:flex;align-items:center;min-height:calc(100% - 16px);align-self:center}.cerberusModal__dialog--centered:before{display:block;height:calc(100vh - 16px);height:min-content;content:""}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable{flex-direction:column;justify-content:center;height:100%}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable .cerberusModal__content{max-height:none}.cerberusModal__dialog--centered.cerberusModal__dialog--scrollable:before{content:none}.cerberusModal__content{position:relative;flex-direction:column;display:flex;width:100%;pointer-events:auto;background-clip:padding-box;outline:0}.cerberusModal__content--defaultStylings{border:2px solid white;border:1px solid rgba(0,0,0,.2);background-color:#fff}.cerberusModal__backdrop{position:fixed;top:0;left:0;z-index:22;width:100vw;height:100vh;background-color:#000;opacity:.5}.cerberusModal__header{display:flex;align-items:flex-start;justify-content:space-between;padding:16px;border-bottom:1px solid #dee2e6}.cerberusModal__header .close{padding:16px;margin:-16px -16px -16px auto}.cerberusModal__title{margin-bottom:0;line-height:1.5}.cerberusModal__body{position:relative;flex:1 1 auto;padding:16px}.cerberusModal__footer{display:flex;flex-wrap:wrap;align-items:center;justify-content:flex-end;padding:12px;border-top:1px solid #dee2e6}.cerberusModal__footer>*{margin:4px}.cerberusModal__scrollbarMeasure{position:absolute;top:-9999px;width:50px;height:50px;overflow:scroll}\n', "cerberus-modal-window .component-host-scrollable{display:flex;flex-direction:column;overflow:hidden}.cerberusModal__dialog--defaultStylings.cerberusModal__dialog--website{top:96px}.cerberusModal__dialog--defaultStylings.cerberusModal__dialog--desktop{top:calc(var(--vh) * 9)}\n"],
            encapsulation: 2
        }), H
    })();
    const Z = () => {
    };
    let de = (() => {
        class H {
            constructor(K) {
                this._document = K
            }

            compensate() {
                const K = this._getWidth();
                return this._isPresent(K) ? this._adjustBody(K) : Z
            }

            _adjustBody(K) {
                const ee = this._document.body, pe = ee.style.paddingRight,
                    ye = parseFloat(window.getComputedStyle(ee)["padding-right"]);
                return ee.style["padding-right"] = `${ye + K}px`, () => ee.style["padding-right"] = pe
            }

            _isPresent(K) {
                const ee = this._document.body.getBoundingClientRect();
                return window.innerWidth - (ee.left + ee.right) >= K - .1 * K
            }

            _getWidth() {
                const K = this._document.createElement("div");
                K.className = "cerberusModal__scrollbarMeasure";
                const ee = this._document.body;
                ee.appendChild(K);
                const pe = K.getBoundingClientRect().width - K.clientWidth;
                return ee.removeChild(K), pe
            }
        }

        return H.\u0275fac = function (K) {
            return new (K || H)(c.LFG(i.K0))
        }, H.\u0275prov = c.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
    })(), _e = (() => {
        class H {
            constructor(K, ee, pe, ye, Ce, je) {
                this.applicationRef = K, this.injector = ee, this.document = pe, this.scrollBar = ye, this.rendererFactory = Ce, this.ngZone = je, this.activeWindowComponentHasChanged = new y.xQ, this.ariaHiddenValues = new Map, this.backdropAttributes = ["backdropClass"], this.modalRefs = [], this.windowAttributes = ["ariaLabelledBy", "backdrop", "centered", "keyboard", "scrollable", "size", "windowClass", "defaultStylings"], this.windowComponents = [], this.activeWindowComponentHasChanged.subscribe(() => {
                    if (this.windowComponents.length) {
                        const at = this.windowComponents[this.windowComponents.length - 1];
                        ((H, ue, K, ee = !1) => {
                            this.ngZone.runOutsideAngular(() => {
                                const pe = (0, e.R)(ue, "focusin").pipe((0, _.R)(K), (0, p.U)(ye => ye.target));
                                (0, e.R)(ue, "keydown").pipe((0, _.R)(K), (0, g.h)(ye => ye.which === t.Tab), (0, r.M)(pe)).subscribe(([ye, Ce]) => {
                                    const [je, at] = v(ue);
                                    (Ce === je || Ce === ue) && ye.shiftKey && (at.focus(), ye.preventDefault()), Ce === at && !ye.shiftKey && (je.focus(), ye.preventDefault())
                                }), ee && (0, e.R)(ue, "click").pipe((0, _.R)(K), (0, r.M)(pe), (0, p.U)(ye => ye[1])).subscribe(ye => ye.focus())
                            })
                        })(0, at.location.nativeElement, this.activeWindowComponentHasChanged), this.revertAriaHidden(), this.setAriaHidden(at.location.nativeElement)
                    }
                })
            }

            open(K, ee, pe, ye) {
                const Ce = ye.container instanceof HTMLElement ? ye.container : $(ye.container) ? this.document.querySelector(ye.container) : this.document.body,
                    je = this.rendererFactory.createRenderer(null, null), at = this.scrollBar.compensate(), Xe = () => {
                        this.modalRefs.length || (je.removeClass(this.document.querySelector("html"), "cerberusModal__open"), this.revertAriaHidden())
                    };
                if (!Ce) throw new Error(`The specified modal container "${ye.container || "body"}" was not found in the DOM.`);
                const vt = new w.mX, Ae = this.getContentRef(K, ye.injector || ee, pe, vt, ye);
                let ke = !1 !== ye.backdrop ? this.attachBackdrop(K, Ce) : null,
                    We = this.attachWindowComponent(K, Ce, Ae), U = new w.x0(We, Ae, ke, ye.beforeDismiss);
                return this.registerModalRef(U), this.registerWindowComponent(We), U.result.then(at, at), U.result.then(Xe, Xe), vt.close = te => {
                    U.close(te)
                }, vt.dismiss = te => {
                    U.dismiss(te)
                }, this.applyWindowOptions(We.instance, ye), 1 === this.modalRefs.length && je.addClass(this.document.querySelector("html"), "cerberusModal__open"), ke && ke.instance && this.applyBackdropOptions(ke.instance, ye), U
            }

            dismissAll(K) {
                this.modalRefs.forEach(ee => ee.dismiss(K))
            }

            hasOpenModals() {
                return this.modalRefs.length > 0
            }

            attachBackdrop(K, ee) {
                let ye = K.resolveComponentFactory(ae).create(this.injector);
                return this.applicationRef.attachView(ye.hostView), ee.appendChild(ye.location.nativeElement), ye
            }

            attachWindowComponent(K, ee, pe) {
                let Ce = K.resolveComponentFactory(Se).create(this.injector, pe.nodes);
                return this.applicationRef.attachView(Ce.hostView), ee.appendChild(Ce.location.nativeElement), Ce
            }

            applyWindowOptions(K, ee) {
                this.windowAttributes.forEach(pe => {
                    $(ee[pe]) && (K[pe] = ee[pe])
                })
            }

            applyBackdropOptions(K, ee) {
                this.backdropAttributes.forEach(pe => {
                    $(ee[pe]) && (K[pe] = ee[pe])
                })
            }

            getContentRef(K, ee, pe, ye, Ce) {
                return pe ? pe instanceof c.Rgc ? this.createFromTemplateRef(pe, ye) : function O(H) {
                    return "string" == typeof H
                }(pe) ? this.createFromString(pe) : this.createFromComponent(K, ee, pe, ye, Ce) : new w.m3([])
            }

            createFromTemplateRef(K, ee) {
                const ye = K.createEmbeddedView({
                    $implicit: ee, close(Ce) {
                        ee.close(Ce)
                    }, dismiss(Ce) {
                        ee.dismiss(Ce)
                    }
                });
                return this.applicationRef.attachView(ye), new w.m3([ye.rootNodes], ye)
            }

            createFromString(K) {
                const ee = this.document.createTextNode(`${K}`);
                return new w.m3([[ee]])
            }

            createFromComponent(K, ee, pe, ye, Ce) {
                const je = K.resolveComponentFactory(pe),
                    at = c.zs3.create({providers: [{provide: w.mX, useValue: ye}], parent: ee}), Xe = je.create(at),
                    vt = Xe.location.nativeElement;
                return Ce.scrollable && vt.classList.add("component-host-scrollable"), this.applicationRef.attachView(Xe.hostView), new w.m3([[vt]], Xe.hostView, Xe)
            }

            setAriaHidden(K) {
                const ee = K.parentElement;
                ee && K !== this.document.body && (Array.from(ee.children).forEach(pe => {
                    pe !== K && "SCRIPT" !== pe.nodeName && (this.ariaHiddenValues.set(pe, pe.getAttribute("aria-hidden")), pe.setAttribute("aria-hidden", "true"))
                }), this.setAriaHidden(ee))
            }

            revertAriaHidden() {
                this.ariaHiddenValues.forEach((K, ee) => {
                    K ? ee.setAttribute("aria-hidden", K) : ee.removeAttribute("aria-hidden")
                }), this.ariaHiddenValues.clear()
            }

            registerModalRef(K) {
                const ee = () => {
                    const pe = this.modalRefs.indexOf(K);
                    pe > -1 && this.modalRefs.splice(pe, 1)
                };
                this.modalRefs.push(K), K.result.then(ee, ee)
            }

            registerWindowComponent(K) {
                this.windowComponents.push(K), this.activeWindowComponentHasChanged.next(), K.onDestroy(() => {
                    const ee = this.windowComponents.indexOf(K);
                    ee > -1 && (this.windowComponents.splice(ee, 1), this.activeWindowComponentHasChanged.next())
                })
            }
        }

        return H.\u0275fac = function (K) {
            return new (K || H)(c.LFG(c.z2F), c.LFG(c.zs3), c.LFG(i.K0), c.LFG(de), c.LFG(c.FYo), c.LFG(c.R0b))
        }, H.\u0275prov = c.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
    })(), Le = (() => {
        class H {
            constructor() {
                this.backdrop = !0, this.keyboard = !0
            }
        }

        return H.\u0275fac = function (K) {
            return new (K || H)
        }, H.\u0275prov = c.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
    })(), Oe = (() => {
        class H {
            constructor(K, ee, pe, ye) {
                this.moduleCFR = K, this.injector = ee, this.modalStack = pe, this.config = ye
            }

            open(K, ee = {}) {
                const pe = Object.assign({}, this.config, ee);
                return this.modalStack.open(this.moduleCFR, this.injector, K, pe)
            }

            dismissAll(K) {
                this.modalStack.dismissAll(K)
            }

            hasOpenModals() {
                return this.modalStack.hasOpenModals()
            }
        }

        return H.\u0275fac = function (K) {
            return new (K || H)(c.LFG(c._Vd), c.LFG(c.zs3), c.LFG(_e), c.LFG(Le))
        }, H.\u0275prov = c.Yz7({token: H, factory: H.\u0275fac, providedIn: "root"}), H
    })()
}, 51395
:
(se, B, o) => {
    "use strict";
    o.d(B, {W: () => ae, F: () => L});
    var c = o(73307), i = o(591), y = o(21086), e = o(36053), _ = o(72986), p = o(24850), g = o(2994), r = o(87545),
        t = o(92198), n = o(61709), v = o(27221), P = o(5e3), w = o(74449);
    let L = (() => {
        class ce {
            constructor(N, J, le, X, Se, Z) {
                this.authService = N, this.gameApi = J, this.guApi = le, this.ethService = X, this.cardsService = Se, this.filterService = Z, this._unopenedPacks$ = new i.X([]), this._currentRaffleTicketTotal$ = new i.X(0), this.dataStore = {
                    unopenedPacks: [],
                    currentRaffleTicketTotal: 0
                }
            }

            get unopenedPacks$() {
                return this._unopenedPacks$.asObservable()
            }

            get currentRaffleTicketTotal$() {
                return this._currentRaffleTicketTotal$.asObservable()
            }

            fetchUnopenedPacks() {
                this.fetchUnopenedPacksById().pipe((0, _.q)(1)).subscribe()
            }

            fetchUnopenedPacksById() {
                const N = this.authService.getUserId();
                return N ? this.gameApi.get(`/user/${N}/allpacks`).pipe((0, _.q)(1), (0, p.U)(J => this.formatPacks(J, !0)), (0, p.U)(J => this.fixGodAlignments(J)), (0, g.b)(J => {
                    this.dataStore.unopenedPacks = J, this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                })) : (0, y.of)([])
            }

            fetchUnopenedPacksByAddress() {
                return this.ethService.getAccount().pipe((0, r.w)(N => this.guApi.get(`/user/${N}/allpacks`)), (0, _.q)(1), (0, p.U)(N => this.formatPacks(N, !1)), (0, g.b)(N => {
                    this.dataStore.unopenedPacks = N, this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                }))
            }

            fetchCurrentTotalRaffleTickets({userId: N, wallet: J}) {
                return N || J ? this.gameApi.get(`/user/${N || J}/tickets`).pipe((0, _.q)(1)).subscribe(le => {
                    this.dataStore.currentRaffleTicketTotal = le, this._currentRaffleTicketTotal$.next(le)
                }) : console.error("no wallet or userId supplied")
            }

            formatPacks(N, J = !1) {
                return N.map(le => Object.assign(Object.assign({}, le), {
                    rarity: this.updateRarity(le),
                    raffleTickets: this.updatePackRaffleTickets(le),
                    requiresAuthentication: J
                }))
            }

            updateScarcityAndRarity$(N) {
                return (0, e.aj)([this.cardsService.protoCards$, this.cardsService.qualityCounts$]).pipe((0, t.h)(([J, le]) => J && J.size > 0 && le && le.size > 0), (0, _.q)(1), (0, p.U)(([J, le]) => N.map(X => Object.assign(Object.assign({}, X), {cards: this.updateScarcityAndRarity(X.cards, J, le)}))))
            }

            fixGodAlignments(N) {
                return N.map(J => Object.assign(Object.assign({}, J), {god: "all" === J.god || "core" === J.god ? "neutral" : J.god}))
            }

            updatePackRaffleTickets(N) {
                if (N && N.extra) {
                    const J = N.extra.find(le => "tickets" === le.name);
                    return J ? J.value : void 0
                }
            }

            updateRarity(N) {
                return "shiny" === N.rarity ? "shiny-legendary" : N.rarity
            }

            updateScarcityAndRarity(N, J, le) {
                const X = ["epic", "legendary", "mythic"];
                return N.map(Se => {
                    const Z = J.get(Se.proto);
                    return !Z || (Se.rarity = Z.rarity, "core" === Z.set) || ("mythic" === Se.rarity ? Se.scarcity = 1 : (X.includes(Se.rarity) || Se.quality < 5) && (Se.scarcity = this.filterService.calcScarcity(Se.proto, Se.quality, le))), Se
                })
            }

            openPackAuthenticated$(N, J = !0) {
                const le = this.authService.getUserId();
                return this.authService.fetchSession().pipe((0, _.q)(1), (0, n.VS)(X => this.gameApi.put(`/user/${le}/allpacks?session=${X}`, N)), (0, g.b)(X => {
                    this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(Z => Z.pack_id !== N.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks]);
                    const Se = this.packToInventoryCardsMap(N);
                    this.cardsService.addCardsToInventory(Se)
                }), (0, v.K)(X => 401 === X.status && J ? this.authService.refreshToken().pipe((0, n.VS)(Se => this.openPackAuthenticated$(N, !1))) : (0, y.of)(X)))
            }

            dummyOpenPack(N) {
                return this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(J => J.pack_id !== N.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks]), (0, y.of)(!0)
            }

            openPackUnauthenticated$(N) {
                return this.ethService.getAccount().pipe((0, _.q)(1), (0, r.w)(J => this.gameApi.put(`/user/${J}/allpacks`, N)), (0, g.b)(J => {
                    this.dataStore.unopenedPacks = this.dataStore.unopenedPacks.filter(le => le.pack_id !== N.pack_id), this._unopenedPacks$.next([...this.dataStore.unopenedPacks])
                }))
            }

            openPack$(N) {
                return N.requiresAuthentication ? this.openPackAuthenticated$(N) : this.openPackUnauthenticated$(N)
            }

            packToInventoryCardsMap(N) {
                const J = {};
                return N.cards.forEach(le => {
                    const X = {q: le.quality, id: le.id};
                    J[le.proto] ? J[le.proto].push(X) : J[le.proto] = [X]
                }), J
            }

            generateRandomDummyPacks(N) {
                return Array.from({length: N}, (J, le) => ({
                    cards: this.generateRandomDummyCards(5),
                    god: this.chooseRandomGod(),
                    set: "core",
                    rarity: "rare",
                    pack_id: 234423 + le,
                    pack_source: "reward",
                    raffleTickets: Math.abs(Math.floor(5e4 * Math.random()))
                }))
            }

            generateRandomDummyCards(N) {
                return Array.from({length: N}, (J, le) => ({
                    proto: this.generateCardProto(),
                    id: le + 1,
                    rarity: this.chooseRandomCardRarity(),
                    quality: Math.ceil(5 * Math.random()),
                    scarcity: Math.ceil(2e3 * Math.random())
                }))
            }

            chooseRandomPackRarity() {
                const N = ["rare", "legendary"];
                return N[Math.ceil(Math.random() * N.length - 1)]
            }

            chooseRandomCardRarity() {
                const N = ["common", "rare", "epic", "legendary"];
                return N[Math.ceil(Math.random() * N.length - 1)]
            }

            chooseRandomGod() {
                const N = ["nature", "death", "nature", "war", "neutral", "deception", "light", "magic"];
                return N[Math.ceil(Math.random() * N.length - 1)]
            }

            generateCardProto() {
                const N = Math.ceil(384 * Math.random());
                return [382, 383, 384, 378, 379].includes(N) ? this.generateCardProto() : N
            }
        }

        return ce.\u0275fac = function (N) {
            return new (N || ce)(P.LFG(c.mI), P.LFG(w.Ft), P.LFG(w.Ho), P.LFG(c.ux), P.LFG(w.dK), P.LFG(w.iZ))
        }, ce.\u0275prov = P.Yz7({token: ce, factory: ce.\u0275fac, providedIn: "root"}), ce
    })();
    var T = o(40886), b = (() => {
        return (ce = b || (b = {}))[ce.RARE_GENESIS = 0] = "RARE_GENESIS", ce[ce.RARE_TRIAL = 1] = "RARE_TRIAL", ce[ce.LEGENDARY_GENESIS = 2] = "LEGENDARY_GENESIS", ce[ce.LEGENDARY_TRIAL = 3] = "LEGENDARY_TRIAL", b;
        var ce
    })(), O = o(52909), k = o(18499), C = o(13989), $ = o(45425), s = o(5254), h = o(61737), x = o(77518);
    const I = o(45861), Y = o(92916);
    let ae = (() => {
        class ce {
            constructor(N, J) {
                if (this.environment = N, this.ethService = J, this._chests$ = new i.X([]), console.log("ChestService->constructor()"), "desktop" !== this.environment.clientType) {
                    try {
                        this.setupGenesis()
                    } catch (le) {
                        console.log("ChestService->constructor() error setting up genesis chests", le)
                    }
                    try {
                        this.setupTrial()
                    } catch (le) {
                        console.log("ChestService->constructor() error setting up trial chests", le)
                    }
                    this.dataStore = {chests: this.chestData()}, this._chests$.next([...this.dataStore.chests])
                }
            }

            get chests$() {
                return this._chests$.asObservable()
            }

            setupGenesis() {
                this.RareGenesis = this.ethService.artifactsToContract(I, "0xEE85966b4974d3C6F71A2779cC3B6F53aFbc2B68"), this.LegendaryGenesis = this.ethService.artifactsToContract(I, "0x20D4Cec36528e1C4563c1BFbE3De06aBa70b22B4"), this.Vault = this.ethService.artifactsToContract(Y, Y.networks[1]), this.VaultInfura = this.ethService.infuraContract(Y, Y.networks[1]), this.LegendaryGenesisInfura = this.ethService.infuraContract(I, "0x20D4Cec36528e1C4563c1BFbE3De06aBa70b22B4")
            }

            setupTrial() {
                const N = this.environment.production ? x.np.Production : x.np.Staging,
                    J = this.environment.production ? "https://eth-mainnet.alchemyapi.io/v2/ICJe8nw_i-gl_3E6V6I942RRJ3PMs5vB" : "https://eth-ropsten.alchemyapi.io/v2/ICJe8nw_i-gl_3E6V6I942RRJ3PMs5vB",
                    le = this.environment.production ? T.t : T.Y, X = (0, k.getGodsUnchainedAddresses)(le, N),
                    Z = ((0, k.getGodsUnchainedAddresses)(le, N), (0, k.getGodsUnchainedAddresses)(le, N).seasonOne.capAddress);
                if (window.ethereum) {
                    const _e = new C.Qg(window.ethereum).getSigner();
                    console.log("ChestService->setup() signer", _e), this.RareTrial = k.Chest.at(_e, X.seasonOne.rareChestAddress), console.log("ChestService->setup() RareTrial", this.RareTrial), this.LegendaryTrial = k.Chest.at(_e, X.seasonOne.legendaryChestAddress), console.log("ChestService->setup() LegendaryTrial", this.LegendaryTrial), this.S1Cap = k.S1Cap.at(_e, Z), console.log("ChestService->setup() S1Cap", this.S1Cap)
                }
                const de = new C.r6(J, le);
                this.RareTrialAlchemy = k.Chest.at(de, X.seasonOne.rareChestAddress), this.LegendaryTrialAlchemy = k.Chest.at(de, X.seasonOne.legendaryChestAddress), this.S1CapAlchemy = k.S1Cap.at(de, Z)
            }

            s1CapCap() {
                return (0, s.D)(this.S1Cap.cap()).pipe((0, v.K)(N => (0, s.D)(this.S1CapAlchemy.cap())))
            }

            s1CapCurrent() {
                return (0, s.D)(this.S1Cap.current()).pipe((0, v.K)(N => (0, s.D)(this.S1CapAlchemy.current())))
            }

            s1CapProgressPercentage() {
                return (0, e.aj)([this.s1CapCurrent(), this.s1CapCap()]).pipe((0, _.q)(1), (0, p.U)(([N, J]) => {
                    try {
                        const le = N.toNumber(), X = J.toNumber();
                        return (X - le) / X * 100
                    } catch (le) {
                        return 100
                    }
                }))
            }

            soldTrial(N) {
                return (0, s.D)(this.getContractTrial(N).sold()).pipe((0, v.K)(J => (0, s.D)(this.getContractTrialAlchemy(N).sold())))
            }

            capTrial(N) {
                return (0, s.D)(this.getContractTrial(N).productCap()).pipe((0, v.K)(J => (0, s.D)(this.getContractTrialAlchemy(N).productCap())))
            }

            balanceOfTrial(N, J) {
                const le = this.getContractTrial(N);
                return (0, e.aj)([le.balanceOf(J), (0, s.D)(le.decimals())]).pipe((0, p.U)(([X, Se]) => {
                    const Z = new $.ethers.utils.BigNumber(10).pow(Se);
                    return X.div(Z)
                }))
            }

            getContractTrial(N) {
                switch (N) {
                    case b.RARE_TRIAL:
                        return this.RareTrial;
                    case b.LEGENDARY_TRIAL:
                        return this.LegendaryTrial
                }
            }

            getContractTrialAlchemy(N) {
                switch (N) {
                    case b.RARE_TRIAL:
                        return this.RareTrialAlchemy;
                    case b.LEGENDARY_TRIAL:
                        return this.LegendaryTrialAlchemy
                }
            }

            fetchChests() {
                this.ethService.getAccount().pipe((0, _.q)(1), (0, n.VS)(N => (0, e.aj)([this.balanceOf(b.RARE_GENESIS, N), this.balanceOf(b.LEGENDARY_GENESIS, N), this.balanceOfTrial(b.RARE_TRIAL, N), this.balanceOfTrial(b.LEGENDARY_TRIAL, N)]))).subscribe(([N, J, le, X]) => {
                    console.log("fetched Num Bundles rare leg", N, J), this.dataStore.chests = this.chestData(N.toNumber(), J.toNumber(), Math.floor(le.toNumber()), Math.floor(X.toNumber())), this._chests$.next([...this.dataStore.chests])
                })
            }

            percentageSold(N) {
                return (0, e.aj)([this.soldTrial(N), this.capTrial(N)]).pipe((0, p.U)(([J, le]) => this.progressPercentage(J, le)))
            }

            progressPercentage(N, J) {
                try {
                    const le = N.toNumber(), X = J.toNumber();
                    return (X - le) / X * 100
                } catch (le) {
                    return 100
                }
            }

            balanceOf(N, J) {
                return this.getContract(N).pipe((0, n.VS)(le => le.balanceOf(J)), (0, p.U)(le => le), (0, g.b)(le => {
                    console.log("ChestService->balanceOf() BALANCE", N, le)
                }), (0, v.K)(le => (console.log("error getting balanceOf ", N, le), (0, y.of)(O.O$.from(0)))))
            }

            open(N, J) {
                return this.getContract(N).pipe((0, n.VS)(le => le.open(J)), (0, g.b)(le => {
                    this.dataStore.chests.find(Se => Se.type === N).amount -= J, this._chests$.next([...this.dataStore.chests])
                }))
            }

            cap(N) {
                return this.getContract(N).pipe((0, n.VS)(J => J.productCap()), (0, p.U)(J => J))
            }

            sold(N) {
                return this.getContract(N).pipe((0, n.VS)(J => J.sold()), (0, p.U)(J => J), (0, v.K)(J => this.soldInfura(N)))
            }

            soldInfura(N) {
                return this.getContractInfura(N).pipe((0, n.VS)(J => J.sold()), (0, p.U)(J => J))
            }

            vaultBalance() {
                return (0, s.D)(this.Vault.deployed()).pipe((0, n.VS)(N => N.total()), (0, p.U)(N => N), (0, v.K)(N => this.vaultBalanceInfura()))
            }

            vaultBalanceInfura() {
                return (0, s.D)(this.VaultInfura.deployed()).pipe((0, n.VS)(N => N.total()), (0, p.U)(N => N))
            }

            vaultCap() {
                return (0, y.of)(O.O$.from("33333000000000000000000"))
            }

            getContract(N) {
                switch (N) {
                    case b.RARE_GENESIS:
                        return (0, s.D)(this.RareGenesis.deployed());
                    case b.LEGENDARY_GENESIS:
                        return (0, s.D)(this.LegendaryGenesis.deployed());
                    case b.RARE_TRIAL:
                        return (0, y.of)(this.RareTrial);
                    case b.LEGENDARY_TRIAL:
                        return (0, y.of)(this.LegendaryTrial)
                }
                return (0, h._)("invalid bundle pack type")
            }

            getContractInfura(N) {
                return N === b.LEGENDARY_GENESIS ? (0, s.D)(this.LegendaryGenesisInfura.deployed()) : (0, h._)("invalid bundle pack type")
            }

            chestData(N = 0, J = 0, le = 0, X = 0) {
                return [{type: b.RARE_GENESIS, set: "genesis", rarity: "rare", amount: N}, {
                    type: b.LEGENDARY_GENESIS,
                    set: "genesis",
                    rarity: "legendary",
                    amount: J
                }, {type: b.RARE_TRIAL, set: "trial", rarity: "rare", amount: le}, {
                    type: b.LEGENDARY_TRIAL,
                    set: "trial",
                    rarity: "legendary",
                    amount: X
                }]
            }
        }

        return ce.\u0275fac = function (N) {
            return new (N || ce)(P.LFG(c.Ho), P.LFG(c.ux))
        }, ce.\u0275prov = P.Yz7({token: ce, factory: ce.\u0275fac, providedIn: "root"}), ce
    })()
}, 74449
:
(se, B, o) => {
    "use strict";
    o.d(B, {
        jt: () => ce,
        yD: () => X,
        QF: () => K,
        f1: () => at,
        dK: () => Xe.d,
        tX: () => vt,
        fN: () => Ae,
        ai: () => ke.a,
        iZ: () => U,
        vU: () => ke.v,
        TJ: () => $e,
        pH: () => dt,
        Ho: () => Fe,
        Of: () => Se,
        Ft: () => ie.F,
        n2: () => ue,
        _q: () => nt._,
        LE: () => je.L,
        fY: () => Qe.f,
        C_: () => Rt,
        xd: () => Ge,
        $c: () => At,
        cM: () => re,
        $: () => bt.$
    }), o(52408);
    var i = o(21086), y = o(52886), e = o(77518);
    const p = {
        request_id: "request_id",
        catalog_item: "forge-common",
        user_id: 1077441,
        address: "address",
        flux_amount: 10,
        token_amount: "200000000000000000",
        status: e.Og.FLUX_PAID,
        source_assets: [{
            id: 1688181,
            proto: 1e3,
            quality: y.nJ.SHADOW,
            owner: "1124932",
            rarity: "rare",
            set: "core",
            name: "Dryder Sailweaver"
        }, {
            id: 1688182,
            proto: 1e3,
            quality: y.nJ.SHADOW,
            owner: "1124932",
            rarity: "rare",
            set: "core",
            name: "Dryder Sailweaver"
        }],
        target_assets: [{
            id: 0,
            proto: 1e3,
            quality: y.nJ.METEORITE,
            owner: "0x06debe71584bcdc776bace99abc87b48db4f29d8",
            rarity: "rare",
            set: "core",
            name: "Dryder Sailweaver"
        }],
        created_at: "2021-10-10T00:00:00Z",
        modified_at: "2021-10-10T00:00:00Z",
        imx_tx_id: 0,
        token_contract: "token_contract",
        token_payment_address: "token_payment_address"
    };
    Object.assign(Object.assign({}, p), {imx_tx_id: 123, status: e.Og.TOKENS_PAID});
    Object.assign(Object.assign({}, p), {
        imx_tx_id: 125,
        status: e.Og.COMPLETED
    }), Object.assign(Object.assign({}, p), {
        imx_tx_id: 125,
        status: e.Og.COMPLETED
    }), Object.assign(Object.assign({}, p), {imx_tx_id: 0, status: e.Og.CARDS_DELETED});
    var O = o(85111), k = o(69808), C = o(5e3), $ = o(73307), h = o(60870);
    let ce = (() => {
        class z {
            constructor(d, f, R, ne) {
                this.deviceDetectorService = d, this.environment = f, this.authService = R, this.storage = ne, this.brand = "godsunchained", this.appVersion = "0.13.3", this.initAnalyticsProperties(), this.initDeviceProperties(), this.initSessionProperties(), this.initUserProperties()
            }

            initAnalyticsProperties() {
                this.appName = "website" === this.environment.clientType ? "com.immutable.guweb" : "com.immutable.gudesktop", this.appPlatform = this.environment.clientType, "desktop" === this.environment.clientType && (this.branch = this.storage.get(["game", "1", "branch"]) || "beta")
            }

            initDeviceProperties() {
                const f = this.getDeviceId();
                this.deviceProperties = {
                    device_id: f && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(f) ? f : o(66926)(),
                    os_name: this.deviceDetectorService.os,
                    os_version: this.deviceDetectorService.os_version,
                    app_platform: window.navigator.platform
                }, this.storage.set(["device_id"], f)
            }

            getDeviceId() {
                return this.storage.get(["device_id"])
            }

            initSessionProperties() {
                this.sessionProperties = {session_id: +new Date}
            }

            initUserProperties() {
                this.userId = this.authService.getUserId(), this.isUserSignedIn = !!this.userId, this.authService.account$.subscribe(d => {
                    this.isUserSignedIn = !!d, this.userId = this.isUserSignedIn ? `${this.authService.getUserId()}` : ""
                })
            }

            get producer() {
                return "website" === this.environment.clientType ? "web" : "client"
            }

            sendEvent(d) {
                try {
                    window.akuma(d)
                } catch (f) {
                    console.error(f)
                }
            }

            postScreenEvent(d, f, R, ne, we, Ve) {
                const rt = this.buildEvent("Screen", `${d}${f}${R}_${ne}`, this.isUserSignedIn ? `${this.userId}` : `${Ve}`, we);
                this.sendEvent(rt)
            }

            postControlEvent(d, f, R, ne, we, Ve, Et, Bt) {
                const ts = this.buildEvent("Control", `${d}${f}${R}_${ne}${we}_${Ve}`, this.isUserSignedIn ? `${this.userId}` : `${Bt}`, Et);
                this.sendEvent(ts)
            }

            postFlowEvent(d, f, R, ne) {
                const Et = this.buildEvent("Flow", `_${d}_${f}`, this.isUserSignedIn ? `${this.userId}` : `${ne}`, R);
                this.sendEvent(Et)
            }

            buildEvent(d, f, R, ne) {
                return {
                    appBrand: this.brand,
                    appName: this.appName,
                    appPlatform: this.appPlatform,
                    appVersion: this.appVersion,
                    deviceProperties: this.deviceProperties,
                    eventProperties: ne,
                    eventName: f,
                    eventType: d,
                    sessionProperties: this.sessionProperties,
                    userId: R,
                    userProperties: this.userProperties,
                    realm: this.branch
                }
            }

            postEvent(d, f, R, ne) {
                const Ve = this.buildEvent(d, f, this.isUserSignedIn ? `${this.userId}` : `${ne}`, R);
                this.sendEvent(Ve)
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(h.x0), C.LFG($.Ho), C.LFG($.mI), C.LFG($.qy))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var me = o(40520), N = o(59633);
    const J = "website";
    let X = (() => {
        class z {
            constructor(d, f, R, ne) {
                this.deviceDetectorService = d, this.httpClient = f, this.environment = R, this.storage = ne, this.headers = new me.WM({"X-Chaff": this.environment.production ? "" : "test"});
                const we = this.getDeviceId();
                this.brand = "gods_unchained", this.device_id = we && /^[0-9a-f]{8}-[0-9a-f]{4}-[0-5][0-9a-f]{3}-[089ab][0-9a-f]{3}-[0-9a-f]{12}$/i.test(we) ? we : o(66926)(), this.event_id = 0, this.native = this.environment.clientType !== J, this.platform = window.navigator.platform, this.producer = this.deviceDetectorService.isDesktop() ? "desktop" : "mobile", this.os_name = this.deviceDetectorService.os, this.os_version = this.deviceDetectorService.os_version, this.service = this.environment.clientType === J ? J : "launcher", this.session_id = this.generateSessionId(), this.storage.set(["device_id"], this.device_id)
            }

            generateSessionId() {
                return +new Date
            }

            getUserId() {
                return this.storage.get(["user_id"])
            }

            getUTM() {
                return {
                    ad_id: this.storage.get(["ad_id"]),
                    utm_campaign: this.storage.get(["utm_campaign"]),
                    utm_content: this.storage.get(["utm_content"]),
                    utm_hash: this.storage.get(["utm_hash"]),
                    utm_medium: this.storage.get(["utm_medium"]),
                    utm_source: this.storage.get(["utm_source"])
                }
            }

            getDeviceId() {
                return this.storage.get(["device_id"])
            }

            postEvent(d, f) {
                const ne = new N.Event({
                    brand: this.brand,
                    device_id: this.device_id,
                    event_id: this.event_id = this.event_id + 1,
                    event_properties: d,
                    native: this.native,
                    os_name: this.os_name,
                    os_version: this.os_version,
                    platform: this.platform,
                    producer: this.producer,
                    service: this.service,
                    session_id: this.session_id,
                    user_id: parseInt(this.getUserId(), 10),
                    user_properties: f
                }).toObject();
                return Object.assign(ne.event_properties, this.getUTM()), this.httpClient.post(this.environment.analyticsHost, JSON.stringify(ne), {headers: this.headers}).toPromise()
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(h.x0), C.LFG(me.eN), C.LFG($.Ho), C.LFG($.qy))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })(), Se = (() => {
        class z {
            constructor() {
            }

            setCurrentProvider(d) {
                try {
                    ga("set", "dimension1", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setAccount(d) {
                try {
                    ga("set", "dimension2", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setReferrer(d) {
                try {
                    ga("set", "dimension3", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setClientId(d) {
                try {
                    ga("set", "dimension4", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setSessionId(d) {
                try {
                    ga("set", "dimension5", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setUserId(d) {
                try {
                    ga("set", "dimension6", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setHitTimestamp(d) {
                try {
                    ga("set", "dimension7", d)
                } catch (f) {
                    console.log(f)
                }
            }

            setAbVersion(d) {
                try {
                    ga("set", "dimension8", d)
                } catch (f) {
                    console.log(f)
                }
            }

            triggerOutboundLinkEvent(d, f) {
                try {
                    let R = "";
                    R = R.split("?")[0], ga("send", "event", "Outbound Link", "click", R, d)
                } catch (R) {
                    console.log("could not track ga", R)
                }
            }

            triggerButtonClickEvent(d, f) {
                try {
                    let R = "";
                    R = R.split("?")[0], ga("send", "event", "Button", "click", R, d)
                } catch (R) {
                    console.log("could not track ga", R)
                }
            }

            triggerPageDeferLoadEvent(d, f) {
                try {
                    let R = "";
                    R = R.split("?")[0], ga("send", "event", "Page", "defer load", R, d)
                } catch (R) {
                    console.log("could not track ga", R)
                }
            }

            sendEvent(d, f, R, ne, we) {
                try {
                    console.log(`GA Event: send, event, ${d}, ${f}, ${R}, ${ne}, ${we}`), ga("send", "event", d, f, R, ne, we)
                } catch (Ve) {
                    console.log("Error tracking GA", Ve)
                }
            }

            buyPackBanneCountry() {
                this.sendEvent("buy", "pack", "banned_country")
            }

            buyPackType(d) {
                this.sendEvent("buy", "pack_type", d)
            }

            buyPackTypeNumber(d, f, R) {
                this.sendEvent("buy", `${d}_number`, f, R)
            }

            buyPurchase(d, f) {
                this.sendEvent("buy", "purchase", d, f)
            }

            buyConfirmation(d, f) {
                this.sendEvent("buy", "confirmation", d, f)
            }

            buyStatus(d) {
                this.sendEvent("buy", "status", d)
            }

            templeOpenPacks() {
                this.sendEvent("temple", "open_packs")
            }

            templePurchase(d, f) {
                this.sendEvent("temple", "purchase", d, f)
            }

            templeShareDiscord() {
                this.sendEvent("temple", "share", "discord")
            }

            inventoryInventoryType(d) {
                this.sendEvent("inventory", "inventory_type", d)
            }

            inventory(d, f, R) {
                this.sendEvent("inventory", d, f, R)
            }

            inventorySearchStart() {
                this.sendEvent("inventory", "search_start")
            }

            inventorySearchEnd(d, f) {
                this.sendEvent("inventory", "search_end", d, f)
            }

            inventoryPageUp(d, f) {
                this.sendEvent("inventory", "page_up", d, f)
            }

            inventoryPageDown(d, f) {
                this.sendEvent("inventory", "page_down", d, f)
            }

            inventoryPageSelect(d, f) {
                this.sendEvent("inventory", "page_select", d, f)
            }

            inventoryViewCard(d, f) {
                this.sendEvent("inventory", "view_card", d + "", f)
            }

            inventoryViewCollectable(d, f) {
                this.sendEvent("inventory", "view_collectable", d, f)
            }

            navigateHeader(d) {
                this.sendEvent("navigate", "header", d)
            }

            navigate(d, f) {
                this.sendEvent("navigate", d, f)
            }

            outbound(d, f) {
                this.sendEvent("outbound", d, f)
            }

            navigateExit(d) {
                this.sendEvent("navigate", "exit", d)
            }

            helpOpenHelp() {
                this.sendEvent("help", "open_help")
            }

            helpEndHelp() {
                this.sendEvent("help", "end_help")
            }

            helpSearchStart() {
                this.sendEvent("help", "search_start")
            }

            helpSearchEnd(d) {
                this.sendEvent("help", "search_end", d)
            }

            helpSelectFaq(d) {
                this.sendEvent("help", "select_faq", d)
            }

            cryptokittiesPurchaseRareRandom() {
                this.sendEvent("cryptokitties", "purchase", "rare_random")
            }

            cryptokittiesPurchaseRare(d) {
                this.sendEvent("cryptokitties", "purchase", "rare", d)
            }

            cryptokittiesInventoryType(d) {
                this.sendEvent("cryptokitties", "inventory_type", d)
            }

            cryptokittiesSearchStartStart() {
                this.sendEvent("cryptokitties", "search_start", "start")
            }

            cryptokittiesSearchEnd(d) {
                this.sendEvent("cryptokitties", "search_end", d)
            }

            cryptokittiesPageUp(d) {
                this.sendEvent("cryptokitties", "page_up", d)
            }

            cryptokittiesPageDown(d) {
                this.sendEvent("cryptokitties", "page_down", d)
            }

            cryptokittiesPageSelect(d) {
                this.sendEvent("cryptokitties", "page_select", d)
            }

            cryptokittiesSelect(d) {
                this.sendEvent("cryptokitties", "select", d)
            }

            cryptokittiesDeselect(d) {
                this.sendEvent("etherbots", "deselect", d)
            }

            etherbotsPurchaseRareRandom() {
                this.sendEvent("etherbots", "purchase", "rare_random")
            }

            etherbotsPurchaseRare(d) {
                this.sendEvent("etherbots", "purchase", "rare", d)
            }

            etherbotsInventoryType(d) {
                this.sendEvent("etherbots", "inventory_type", d)
            }

            etherbotsSearchStartStart() {
                this.sendEvent("etherbots", "search_start", "start")
            }

            etherbotsSearchEnd(d) {
                this.sendEvent("etherbots", "search_end", d)
            }

            etherbotsPageUp(d) {
                this.sendEvent("etherbots", "page_up", d)
            }

            etherbotsPageDown(d) {
                this.sendEvent("etherbots", "page_down", d)
            }

            etherbotsPageSelect(d) {
                this.sendEvent("etherbots", "page_select", d)
            }

            etherbotsSelect(d) {
                this.sendEvent("etherbots", "select", d)
            }

            etherbotsDeselect(d) {
                this.sendEvent("etherbots", "deselect", d)
            }

            inventoryViewStatue(d) {
                this.sendEvent("inventory", "view_statue", d)
            }

            walletConnect(d, f) {
                this.sendEvent("wallet", "connect", d, f)
            }

            videoPlay(d) {
                this.sendEvent("video", "play", d)
            }

            videoPause(d, f) {
                this.sendEvent("video", "pause", d, f)
            }

            videoComplete25(d) {
                this.sendEvent("video", "complete_25", d)
            }

            videoComplete50(d) {
                this.sendEvent("video", "complete_50", d)
            }

            videoComplete75(d) {
                this.sendEvent("video", "complete_75", d)
            }

            videoComplete100(d) {
                this.sendEvent("video", "complete_100", d)
            }

            videoWatchLater(d) {
                this.sendEvent("video", "watch_later", d)
            }

            videoShare(d, f) {
                this.sendEvent("video", `share_${d}`, f)
            }

            apolloRegisterBegin(d) {
                this.sendEvent("apollo_register", `${d}_onboard`)
            }

            apolloRegisterFieldStart(d) {
                this.sendEvent("apollo_register", `${d}_start`)
            }

            apolloRegisterFieldComplete(d, f) {
                this.sendEvent("apollo_register", `${d}_complete`, void 0, f)
            }

            apolloRegisterStagesTime(d, f) {
                this.sendEvent("apollo_register", `${d}_time`, void 0, f)
            }

            apolloRegisterComplete() {
                this.sendEvent("apollo_register", "register", "register_complete")
            }

            apolloLoginComplete() {
                this.sendEvent("apollo_register", "login", "login_complete")
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })(), Z = (() => {
        class z {
            constructor(d) {
                this.window = d
            }

            canActivate(d, f) {
                return d.data.externalUrl ? this.window.location.href = d.data.externalUrl : console.warn("*** externalUrl param not provided inside data for redirection"), !1
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(Window))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var de = o(61737), _e = o(27221);
    let Le = (() => {
        class z {
            constructor() {
            }

            autoRetryApiOnFail(d, f = 1) {
                return d.pipe((0, _e.K)(R => f > 0 && R.status >= 400 && R.status < 600 ? this.autoRetryApiOnFail(d, f - 1) : (0, de._)(R)))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var Oe = o(46461), H = o(591);
    let ue = (() => {
        class z {
            constructor() {
                this._storage = window.localStorage
            }

            set(d, f) {
                return this._storage.setItem(d.join("."), f)
            }

            get(d) {
                return this._storage.getItem(d.join("."))
            }

            delete(d) {
                return this._storage.removeItem(d.join("."))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })(), K = (() => {
        class z {
            constructor(d) {
                this.storage = d, this.arenaCancel = this.loadHowl("desktop/Launcher_Arena_Cancel.ogg"), this.arenaClickStart = this.loadHowl("desktop/Launcher_Arena_Click_Start.ogg"), this.arenaCycleMode = this.loadHowl("desktop/Launcher_Arena_CycleMode.ogg"), this.arenaHoverStart = this.loadHowl("desktop/Launcher_Arena_Hover_Start.ogg"), this.returnToLauncher = this.loadHowl("desktop/Launcher_Return.ogg"), this.loginToLauncher = this.loadHowl("desktop/Launcher_Login.ogg"), this.clickItemV1 = this.loadHowl("desktop/Launcher_Click_Item_V1.ogg"), this.clickItemV2 = this.loadHowl("desktop/Launcher_Click_Item_V2.ogg"), this.clickMediumV1 = this.loadHowl("desktop/Launcher_Click_Medium_V1.ogg"), this.clickMediumV2 = this.loadHowl("desktop/Launcher_Click_Medium_V2.ogg"), this.clickTinyV1 = this.loadHowl("desktop/Launcher_Click_Tiny_V1.ogg"), this.clickTinyV2 = this.loadHowl("desktop/Launcher_Click_Tiny_V2.ogg"), this.hoverHex = this.loadHowl("desktop/Launcher_Hover_Hexagon.ogg"), this.hoverItem = this.loadHowl("desktop/Launcher_Hover_Item.ogg"), this.transitionWorkshop = this.loadHowl("desktop/Launcher_Transition_Workshop.ogg"), this.workshopCustomize = this.loadHowl("desktop/Launcher_Workshop_Customize.ogg"), this.workshopDelete = this.loadHowl("desktop/Launcher_Workshop_Delete.ogg"), this.forgeAmbience = this.loadHowl("desktop/Launcher_Forge_Ambience.ogg", {loop: !0}), this.forgeHeatingUp = this.loadHowl("desktop/Launcher_Forge_HeatingUp.ogg"), this.forgeSelectCard = this.loadHowl("desktop/Launcher_Forge_SelectCard.ogg"), this.ForgeFuseAnvil1 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_1.ogg"), this.ForgeFuseAnvil2 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_2.ogg"), this.ForgeFuseAnvil3 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_3.ogg"), this.ForgeFuseAnvil4 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_4.ogg"), this.ForgeFuseAnvil5 = this.loadHowl("desktop/Launcher_Forge_Fuse_Anvil_5.ogg"), this.ForgeFuseShimmer = this.loadHowl("desktop/Launcher_Forge_Fuse_Shimmer.ogg"), this.ForgeFuseContinue = this.loadHowl("desktop/Launcher_Forge_Fuse_Continue.ogg"), this._currentVolume$ = new H.X(null), this.setInitialVolume()
            }

            get currentVolume$() {
                return this._currentVolume$.asObservable()
            }

            setGlobalVolume(d) {
                Oe.Howler.volume(d), this._currentVolume$.next(d), this.storage.set(["gu-audioVolume"], d)
            }

            setInitialVolume() {
                this.initialVolume = parseFloat(this.storage.get(["gu-audioVolume"])), isNaN(this.initialVolume) && (this.initialVolume = .9), this.setGlobalVolume(this.initialVolume)
            }

            loadHowl(d, f) {
                return f || (f = {}), f.src = `/assets/audio/${d}`, new Oe.Howl(f)
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(ue))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var ee = o(8929), pe = o(24850), ye = o(7625), Ce = o(87545), je = o(77535);
    let at = (() => {
        class z {
            constructor(d, f) {
                this.http = d, this.destroyed$ = new ee.xQ, this.apolloEndpoint$ = f.loadConfigurations().pipe((0, pe.U)(R => R.legacyAuthHost), (0, ye.R)(this.destroyed$))
            }

            get(d, f, R) {
                return this.apolloEndpoint$.pipe((0, Ce.w)(ne => this.http.get(ne + d, {headers: R, params: f})))
            }

            put(d, f, R, ne) {
                return this.apolloEndpoint$.pipe((0, Ce.w)(we => this.http.put(we + d, f, {headers: ne, params: R})))
            }

            post(d, f, R) {
                return this.apolloEndpoint$.pipe((0, Ce.w)(ne => this.http.post(ne + d, f, {headers: R})))
            }

            delete(d) {
                return this.apolloEndpoint$.pipe((0, Ce.w)(f => this.http.delete(f + d)))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(me.eN), C.LFG(je.L))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var Xe = o(69439);
    let vt = (() => {
        class z {
            constructor() {
            }

            copyText(d) {
                const f = document.createElement("input");
                document.body.appendChild(f), f.value = d, f.select(), document.execCommand("copy"), document.body.removeChild(f)
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })(), Ae = (() => {
        class z {
            constructor(d, f) {
                this.client = d, this.destroyed$ = new ee.xQ, this.endpoint$ = f.loadConfigurations().pipe((0, pe.U)(R => R.deckHost), (0, ye.R)(this.destroyed$))
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            get(d, f) {
                return this.endpoint$.pipe((0, Ce.w)(R => this.client.get(`${R}/${d}`, f)))
            }

            put(d, f, R) {
                return this.endpoint$.pipe((0, Ce.w)(ne => this.client.put(`${ne}/${d}`, f, R)))
            }

            post(d, f, R) {
                return this.endpoint$.pipe((0, Ce.w)(ne => this.client.post(`${ne}/${d}`, f, R)))
            }

            delete(d, f) {
                return this.endpoint$.pipe((0, Ce.w)(R => this.client.delete(`${R}/${d}`, f)))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(me.eN), C.LFG(je.L))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })();
    var ke = o(1025), We = o(61709);

    class U {
        constructor(W) {
            this.cardsService = W, this.typeOrder = ["spell", "creature", "weapon"], this.godOrder = ["death", "deception", "light", "magic", "nature", "war", "neutral"], this.rarityOrder = ["legendary", "epic", "rare", "common", "mythic"]
        }

        static displayable(...W) {
            return W.map(d => {
                const f = "All" === d ? "" : d.toLowerCase();
                return {display: d, value: f}
            })
        }

        static enumerated(...W) {
            return W.map((d, f) => ({display: d, value: f - 1}))
        }

        static standardProtoFilters(W, d, f) {
            return {mana: -1, rarity: "", tribe: "", god: "", name: "", sort: d, ownership: W, type: "", set: f}
        }

        static standardCardFilters(W, d, f, R = "") {
            return {
                mana: -1,
                rarity: "",
                tribe: "",
                god: R,
                name: "",
                sort: d,
                ownership: W,
                type: "",
                set: f,
                quality: ""
            }
        }

        calcScarcity(W, d, f) {
            let R = 1;
            try {
                const ne = f.get(W)[d];
                R = void 0 === ne ? 1 : Number(ne)
            } catch (ne) {
            }
            return R
        }

        getSort(W, d) {
            switch (W) {
                case y.PE.AscID:
                    return (f, R) => f.proto - R.proto;
                case y.PE.DescID:
                    return (f, R) => R.proto - f.proto;
                case y.PE.AscQuality:
                    return (f, R) => f.quality - R.quality;
                case y.PE.DescQuality:
                    return (f, R) => R.quality - f.quality;
                case y.PE.AscMana:
                    return (f, R) => Number(f.protoCard.mana) - Number(R.protoCard.mana);
                case y.PE.DescMana:
                    return (f, R) => Number(R.protoCard.mana) - Number(f.protoCard.mana);
                case y.PE.AscHealth:
                    return (f, R) => Number(f.protoCard.health) - Number(R.protoCard.health);
                case y.PE.DescHealth:
                    return (f, R) => Number(R.protoCard.health) - Number(f.protoCard.health);
                case y.PE.AscAttack:
                    return (f, R) => Number(f.protoCard.attack) - Number(R.protoCard.attack);
                case y.PE.DescAttack:
                    return (f, R) => Number(R.protoCard.attack) - Number(f.protoCard.attack);
                case y.PE.AscTribe:
                    return (f, R) => f.protoCard.tribe < R.protoCard.tribe ? -1 : 1;
                case y.PE.DescTribe:
                    return (f, R) => f.protoCard.tribe > R.protoCard.tribe ? -1 : 1;
                case y.PE.AscRarity:
                    return (f, R) => this.getRarityId(f.rarity) < this.getRarityId(R.rarity) ? -1 : 1;
                case y.PE.DescRarity:
                    return (f, R) => this.getRarityId(f.rarity) > this.getRarityId(R.rarity) ? -1 : 1;
                case y.PE.AscScarcity:
                    return (f, R) => {
                        if (!d) throw new Error("qualityCounts required for scarcity search");
                        const Ve = this.calcScarcity(f.proto, f.quality, d) - this.calcScarcity(R.proto, R.quality, d);
                        return 0 === Ve ? R.quality - f.quality : Ve
                    }
            }
            return (f, R) => 0
        }

        sortLegacy(W, d, f) {
            return W ? W.sort(this.getSort(d, f)) : []
        }

        sort(W, d, f) {
            return W ? W.sort(this.tiebreak(this.getSort(d, f))) : []
        }

        tiebreak(W) {
            return (d, f) => {
                const R = W(d, f);
                return 0 === R ? this.tiebreakProtoType(d.protoCard, f.protoCard) : R
            }
        }

        getSortProtos(W, d) {
            switch (W) {
                case y.PE.AscID:
                    return (f, R) => f.proto - R.proto;
                case y.PE.DescID:
                    return (f, R) => R.proto - f.proto;
                case y.PE.AscQuality:
                    return (f, R) => f.quality - R.quality;
                case y.PE.DescQuality:
                    return (f, R) => R.quality - f.quality;
                case y.PE.AscMana:
                    return (f, R) => Number(f.mana) - Number(R.mana);
                case y.PE.DescMana:
                    return (f, R) => Number(R.mana) - Number(f.mana);
                case y.PE.AscHealth:
                    return (f, R) => Number(f.health) - Number(R.health);
                case y.PE.DescHealth:
                    return (f, R) => Number(R.health) - Number(f.health);
                case y.PE.AscAttack:
                    return (f, R) => Number(f.attack) - Number(R.attack);
                case y.PE.DescAttack:
                    return (f, R) => Number(R.attack) - Number(f.attack);
                case y.PE.AscTribe:
                    return (f, R) => f.tribe < R.tribe ? -1 : 1;
                case y.PE.DescTribe:
                    return (f, R) => f.tribe > R.tribe ? -1 : 1;
                case y.PE.AscRarity:
                    return (f, R) => this.getRarityId(f.rarity) < this.getRarityId(R.rarity) ? -1 : 1;
                case y.PE.DescRarity:
                    return (f, R) => this.getRarityId(f.rarity) > this.getRarityId(R.rarity) ? -1 : 1;
                case y.PE.AscType:
                    return (f, R) => f.type < R.type ? -1 : 1;
                case y.PE.DescType:
                    return (f, R) => f.type > R.type ? -1 : 1;
                case y.PE.AscGod:
                    return (f, R) => f.god < R.god ? -1 : 1;
                case y.PE.DescGod:
                    return (f, R) => f.god > R.god ? -1 : 1;
                case y.PE.AscSet:
                    return (f, R) => f.set < R.set ? -1 : 1;
                case y.PE.DescSet:
                    return (f, R) => f.set > R.set ? -1 : 1
            }
            return (f, R) => 0
        }

        sortProtos(W, d, f) {
            return W ? W.sort(this.tiebreakProto(this.getSortProtos(d, f))) : []
        }

        tiebreakProto(W) {
            return (d, f) => {
                const R = W(d, f);
                return 0 === R ? this.tiebreakProtoType(d, f) : R
            }
        }

        tiebreakProtoType(W, d) {
            const f = this.typeOrder.indexOf(W.type) - this.typeOrder.indexOf(d.type);
            return 0 === f ? this.tiebreakProtoGod(W, d) : f
        }

        tiebreakProtoGod(W, d) {
            const f = this.godOrder.indexOf(W.god) - this.godOrder.indexOf(d.god);
            return 0 === f ? this.tiebreakProtoRarity(W, d) : f
        }

        tiebreakProtoRarity(W, d) {
            const f = this.rarityOrder.indexOf(W.rarity) - this.rarityOrder.indexOf(d.rarity);
            return 0 === f ? this.tiebreakProtoHealth(W, d) : f
        }

        tiebreakProtoHealth(W, d) {
            const f = Number(W.health) - Number(d.health);
            return 0 === f ? this.tiebreakProtoAttack(W, d) : f
        }

        tiebreakProtoAttack(W, d) {
            const f = Number(W.attack) - Number(d.attack);
            return 0 === f ? this.tiebreakProtoName(W, d) : f
        }

        tiebreakProtoName(W, d) {
            return W.name < d.name ? -1 : 1
        }

        filter(W, d) {
            return W ? W.filter(f => this.matches(d, f)) : []
        }

        matches(W, d) {
            if (null == W) return !0;
            if (null == d || "" !== W.rarity && W.rarity !== d.rarity || "" !== W.set && W.set !== d.set || "" !== W.god && W.god !== d.god || "" !== W.tribe && ("none" === W.tribe && d.tribe || "none" !== W.tribe && W.tribe !== d.tribe)) return !1;
            if (-1 != +W.mana) if (10 == +W.mana) {
                if (d.mana < 10) return !1
            } else if (+W.mana !== d.mana) return !1;
            if (W.name.length > 0) {
                const f = W.name.toLowerCase().trim();
                if (-1 === d.name.toLowerCase().indexOf(f)) return !1
            }
            return !0
        }

        isMythic(W) {
            return 378 === W || 379 === W || 383 === W
        }

        getRarityId(W) {
            switch (W) {
                case"common":
                default:
                    return 0;
                case"rare":
                    return 1;
                case"epic":
                    return 2;
                case"legendary":
                    return 3;
                case"mythic":
                    return 4
            }
        }

        cardsMatch(W, d, f) {
            return null == W || !(this.filterQualities(f.qualities, W.quality) || +W.ownership === y.nE.Owned && !f.owned || +W.ownership === y.nE.Unowned && f.owned || +W.ownership === y.nE.Processing && "escrow" !== f.status || !this.matches(W, d))
        }

        filterCards(W, d) {
            return null == W ? (0, i.of)(null) : this.cardsService.protoCards$.pipe((0, We.VS)(f => {
                const R = W.filter(ne => this.cardsMatch(d, f.get(ne.proto), ne));
                return (0, i.of)(R)
            }))
        }

        filterQualities(W, d) {
            const f = this.getQualityByName(d);
            return -1 !== f && 0 === W[f]
        }

        getQualityByName(W) {
            switch (W.toLowerCase()) {
                case"plain":
                    return y.nJ.PLAIN;
                case"meteorite":
                    return y.nJ.METEORITE;
                case"shadow":
                    return y.nJ.SHADOW;
                case"gold":
                    return y.nJ.GOLD;
                case"diamond":
                    return y.nJ.DIAMOND;
                default:
                    return -1
            }
        }
    }

    U.rarityOptions = U.displayable("All", "Common", "Rare", "Epic", "Legendary", "Mythic"), U.qualityOptions = U.displayable("All", "Plain", "Meteorite", "Shadow", "Gold", "Diamond"), U.godOptions = U.displayable("All", "Neutral", "Nature", "War", "Death", "Light", "Magic", "Deception"), U.manaOptions = U.enumerated("All", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10+"), U.tribeOptions = U.displayable("All", "None", "Viking", "Amazon", "Anubian", "Aether", "Nether", "Atlantean", "Olympian", "Dragon", "Guild", "Mystic", "Structure", "Wild"), U.ownershipOptions = U.enumerated("All", "Owned", "Not Owned", "Processing"), U.setOptions = U.displayable("All", "Genesis", "Core", "Etherbots", "Promo", "Mythic", "Trial", "Welcome", "Order"), U.defaultFilters = [{
        name: "Ownership",
        options: U.ownershipOptions
    }, {name: "Quality", options: U.qualityOptions}, {name: "Rarity", options: U.rarityOptions}, {
        name: "Tribe",
        options: U.tribeOptions
    }, {name: "Mana", options: U.manaOptions}, {name: "God", options: U.godOptions}, {
        name: "Set",
        options: U.setOptions
    }], U.\u0275fac = function (W) {
        return new (W || U)(C.LFG(Xe.d))
    }, U.\u0275prov = C.Yz7({token: U, factory: U.\u0275fac, providedIn: "root"});
    var te = o(72986), ie = o(43834);
    let $e = (() => {
        class z {
            constructor(d, f) {
                this.gameApi = d, this.authService = f, this.unsubscribe = new ee.xQ, this.dataStore = {fluxInfo: null}, this._fluxInfo$ = new H.X(null)
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            get fluxInfo$() {
                return this._fluxInfo$.asObservable()
            }

            fetchFluxInfo() {
                const d = this.authService.getUserId();
                d ? this.gameApi.get(`/user/${d}/flux`).pipe((0, te.q)(1)).subscribe(f => {
                    this.emitFluxInfo(f)
                }, f => {
                    this.emitFluxInfo()
                }) : this.emitFluxInfo()
            }

            emitFluxInfo(d = {flux_available: 0, flux_spent: 0, locked: !1}) {
                this.dataStore.fluxInfo = d, this._fluxInfo$.next(Object.assign({}, this.dataStore.fluxInfo))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(ie.F), C.LFG($.mI))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })(), dt = (() => {
        class z {
            constructor(d, f) {
                this.moduleConfigService = d, this.http = f, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
            }

            getFusingRequest(d) {
                return this.moduleConfig$.pipe((0, Ce.w)(({fusingHost: f}) => this.http.get(`${f}/forge`, {params: {request_id: d}})))
            }

            getFusingLatestsRequests(d) {
                return this.moduleConfig$.pipe((0, Ce.w)(({fusingHost: f}) => this.http.get(`${f}/forge/latest`, {params: {user_id: d}})))
            }

            fusingValidator(d) {
                return this.moduleConfig$.pipe((0, Ce.w)(({fusingHost: f}) => this.http.post(`${f}/forge/validation`, d)))
            }

            fusingInitiator(d) {
                return this.moduleConfig$.pipe((0, Ce.w)(({fusingHost: f}) => this.http.post(`${f}/forge`, d)))
            }

            fusingTokensPaid(d) {
                return this.moduleConfig$.pipe((0, Ce.w)(({fusingHost: f}) => this.http.post(`${f}/forge/paid`, d)))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(je.L), C.LFG(me.eN))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })(), Fe = (() => {
        class z {
            constructor(d, f) {
                this.http = d, this.moduleConfigService = f, this.moduleConfig$ = this.moduleConfigService.loadConfigurations()
            }

            get(d, f) {
                return this.moduleConfig$.pipe((0, Ce.w)(R => this.http.get(`${R.guHost}${d}`, f)))
            }

            put(d, f) {
                return this.moduleConfig$.pipe((0, Ce.w)(R => this.http.put(`${R.guHost}${d}`, f)))
            }

            post(d, f) {
                return this.moduleConfig$.pipe((0, Ce.w)(R => this.http.post(`${R.guHost}${d}`, f)))
            }

            delete(d) {
                return this.moduleConfig$.pipe((0, Ce.w)(f => this.http.delete(`${f.guHost}${d}`)))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(me.eN), C.LFG(je.L))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var bt = o(90868);
    let Ct = (() => {
        class z {
            constructor(d, f, R) {
                this.httpClient = d, this.moduleConfigService = f, this.tokenRefreshService = R
            }

            get(d, f, R) {
                return this.moduleConfigService.loadConfigurations().pipe((0, Ce.w)(ne => this.tokenRefreshService.autoRefreshToken(this.httpClient.get(`${ne.guAuthHost}${d}`, {
                    headers: R,
                    params: f
                }))))
            }

            put(d, f, R, ne) {
                return this.moduleConfigService.loadConfigurations().pipe((0, Ce.w)(we => this.tokenRefreshService.autoRefreshToken(this.httpClient.put(`${we.guAuthHost}${d}`, f, {
                    headers: ne,
                    params: R
                }))))
            }

            post(d, f, R) {
                return this.moduleConfigService.loadConfigurations().pipe((0, Ce.w)(ne => this.tokenRefreshService.autoRefreshToken(this.httpClient.post(`${ne.guAuthHost}${d}`, f, {headers: R}))))
            }

            delete(d) {
                return this.moduleConfigService.loadConfigurations().pipe((0, Ce.w)(f => this.tokenRefreshService.autoRefreshToken(this.httpClient.delete(`${f.guAuthHost}${d}`))))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(me.eN), C.LFG(je.L), C.LFG(bt.$))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })(), Tt = (() => {
        class z {
            constructor(d, f, R) {
                this.http = d, this.dds = f, this.authService = R, this._downloadUrl$ = new H.X(null)
            }

            get downloadUrl$() {
                return this._downloadUrl$.asObservable()
            }

            fetchLauncherURL() {
                return this.fetchLauncherURLAsync().pipe((0, te.q)(1)).subscribe(d => {
                    this.downloadUrl = d, this._downloadUrl$.next(d)
                })
            }

            fetchLauncherURLAsync() {
                const d = this.dds.getDeviceInfo(), f = this.authService.getUserId();
                return "mac" !== d.os.toLowerCase() && "windows" !== d.os.toLowerCase() ? (0, de._)("linux") : this.http.get(`https://util.apollo.gg/launcher?os=${d.os}&user_id=${f}`)
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(me.eN), C.LFG(h.x0), C.LFG($.mI))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    var nt = o(29840), Qe = o(78812);
    let Rt = (() => {
        class z {
            constructor(d) {
                this.authHost = d
            }

            getUserReferralsStatus(d) {
                return this.authHost.get(`/campaign/${d}/referral`)
            }

            getReferralCode(d) {
                return this.authHost.get(`/account/${d}/code/referral`)
            }

            createReferralCode(d) {
                return this.authHost.post(`/account/${d}/code/referral`, {}).pipe((0, Ce.w)(f => this.getReferralCode(d)), (0, _e.K)(f => {
                    if ("already created" === f.error.error) return this.getReferralCode(d)
                }))
            }

            updatePayoutAddress(d, f) {
                return this.authHost.put(`/account/${d}/code/referral`, {referral_payout_address: f})
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(at))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })();
    var Me = o(19444);
    let At = (() => {
        class z {
            constructor(d, f, R) {
                this.environment = d, this.authService = f, this.moduleConfigService = R, this.RETRY_SECONDS = 4e3, this.PING_PONG_INTERVAL_DURATION = 6e3, this.MAX_UNANSWERED_PING_COUNT = 2, this.unsubscribe = new ee.xQ, this.connections = {}, this._connectionEstablished$ = new ee.xQ, this.moduleConfigService.loadConfigurations().subscribe(ne => {
                    this.socketEndpoints = {
                        marketplaceCart: we => `${ne.marketplaceSocketBaseURL}/${we}/socket`,
                        chatAndFriends: we => `${ne.chatAndFriendsSocketBaseUrl}/${we}/chat`,
                        forge: we => `${ne.marketplaceSocketBaseURL}/${we}/socket`
                    }
                })
            }

            get connectionEstablished$() {
                return this._connectionEstablished$.asObservable()
            }

            connect({socketName: d, url: f}) {
                return new Promise((R, ne) => {
                    console.log("SOCKET CONNECTING: ", d), this.connections[d] = this.createConnection(f), this.connectListeners(d, R, ne)
                })
            }

            getOpenedConnection(d) {
                if (this.connections[d] && this.connections[d].isAlive) return this.connections[d]
            }

            ngOnDestroy() {
                this.disconnectAllSockets(), this.unsubscribe.next(), this.unsubscribe.complete()
            }

            onConnect(d, f) {
                console.log("SOCKET CONNECTED:", f), this.connections[f].isAlive = !0, this.checkToStartPingPongInterval(), this.killReconnectTimer(f)
            }

            onClose(d, f) {
                console.log("SOCKET CLOSED:", f, d), this.connections[f].isAlive = !1, d.wasClean || this.reconnectSocket(f)
            }

            onError(d, f) {
                console.log("SOCKET ERRORED:", f, d), this.connections[f].isAlive = !1, console.log("tokenIsExpired: ", this.authService.tokenIsExpired()), this.authService.tokenIsExpired() ? this.authService.refreshToken().pipe((0, te.q)(1)).subscribe(() => this.reconnectSocket(f)) : this.reconnectSocket(f)
            }

            onMessage(d, f) {
                const R = JSON.parse(d.data);
                console.log("socket onMessage!", f, R), "HEARTBEAT_PONG" === R.text ? this.onPongMessage(f, R) : this.connections[f].messages.next(R)
            }

            connectListeners(d, f, R) {
                const ne = this.connections[d];
                ne.eventHandlers.open = we => {
                    this.onConnect(we, d), f && f(ne.messages)
                }, ne.eventHandlers.error = we => {
                    this.onError(we, d), R && R(ne.messages)
                }, ne.eventHandlers.close = we => {
                    this.onClose(we, d)
                }, ne.eventHandlers.message = we => {
                    this.onMessage(we, d)
                }, ne.socket.addEventListener("open", ne.eventHandlers.open), ne.socket.addEventListener("close", ne.eventHandlers.close), ne.socket.addEventListener("error", ne.eventHandlers.error), ne.socket.addEventListener("message", ne.eventHandlers.message)
            }

            disconnectListeners(d) {
                const f = this.connections[d];
                f.socket.removeEventListener("open", f.eventHandlers.open), f.socket.removeEventListener("close", f.eventHandlers.close), f.socket.removeEventListener("error", f.eventHandlers.error), f.socket.removeEventListener("message", f.eventHandlers.message)
            }

            checkToStartPingPongInterval() {
                this.pingPongInterval || (this.pingPongInterval = window.setInterval(() => {
                    console.log("PING PONG INTERVAL FIRING"), Object.keys(this.connections).forEach(d => this.checkPingList(d))
                }, this.PING_PONG_INTERVAL_DURATION))
            }

            killPingPongInterval() {
                clearInterval(this.pingPongInterval), this.pingPongInterval = null
            }

            killReconnectTimer(d) {
                clearTimeout(this.connections[d].reconnectTimer), this.connections[d].reconnectTimer = null
            }

            killAllReconnectTimers() {
                Object.keys(this.connections).forEach(d => this.killReconnectTimer(d))
            }

            checkToKillPingPongInterval() {
                0 === Object.keys(this.connections).length ? this.killPingPongInterval() : Object.keys(this.connections).find(f => this.connections[f].isAlive) || this.killPingPongInterval()
            }

            createConnection(d) {
                const f = "desktop" === this.environment.clientType ? window.bridge.authAccess : this.authService.getAuthToken().access;
                return {
                    url: d,
                    messages: new ee.xQ,
                    socket: new WebSocket(`${d}?token=${f}`),
                    pingList: [],
                    isAlive: !1,
                    reconnectTimer: null,
                    disconnectPromise: null,
                    eventHandlers: {
                        open: () => {
                        }, close: () => {
                        }, error: () => {
                        }, message: () => {
                        }
                    }
                }
            }

            reconnectSocket(d) {
                const f = this.connections[d], R = () => {
                    const ne = this.createConnection(f.url);
                    this.connections[d].isAlive = ne.isAlive, this.connections[d].pingList = ne.pingList, this.connections[d].socket = ne.socket, this.connections[d].url = ne.url, this.connections[d].eventHandlers = ne.eventHandlers, this.connectListeners(d)
                };
                switch (this.killReconnectTimer(d), this.checkToKillPingPongInterval(), f.socket.readyState) {
                    case WebSocket.CONNECTING:
                    case WebSocket.CLOSING:
                        console.log("SKIPPING RECONNECT TIMER:", d, "connection ready state:", f.socket.readyState);
                        break;
                    case WebSocket.OPEN:
                        f.disconnectPromise = this.disconnect({
                            socketName: d,
                            cleanup: !1
                        }), f.reconnectTimer = window.setTimeout(() => {
                            f.disconnectPromise.then(() => {
                                console.log("SOCKET DISCONNECTED, NOW RECONNECTING SOCKET"), R()
                            })
                        }, this.RETRY_SECONDS);
                        break;
                    case WebSocket.CLOSED:
                        f.reconnectTimer = window.setTimeout(() => {
                            R()
                        }, this.RETRY_SECONDS)
                }
            }

            sendMessage(d, f) {
                this.connections[d] && this.connections[d].socket.send(JSON.stringify(f))
            }

            sendPing(d) {
                console.log("SOCKET PING:", d);
                const f = {text: "HEARTBEAT_PING", user_id: this.authService.getUserId(), msg_id: (0, Me.v4)()};
                this.connections[d].pingList.push(f), this.sendMessage(d, f)
            }

            onPongMessage(d, f) {
                console.log("SOCKET PONG:", d);
                const R = this.connections[d], ne = R.pingList.findIndex(we => we.msg_id === f.msg_id);
                -1 !== ne && R.pingList.splice(ne, 1)
            }

            checkPingList(d) {
                this.connections[d].pingList.length >= this.MAX_UNANSWERED_PING_COUNT ? this.reconnectSocket(d) : this.sendPing(d)
            }

            disconnect({socketName: d, cleanup: f = !0}) {
                const R = this.connections[d], ne = () => {
                    R && this.disconnectListeners(d), f && delete this.connections[d]
                };
                return new Promise(we => {
                    if (!R) return this.checkToKillPingPongInterval(), ne(), we();
                    this.killReconnectTimer(d), R.isAlive ? (R.socket.addEventListener("close", () => {
                        ne(), this.checkToKillPingPongInterval(), we()
                    }), R.socket.close()) : (console.log("SOCKET IS IN A TRANSITION STATE, BUT TRY AND CLOSE ANYWAY"), R.socket && R.socket.close(), ne(), we())
                })
            }

            disconnectAllSockets() {
                return this.killAllReconnectTimers(), Promise.all(Object.keys(this.connections).map(d => this.disconnect({socketName: d})))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG($.Ho), C.LFG($.mI), C.LFG(je.L))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac, providedIn: "root"}), z
    })();
    var q = o(2994);
    let re = (() => {
        class z {
            constructor(d, f, R, ne) {
                this.gameApiService = d, this.authService = f, this.cardsService = R, this.environment = ne, this.storeItems = [], this.dataStore = {userStarsTotal: 0}, this._userStarTotal$ = new H.X(0), console.log("@cerberus/StarService constructor")
            }

            get userStarTotal$() {
                return this._userStarTotal$.asObservable()
            }

            fetchUserStarsRewards(d) {
                return this.gameApiService.get(`/game/${d}/rewards/${this.authService.getUserId()}`)
            }

            fetchUserStarsTotal() {
                const d = this.authService.getUserId();
                !d || this.gameApiService.get(`/user/${d}/stars`).pipe((0, te.q)(1)).subscribe(f => {
                    this.dataStore.userStarsTotal = f, this._userStarTotal$.next(this.dataStore.userStarsTotal)
                }, f => {
                    this.dataStore.userStarsTotal = 0, this._userStarTotal$.next(this.dataStore.userStarsTotal)
                })
            }

            purchaseItem$(d, f, R = !0) {
                return this.authService.fetchSession().pipe((0, te.q)(1), (0, We.VS)(ne => this.gameApiService.post(`/user/${this.authService.getUserId()}/shop?session=${ne}`, {asset_group: d})), (0, _e.K)(ne => 401 === ne.status && R ? this.authService.refreshToken().pipe((0, We.VS)(we => this.purchaseItem$(d, f, !1))) : (0, i.of)(ne)), (0, q.b)(ne => {
                    (!ne || !ne.error) && this.handlePurchaseSuccess()
                }))
            }

            handlePurchaseSuccess() {
                this.fetchUserStarsTotal(), "desktop" === this.environment.clientType && this.cardsService.fetchInventory()
            }

            addEpochTimestamp(d) {
                return Object.assign(Object.assign({}, d), {
                    start_timestamp_epoch: new Date(d.start_timestamp).getTime(),
                    end_timestamp_epoch: new Date(d.end_timestamp).getTime()
                })
            }

            getScreenOrder(d) {
                const R = this.storeItems.filter(ne => this.isCurrentItem(ne)).indexOf(d);
                return Object.assign(Object.assign({}, d), {screen_order: R})
            }

            isCurrentItem(d) {
                const f = (new Date).getTime();
                return d.end_timestamp_epoch > f && d.start_timestamp_epoch < f
            }

            fetchStarStoreItems$() {
                return this.gameApiService.get(`/user/${this.authService.getUserId()}/shop`).pipe((0, te.q)(1), (0, pe.U)(d => d.map(f => this.addEpochTimestamp(f))), (0, q.b)(d => this.storeItems = d))
            }
        }

        return z.\u0275fac = function (d) {
            return new (d || z)(C.LFG(ie.F), C.LFG($.mI), C.LFG(Xe.d), C.LFG($.Ho))
        }, z.\u0275prov = C.Yz7({token: z, factory: z.\u0275fac}), z
    })();
    const xe = (z, W) => () => Promise.all([z.loadConfigurations().toPromise(), W.waitUntilReady()]);
    let Ge = (() => {
        class z {
        }

        return z.\u0275fac = function (d) {
            return new (d || z)
        }, z.\u0275mod = C.oAB({type: z}), z.\u0275inj = C.cJS({
            providers: [je.L, {
                provide: $.Hd,
                deps: [$.Ho],
                useFactory: W => (0, O.j2)(W.launchDarklyKey, {anonymous: !0, key: "anonymous"})
            }, {
                provide: C.ip1,
                useFactory: xe,
                multi: !0,
                deps: [je.L, $.Hd]
            }, ce, Le, at, ke.a, $e, dt, Se, Fe, Ct, Tt, ue, nt._, At, re, bt.$, Z], imports: [[k.ez]]
        }), z
    })()
}, 69439
:
(se, B, o) => {
    "use strict";
    o.d(B, {d: () => C});
    var c = o(8929), i = o(591), y = o(36053), e = o(7625), _ = o(92198), p = o(75613), g = o(24850), r = o(87545),
        t = o(72986), n = o(2994), v = o(27221), P = o(73307), w = o(52886), L = o(1025), T = o(5e3), b = o(43834),
        O = o(29840), k = o(90868);
    let C = (() => {
        class ${constructor(h,x,I,Y,ae,ce){this.environment=h,this.authService=x,this.gameApiService=I,this.marketplaceApiService=Y,this.tokenRefreshService=ae,this.featureFlagsService=ce,this.unsubscribe=new c.xQ,this.dataStore={protoCards:new Map,inventory:{}
    ,
        inventoryCards:[], qualityCounts
    :
        new Map, newInventoryCardCount
    :
        0
    }, this._protoCards = new i.X(new Map), this._inventory = new i.X({}), this._qualityCounts = new i.X(new Map), this._inventoryCards = new i.X([]), this._newInventoryCardCount = new i.X(0), this.watchForLogout()
}
watchForLogout()
{
    "desktop" === this.environment.clientType && this.authService.account$.pipe((0, e.R)(this.unsubscribe), (0, _.h)(h => null === h)).subscribe(h => {
        this.dataStore.inventory = {}, this._inventory.next(Object.assign({}, this.dataStore).inventory), this.dataStore.qualityCounts = new Map, this._qualityCounts.next(Object.assign({}, this.dataStore).qualityCounts), this.dataStore.inventoryCards = [], this._inventoryCards.next(Object.assign({}, this.dataStore).inventoryCards), this.dataStore.newInventoryCardCount = 0, this._newInventoryCardCount.next(Object.assign({}, this.dataStore).newInventoryCardCount)
    })
}
get
protoCards$()
{
    return this._protoCards.asObservable()
}
get
inventory$()
{
    return this._inventory.asObservable()
}
get
qualityCounts$()
{
    return this._qualityCounts.asObservable()
}
get
inventoryCards$()
{
    return this._inventoryCards.asObservable()
}
get
newInventoryCardCount$()
{
    return this._newInventoryCardCount.asObservable()
}
getProtoCard(h)
{
    return this.protoCards$.pipe((0, p.sE)(x => x.has(h)), (0, g.U)(x => x.get(h)))
}
fetchProtoCardsApi()
{
    const h = this.authService.getUserId();
    return this.authService.fetchSession().pipe((0, r.w)(x => this.gameApiService.get(`/user/${h || 1}/proto?format=flat${x ? `&session=${x}` : ""}`)), (0, t.q)(1), (0, g.U)(x => this.dictionaryToMap(x)), (0, g.U)(x => (x.forEach((I, Y) => {
        I.proto = Y
    }), x)))
}
getProtoCards$()
{
    return this.tokenRefreshService.autoRefreshToken(this.fetchProtoCardsApi())
}
fetchProtoCards()
{
    this.getProtoCards$().subscribe(h => {
        this.handleProtoCardsSuccess(h)
    })
}
handleProtoCardsSuccess(h)
{
    this.dataStore.protoCards = h, this._protoCards.next(Object.assign({}, this.dataStore).protoCards)
}
fetchInventory()
{
    const h = this.authService.getUserId();
    return this.fetchInventoryCardsMap(h).pipe((0, t.q)(1), (0, n.b)(x => {
        this.dataStore.inventory = x, this._inventory.next(Object.assign({}, this.dataStore).inventory)
    })).subscribe()
}
addCardsToInventory(h)
{
    let x = 0;
    Object.entries(h).forEach(([I, Y]) => {
        if (this.dataStore.inventory[I]) {
            const ae = Y.filter(ce => !this.dataStore.inventory[I].some(me => me.id === ce.id));
            this.dataStore.inventory[I] = [...this.dataStore.inventory[I], ...ae], x += ae.length
        } else this.dataStore.inventory[I] = Y, x += Y.length
    }), this._inventory.next(Object.assign({}, this.dataStore.inventory)), this.dataStore.newInventoryCardCount = x, this._newInventoryCardCount.next(x)
}
fetchQualityCount()
{
    return this.gameApiService.get("/quality_count").pipe((0, t.q)(1), (0, n.b)(h => {
        this.dataStore.qualityCounts = this.dictionaryToMap(h), this._qualityCounts.next(Object.assign({}, this.dataStore).qualityCounts)
    }), (0, v.K)(h => h)).subscribe()
}
loadInventoryCards()
{
    return (0, y.aj)([this.protoCards$, this.inventory$]).pipe((0, n.b)(([h, x]) => {
        this.dataStore.inventoryCards = this.convertToCards(h, x), this._inventoryCards.next(Object.assign({}, this.dataStore).inventoryCards)
    }))
}
convertToCards(h, x)
{
    const I = [];
    return h.forEach((Y, ae) => {
        if (x[ae]) for (const ce of x[ae]) {
            const me = new w.Zb(ce.id, ae, ce.q, Y, ce.status);
            I.push(me)
        }
    }), I
}
forgeUpdate(h, x, I)
{
    this.forgeRemoveIds(h, x), this._inventory.next(Object.assign({}, this.dataStore.inventory)), this.dataStore.newInventoryCardCount = 1, this._newInventoryCardCount.next(1)
}
forgeRemoveIds(h, x)
{
    this.dataStore.inventory[x] = this.dataStore.inventory[x].filter(I => !h.some(Y => I.id === Y))
}
setNewInventoryCardCount(h)
{
    this.dataStore.newInventoryCardCount = h, this._newInventoryCardCount.next(h)
}
dictionaryToMap(h)
{
    return Object.entries(h).map(([x, I]) => ({key: x, val: I})).reduce((x, I) => x.set(Number(I.key), I.val), new Map)
}
fetchInventoryCardsMapV2(h, x)
{
    const I = x ? `&owner=${x}` : "";
    return this.marketplaceApiService.get(`/v2/asset?type=card${I}${I ? "" : `&user_id=${h}`}`)
}
inventoryCardsMapV2ToV1(h)
{
    const x = {};
    return Object.entries(h.protos).forEach(([I, Y]) => {
        const ae = Y.assets.map(ce => ({id: ce.id, q: ce.properties.quality, status: ce.minting_status}));
        x[I] = ae
    }), x
}
fetchInventoryCardsMap(h)
{
    return this.gameApiService.get(`/user/${h}/card?caller=${"desktop" === this.environment.clientType ? "client" : "website"}`)
}
checkToRefreshInventory()
{
    this.featureFlagsService.get(L.v.refetchInventoryEnabled).pipe((0, t.q)(1)).subscribe(h => {
        h && this.fetchInventory()
    })
}
}
return $.\u0275fac = function (h) {
    return new (h || $)(T.LFG(P.Ho), T.LFG(P.mI), T.LFG(b.F), T.LFG(O._), T.LFG(k.$), T.LFG(L.a))
}, $.\u0275prov = T.Yz7({token: $, factory: $.\u0275fac, providedIn: "root"}), $
})
()
},
1025
:
(se, B, o) => {
    "use strict";
    o.d(B, {v: () => g, a: () => t});
    var c = o(36053), i = o(21086), y = o(591), e = o(87545), _ = o(73307), p = o(5e3), g = (() => {
        return (n = g || (g = {})).buyPagePaused = "buy-page-paused", n.claimAirdropButtonEnabled = "temp-claim-airdrop-button-enabled", n.claimAirdropEnabled = "temp-claim-airdrop-enabled", n.claimFluxEnabled = "temp-claim-flux-enabled", n.coinbasePaused = "temp-coinbase-paused", n.controllableBannerData = "controllable-banner-data", n.deckCodesEnabled = "temp-deck-codes-enabled", n.defaultWalletEnabled = "temp-default-wallet-enabled", n.forgeEnabled = "temp-forge-enabled", n.fusingNextStepEnabled = "temp-fusing-next-step-enabled", n.godsTokenBlocked = "gods-token-blocked", n.outageBannerEnabled = "temp-outage-banner-enabled", n.rankedWeekendCancelledBannerEnabled = "temp-ranked-weekend-cancelled-banner-enabled", n.referralsEnabled = "temp-referrals-enabled", n.refetchInventoryEnabled = "refetch-inventory-enabled", n.showControllableBanner = "show-controllable-banner", n.spgpEnabled = "temp-spgp-enabled", n.spgpPaused = "temp-spgp-paused", n.stakingEnabled = "temp-staking-enabled", n.tokenEnabled = "temp-token-enabled", n.x2BuyPageEnabled = "temp-x-2-buy-page-enabled", n.noWalletWarningRankedGame = "temp-no-wallet-warning-ranked-game", n.playToEarnEnabled = "temp-play-to-earn-enabled", n.buyPageRevampEnabled = "buy-page-revamp-enabled", n.weekendRankedEnabled = "temp-weekend-ranked-claim-enabled", n.imxIframeModalEnabled = "imx-iframe-modal-enabled", n.newDeckServiceEnabled = "temp-new-deck-service-enabled", g;
        var n
    })();
    const r = Object.seal({
        [g.buyPagePaused]: !1,
        [g.claimAirdropButtonEnabled]: !1,
        [g.claimAirdropEnabled]: !1,
        [g.claimFluxEnabled]: !1,
        [g.coinbasePaused]: !1,
        [g.controllableBannerData]: {},
        [g.deckCodesEnabled]: !1,
        [g.defaultWalletEnabled]: !1,
        [g.fusingNextStepEnabled]: !1,
        [g.godsTokenBlocked]: !0,
        [g.outageBannerEnabled]: !1,
        [g.rankedWeekendCancelledBannerEnabled]: !1,
        [g.referralsEnabled]: !1,
        [g.refetchInventoryEnabled]: !1,
        [g.showControllableBanner]: !1,
        [g.spgpEnabled]: !1,
        [g.spgpPaused]: !1,
        [g.stakingEnabled]: !1,
        [g.tokenEnabled]: !1,
        [g.x2BuyPageEnabled]: !1,
        [g.noWalletWarningRankedGame]: !1,
        [g.playToEarnEnabled]: !1,
        [g.buyPageRevampEnabled]: !1,
        [g.weekendRankedEnabled]: !1,
        [g.imxIframeModalEnabled]: !1,
        [g.newDeckServiceEnabled]: !1
    });
    let t = (() => {
        class n {
            constructor(P, w) {
                this.ldClient = P, this.environment = w, this.flags = {}, this.flagChange = {}, this.flags = Object.assign({}, r), this.ldClient.on("change", L => {
                    for (const T in L) this.set(T, L[T].current)
                }), this.ldClient.waitUntilReady().then(() => {
                    const L = this.ldClient.allFlags();
                    for (const T in L) this.set(T, L[T])
                })
            }

            getMany(P) {
                const w = [];
                return P.forEach(L => {
                    w.push(this.get(L))
                }), (0, c.aj)(w).pipe((0, e.w)(L => {
                    const T = {};
                    return P.forEach((b, O) => {
                        T[b] = L[O]
                    }), (0, i.of)(T)
                }))
            }

            get(P) {
                return this.flagChange[P] = this.flagChange[P] || new y.X(this.flags[P]), this.flagChange[P].asObservable()
            }

            setContext(P) {
                this.ldClient.identify({
                    key: !0 === P.anonymous ? "anonymous" : P.userID,
                    email: P.email,
                    name: P.name,
                    anonymous: P.anonymous,
                    country: P.country,
                    custom: {clientType: this.environment.clientType}
                })
            }

            set(P, w) {
                this.flags[P] = w, this.flagChange[P] && this.flagChange[P].next(w)
            }
        }

        return n.\u0275fac = function (P) {
            return new (P || n)(p.LFG(_.Hd), p.LFG(_.Ho))
        }, n.\u0275prov = p.Yz7({token: n, factory: n.\u0275fac}), n
    })()
}, 43834
:
(se, B, o) => {
    "use strict";
    o.d(B, {F: () => r});
    var c = o(8929), i = o(24850), y = o(7625), e = o(87545), _ = o(5e3), p = o(40520), g = o(77535);
    let r = (() => {
        class t {
            constructor(v, P) {
                this.http = v, this.moduleConfigService = P, this.destroyed$ = new c.xQ, this.gameEndpoint$ = this.moduleConfigService.loadConfigurations().pipe((0, i.U)(w => w.legacyGameHost), (0, y.R)(this.destroyed$))
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            get(v, P) {
                return this.gameEndpoint$.pipe((0, e.w)(w => this.http.get(w + v, P)))
            }

            put(v, P) {
                return this.gameEndpoint$.pipe((0, e.w)(w => this.http.put(w + v, P)))
            }

            post(v, P) {
                return this.gameEndpoint$.pipe((0, e.w)(w => this.http.post(w + v, P)))
            }

            delete(v) {
                return this.gameEndpoint$.pipe((0, e.w)(P => this.http.delete(P + v)))
            }
        }

        return t.\u0275fac = function (v) {
            return new (v || t)(_.LFG(p.eN), _.LFG(g.L))
        }, t.\u0275prov = _.Yz7({token: t, factory: t.\u0275fac, providedIn: "root"}), t
    })()
}, 29840
:
(se, B, o) => {
    "use strict";
    o.d(B, {_: () => r});
    var c = o(8929), i = o(24850), y = o(7625), e = o(87545), _ = o(5e3), p = o(40520), g = o(77535);
    let r = (() => {
        class t {
            constructor(v, P) {
                this.http = v, this.moduleConfigService = P, this.destroyed$ = new c.xQ, this.marketplaceEndpoint$ = this.moduleConfigService.loadConfigurations().pipe((0, i.U)(w => w.legacyMarketplaceHost), (0, y.R)(this.destroyed$))
            }

            ngOnDestroy() {
                this.destroyed$.next(), this.destroyed$.complete()
            }

            get(v, P) {
                return this.marketplaceEndpoint$.pipe((0, e.w)(w => this.http.get(`${w}${v}`, P)))
            }

            put(v, P) {
                return this.marketplaceEndpoint$.pipe((0, e.w)(w => this.http.put(`${w}${v}`, P)))
            }

            post(v, P) {
                return this.marketplaceEndpoint$.pipe((0, e.w)(w => this.http.post(`${w}${v}`, P)))
            }

            delete(v) {
                return this.marketplaceEndpoint$.pipe((0, e.w)(P => this.http.delete(`${P}${v}`)))
            }
        }

        return t.\u0275fac = function (v) {
            return new (v || t)(_.LFG(p.eN), _.LFG(g.L))
        }, t.\u0275prov = _.Yz7({token: t, factory: t.\u0275fac}), t
    })()
}, 77535
:
(se, B, o) => {
    "use strict";
    o.d(B, {L: () => p});
    var c = o(2994), i = o(5154), y = o(73307), e = o(5e3), _ = o(40520);
    let p = (() => {
        class g {
            constructor(t, n, v) {
                this.http = t, this.environment = n, this.storageService = v, this.configURL = this.environment.appConfig, "desktop" === this.environment.clientType && this.useDevApis() && (this.configURL = this.environment.appConfigDev)
            }

            useDevApis() {
                const t = this.storageService.get(["game", "1", "branch"]), n = RegExp(/beta/);
                return t && !n.test(t)
            }

            loadConfigurations() {
                return this.configuration$ || (this.configuration$ = this.http.get(`${this.configURL}`, {headers: {"cache-control": ["no-cache", "no-store"]}}).pipe((0, c.b)(t => this.configData = t), (0, i.d)(1))), this.configuration$
            }

            getConfig() {
                return this.configData ? this.configData : null
            }
        }

        return g.\u0275fac = function (t) {
            return new (t || g)(e.LFG(_.eN), e.LFG(y.Ho), e.LFG(y.qy))
        }, g.\u0275prov = e.Yz7({token: g, factory: g.\u0275fac}), g
    })()
}, 78812
:
(se, B, o) => {
    "use strict";
    o.d(B, {f: () => _});
    var c = o(8929), i = o(591), y = o(49219), e = o(5e3);
    let _ = (() => {
        class p {
            constructor() {
                this.dataStore = {
                    navigationItems: null,
                    userMenuItems: null,
                    userEthAccount: null,
                    activeHeaderAlertBar: null,
                    headerAreaHeight: y.standardHeaderHeight
                }, this.unsubscribe = new c.xQ, this._navigationItems$ = new i.X(null), this._userMenuItems$ = new i.X(null), this._activeHeaderAlertBar$ = new i.X(null)
            }

            get navigationItems$() {
                return this._navigationItems$.asObservable()
            }

            get userMenuItems$() {
                return this._userMenuItems$.asObservable()
            }

            get activeHeaderAlertBar$() {
                return this._activeHeaderAlertBar$.asObservable()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            storeNavigationItems(r) {
                this.dataStore.navigationItems = r, this.emitNavItems(this.dataStore.navigationItems)
            }

            storeUserMenuItems(r) {
                this.dataStore.userMenuItems = r, this.emitUserMenuItems(this.dataStore.userMenuItems)
            }

            emitNavItems(r) {
                this._navigationItems$.next(Object.assign({}, r))
            }

            emitUserMenuItems(r) {
                this._userMenuItems$.next(Object.assign({}, r))
            }

            toggleNotifyCollections(r) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.collections.showNotificationBubble = !!r, this.emitNavItems(t)
            }

            toggleNotifyOpenPacks(r) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.openPacks.showNotificationBubble = !!r, this.emitNavItems(t)
            }

            toggleNotifyMarketSell(r) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.market.children.sell.showNotificationBubble = !!r, this.emitNavItems(t)
            }

            toggleNotifyMarketBuy(r) {
                const t = Object.assign({}, this.dataStore.navigationItems);
                t.market.children.buy.showNotificationBubble = !!r, this.emitNavItems(t)
            }

            connectedWalletState() {
                const r = this.dataStore.userMenuItems;
                r.connectWallet.visible = !1, r.disconnectWallet.visible = !0, this.emitUserMenuItems(r)
            }

            disconnectedWalletState() {
                const r = this.dataStore.userMenuItems;
                r.connectWallet.visible = !0, r.disconnectWallet.visible = !1, this.emitUserMenuItems(r)
            }
        }

        return p.\u0275fac = function (r) {
            return new (r || p)
        }, p.\u0275prov = e.Yz7({token: p, factory: p.\u0275fac, providedIn: "root"}), p
    })()
}, 90868
:
(se, B, o) => {
    "use strict";
    o.d(B, {$: () => g});
    var c = o(73307), i = o(61737), y = o(27221), e = o(72986), _ = o(61709), p = o(5e3);
    let g = (() => {
        class r {
            constructor(n) {
                this.authService = n
            }

            autoRefreshToken(n, v = 1) {
                return n.pipe((0, y.K)(P => 401 === P.status && v > 0 ? this.authService.refreshToken().pipe((0, e.q)(1), (0, _.zg)(() => this.autoRefreshToken(n, v - 1))) : (0, i._)(P)))
            }
        }

        return r.\u0275fac = function (n) {
            return new (n || r)(p.LFG(c.mI))
        }, r.\u0275prov = p.Yz7({token: r, factory: r.\u0275fac}), r
    })()
}, 77518
:
(se, B, o) => {
    "use strict";
    o.d(B, {np: () => p, Og: () => e, oS: () => _, PW: () => y});
    const y = ["diamond", "gold", "shadow", "meteorite", "plain"];
    var e = (() => {
        return (g = e || (e = {})).INITIATED = "initiated", g.FLUX_PAID = "flux_paid", g.CARDS_DELETED = "cards_deleted", g.TOKENS_PAID = "tokens_paid", g.VALIDATING_PAYMENT = "validating_payment", g.COMPLETED = "completed", e;
        var g
    })();
    const _ = {
        [e.INITIATED]: "Pending",
        [e.FLUX_PAID]: "Pending",
        [e.CARDS_DELETED]: "Pending",
        [e.TOKENS_PAID]: "Pending",
        [e.VALIDATING_PAYMENT]: "Validating",
        [e.COMPLETED]: "completed"
    };
    var p = (() => {
        return (g = p || (p = {})).Development = "development", g.Staging = "staging", g.Production = "production", p;
        var g
    })()
}, 98590
:
(se, B, o) => {
    "use strict";
    o.d(B, {I: () => r});
    var c = o(67876), i = o(5e3), y = o(28510), e = o(69808), _ = o(87745);

    function p(t, n) {
        if (1 & t && (i.TgZ(0, "gu-vertical-space", 7), i._UZ(1, "gu-icon", 8), i.qZA()), 2 & t) {
            const v = i.oxw();
            i.xp6(1), i.Q6J("fillColor", v.iconFillColor)("iconLigature", v.iconLigature)
        }
    }

    function g(t, n) {
        if (1 & t) {
            const v = i.EpF();
            i.ynx(0), i.TgZ(1, "gu-secondary-hex-button", 9), i.NdJ("click", function () {
                return i.CHM(v), i.oxw().ctaClick()
            }), i.qZA(), i.BQk()
        }
        if (2 & t) {
            const v = i.oxw();
            i.xp6(1), i.Q6J("text", v.ctaText)
        }
    }

    let r = (() => {
        class t {
            constructor(v) {
                this.activeModal = v, this.onCtaClick = c.Z
            }

            ctaClick() {
                this.onCtaClick(), this.activeModal.close()
            }
        }

        return t.\u0275fac = function (v) {
            return new (v || t)(i.Y36(y.mX))
        }, t.\u0275cmp = i.Xpm({
            type: t,
            selectors: [["cerberus-alert-modal"]],
            inputs: {
                title: "title",
                text: "text",
                iconLigature: "iconLigature",
                iconFillColor: "iconFillColor",
                ctaText: "ctaText",
                onCtaClick: "onCtaClick"
            },
            decls: 10,
            vars: 7,
            consts: [["goldBorder", "top"], ["top", "4x-large", 4, "ngIf"], ["top", "large"], ["align", "center", "kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100", 1, "heading"], ["align", "center", "kind", "large", "fillColor", "colors.light.100", 1, "text", 3, "innerHTML"], ["top", "2x-large", "bottom", "4x-large"], [4, "ngIf"], ["top", "4x-large"], [1, "alertIcon", 3, "fillColor", "iconLigature"], ["size", "large", 1, "cta", 3, "text", "click"]],
            template: function (v, P) {
                1 & v && (i._UZ(0, "gu-modal-background", 0), i.YNc(1, p, 2, 2, "gu-vertical-space", 1), i.TgZ(2, "gu-vertical-space", 2)(3, "gu-paragraph-text", 3), i._uU(4), i.qZA()(), i.TgZ(5, "gu-vertical-space", 2), i._UZ(6, "gu-paragraph-text", 4), i.ALo(7, "safe"), i.qZA(), i.TgZ(8, "gu-vertical-space", 5), i.YNc(9, g, 2, 1, "ng-container", 6), i.qZA()), 2 & v && (i.xp6(1), i.Q6J("ngIf", P.iconLigature), i.xp6(3), i.hij(" ", P.title, " "), i.xp6(2), i.Q6J("innerHTML", i.xi3(7, 4, P.text, "html"), i.oJD), i.xp6(3), i.Q6J("ngIf", P.ctaText))
            },
            directives: [e.O5],
            pipes: [_.y],
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:640px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.alertIcon[_ngcontent-%COMP%]{font-size:80px}.heading[_ngcontent-%COMP%]{text-transform:uppercase}.text[_ngcontent-%COMP%]{user-select:text}"]
        }), t
    })()
}, 53161
:
(se, B, o) => {
    "use strict";
    o.d(B, {j: () => i});
    var c = o(5e3);
    let i = (() => {
        class y {
        }

        return y.\u0275fac = function (_) {
            return new (_ || y)
        }, y.\u0275mod = c.oAB({type: y}), y.\u0275inj = c.cJS({}), y
    })()
}, 39765
:
(se, B, o) => {
    "use strict";
    o.d(B, {w: () => p});
    var c = o(8929), i = o(7625), y = o(24850), e = o(73307), _ = o(5e3);
    let p = (() => {
        class g {
            constructor(t, n, v) {
                this.templateRef = t, this.viewContainer = n, this.featureFlagsService = v, this.unsubscribe = new c.xQ
            }

            set featureFlagIf(t) {
                this.featureFlagsService.get(t).pipe((0, i.R)(this.unsubscribe), (0, y.U)(n => !!n)).subscribe(n => {
                    n ? this.viewContainer.createEmbeddedView(this.templateRef) : this.viewContainer.clear()
                })
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }
        }

        return g.\u0275fac = function (t) {
            return new (t || g)(_.Y36(_.Rgc), _.Y36(_.s_b), _.Y36(e.B3))
        }, g.\u0275dir = _.lG2({
            type: g,
            selectors: [["", "featureFlagIf", ""]],
            inputs: {featureFlagIf: "featureFlagIf"}
        }), g
    })()
}, 37371
:
(se, B, o) => {
    "use strict";
    o.d(B, {M: () => C}), o(89534);
    var i = o(70655), y = o(32830), e = o(56418), _ = o(38872), p = o(86041), g = o(80102), r = o(26532), t = o(65281);
    let n = class extends y.oi {
        constructor() {
            super(...arguments), this.type = "none", this.promise = new Promise(s => {
                this.finished = s
            })
        }

        static get styles() {
            return y.iv`
      :host {
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        box-shadow: 0px 2px 16px rgba(0, 0, 0, 0.5);
      }

      .modal-dialog__panel {
        min-height: 240px;
        height: 100%;
        width: 520px;
        background: ${(0, r.asCssProp)(t.gradients.gunmetal.mirror("left"))};
        border: 2px solid ${(0, r.asCssProp)(t.colors.gunmetal[500])};
        display: flex;
        flex-direction: column;
        place-content: stretch center;
        place-items: center;
        padding: 40px;
        box-sizing: border-box;
      }

      ${(0, r.asCssProp)((0, r.fadeReveal)(":host .modal-dialog__panel", ":host(.open) .modal-dialog__panel", "100%", .3, 16))}

      .modal-dialog__border {
        height: 4px;
        display: block;
        position: absolute;
        width: calc(100% + 4px);
        left: ${(0, r.asCssProp)((0, g.gridUnits)(-.5))};
        top: ${(0, r.asCssProp)((0, g.gridUnits)(-.5))};
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        background: ${(0, r.asCssProp)(t.gradients.gold.mirror("right"))};
      }

      .modal-dialog__border--type-info {
        background: ${(0, r.asCssProp)(t.gradients.gold.mirror("right"))};
      }

      .modal-dialog__border--type-error {
        background: linear-gradient(270deg, #d73333 0%, #ff8b01 50%, #d73333 100%);
      }

      .modal-dialog__border--type-success {
        background: ${(0, r.asCssProp)(t.gradients.apocyan.mirror("right"))};
      }

      .modal-dialog__icon {
        position: absolute;
        left: 50%;
        top: 0;
        color: white;
        width: 72px;
        height: 64px;
        transform: translate(-50%, -50%);
      }
    `
        }

        notifyState(s) {
            const h = {modal: this, closed: this.promise};
            "modalOpened" === s && (h.close = () => this.close()), this.dispatchEvent(new CustomEvent(s, {
                detail: h,
                bubbles: !0,
                composed: !1
            }))
        }

        close() {
            return requestAnimationFrame(() => requestAnimationFrame(() => {
                this.panel.addEventListener("transitionend", () => {
                    this.notifyState("modalClosed"), this.finished()
                }), this.classList.remove("open")
            })), this.promise
        }

        firstUpdated(s) {
            super.firstUpdated(s), this.notifyState("modalOpened"), requestAnimationFrame(() => requestAnimationFrame(() => this.classList.add("open")))
        }

        renderIcon() {
            const s = {
                info: y.YP`<path d="M53.4917 55.817C52.4717 55.613 51.8087 55.4218 51.5027 55.2433C51.0947 55.0138 50.8907 54.797 50.8907 54.593V39.5H49.125H46.875C46.875 39.5 44.316 39.4235 43.5 39.5L43.4702 41.3203C44.3117 41.4478 44.8217 41.5498 45.0002 41.6263C45.3317 41.6518 45.6122 41.8175 45.8417 42.1235C45.9692 42.3275 46.033 42.6462 46.033 43.0798V54.593C46.033 54.848 45.829 55.0648 45.421 55.2433C44.9365 55.4473 44.2862 55.6385 43.4702 55.817V57.5H53.4917V55.817ZM51.235 32.408C51.235 32.051 51.184 31.7578 51.082 31.5283C50.98 31.2988 50.776 31.082 50.47 30.878C50.2405 30.725 49.96 30.6103 49.6285 30.5337C49.297 30.4573 48.94 30.4063 48.5575 30.3807C48.0475 30.3552 47.6267 30.4062 47.2952 30.5337C47.0147 30.6357 46.6705 30.8398 46.2625 31.1458C45.9055 31.5028 45.6887 31.7833 45.6122 31.9872C45.4847 32.3442 45.3955 32.714 45.3445 33.0965C45.319 33.4025 45.3955 33.7085 45.574 34.0145C45.7015 34.244 45.9055 34.4608 46.186 34.6648C46.4665 34.8688 46.7597 34.9963 47.0657 35.0473C47.4737 35.1237 47.8052 35.1492 48.0602 35.1237C48.5192 35.1237 48.9272 35.06 49.2842 34.9325C49.6667 34.805 50.011 34.6265 50.317 34.397C50.6485 34.142 50.8907 33.8615 51.0437 33.5555C51.1712 33.275 51.235 32.8925 51.235 32.408Z" fill="#EBC98B"></path>`,
                error: y.YP`<path fill-rule="evenodd" clip-rule="evenodd" d="M46.375 49.4999L43 31.4999H52L48.625 49.4999H46.375ZM45.1212 57.5037C45.7854 58.1679 46.5783 58.4999 47.5 58.4999C48.4217 58.4999 49.2146 58.1679 49.8788 57.5037C50.5429 56.8395 50.875 56.0466 50.875 55.1249C50.875 54.2032 50.5429 53.4103 49.8788 52.7462C49.2146 52.082 48.4217 51.7499 47.5 51.7499C46.5783 51.7499 45.7854 52.082 45.1212 52.7462C44.4571 53.4103 44.125 54.2032 44.125 55.1249C44.125 56.0466 44.4571 56.8395 45.1212 57.5037Z" fill="#FF8B01"></path>`,
                success: y.YP`<path d="M43.3389 49.5082L37.1517 43.3211L34.5001 45.9727L43.3389 54.8115L59.2488 38.9016L56.5971 36.25L43.3389 49.5082Z" fill="#8BE1E0"></path>`
            };
            return s[this.type] ? y.YP`
      <svg width="95" height="80" viewBox="0 0 95 80" fill="none" xmlns="http://www.w3.org/2000/svg" class="modal-dialog__icon">
        <path d="M47.5 10.7472L82.3727 66H12.6273L47.5 10.7472Z" stroke="url(#${this.type}_gradient)" stroke-width="4" style="stroke-linecap: round; stroke-linejoin: round;" fill="#1D2F41" filter="url(#drop_shadow)"></path>
        ${s[this.type]}
        <defs>
          <filter id="drop_shadow" x="0.624023" y="0.747192" width="93.7518" height="79.2528" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
            <feFlood flood-opacity="0" result="BackgroundImageFix"></feFlood>
            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha"></feColorMatrix>
            <feOffset dy="2"></feOffset>
            <feGaussianBlur stdDeviation="5"></feGaussianBlur>
            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.85 0"></feColorMatrix>
            <feBlend mode="normal" in2="BackgroundImageFix" result="effect1_dropShadow"></feBlend>
            <feBlend mode="normal" in="SourceGraphic" in2="effect1_dropShadow" result="shape"></feBlend>
          </filter>
          <linearGradient id="info_gradient" x1="9" y1="7" x2="9" y2="68" gradientUnits="userSpaceOnUse">
            <stop stop-color="#FFF2D8"></stop>
            <stop offset="0.5034" stop-color="#EBC98B"></stop>
            <stop offset="1" stop-color="#C6A052"></stop>
          </linearGradient>
          <linearGradient id="error_gradient" x1="47.6608" y1="90.0638" x2="47.6617" y2="7.01299" gradientUnits="userSpaceOnUse">
            <stop stop-color="#D73333"></stop>
            <stop offset="1" stop-color="#FF8B01"></stop>
          </linearGradient>
          <linearGradient id="success_gradient" x1="9" y1="7" x2="9" y2="68" gradientUnits="userSpaceOnUse">
            <stop stop-color="#AFFAED"></stop>
            <stop offset="0.5034" stop-color="#8BE1E0"></stop>
            <stop offset="1" stop-color="#54BBCD"></stop>
          </linearGradient>
        </defs>
      </svg>
    ` : y.dy``
        }

        render() {
            return y.dy`
      <div class="modal-dialog__panel" data-test-id="modal-dialog-panel">
        <div class="modal-dialog__border modal-dialog__border--type-${this.type}"></div>
        ${this.renderIcon()}
        <slot></slot>
      </div>
    `
        }
    };
    (0, i.gn)([(0, e.C)()], n.prototype, "type", void 0), (0, i.gn)([(0, _.I)(".modal-dialog__panel")], n.prototype, "panel", void 0), n = (0, i.gn)([(0, p.M)("gu-modal-dialog")], n), o(51256), o(11015);
    var w = o(5e3), L = o(28510), T = o(69808), b = o(87745);

    function O($, s) {
        if (1 & $) {
            const h = w.EpF();
            w.TgZ(0, "gu-hex-button", 8), w.NdJ("click", function () {
                w.CHM(h);
                const I = w.oxw();
                return I.buttonClick(I.secondaryButton)
            }), w._uU(1), w.qZA()
        }
        if (2 & $) {
            const h = w.oxw();
            w.xp6(1), w.hij(" ", h.secondaryButton.text, " ")
        }
    }

    function k($, s) {
        if (1 & $) {
            const h = w.EpF();
            w.TgZ(0, "gu-hex-button", 9), w.NdJ("click", function () {
                w.CHM(h);
                const I = w.oxw();
                return I.buttonClick(I.primaryButton)
            }), w.ALo(1, "safe"), w.qZA()
        }
        if (2 & $) {
            const h = w.oxw();
            w.Q6J("innerHTML", w.xi3(1, 1, h.primaryButton.text, "html"), w.oJD)
        }
    }

    let C = (() => {
        class ${constructor(h){this.activeModal=h}
        buttonClick

        (h)
        {
            h.onClick && "function" == typeof h.onClick && h.onClick(), h.closeOnClick && this.activeModal.close()
        }
    }
    return $.\u0275fac = function (h) {
        return new (h || $)(w.Y36(L.mX))
    }, $.\u0275cmp = w.Xpm({
        type: $,
        selectors: [["cerberus-modal-dialog-control"]],
        inputs: {
            title: "title",
            content: "content",
            type: "type",
            secondaryButton: "secondaryButton",
            primaryButton: "primaryButton"
        },
        decls: 10,
        vars: 8,
        consts: [[3, "type"], [1, "modalDialogContent"], ["data-test-id", "modal-dialog-control-title", "kind", "large", "fontWeight", "bold", "fillColor", "colors.light.100", "align", "center"], ["top", "small", "bottom", "x-large"], ["data-test-id", "modal-dialog-control-content", "fillColor", "colors.light.100", "align", "center", 3, "innerHTML"], [1, "modalDialogContent__buttons"], ["type", "secondary", "size", "large", "data-test-id", "modal-dialog-control-secondary-button", 3, "click", 4, "ngIf"], ["type", "primary", "size", "large", "data-test-id", "modal-dialog-control-primary-button", 3, "innerHTML", "click", 4, "ngIf"], ["type", "secondary", "size", "large", "data-test-id", "modal-dialog-control-secondary-button", 3, "click"], ["type", "primary", "size", "large", "data-test-id", "modal-dialog-control-primary-button", 3, "innerHTML", "click"]],
        template: function (h, x) {
            1 & h && (w.TgZ(0, "gu-modal-dialog", 0)(1, "div", 1)(2, "gu-paragraph-text", 2), w._uU(3), w.qZA(), w.TgZ(4, "gu-vertical-space", 3), w._UZ(5, "gu-paragraph-text", 4), w.ALo(6, "safe"), w.qZA(), w.TgZ(7, "gu-vertical-space", 5), w.YNc(8, O, 2, 1, "gu-hex-button", 6), w.YNc(9, k, 2, 4, "gu-hex-button", 7), w.qZA()()()), 2 & h && (w.Q6J("type", x.type), w.xp6(3), w.Oqu(x.title), w.xp6(2), w.Q6J("innerHTML", w.xi3(6, 5, x.content, "html"), w.oJD), w.xp6(3), w.Q6J("ngIf", x.secondaryButton), w.xp6(1), w.Q6J("ngIf", x.primaryButton))
        },
        directives: [T.O5],
        pipes: [b.y],
        styles: [".modalDialogContent[_ngcontent-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 8px;align-items:center;max-width:100vw}.modalDialogContent[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.modalDialogContent__buttons[_ngcontent-%COMP%]{display:flex;width:100%;justify-content:center}.modalDialogContent__buttons[_ngcontent-%COMP%]   gu-hex-button[_ngcontent-%COMP%]{max-width:50%;flex:1 1 0px}.modalDialogContent__buttons[_ngcontent-%COMP%]   gu-hex-button[_ngcontent-%COMP%]:not(:last-child){margin-right:16px}"]
    }), $
}
)
()
},
87745
:
(se, B, o) => {
    "use strict";
    o.d(B, {y: () => y});
    var c = o(5e3), i = o(22313);
    let y = (() => {
        class e {
            constructor(p) {
                this.sanitizer = p
            }

            transform(p, g) {
                switch (g) {
                    case"html":
                        return this.sanitizer.bypassSecurityTrustHtml(p);
                    case"style":
                        return this.sanitizer.bypassSecurityTrustStyle(p);
                    case"script":
                        return this.sanitizer.bypassSecurityTrustScript(p);
                    case"url":
                        return this.sanitizer.bypassSecurityTrustUrl(p);
                    case"resourceUrl":
                        return this.sanitizer.bypassSecurityTrustResourceUrl(p);
                    default:
                        throw new Error(`Invalid safe type specified: ${g}`)
                }
            }
        }

        return e.\u0275fac = function (p) {
            return new (p || e)(c.Y36(i.H7, 16))
        }, e.\u0275pipe = c.Yjl({name: "safe", type: e, pure: !0}), e
    })()
}, 17268
:
(se, B, o) => {
    "use strict";
    o.d(B, {K: () => _});
    var c = o(5e3), i = o(69808);
    const y = function (p, g, r, t, n) {
        return {
            "tooltipBubble--top": p,
            "tooltipBubble--left": g,
            "tooltipBubble--right": r,
            "tooltipBubble--bottom": t,
            "tooltipBubble--large": n
        }
    }, e = ["*"];
    let _ = (() => {
        class p {
            constructor() {
                this.position = "top", this.size = "small", this.autoClose = !0
            }

            get getClass() {
                return !this.autoClose
            }

            ngOnInit() {
            }
        }

        return p.\u0275fac = function (r) {
            return new (r || p)
        }, p.\u0275cmp = c.Xpm({
            type: p,
            selectors: [["app-tooltip"]],
            hostVars: 2,
            hostBindings: function (r, t) {
                2 & r && c.ekj("openTooltip", t.getClass)
            },
            inputs: {title: "title", position: "position", size: "size", autoClose: "autoClose"},
            ngContentSelectors: e,
            decls: 3,
            vars: 9,
            consts: [["fillColor", "colors.gunmetal.300", 1, "tooltipBubble", 3, "kind", "ngClass", "innerHTML"], ["tooltipBubble", ""]],
            template: function (r, t) {
                1 & r && (c.F$t(), c.Hsn(0), c._UZ(1, "gu-paragraph-text", 0, 1)), 2 & r && (c.xp6(1), c.Q6J("kind", "large" === t.size ? "small" : "x-small")("ngClass", c.qbA(3, y, "top" === t.position, "left" === t.position, "right" === t.position, "bottom" === t.position, "large" === t.size))("innerHTML", t.title, c.oJD))
            },
            directives: [i.mk],
            styles: ['.tooltipBubble[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{display:block;position:relative}[_nghost-%COMP%]:hover   .tooltipBubble[_ngcontent-%COMP%]{opacity:1}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--top[_ngcontent-%COMP%]{transform:translate(-50%,calc(-100% + (calc(var(--vh) * 1.7) * .5)))}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--bottom[_ngcontent-%COMP%]{transform:translate(-50%,calc(100% - (calc(var(--vh) * 1.7) * .5)))}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--left[_ngcontent-%COMP%]{transform:translate(calc(-100% - (calc(var(--vw) * .5) * .5) * .5),-50%)}[_nghost-%COMP%]:hover   .tooltipBubble.tooltipBubble--right[_ngcontent-%COMP%]{transform:translate(calc(0% + (calc(var(--vw) * .5) * .5) * .5),-50%)}.openTooltip[_nghost-%COMP%]   .tooltipBubble[_ngcontent-%COMP%]{opacity:1}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--top[_ngcontent-%COMP%]{transform:translate(-50%,calc(-100% + (calc(var(--vh) * 1.7) * .5)))}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--bottom[_ngcontent-%COMP%]{transform:translate(-50%,calc(100% - (calc(var(--vh) * 1.7) * .5)))}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--left[_ngcontent-%COMP%]{transform:translate(calc(-100% - (calc(var(--vw) * .5) * .5) * .5),-50%)}.openTooltip[_nghost-%COMP%]   .tooltipBubble.tooltipBubble--right[_ngcontent-%COMP%]{transform:translate(calc(0% + (calc(var(--vw) * .5) * .5) * .5),-50%)}.tooltipBubble[_ngcontent-%COMP%]{z-index:1;text-transform:capitalize;padding:calc(var(--vh) * 1.3);padding-top:calc(var(--vh) * .8);padding-bottom:calc(var(--vh) * .8);font-weight:600;user-select:none;pointer-events:none;position:absolute;background:#0f1b27;border:calc(var(--vh) * .15) solid #3d5a74;color:#92abc2;white-space:nowrap;border-radius:calc(var(--vh) * .4);opacity:0;left:50%;text-align:center}.tooltipBubble[_ngcontent-%COMP%]:before{content:"";position:absolute;left:50%;border:calc(var(--vh) * .7) solid transparent;transform:translate(-50%)}.tooltipBubble--large[_ngcontent-%COMP%]{font-weight:400;font-size:16px;padding:16px;text-transform:none}.tooltipBubble--top[_ngcontent-%COMP%]{top:0;transform:translate(-50%,-100%);margin-top:calc(calc(var(--vh) * 1.7) * -1)}.tooltipBubble--top[_ngcontent-%COMP%]:before{border-top-color:#3d5a74;bottom:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15))}.tooltipBubble--bottom[_ngcontent-%COMP%]{bottom:0;transform:translate(-50%,100%);margin-top:calc(var(--vh) * 1.7)}.tooltipBubble--bottom[_ngcontent-%COMP%]:before{border-bottom-color:#3d5a74;top:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15))}.tooltipBubble--left[_ngcontent-%COMP%]{left:0;top:50%}.tooltipBubble--left[_ngcontent-%COMP%]:before{left:100%;transform:translateY(50%);border-left-color:#3d5a74;right:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15));bottom:50%}.tooltipBubble--right[_ngcontent-%COMP%]{margin-left:10px;top:50%}.tooltipBubble--right[_ngcontent-%COMP%]:before{right:100%;transform:translateY(50%);border-right-color:#3d5a74;left:calc(calc(calc(var(--vh) * .7) * -2) - calc(var(--vh) * .15));bottom:50%}']
        }), p
    })()
}, 25774
:
(se, B, o) => {
    "use strict";
    o.d(B, {O: () => p});
    var c = o(73307), i = o(5e3), y = o(69808);

    function e(g, r) {
        if (1 & g) {
            const t = i.EpF();
            i.TgZ(0, "gu-announce-banner-template", 1), i.NdJ("onCloseAnnounceBanner", function () {
                return i.CHM(t), i.oxw().onCloseAnnounceBanner()
            }), i.Hsn(1), i.qZA()
        }
        if (2 & g) {
            const t = i.oxw();
            i.Q6J("closable", t.closable)
        }
    }

    const _ = ["*"];
    let p = (() => {
        class g {
            constructor(t) {
                this.storageService = t, this.closable = !0, this.visible = !1
            }

            ngOnInit() {
                this.visible = this.showBanner(this.id)
            }

            showBanner(t) {
                return !t || !this.storageService.get([this.id])
            }

            markSeen(t) {
                this.storageService.set([t], !0)
            }

            onCloseAnnounceBanner() {
                this.id && this.markSeen(this.id), this.visible = !1
            }
        }

        return g.\u0275fac = function (t) {
            return new (t || g)(i.Y36(c.qy))
        }, g.\u0275cmp = i.Xpm({
            type: g,
            selectors: [["cerberus-announce-banner-control"]],
            inputs: {id: "id", closable: "closable"},
            ngContentSelectors: _,
            decls: 1,
            vars: 1,
            consts: [[3, "closable", "onCloseAnnounceBanner", 4, "ngIf"], [3, "closable", "onCloseAnnounceBanner"]],
            template: function (t, n) {
                1 & t && (i.F$t(), i.YNc(0, e, 2, 1, "gu-announce-banner-template", 0)), 2 & t && i.Q6J("ngIf", n.visible)
            },
            directives: [y.O5],
            styles: ["[_nghost-%COMP%]{position:absolute;width:100%;z-index:21}.announceBannerControl--inline[_nghost-%COMP%]{position:relative}"]
        }), g
    })()
}, 97993
:
(se, B, o) => {
    "use strict";
    o.d(B, {i: () => p});
    var c = o(8929), i = o(7625), y = o(74449), e = o(73307), _ = o(5e3);
    let p = (() => {
        class g {
            constructor(t) {
                this.featureFlagsService = t, this.text = "", this.unsubscribe = new c.xQ
            }

            ngOnInit() {
                this.watchFlagData()
            }

            watchFlagData() {
                this.featureFlagsService.get(y.vU.controllableBannerData).pipe((0, i.R)(this.unsubscribe)).subscribe(t => {
                    this.text = t.text
                })
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }
        }

        return g.\u0275fac = function (t) {
            return new (t || g)(_.Y36(e.B3))
        }, g.\u0275cmp = _.Xpm({
            type: g,
            selectors: [["cerberus-controllable-banner"]],
            decls: 2,
            vars: 1,
            consts: [["both", "2x-large", 1, "layout"], ["data-test-id", "controllable-banner-text", "kind", "large", "align", "center", "fillColor", "colors.light.300", 1, "layout__text", 3, "innerHtml"]],
            template: function (t, n) {
                1 & t && (_.TgZ(0, "gu-vertical-space", 0), _._UZ(1, "gu-paragraph-text", 1), _.qZA()), 2 & t && (_.xp6(1), _.Q6J("innerHtml", n.text, _.oJD))
            },
            styles: ["[_nghost-%COMP%]{display:flex;width:100%}[_nghost-%COMP%]     a, [_nghost-%COMP%]     a:link, [_nghost-%COMP%]     a:visited{color:#affaed;text-decoration:none}.layout[_ngcontent-%COMP%]{display:flex;align-items:flex-start;padding:0 64px;width:100%;justify-content:center}.layout__text[_ngcontent-%COMP%]{max-width:600px}"]
        }), g
    })()
}, 66773
:
(se, B, o) => {
    "use strict";
    o.d(B, {
        ic: () => p,
        am: () => bo,
        q6: () => J,
        sZ: () => Ce,
        el: () => Ps,
        gn: () => go,
        kM: () => lo,
        MZ: () => ks.M,
        W2: () => _
    });
    var c = o(69808), i = o(93075), y = o(53161), e = o(5e3);
    let _ = (() => {
        class S {
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275mod = e.oAB({type: S}), S.\u0275inj = e.cJS({imports: [[c.ez, i.u5, y.j]]}), S
    })(), p = (() => {
        class S {
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275mod = e.oAB({type: S}), S.\u0275inj = e.cJS({imports: [[c.ez]]}), S
    })();
    const g = ["2x-small", "x-small", "small", "medium", "large", "x-large", "2x-large", "3x-large", "4x-large", "5x-large", "6x-large", "7x-large", "8x-large", "9x-large"];
    var r = o(65281), t = o(69181);
    const n = ["video"], v = ["carousel"], P = ["testParagraph"], w = function (S) {
        return {height: S}
    };

    function L(S, V) {
        if (1 & S && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & S) {
            const u = V.$implicit, A = V.index;
            e.Q6J("ngStyle", e.VKq(3, w, u.randomHeight + "px")), e.xp6(1), e.AsE(" ", u.title, " ---- index: ", A + 1, " ")
        }
    }

    function T(S, V) {
        if (1 & S && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & S) {
            const u = V.$implicit;
            e.Q6J("ngStyle", e.VKq(2, w, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    function b(S, V) {
        if (1 & S && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & S) {
            const u = V.$implicit;
            e.Q6J("ngStyle", e.VKq(2, w, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    function O(S, V) {
        if (1 & S && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & S) {
            const u = V.$implicit;
            e.Q6J("ngStyle", e.VKq(2, w, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    function k(S, V) {
        if (1 & S && (e.TgZ(0, "div", 71), e._uU(1), e.qZA()), 2 & S) {
            const u = V.$implicit;
            e.Q6J("ngStyle", e.VKq(2, w, u.randomHeight + "px")), e.xp6(1), e.hij(" ", u.title, " ")
        }
    }

    const C = function () {
        return {breakpoint: "small", bothSize: "3x-large"}
    }, $ = function (S) {
        return [S]
    }, s = function () {
        return {minWidth: "x-small", slidesPerView: 1.5, spaceBetween: 10}
    }, h = function () {
        return {minWidth: "medium", slidesPerView: 3.5, spaceBetween: 20}
    }, x = function () {
        return {minWidth: "small", slidesPerView: 2.5, spaceBetween: 10}
    }, I = function (S, V, u) {
        return [S, V, u]
    }, Y = function () {
        return {name: "moo cow", id: "moo"}
    }, ae = function () {
        return {name: "woof dog", id: "woof"}
    }, ce = function (S, V) {
        return [S, V]
    }, me = function () {
        return {breakpoint: "small", size: "x-large"}
    }, N = function () {
        return {breakpoint: "medium", size: "2x-large"}
    };
    let J = (() => {
        class S {
            constructor() {
                this.socialMediaAccounts = t.$, this.onetwo = "holy smokes, batman", this.spacing = g[3], this.colors = Object.assign({}, r.colors), this.slides = [{
                    title: '"hello" world',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"moo" cow', randomHeight: 350 * Math.random() + 100}, {
                    title: '"woof" dog',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"baah" sheep', randomHeight: 350 * Math.random() + 100}, {
                    title: '"meow" cat',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"bleet" goat', randomHeight: 350 * Math.random() + 100}, {
                    title: '"howl" wolf',
                    randomHeight: 350 * Math.random() + 100
                }, {title: '"screech" cockatoo', randomHeight: 350 * Math.random() + 100}]
            }

            ngOnInit() {
                this.int = window.setInterval(() => {
                    const A = Math.random();
                    this.moo = `${A}`;
                    const Q = Math.abs(Math.floor(A * g.length - 1));
                    this.spacing = g[Q], this.testParagraph.nativeElement.text = `${A}`, this.testParagraph.nativeElement.bool = !this.testParagraph.nativeElement.bool
                }, 2e3);
                const u = this.video.nativeElement;
                u.currentTime = 4.5, setTimeout(() => {
                    u.style.opacity = 1, u.play()
                }, 2e3)
            }

            gotoPane(u) {
                this.carousel.nativeElement.gotoSlide(u)
            }

            onCurrentPaneChange(u) {
                console.log("pane change!!!", u.detail.currentActiveSlides)
            }

            onDropdownSelect(u) {
                console.log("drop down is selected!!!", u)
            }

            onCheck(u) {
                console.log("checked state change!!!", u)
            }

            onMoo(u) {
                console.log("!!!!!!!!!!!! moooo", u)
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-demo-sheet"]],
            viewQuery: function (u, A) {
                if (1 & u && (e.Gf(n, 7), e.Gf(v, 7), e.Gf(P, 7)), 2 & u) {
                    let Q;
                    e.iGM(Q = e.CRH()) && (A.video = Q.first), e.iGM(Q = e.CRH()) && (A.carousel = Q.first), e.iGM(Q = e.CRH()) && (A.testParagraph = Q.first)
                }
            },
            decls: 126,
            vars: 43,
            consts: [[2, "display", "flex", "flex-direction", "column", "align-items", "center", "padding", "30px 30px 100px", "height", "100%", "background", "#bbbbbb"], ["simpleTextKind", "large", 3, "simpleTextDisplay"], ["src", "/assets/videos/stars-opens.mp4", "muted", "", "playsinline", "", "preload", "auto", 1, "video"], ["video", ""], ["text", "moo cow"], ["testParagraph", ""], ["furColor", "red", "bodyColor", "gold", "gemColor", "yellowgreen"], ["icon", "marketplace_cart"], ["href", "https://google.com", "kind", "tag"], ["href", "https://google.com", "kind", "help"], ["href", "https://google.com", "kind", "small"], ["href", "https://google.com", "icon", "set_core", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "fillColor", "colors.white"], ["href", "https://google.com", "icon", "marketplace_cart", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "leftIconPosition", ""], ["href", "https://google.com", "icon", "set_core", "backgroundFillColor", "colors.gunmetal.700", "borderColor", "colors.apocyan.300", "verticalLayout", ""], ["text", "Special Button", "enableSounds", "", "icon", "set_core"], ["text", "Special alt Button", "enableSounds", "", "invertColoring", "", "leftIconPosition", "", "icon", "tribe_dragon"], ["top", "large", 3, "responsiveSize"], ["text", "This is a text link"], ["both", "x-large"], ["size", "large", "text", "large primary button"], ["text", "primary button", "enableSounds", "", "icon", "set_core"], ["text", "secondary button", "enableSounds", ""], ["text", "subtle button"], [2, "display", "block", "overflow", "auto", "padding", "30px 30px 100px", "height", "100%", "background", "#ccc"], ["progress", "50"], ["bottom", "5x-large", "top", "3x-large"], [2, "color", "black", 3, "click"], ["both", "large"], ["text", "GOTO pane 4", "size", "large", 3, "click"], ["spaceBetween", "20", "slidesPerView", "2.2", "data-carousel-kind", "multi slide carousel with an uneven number of slides per screen", 1, "carousel", 3, "onSlideChange"], ["carousel", ""], ["class", "carousel__slide", 3, "ngStyle", 4, "ngFor", "ngForOf"], ["spaceBetween", "0", "slidesPerView", "1", "data-carousel-kind", "multi slide carousel with responsive slidesPerView", 1, "carousel", 3, "responsiveBreakpoints", "onSlideChange"], ["bottom", "large"], ["spaceBetween", "10", "centeredSlides", "true", "slidesPerView", "3", "data-carousel-kind", "multi slide carousel with centered slides", 1, "carousel", 3, "onSlideChange"], ["spaceBetween", "30", "slidesPerView", "3", "data-carousel-kind", "simple multi slide carousel", 1, "carousel", 3, "onSlideChange"], ["spaceBetween", "0", "slidesPerView", "1", "data-carousel-kind", "single slide carousel", 1, "carousel", 3, "onSlideChange"], [1, "useJsVars"], ["bottom", "2x-large"], [3, "fillColor"], ["labelText", "moo cow", 3, "checked", "onCheck"], ["labelText", "large moo cow", "labelPlacement", "right", "size", "large", 3, "checked", "onCheck"], ["top", "small"], ["placeholderText", "select something", 3, "items", "onSelect"], ["top", "6x-large"], ["iconLigature", "social_telegram", 1, "customGradient"], ["top", "medium"], ["kind", "help", "fillColor", "colors.gunmetal.300"], ["both", "4x-large"], ["iconLigature", "social_telegram", "fillColor", "colors.gold.300", 2, "font-size", "100px"], ["iconLigature", "friends_helmet", "fillGradient", "gradients.god.magic", "fillGradientTarget", "top right", 2, "font-size", "100px"], ["fillColor", "colors.dark.700"], ["bottom", "3x-large"], [3, "disabled"], [3, "loading"], ["size", "large", "href", "https://google.com"], ["size", "large", "align", "left", "fillGradient", "gradients.god.nature", "fillGradientTarget", "bottom"], ["top", "x-large"], ["size", "large", "fillColor", "colors.light.100", 1, "bannerHeadings__largeHeading", 3, "responsiveBreakpoints"], ["bottom", "medium", 3, "top"], ["size", "small", "align", "center"], ["bottom", "6x-large", 3, "top"], ["size", "x-small", "align", "right"], ["align", "left", "kind", "tag"], ["align", "left", "kind", "tag", "text", "simple text can also be fed input text like so... (this text is 100% untouchable from the external global styles)"], ["align", "left", "kind", "help", "fillGradient", "gradients.apocyan.simple", 1, "customSimpleText"], ["top", "2x-large", "bottom", "medium"], ["kind", "large"], ["kind", "help", "align", "right"], [3, "accounts"], ["kind", "tag"], [1, "carousel__slide", 3, "ngStyle"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "div", 0), e._UZ(1, "gu-countdown-timer")(2, "gu-countdown-timer", 1)(3, "video", 2, 3)(5, "gu-paragraph-text", 4, 5)(7, "gu-regular-crypto-kitty", 6), e.qZA(), e.TgZ(8, "div", 0)(9, "gu-plain-square-button", 7), e._uU(10, " plain square button "), e.qZA(), e.TgZ(11, "gu-simple-text-button", 8), e._uU(12, " simple text button "), e.qZA(), e.TgZ(13, "gu-simple-text-button", 9), e._uU(14, " simple text button "), e.qZA(), e.TgZ(15, "gu-simple-text-button", 10), e._uU(16, " simple text button "), e.qZA(), e.TgZ(17, "gu-plain-square-button", 11), e._uU(18, " plain square "), e.qZA(), e.TgZ(19, "gu-plain-square-button", 12), e._uU(20, " Cart "), e.qZA(), e.TgZ(21, "gu-plain-square-button", 13), e._uU(22, " plain square vertical "), e.qZA(), e._UZ(23, "gu-special-hex-button", 14)(24, "gu-special-hex-button", 15), e.TgZ(25, "gu-vertical-space", 16)(26, "gu-paragraph-text"), e._uU(27, "Arcu bibendum at varius vel. Nec feugiat nisl pretium fusce id velit ut tortor. Vel eros donec ac odio. "), e._UZ(28, "gu-simple-text-button", 17), e.qZA()(), e.TgZ(29, "gu-vertical-space", 18), e._UZ(30, "gu-primary-hex-button", 19), e.qZA(), e._UZ(31, "gu-primary-hex-button", 20), e.TgZ(32, "gu-vertical-space", 18), e._UZ(33, "gu-secondary-hex-button", 21), e.qZA(), e._UZ(34, "gu-subtle-hex-button", 22), e.qZA(), e.TgZ(35, "div", 23), e._UZ(36, "gu-hex-progress-bar", 24), e.TgZ(37, "gu-vertical-space", 25)(38, "button", 26), e.NdJ("click", function () {
                    return A.gotoPane(1)
                }), e._uU(39, "goto pane 2"), e.qZA(), e.TgZ(40, "gu-vertical-space", 27)(41, "gu-primary-hex-button", 28), e.NdJ("click", function () {
                    return A.gotoPane(3)
                }), e.qZA()(), e.TgZ(42, "gu-carousel", 29, 30), e.NdJ("onSlideChange", function (fe) {
                    return A.onCurrentPaneChange(fe)
                }), e.YNc(44, L, 2, 5, "div", 31), e.qZA(), e.TgZ(45, "gu-vertical-space", 27)(46, "gu-carousel", 32), e.NdJ("onSlideChange", function (fe) {
                    return A.onCurrentPaneChange(fe)
                }), e.YNc(47, T, 2, 4, "div", 31), e.qZA()(), e.TgZ(48, "gu-vertical-space", 33)(49, "gu-carousel", 34), e.NdJ("onSlideChange", function (fe) {
                    return A.onCurrentPaneChange(fe)
                }), e.YNc(50, b, 2, 4, "div", 31), e.qZA()(), e.TgZ(51, "gu-carousel", 35), e.NdJ("onSlideChange", function (fe) {
                    return A.onCurrentPaneChange(fe)
                }), e.YNc(52, O, 2, 4, "div", 31), e.qZA(), e.TgZ(53, "gu-vertical-space", 27)(54, "gu-carousel", 36), e.NdJ("onSlideChange", function (fe) {
                    return A.onCurrentPaneChange(fe)
                }), e.YNc(55, k, 2, 4, "div", 31), e.qZA()()(), e.TgZ(56, "gu-vertical-space", 33)(57, "div", 37), e._uU(58, " this text is styled thru plain old angular sass, using a color var from our new variables system "), e.qZA()(), e.TgZ(59, "gu-vertical-space", 38)(60, "gu-paragraph-text", 39), e._uU(61), e.qZA()(), e.TgZ(62, "gu-vertical-space", 33)(63, "gu-checkbox-input", 40), e.NdJ("onCheck", function (fe) {
                    return A.onMoo(fe)
                }), e.qZA(), e.TgZ(64, "gu-checkbox-input", 41), e.NdJ("onCheck", function (fe) {
                    return A.onCheck(fe)
                }), e.qZA()(), e.TgZ(65, "gu-vertical-space", 42)(66, "gu-dropdown", 43), e.NdJ("onSelect", function (fe) {
                    return A.onDropdownSelect(fe)
                }), e.qZA()(), e.TgZ(67, "gu-vertical-space", 44), e._UZ(68, "gu-icon", 45), e.TgZ(69, "gu-vertical-space", 46)(70, "gu-simple-text", 47), e._uU(71), e.qZA()()(), e.TgZ(72, "gu-vertical-space", 48), e._UZ(73, "gu-icon", 49)(74, "gu-icon", 50), e.TgZ(75, "gu-vertical-space", 46)(76, "gu-simple-text", 51), e._uU(77, " ^ this is an icon - with a gradient fill input, and this text has a color fill input "), e.qZA()()(), e.TgZ(78, "gu-vertical-space", 52)(79, "gu-primary-hex-button", 53), e._uU(80, "disabled button"), e.qZA(), e.TgZ(81, "gu-primary-hex-button", 54), e._uU(82, "loading button"), e.qZA(), e.TgZ(83, "gu-vertical-space", 46)(84, "gu-primary-hex-button", 55), e._uU(85, " moo cow "), e.qZA()()(),e.TgZ(86, "gu-heading-text", 56)(87, "h1"),e._uU(88, 'this is a "large" left aligned heading'),e.qZA()(),e.TgZ(89, "gu-vertical-space", 57)(90, "gu-heading-text", 58),e._uU(91, " This heading has responsively set font-size "),e.qZA()(),e.TgZ(92, "gu-vertical-space", 59)(93, "gu-heading-text", 60)(94, "h3"),e._uU(95),e.qZA()()(),e.TgZ(96, "gu-vertical-space", 61)(97, "gu-heading-text", 62)(98, "h6"),e._uU(99, 'this is an "x-small" right aligned heading'),e.qZA()()(),e.TgZ(100, "gu-vertical-space", 33)(101, "gu-simple-text", 63),e._uU(102, ' this is the simple-text "tag" kind ... '),e.qZA()(),e._UZ(103, "gu-simple-text", 64),e.TgZ(104, "gu-simple-text", 65),e._uU(105, ' this is the simple-text "help" kind ... (note how simple-text displays as an inline element, not block) '),e.qZA(),e.TgZ(106, "gu-vertical-space", 66)(107, "gu-paragraph-text", 67),e._uU(108, ' this is "paragraph-text", kind: "large". note how it has line height, passes it\'s sizing down to "simple-text", and is '),e.TgZ(109, "em"),e._uU(110, "block level"),e.qZA(),e._uU(111, " - just like "),e.TgZ(112, "strong"),e._uU(113, "regular paragraphs!"),e.qZA(),e._UZ(114, "br"),e._uU(115),e.qZA()(),e.TgZ(116, "gu-vertical-space", 59)(117, "gu-paragraph-text", 68),e._uU(118, ' this is the "help" kind of paragraph-text '),e._UZ(119, "br"),e._uU(120, " Bibendum est ultricies integer quis auctor elit sed. Iaculis at erat pellentesque adipiscing commodo elit at imperdiet dui. Malesuada pellentesque elit eget gravida cum sociis natoque penatibus et. Donec massa sapien faucibus et. Felis imperdiet proin fermentum leo vel orci porta non. Augue neque gravida in fermentum et sollicitudin ac orci. Ac tincidunt vitae semper quis. "),e.qZA()(),e._UZ(121, "gu-social-buttons-row", 69),e.TgZ(122, "gu-paragraph-text", 70),e._uU(123, ' this is the "tag" kind of paragraph-text '),e._UZ(124, "br"),e._uU(125, " Arcu bibendum at varius vel. Nec feugiat nisl pretium fusce id velit ut tortor. Vel eros donec ac odio. Ante metus dictum at tempor commodo ullamcorper a. Hendrerit gravida rutrum quisque non tellus orci ac auctor augue. Non curabitur gravida arcu ac. "),e.qZA()()), 2 & u && (e.xp6(2), e.Q6J("simpleTextDisplay", !0), e.xp6(23), e.Q6J("responsiveSize", e.VKq(24, $, e.DdM(23, C))), e.xp6(19), e.Q6J("ngForOf", A.slides), e.xp6(2), e.Q6J("responsiveBreakpoints", e.kEZ(29, I, e.DdM(26, s), e.DdM(27, h), e.DdM(28, x))), e.xp6(1), e.Q6J("ngForOf", A.slides), e.xp6(3), e.Q6J("ngForOf", A.slides), e.xp6(2), e.Q6J("ngForOf", A.slides), e.xp6(3), e.Q6J("ngForOf", A.slides), e.xp6(5), e.s9C("fillColor", A.colors.dark[500]), e.xp6(1), e.hij(" this text is styled using direct variable input from an angular scope variable: ", A.colors.dark[500], " (colors.dark[500]) "), e.xp6(2), e.Q6J("checked", !0), e.xp6(1), e.Q6J("checked", !1), e.xp6(2), e.Q6J("items", e.WLB(35, ce, e.DdM(33, Y), e.DdM(34, ae))), e.xp6(5), e.hij(" ^ this is an icon - with a custom scss gradient as text-fill ", A.onetwo, " (this text is colored as gunmetal[300]) "), e.xp6(8), e.Q6J("disabled", !0), e.xp6(2), e.s9C("loading", !0), e.xp6(9), e.Q6J("responsiveBreakpoints", e.WLB(40, ce, e.DdM(38, me), e.DdM(39, N))), e.xp6(2), e.s9C("top", A.spacing), e.xp6(3), e.hij('this is a "small" center aligned heading > spacing: ', A.spacing, ""), e.xp6(1), e.s9C("top", A.spacing), e.xp6(19), e.hij(" Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut eu sem integer vitae justo. Amet porttitor ", A.moo, " eget dolor morbi non arcu risus quis varius. Est velit egestas dui id ornare arcu odio ut. Integer quis auctor elit sed vulputate mi sit. Dui ut ornare lectus sit amet est placerat. Cras sed felis eget velit aliquet sagittis. "), e.xp6(1), e.s9C("top", A.spacing), e.xp6(5), e.Q6J("accounts", A.socialMediaAccounts))
            },
            directives: [c.sg, c.PC],
            styles: ["[_nghost-%COMP%]{display:block}.useJsVars[_ngcontent-%COMP%]{color:#affaed}.customGradient[_ngcontent-%COMP%]{font-size:200px;background:linear-gradient(to bottom,#9DE764 0%,#5AC33F 50%,#4C772F 100%)}.customSimpleText[_ngcontent-%COMP%]{border:2px dotted gold;margin-left:8px;padding:16px}.carousel[_ngcontent-%COMP%]{box-shadow:inset 0 0 0 2px #0003}.carousel[_ngcontent-%COMP%]:before{content:attr(data-carousel-kind);position:absolute;z-index:1;bottom:0px;left:3px;color:#0000004d}.carousel__slide[_ngcontent-%COMP%]{background:yellowgreen;box-shadow:inset 0 0 0 3px gold}.carousel__slide[_ngcontent-%COMP%]:first-child{background:rebeccapurple}.carousel__slide[_ngcontent-%COMP%]:last-child{background:dodgerblue}.video[_ngcontent-%COMP%]{width:60%;margin:0 auto;opacity:0}"]
        }), S
    })(), le = {numbers: {randomNumber: 0}, text: {randomText: "moo"}};
    setInterval(() => {
        le = Object.assign(Object.assign({}, le), {numbers: {randomNumber: Math.random()}})
    }, 400);
    var Se = o(73307), Z = o(94057);
    const de = ["carousel"], _e = function (S) {
        return {"championButtons__button--active": S}
    };

    function Le(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "div", 14), e.NdJ("click", function () {
                const fe = e.CHM(u).index;
                return e.oxw().gotoChampionSlide(fe)
            }), e.TgZ(1, "picture"), e._UZ(2, "source", 15)(3, "source", 16)(4, "img", 17), e.qZA()()
        }
        if (2 & S) {
            const u = V.$implicit, A = V.index, Q = e.oxw();
            e.Q6J("ngClass", e.VKq(13, _e, Q.activeChampionIndex === A)), e.xp6(1), e.Gre("championButtons__button__picture championButtons__button__picture--", u.name, ""), e.xp6(1), e.FAE("srcset", "\n          //images.godsunchained.com/art2/250/", u.protoId, ".webp 250w,\n          //images.godsunchained.com/art2/375/", u.protoId, ".webp 375w,\n          //images.godsunchained.com/art2/500/", u.protoId, ".webp 500w,\n          //images.godsunchained.com/art2/720/", u.protoId, ".webp 720w\n        ", e.LSH), e.xp6(1), e.FAE("srcset", "\n          //images.godsunchained.com/art2/250/", u.protoId, ".jpg 250w,\n          //images.godsunchained.com/art2/375/", u.protoId, ".jpg 375w,\n          //images.godsunchained.com/art2/500/", u.protoId, ".jpg 500w,\n          //images.godsunchained.com/art2/720/", u.protoId, ".jpg 720w\n        ", e.LSH), e.xp6(1), e.MGl("src", "//images.godsunchained.com/art2/500/", u.protoId, ".jpg", e.LSH)
        }
    }

    function Oe(S, V) {
        if (1 & S && (e.TgZ(0, "div", 18)(1, "picture", 19), e._UZ(2, "source", 20)(3, "source", 21)(4, "img", 22), e.qZA(), e.TgZ(5, "gu-vertical-space", 23)(6, "gu-heading-text", 24), e._uU(7), e.qZA()(), e.TgZ(8, "gu-paragraph-text", 25), e._uU(9), e.qZA(), e.TgZ(10, "gu-vertical-space", 26)(11, "gu-simple-text-button", 27), e._uU(12, " Read more "), e.qZA()(), e.TgZ(13, "gu-paragraph-text", 28), e._uU(14), e.qZA()()), 2 & S) {
            const u = V.$implicit;
            e.xp6(2), e.bRH("srcset", "\n            //images.godsunchained.com/art2/250/", u.protoId, ".webp 250w,\n            //images.godsunchained.com/art2/375/", u.protoId, ".webp 375w,\n            //images.godsunchained.com/art2/500/", u.protoId, ".webp 500w,\n            //images.godsunchained.com/art2/720/", u.protoId, ".webp 720w,\n            //images.godsunchained.com/art2/1024/", u.protoId, ".webp 1024w,\n            //images.godsunchained.com/art2/1280/", u.protoId, ".webp 1280w,\n            //images.godsunchained.com/art2/1440/", u.protoId, ".webp 1440w\n          ", e.LSH), e.xp6(1), e.bRH("srcset", "\n            //images.godsunchained.com/art2/250/", u.protoId, ".jpg 250w,\n            //images.godsunchained.com/art2/375/", u.protoId, ".jpg 375w,\n            //images.godsunchained.com/art2/500/", u.protoId, ".jpg 500w,\n            //images.godsunchained.com/art2/720/", u.protoId, ".jpg 720w,\n            //images.godsunchained.com/art2/1024/", u.protoId, ".jpg 1024w,\n            //images.godsunchained.com/art2/1280/", u.protoId, ".jpg 1280w,\n            //images.godsunchained.com/art2/1440/", u.protoId, ".jpg 1440w\n          ", e.LSH), e.xp6(1), e.MGl("src", "//images.godsunchained.com/art2/720/", u.protoId, ".jpg", e.LSH), e.xp6(3), e.hij(" ", u.title, " "), e.xp6(2), e.hij(" ", u.description, " "), e.xp6(2), e.s9C("href", u.link), e.xp6(3), e.hij(" ", u.byline, " ")
        }
    }

    let H = (() => {
        class S {
            constructor() {
                this.activeChampionIndex = 0, this.champions = Z.zy.Y, this.routes = Z.CF.J
            }

            ngOnInit() {
            }

            gotoChampionSlide(u) {
                this.carousel.nativeElement.gotoSlide(u)
            }

            onChampionCarouselUpdate(u) {
                this.activeChampionIndex = u.detail.currentActiveSlides[0]
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-season1-champion-section"]],
            viewQuery: function (u, A) {
                if (1 & u && e.Gf(de, 7), 2 & u) {
                    let Q;
                    e.iGM(Q = e.CRH()) && (A.carousel = Q.first)
                }
            },
            decls: 18,
            vars: 4,
            consts: [["size", "large", "fillGradient", "gradients.gold.simple", "align", "center", 1, "heading"], [1, "championButtons"], ["class", "championButtons__button", 3, "ngClass", "click", 4, "ngFor", "ngForOf"], [1, "championCarouselWrapper"], [1, "championCarousel", 3, "onSlideChange"], ["carousel", ""], ["class", "championCarousel__championSlide", 4, "ngFor", "ngForOf"], [1, "sideBarImage", "sideBarImage--left"], ["srcset", "/assets/images/expansion-1/carousel-sidebar.webp", "type", "image/webp"], ["srcset", "/assets/images/expansion-1/carousel-sidebar.png", "type", "image/png"], ["src", "/assets/images/expansion-1/carousel-sidebar.png", "alt", "", 1, "sideBarImage__img"], [1, "sideBarImage", "sideBarImage--right"], ["both", "x-large", 1, "ctaButtonRow"], ["text", "Buy Packs", "size", "large", 3, "disabled", "href"], [1, "championButtons__button", 3, "ngClass", "click"], ["sizes", "20vw", "type", "image/webp", 3, "srcset"], ["sizes", "20vw", "type", "image/jpg", 3, "srcset"], ["alt", "", 1, "championButtons__button__picture__img", 3, "src"], [1, "championCarousel__championSlide"], [1, "championCarousel__championSlide__imgWrapper"], ["sizes", "75vw", "type", "image/webp", 3, "srcset"], ["sizes", "75vw", "type", "image/jpg", 3, "srcset"], ["alt", "", 1, "championCarousel__championSlide__imgWrapper__img", 3, "src"], ["both", "x-large"], ["size", "x-small", "fillColor", "colors.light.100", "align", "center"], ["fillColor", "colors.light.100", "align", "center", "kind", "large", 1, "championCarousel__championSlide__description"], ["top", "large", "bottom", "3x-large", 1, "readMoreLink"], ["kind", "tag", "target", "_blank", "fillColor", "colors.apocyan.300", "align", "center", 3, "href"], ["align", "center", "kind", "large"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "gu-heading-text", 0), e._uU(1, " Meet your champions\n"), e.qZA(), e.TgZ(2, "div", 1), e.YNc(3, Le, 5, 15, "div", 2), e.qZA(), e.TgZ(4, "div", 3)(5, "gu-carousel", 4, 5), e.NdJ("onSlideChange", function (fe) {
                    return A.onChampionCarouselUpdate(fe)
                }), e.YNc(7, Oe, 15, 19, "div", 6), e.qZA(), e.TgZ(8, "picture", 7), e._UZ(9, "source", 8)(10, "source", 9)(11, "img", 10), e.qZA(), e.TgZ(12, "picture", 11), e._UZ(13, "source", 8)(14, "source", 9)(15, "img", 10), e.qZA()(), e.TgZ(16, "gu-vertical-space", 12), e._UZ(17, "gu-primary-hex-button", 13), e.qZA()), 2 & u && (e.xp6(3), e.Q6J("ngForOf", A.champions), e.xp6(4), e.Q6J("ngForOf", A.champions), e.xp6(10), e.Q6J("disabled", !0)("href", A.routes.buyPacks.path))
            },
            directives: [c.sg, c.mk],
            styles: ['@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{position:relative;padding:80px 0;display:flex;flex-direction:column;background:url(/assets/images/expansion-1/Lysander_LC_BG.jpg);background-size:cover;background-position:center}[_nghost-%COMP%]:before{content:"";position:absolute;top:0;left:0;right:0;bottom:0;background:linear-gradient(to bottom,#0A0A0A 0%,rgba(10,10,10,.8) 50%)}[_nghost-%COMP%]:after{content:"";position:absolute;left:0;right:0;bottom:0;height:12px;background:radial-gradient(47.52% 50% at 50% 50%,#C6A052 0%,rgba(198,160,82,0) 100%)}.heading[_ngcontent-%COMP%]{position:relative;padding:0 20px}.championButtons[_ngcontent-%COMP%]{margin:20px auto 48px;padding:0 28px;display:grid;grid-template-columns:repeat(3,1fr);grid-column-gap:28px;grid-row-gap:28px;max-width:"768px";width:100%}@media screen and (min-width: 512px){.championButtons[_ngcontent-%COMP%]{grid-template-columns:repeat(6,1fr)}}.championButtons__button[_ngcontent-%COMP%]{border-radius:50%;width:100%;padding-bottom:100%;transition:box-shadow .25s ease-in-out;position:relative;overflow:hidden;cursor:pointer}.championButtons__button__picture[_ngcontent-%COMP%]{position:absolute;top:0;left:0;width:100%;height:100%}.championButtons__button__picture__img[_ngcontent-%COMP%]{height:300%;width:300%;object-fit:cover;position:absolute;top:0;left:50%;transform:translate(-50%,-10%)}.championButtons__button__picture--lysander[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-50%,-9%)}.championButtons__button__picture--neferu[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-45%,-14%)}.championButtons__button__picture--valka[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-52%,-6.5%)}.championButtons__button__picture--pallas[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-54%,-7%)}.championButtons__button__picture--selena[_ngcontent-%COMP%]   .championButtons__button__picture__img[_ngcontent-%COMP%]{transform:translate(-50%,-8%)}.championButtons__button--active[_ngcontent-%COMP%]{box-shadow:0 0 20px #f7ea9b}.championCarouselWrapper[_ngcontent-%COMP%]{margin:0 auto;width:85%;max-width:1000px;position:relative}@media screen and (min-width: 768px){.championCarouselWrapper[_ngcontent-%COMP%]{width:65%}}.sideBarImage[_ngcontent-%COMP%]{display:none;position:absolute;top:-3%;left:-6.25%;width:12.5%;user-select:none;pointer-events:none}.sideBarImage--right[_ngcontent-%COMP%]{left:auto;right:-6.25%;transform:rotateY(180deg)}.sideBarImage__img[_ngcontent-%COMP%]{display:block;width:100%}.championCarousel[_ngcontent-%COMP%]{width:100%;margin:auto;overflow:hidden}.championCarousel__championSlide[_ngcontent-%COMP%]{display:flex;flex-direction:column;width:100%;position:relative}.championCarousel__championSlide__imgWrapper[_ngcontent-%COMP%]{width:100%;padding-bottom:50%;position:relative;overflow:hidden}@media screen and (min-width: 512px){.sideBarImage[_ngcontent-%COMP%]{display:block}.championCarousel[_ngcontent-%COMP%]{border-radius:4vw 4vw 0 0}.championCarousel__championSlide__imgWrapper[_ngcontent-%COMP%]{border-radius:0 0 4vw 4vw}}.championCarousel__championSlide__imgWrapper__img[_ngcontent-%COMP%]{position:absolute;top:0;left:0;height:100%;width:100%;object-fit:cover;object-position:center 20%}.championCarousel__championSlide__description[_ngcontent-%COMP%]{width:75%;margin:0 auto}.ctaButtonRow[_ngcontent-%COMP%]{display:flex;justify-content:center}.readMoreLink[_ngcontent-%COMP%]{text-align:center;display:flex;justify-content:center}.readMoreLink__text[_ngcontent-%COMP%]{padding-bottom:4px;border-bottom:2px solid #8BE1E0}.bottomContent[_ngcontent-%COMP%]{position:relative}']
        }), S
    })();
    var ue = o(72986);
    o(99454);
    const ee = ["emailInput"], pe = function () {
        return ["email"]
    };
    let ye = (() => {
        class S {
            constructor(u) {
                this.authHostService = u, this.emailValue = {value: "", valid: !1}, this.disableSubmitButton = !1
            }

            submitEmail() {
                if (!this.emailValue.valid) return !1;
                this.authHostService.post(`/subscribe/${this.emailValue.value}`).pipe((0, ue.q)(1)).subscribe({
                    next: u => {
                        "success" === u ? (this.inputElement.nativeElement.setCurrentStatus({
                            status: "success",
                            helpText: "Success! You\u2019re all signed up."
                        }), this.disableSubmitButton = !0) : this.handleError()
                    }, error: () => this.handleError()
                })
            }

            handleError() {
                this.inputElement.nativeElement.setCurrentStatus({
                    status: "error",
                    helpText: "Encountered an error. Please try again"
                })
            }

            onValueChange(u) {
                this.emailValue = {value: u.detail.newValue, valid: u.detail.valid}
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Se.LI))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-newsletter-signup-form"]],
            viewQuery: function (u, A) {
                if (1 & u && e.Gf(ee, 5), 2 & u) {
                    let Q;
                    e.iGM(Q = e.CRH()) && (A.inputElement = Q.first)
                }
            },
            inputs: {emailValue: "emailValue", disableSubmitButton: "disableSubmitButton"},
            decls: 7,
            vars: 4,
            consts: [["fillColor", "colors.light[100]", "align", "center", "size", "x-small"], [3, "submit"], ["errorHelpText", "Please enter a valid email", "placeholderText", "Enter your email here", 1, "textInput", 3, "validateToPattern", "onValueChange"], ["emailInput", ""], ["size", "large", 3, "disabled", "horizontalStretch", "click"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "gu-heading-text", 0), e._uU(1, " signup for our newsletter!\n"), e.qZA(), e.TgZ(2, "gu-form-context", 1), e.NdJ("submit", function () {
                    return A.submitEmail()
                }), e.TgZ(3, "gu-text-input", 2, 3), e.NdJ("onValueChange", function (fe) {
                    return A.onValueChange(fe)
                }), e.qZA(), e.TgZ(5, "gu-primary-hex-button", 4), e.NdJ("click", function () {
                    return A.submitEmail()
                }), e._uU(6, " submit "), e.qZA()()), 2 & u && (e.xp6(3), e.Q6J("validateToPattern", e.DdM(3, pe)), e.xp6(2), e.Q6J("disabled", A.disableSubmitButton || !A.emailValue.valid)("horizontalStretch", !1))
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;box-sizing:border-box}", ".textInput[_ngcontent-%COMP%] {\n      margin: 16px 0 24px;\n    }\n\n    .textInput[_ngcontent-%COMP%]   .helpText[_ngcontent-%COMP%], .textInput[_ngcontent-%COMP%]   .inputArea__input[_ngcontent-%COMP%], .textInput[_ngcontent-%COMP%]   .inputArea__input[_ngcontent-%COMP%]::placeholder {\n      text-align: center;\n    }\n\n    gu-primary-hex-button[_ngcontent-%COMP%] {\n      min-width: 170px;\n    }"]
        }), S
    })(), Ce = (() => {
        class S {
            constructor(u, A) {
                this.authService = u, this.authHostService = A
            }

            get isLoggedIn() {
                return this.authService.isLoggedIn()
            }

            ngOnInit() {
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Se.mI), e.Y36(Se.LI))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-lore-route"]],
            decls: 33,
            vars: 0,
            consts: [[1, "headerStrip"], ["top", "4x-large"], ["fillColor", "colors.light.100", "align", "center", "size", "x-large"], ["bottom", "4x-large", "top", "large", 1, "headerStrip__bodyCopy"], ["fillColor", "colors.light.100", "align", "center", "kind", "large"], [1, "bandedStrip"], ["both", "x-large"], ["fillGradient", "gradients.gold.simple", "align", "center", "size", "small"], ["top", "medium"], ["kind", "help", "align", "center"], ["both", "medium"], ["src", "/assets/images/weird-spacer-thing.svg", 1, "weirdSpacingImage"], ["kind", "tag", "align", "center"], ["top", "4x-large", "bottom", "2x-large", 1, "loreIntroText"], ["kind", "large"], ["top", "large"], ["href", "https://blog.godsunchained.com/2020/01/24/chapter-1-citadel-of-the-gods/", 1, "readMoreLink"], ["kind", "tag", "fillColor", "colors.apocyan.300", "align", "center", 1, "readMoreLink__text"], ["top", "6x-large"], ["size", "x-small", "align", "center", 1, "mysteryHeading"], ["top", "2x-large", 1, "ctaButtonRow"], ["text", "Visit blog", "href", "https://blog.godsunchained.com/"], ["both", "6x-large"], [1, "newsLetterSignUp"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "header", 0)(1, "gu-vertical-space", 1)(2, "gu-heading-text", 2), e._uU(3, " LORE "), e.qZA()(), e.TgZ(4, "gu-vertical-space", 3)(5, "gu-paragraph-text", 4), e._uU(6, " Come, mortal! Settle in and be regaled by tales that traverse the Nine Realms, recount the deeds of the champions of Eucos, and whisper of the gods themselves. "), e.qZA()()(), e.TgZ(7, "div", 5)(8, "gu-vertical-space", 6)(9, "gu-heading-text", 7), e._uU(10, " Citadel of the gods "), e.qZA(), e.TgZ(11, "gu-vertical-space", 8)(12, "gu-paragraph-text", 9), e._uU(13, " Welcome to the trial "), e.qZA()(), e.TgZ(14, "gu-vertical-space", 10), e._UZ(15, "img", 11), e.qZA(), e.TgZ(16, "gu-paragraph-text", 12), e._uU(17, " by kelly digges "), e.qZA()()(), e.TgZ(18, "gu-vertical-space", 13)(19, "gu-paragraph-text", 14), e._uU(20, " You've seen the statues of the gods in temples, of course. Incorruptible Thaeriel, Vengeful Auros, Gentle Aeona. To mortal worshipers, the statues are the gods: terrible and beautiful. But the reality is they are the pale shadow of a blazing truth. This is the story of one fateful meeting, and a divine contest that would alter the course of the Nine Relams for aeons to come. "), e.qZA(), e.TgZ(21, "gu-vertical-space", 15)(22, "a", 16)(23, "gu-simple-text", 17), e._uU(24, " Read more "), e.qZA()()()(), e._UZ(25, "cerberus-season1-champion-section"), e.TgZ(26, "gu-vertical-space", 18)(27, "gu-heading-text", 19), e._uU(28, " FOR MORE GODS UNCHAINED CONTENT & UPDATES "), e.qZA(), e.TgZ(29, "gu-vertical-space", 20), e._UZ(30, "gu-primary-hex-button", 21), e.qZA()(), e.TgZ(31, "gu-vertical-space", 22), e._UZ(32, "cerberus-newsletter-signup-form", 23), e.qZA())
            },
            directives: [H, ye],
            styles: ["@keyframes blink{0%{opacity:.2}20%{opacity:1}to{opacity:.2}}@keyframes glowing{0%{box-shadow:0 0 -10px #28a1ee}40%{box-shadow:0 0 10px #28a1ee}60%{box-shadow:0 0 10px #28a1ee}to{box-shadow:0 0 -10px #28a1ee}}@keyframes moving-gradient{0%{background-position:left}to{background-position:right}}@keyframes spin{to{transform:rotate(360deg)}}@keyframes upAndDown2{0%{transform:translateY(-2%)}50%{transform:translateY(2%)}to{transform:translateY(-2%)}}@keyframes shine2{0%{filter:brightness(.96) hue-rotate(0deg)}50%{filter:brightness(1.12) hue-rotate(-10deg)}to{filter:brightness(.96) hue-rotate(0deg)}}@keyframes fadeIn{0%{opacity:0}to{opacity:1}}[_nghost-%COMP%]{display:block}.headerStrip[_ngcontent-%COMP%]{background:url(/assets/images/colour-palace-background2.jpg);background-size:cover;background-position:center;display:flex;flex-direction:column}.headerStrip__bodyCopy[_ngcontent-%COMP%]{max-width:800px;width:80%;margin-left:auto;margin-right:auto}.bandedStrip[_ngcontent-%COMP%]{background:#0F1B27;display:flex;flex-direction:column}.weirdSpacingImage[_ngcontent-%COMP%]{display:block;width:148px;margin-left:auto;margin-right:auto}.loreIntroText[_ngcontent-%COMP%]{width:80%;max-width:800px;margin-left:auto;margin-right:auto}.readMoreLink[_ngcontent-%COMP%]{display:inline-flex;justify-content:flex-start}.readMoreLink__text[_ngcontent-%COMP%]{padding-bottom:4px;border-bottom:2px solid #8BE1E0}.ctaButtonRow[_ngcontent-%COMP%]{display:flex;justify-content:center}.mysteryHeading[_ngcontent-%COMP%]{max-width:500px;padding:0 20px;margin-left:auto;margin-right:auto}.signupForm[_ngcontent-%COMP%]{width:85%;max-width:450px;display:flex;flex-direction:column;margin-left:auto;margin-right:auto}.signupForm__emailInput[_ngcontent-%COMP%]{background:#0F1B27;color:#7192b0;border:1px solid #527493;text-align:center;padding:12px 20px;width:100%}.signupForm__emailInput[_ngcontent-%COMP%]::placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.signupForm__emailInput[_ngcontent-%COMP%]:-ms-input-placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.signupForm__emailInput[_ngcontent-%COMP%]:-moz-placeholder{font-size:14px;font-style:italic;color:#f6f6f6b3}.newsLetterSignUp[_ngcontent-%COMP%]{max-width:530px;width:85%;margin-left:auto;margin-right:auto}"]
        }), S
    })();
    var Ae = o(39029), ke = o(69039), We = o(5284), U = o(12052), te = o(32830), ie = o(98539), $e = o(97223),
        dt = o(19444);
    const Fe = "FLIP_A_CARD", bt = "TOGGLE_OPEN_PACK_VIDEO_VISIBILITY", Ct = "TOGGLE_OPEN_PACK_CARDS",
        Tt = "SET_OPEN_PACK_VIDEO_ID", Qe = "RESET_TEMPLE", qe = "SET_CURRENT_UNOPENED_PACKS",
        Ne = "TOGGLE_PACK_VISIBILITY", ht = "TOGGLE_RAFFLE_TICKETS", Be = "SET_CURRENT_OPEN_CHEST",
        Rt = "SET_OPEN_CHEST_VIDEO_ID", Me = "TOGGLE_OPEN_CHEST_VIDEO_FINISHED", At = "PARTIAL_RESET_TEMPLE",
        q = "TOGGLE_OPEN_PACK_VIDEO_LOADING", re = "TOGGLE_OPEN_PACK_VIDEO_PLAYING",
        xe = "TOGGLE_OPEN_CHEST_VIDEO_PLAYING", we = S => ({type: qe, payload: S}), rt = S => ({type: Rt, payload: S}),
        Qt = S => ({type: Me, payload: S}), ts = S => ({type: q, payload: S}), lt = S => ({type: xe, payload: S}),
        tt = S => ({type: re, payload: S}), pt = {
            flippedCards: {},
            openPackVideoId: "",
            openChestVideoId: "",
            openChestVideoComplete: !1,
            openChestVideoPlaying: !1,
            openPackVideoVisible: !1,
            openPackVideoLoading: !0,
            openPackVideoPlaying: !1,
            firstPackCardsVisible: !1,
            packImageVisible: !1,
            currentUnOpenedPacks: [],
            currentOpenPack: {},
            currentOpenChest: {},
            raffleTicketsDisplayVisible: !1
        }, ct = (0, $e.MT)((S = pt, {type: V, payload: u}) => {
            switch (V) {
                case Tt:
                    return Object.assign(Object.assign({}, S), {openPackVideoId: u});
                case Ct:
                    return Object.assign(Object.assign({}, S), {firstPackCardsVisible: "boolean" == typeof u ? u : !S.firstPackCardsVisible});
                case bt:
                    return Object.assign(Object.assign({}, S), {openPackVideoVisible: "boolean" == typeof u ? u : !S.openPackVideoVisible});
                case Fe:
                    return Object.assign(Object.assign({}, S), {flippedCards: Object.assign(Object.assign({}, S.flippedCards), {[u]: !S.flippedCards[u]})});
                case Ne:
                    return Object.assign(Object.assign({}, S), {packImageVisible: "boolean" == typeof u ? u : !S.packImageVisible});
                case qe:
                    return Object.assign(Object.assign({}, S), {
                        currentUnOpenedPacks: u,
                        currentOpenPack: Object.assign(Object.assign({}, u[0]), {id: (0, dt.v4)()})
                    });
                case ht:
                    return Object.assign(Object.assign({}, S), {raffleTicketsDisplayVisible: !S.raffleTicketsDisplayVisible});
                case Be:
                    return Object.assign(Object.assign({}, S), {currentOpenChest: u});
                case Rt:
                    return Object.assign(Object.assign({}, S), {openChestVideoId: u, openChestVideoComplete: !1});
                case Me:
                    return Object.assign(Object.assign({}, S), {openChestVideoComplete: "boolean" == typeof u ? u : !S.openChestVideoComplete});
                case xe:
                    return Object.assign(Object.assign({}, S), {openChestVideoPlaying: "boolean" == typeof u ? u : !S.openChestVideoPlaying});
                case q:
                    return Object.assign(Object.assign({}, S), {openPackVideoLoading: "boolean" == typeof u ? u : !S.openPackVideoLoading});
                case re:
                    return Object.assign(Object.assign({}, S), {openPackVideoPlaying: "boolean" == typeof u ? u : !S.openPackVideoPlaying});
                case At:
                    return Object.assign(Object.assign({}, pt), {packImageVisible: !0});
                case Qe:
                    return Object.assign({}, pt);
                default:
                    return S
            }
        }, pt), Zt = {
            "pack-open-videos-4k order--neutral--shiny-legendary": "548697244",
            "pack-open-videos-4k order--neutral--legendary": "548697153",
            "pack-open-videos-4k order--neutral--epic": "548697068",
            "pack-open-videos-4k order--neutral--rare": "548694554",
            "pack-open-videos-4k trial--order--rarity": "463265598",
            "pack-open-videos-4k trial--neutral--shiny-legendary": "463265542",
            "pack-open-videos-4k trial--neutral--rare": "463265469",
            "pack-open-videos-4k trial--neutral--legendary": "463265417",
            "pack-open-videos-4k trial--neutral--epic": "463265363",
            "pack-open-videos-4k trial--neutral--common": "463265311",
            "pack-open-videos-4k trial--disorder--rarity": "463265255",
            "pack-open-videos-4k legacy--core--godneutral--rare": "463265203",
            "pack-open-videos-4k genesis--neutral--shiny-legendary": "463265120",
            "pack-open-videos-4k genesis--neutral--rare": "463265057",
            "pack-open-videos-4k genesis--neutral--legendary": "463264991",
            "pack-open-videos-4k genesis--neutral--epic": "463264938",
            "pack-open-videos-4k core--war--rare": "463264899",
            "pack-open-videos-4k core--neutral--rare": "463264821",
            "pack-open-videos-4k core--neutral--legendary": "463264772",
            "pack-open-videos-4k core--neutral--epic": "463264729",
            "pack-open-videos-4k core--neutral--common": "463264662",
            "pack-open-videos-4k core--nature--rare": "463264605",
            "pack-open-videos-4k core--magic--rare": "463264440",
            "pack-open-videos-4k core--light--rare": "463264367",
            "pack-open-videos-4k core--deception--rare": "463264293",
            "pack-open-videos-4k core--death--rare": "463264255",
            "pack-open-videos-720p core--death--rare": "670981848",
            "pack-open-videos-720p core--deception--rare": "670981876",
            "pack-open-videos-720p core--light--rare": "670981908",
            "pack-open-videos-720p core--magic--rare": "670981942",
            "pack-open-videos-720p core--nature--rare": "670981975",
            "pack-open-videos-720p core--neutral--common": "670982011",
            "pack-open-videos-720p core--neutral--epic": "670982040",
            "pack-open-videos-720p core--neutral--legendary": "670982074",
            "pack-open-videos-720p core--neutral--rare": "670982092",
            "pack-open-videos-720p core--war--rare": "670982121",
            "pack-open-videos-720p genesis--neutral--epic": "668081903",
            "pack-open-videos-720p genesis--neutral--legendary": "668081947",
            "pack-open-videos-720p genesis--neutral--rare": "668081980",
            "pack-open-videos-720p genesis--neutral--shiny-legendary": "668082010",
            "pack-open-videos-720p legacy--core--godneutral--rare": "668082037",
            "pack-open-videos-720p order--neutral--epic": "668082077",
            "pack-open-videos-720p order--neutral--legendary": "668082105",
            "pack-open-videos-720p order--neutral--rare": "668082141",
            "pack-open-videos-720p order--neutral--shiny-legendary": "668082169",
            "pack-open-videos-720p trial--disorder--rarity": "670985556",
            "pack-open-videos-720p trial--neutral--common": "668082239",
            "pack-open-videos-720p trial--neutral--epic": "668082280",
            "pack-open-videos-720p trial--neutral--legendary": "668082333",
            "pack-open-videos-720p trial--neutral--rare": "668082372",
            "pack-open-videos-720p trial--neutral--shiny-legendary": "668082399",
            "pack-open-videos-720p trial--order--rarity": "668082441",
            "chest-videos-open order--neutral--rare": "492326155",
            "chest-videos-open order--neutral--legendary": "492325362",
            "chest-videos-open trial--neutral--rare": "405676839",
            "chest-videos-open trial--neutral--legendary": "405676811",
            "chest-videos-open genesis--neutral--rare": "405676790",
            "chest-videos-open genesis--neutral--legendary": "405676766"
        };
    var Gt = o(80102), he = o(26532), It = o(61462);
    const oo = te.iv`
  ${(0, he.asCssProp)((0, he.setBoxSizing)())}

  :host {
    height: 100%;
    width: 100%;
    position: absolute;
    top: 0;
    left: 0;
    ${(0, he.asCssProp)((0, It.userSelect)("none"))};
  }

  :host(.visible) {
    ${(0, he.asCssProp)((0, It.userSelect)("auto"))};
  }

  gu-controllable-vimeo-embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    ${(0, he.asCssProp)(r.uifx.userSelect("none"))};
  }

  @keyframes fadeAndSlideUp {
    0% {
      opacity: 0;
      transform: translateY(5%);
    }
    100% {
      opacity: 1;
      transform: translateY(0%);
    }
  }

  .chestOpenVideo {
    background: linear-gradient(
      to bottom,
      ${(0, he.asCssProp)(r.colors.gunmetal[500])} 0%,
      ${(0, he.asCssProp)(r.colors.gunmetal[700])} 100%
    );
    animation: fadeAndSlideUp 0.5s ease-in-out;
    ${(0, he.asCssProp)(r.uifx.userSelect("auto"))};
    z-index: 2;
  }

  .chestOpenVideo--aboveAllLayers {
    z-index: 3;
  }

  .unOpenedChestsListing {
    position: absolute;
    top: calc(var(--ch) * 5);
    right: calc(var(--ch) * 5);
    display: flex;
    flex-direction: column;
    z-index: 2;
  }

  .unOpenedChestsListing__chest {
    position: relative;
    padding: 0;
    padding-right: calc(var(--cw) * 6);
    padding-left: calc(var(--cw) * 1);
    margin-bottom: calc(var(--ch) * 5);
    display: flex;
    align-items: center;
    justify-content: flex-start;
    background: ${(0, he.asCssProp)(r.colors.dark[900])};
    cursor: pointer;
    opacity: 0;
    border: 1px solid ${(0, he.asCssProp)(r.colors.dark[500])};
    ${(0, he.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .unOpenedChestsListing__chest:active {
    border: 1px solid ${(0, he.asCssProp)(r.colors.light[100])} !important;
    background: ${(0, he.asCssProp)(r.colors.light[100])} !important;
  }

  .unOpenedChestsListing__chest:active .unOpenedChestsListing__chest__openNowText {
    ${(0, he.asCssProp)(r.gradients.textFill(r.colors.dark[900]))};
  }

  .unOpenedChestsListing__chest:active .unOpenedChestsListing__chest__count {
    color: ${(0, he.asCssProp)(r.colors.dark[900])};
    border-color: ${(0, he.asCssProp)(r.colors.dark[900])};
  }

  .unOpenedChestsListing__chest:hover {
    border: 1px solid ${(0, he.asCssProp)(r.colors.gunmetal[700])};
    background: ${(0, he.asCssProp)(r.colors.gunmetal[700])};
  }

  .unOpenedChestsListing__chest:nth-child(1) {
    transition-delay: ${0}ms;
  }
  .unOpenedChestsListing__chest:nth-child(2) {
    transition-delay: ${200}ms;
  }
  .unOpenedChestsListing__chest:nth-child(3) {
    transition-delay: ${400}ms;
  }
  .unOpenedChestsListing__chest:nth-child(4) {
    transition-delay: ${600}ms;
  }

  .unOpenedChestsListing--visible .unOpenedChestsListing__chest {
    opacity: 1;
  }

  .unOpenedChestsListing__chest__picture {
    display: block;
    width: calc(var(--cw) * 7.5);
    height: calc(var(--cw) * 7.5 * 0.9183);
    /* chest image aspect ratio: 91.83%; */
    position: absolute;
    right: calc(var(--cw) * -1);
    top: 50%;
    transform: scaleX(-1) translateY(-50%);
  }

  .unOpenedChestsListing__chest__picture__img {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .unOpenedChestsListing__chest__openNowText {
    padding: calc(var(--ch) * 2) 0;
  }

  .unOpenedChestsListing__chest__count {
    margin: 0 calc(var(--cw) * 1);
    padding: calc(var(--ch) * 0.6) calc(var(--cw) * 0.6);
    border: 1px solid ${(0, he.asCssProp)(r.colors.gold[500])};
  }

  .chestsCta {
    position: absolute;
    left: 8%;
    bottom: 7%;
    min-width: ${(0, he.asCssProp)((0, Gt.gridUnits)(50))};
    opacity: 0;
    ${(0, he.asCssProp)(r.uifx.userSelect("none"))};
    ${(0, he.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .chestsCta--visible {
    ${(0, he.asCssProp)(r.uifx.userSelect("auto"))};
    opacity: 1;
    z-index: 2;
  }
`;
    customElements.define("gu-temple-chest-layer", (0, Ae.x1)({
        renderer: function no({unOpenedChests: S = [], volume: V}) {
            const u = (0, U.sO)(null), A = (0, Ae.I0)(ct), {
                currentOpenChest: Q,
                openChestVideoId: fe,
                openChestVideoPlaying: st,
                openChestVideoComplete: it,
                openPackVideoVisible: _t
            } = (0, Ae.v9)({
                store: ct,
                selector: Pe => ({
                    openChestVideoPlaying: Pe.openChestVideoPlaying,
                    openPackVideoVisible: Pe.openPackVideoVisible,
                    currentOpenChest: Pe.currentOpenChest,
                    openChestVideoId: Pe.openChestVideoId,
                    openChestVideoComplete: Pe.openChestVideoComplete
                })
            });
            (0, U.d4)(() => {
                if (this.isIos = We.I5.isIos(), !Q.set) return;
                let Pe = Zt[`chest-videos-open ${Q.set}--neutral--${Q.rarity}`];
                Pe || (Pe = Zt["chest-videos-open order--neutral--rare"]), A(rt(Pe))
            }, [Q]), (0, U.d4)(() => {
                _t ? this.classList.remove("visible") : this.classList.add("visible")
            }, [_t]);
            return te.dy`
    ${fe ? te.dy`
          <gu-controllable-vimeo-embed
            class=${(0, ie.$)({chestOpenVideo: !0, "chestOpenVideo--aboveAllLayers": st})}
            autoPlay
            videoId=${fe}
            pauseOnEndFrame
            @onVideoEnd=${() => {
                A(Qt(!0)), A(lt(!1)), this.dispatchEvent(new CustomEvent("onChestOpened", {
                    detail: Object.assign({}, Q),
                    bubbles: !0,
                    composed: !0
                }))
            }}
            ?domRef=${(0, ke.Q)(u)}
            ?muted=${this.isIos}
            .volume=${V}
          ></gu-controllable-vimeo-embed>
        ` : null}
    ${S.length ? te.dy`
          <div
            class=${(0, ie.$)({unOpenedChestsListing: !0, "unOpenedChestsListing--visible": !_t})}
          >
            ${S.reduce((Pe, ze) => {
                let m;
                return Pe.find((a, M) => {
                    const F = ze.set === a.set && ze.rarity === a.rarity;
                    return F && (m = M), F
                }) ? Pe[m].quantityCount += 1 : Pe.push(Object.assign(Object.assign({}, ze), {quantityCount: 1})), Pe
            }, []).map(Pe => {
                const ze = `${Pe.set}--neutral--${Pe.rarity}`;
                return te.dy`
                  <div class="unOpenedChestsListing__chest" @click=${() => (Pe => {
                    A(lt(!0)), Pe.rarity === Q.rarity && Pe.set === Q.set ? (A(Qt(!1)), u.current.playVideo(0)) : A((S => ({
                        type: Be,
                        payload: S
                    }))(Pe))
                })(Pe)}>
                    <picture class="unOpenedChestsListing__chest__picture">
                      <source
                        type="image/webp"
                        srcset="
                          //images.godsunchained.com/transparent-chest-images--open/434/${ze}.webp 434w,
                          //images.godsunchained.com/transparent-chest-images--open/256/${ze}.webp 256w,
                          //images.godsunchained.com/transparent-chest-images--open/128/${ze}.webp 128w
                        "
                      />
                      <source
                        type="image/png"
                        srcset="
                          //images.godsunchained.com/transparent-chest-images--open/434/${ze}.png 434w,
                          //images.godsunchained.com/transparent-chest-images--open/256/${ze}.png 256w,
                          //images.godsunchained.com/transparent-chest-images--open/128/${ze}.png 128w
                        "
                      />
                      <img
                        src="//images.godsunchained.com/transparent-chest-images--open/128/${ze}.png"
                        alt="chest image"
                        class="unOpenedChestsListing__chest__picture__img"
                      />
                    </picture>
                    <gu-heading-text
                      fillGradient=${r.gradients.gold.simple()}
                      size="3x-small"
                      .responsiveSize=${[{size: "2x-small", breakpoint: "small"}]}
                      class="unOpenedChestsListing__chest__openNowText"
                    >
                      Open 1 Now
                    </gu-heading-text>
                    <gu-paragraph-text
                      kind="small"
                      class="unOpenedChestsListing__chest__count"
                      fillColor=${r.colors.gold[500]}
                      fontWeight="bold"
                    >
                      ${Pe.quantityCount}x
                    </gu-paragraph-text>
                  </div>
                `
            })}
          </div>
        ` : null}

    <gu-primary-hex-button
      size="large"
      class=${(0, ie.$)({chestsCta: !0, "chestsCta--visible": it})}
      @click=${() => {
                A(Qt(!1)), A(rt(null))
            }}
    >
      Back to Packs
    </gu-primary-hex-button>
  `
        }, props: {properties: {unOpenedChests: {type: Array}, volume: {type: Number}}, styles: oo}
    }));
    const Ms = te.iv`
  :host {
    position: absolute;
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 1;
    background: ${(0, he.asCssProp)(r.colors.gunmetal[900])};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    opacity: 0.94;
  }

  .icon {
    font-size: ${(0, he.asCssProp)((0, Gt.gridUnits)(20))};
  }

  .text {
    max-width: 350px;
  }

  @media screen and (min-width: ${(0, he.asCssProp)(r.breakpoints.breakpointSizeMapping.small)}) {
    :host {
      display: none;
    }
  }
`;
    customElements.define("gu-temple-overlay-layer", (0, Ae.x1)({
        renderer: function ns() {
            return te.dy`
    <gu-icon iconLigature="alert_triangle" align="center" fillColor=${r.colors.god.war.secondary} class="icon"></gu-icon>
    <gu-vertical-space top="x-large">
      <gu-paragraph-text class="text" align="center" fillColor=${r.colors.light[100]}>
        <slot></slot>
      </gu-paragraph-text>
    </gu-vertical-space>
  `
        }, props: {properties: {message: {type: String}}, styles: Ms}
    }));
    var St = o(49749), Os = o(46461), ro = o(77518);
    const et = "/assets/audio/temple", hs = {
        diamond__common: `${et}/temple_reveal_diamond_common`,
        diamond__rare: `${et}/temple_reveal_diamond_rare`,
        diamond__epic: `${et}/temple_reveal_diamond_epic`,
        diamond__legendary: `${et}/temple_reveal_diamond_legendary`,
        gold__common: `${et}/temple_reveal_gold_common`,
        gold__rare: `${et}/temple_reveal_gold_rare`,
        gold__epic: `${et}/temple_reveal_gold_epic`,
        gold__legendary: `${et}/temple_reveal_gold_legendary`,
        shadow__common: `${et}/temple_reveal_shadow_common`,
        shadow__rare: `${et}/temple_reveal_shadow_rare`,
        shadow__epic: `${et}/temple_reveal_shadow_epic`,
        shadow__legendary: `${et}/temple_reveal_shadow_legendary`,
        meteorite__common: `${et}/temple_reveal_meteorite_common`,
        meteorite__rare: `${et}/temple_reveal_meteorite_rare`,
        meteorite__epic: `${et}/temple_reveal_meteorite_epic`,
        meteorite__legendary: `${et}/temple_reveal_meteorite_legendary`,
        plain__common: `${et}/temple_reveal_plain_common`,
        plain__rare: `${et}/temple_reveal_plain_rare`,
        plain__epic: `${et}/temple_reveal_plain_epic`,
        plain__legendary: `${et}/temple_reveal_plain_legendary`
    }, $s = te.iv`
  ${(0, he.asCssProp)((0, he.setBoxSizing)())}

  :host {
    position: absolute;
    width: 100%;
    /* Add some padding so that scrollbars don't flicker while things are being
    rotate transformed... */
    padding: calc(var(--ch) * 5) calc(var(--cw) * 5) calc(var(--ch) * 15);
    top: calc(var(--ch) * 5);
    left: 0;
    overflow-x: auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    z-index: 1;
  }

  :host(.visible) {
    z-index: 1;
  }

  .raffleTicketsArea {
    min-width: 155px;
    min-height: 88px;
    width: calc(var(--cw) * 18);
    height: calc(var(--ch) * 15);
    margin-right: calc(var(--cw) * 2);
    opacity: 0;
    display: flex;
    position: relative;
    cursor: pointer;
    ${(0, he.asCssProp)(r.animation.slowTransition("height"))};
    transition-property: height, transform;
  }

  .raffleTicketsArea--opened {
    height: calc(var(--ch) * (15 + 17.3));
  }

  .raffleTicketsArea__dropdown {
    position: absolute;
    background: ${(0, he.asCssProp)(r.gradients.gold.simple("bottom"))};
    padding: 3px;
    width: 68%;
    height: calc(var(--ch) * 17.3);
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    ${(0, he.asCssProp)((0, he.drawBottomHexShapePolygonMask)("calc(var(--ch) * 4)"))};
    ${(0, he.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .raffleTicketsArea--opened .raffleTicketsArea__dropdown {
    opacity: 1;
  }

  .raffleTicketsArea__dropdown__inner {
    width: 100%;
    height: 100%;
    background: ${(0, he.asCssProp)(r.colors.gunmetal[900])};
    ${(0, he.asCssProp)((0, he.drawBottomHexShapePolygonMask)("calc(var(--ch) * 3.9)"))};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: calc(var(--ch) * 4) 0 calc(var(--ch) * 6);
  }

  .raffleTicketsArea__dropdown__inner__label {
    font-size: calc(var(--cw) * 1);
  }

  /* @TODO: Due to the use of !important inside of our gu-heading-text control...
  this one little piece of text cannot use the standard control.
  Once we have done away with all global styles, this can be once again made into a
  standard heading text control */
  .raffleTicketsArea__dropdown__inner__value {
    font-family: ${(0, he.asCssProp)(r.typography.headingFont)};
    font-size: calc(var(--cw) * 2.2);
    line-height: 1;
    margin: calc(var(--ch) * 0.5) 0 0 0;
  }

  .raffleTicketsArea__ticketImage {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
  }

  .raffleTicketsArea__ticketImage__img {
    display: block;
    width: 100%;
  }

  .perspectiveWrapper {
    position: relative;
    width: calc(var(--cw) * 16);
    perspective: calc(var(--cw) * 50);
  }

  .perspectiveWrapper:last-child {
    margin: 0;
  }

  .cardWrapper {
    height: 100%;
    position: relative;
    transform-style: preserve-3d;
    cursor: pointer;
  }

  .cardWrapper__frontFace,
  .cardWrapper__rearFace {
    transform: rotateX(0deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /*
  @TEMP CODE DEBUG:
  (used to quickly style the cards and tickets GUI)
  ---------------------------------------- *
  .unlockedPackItems {
    opacity: 1;
  }
  .raffleTicketsArea,
  .cardWrapper {
    opacity: 1;
  }
  .cardWrapper__frontFace,
  .cardWrapper__rearFace {
    backface-visibility: visible;
  }
  /* -------------------------------------------- */

  .cardWrapper__frontFace {
    width: 100%;
    position: relative;
  }

  .cardWrapper__frontFace__bloom {
    position: absolute;
    right: 8%;
    width: 76%;
    top: 9%;
    height: 88%;
    border-radius: calc(var(--cw) * 3);
    opacity: 0;
    transform: scale(0.7);
    filter: brightness(1);
  }

  .cardWrapper__frontFace__bloom--rare {
    background: ${(0, he.asCssProp)(r.colors.rarity.rare)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, he.asCssProp)(r.colors.rarity.rare)};
  }
  .cardWrapper__frontFace__bloom--epic {
    background: ${(0, he.asCssProp)(r.colors.rarity.epic)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, he.asCssProp)(r.colors.rarity.epic)};
  }
  .cardWrapper__frontFace__bloom--legendary {
    background: ${(0, he.asCssProp)(r.colors.rarity.legendary)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, he.asCssProp)(r.colors.rarity.legendary)};
  }
  .cardWrapper__frontFace__bloom--mythic {
    background: ${(0, he.asCssProp)(r.colors.rarity.mythic)};
    box-shadow: 0 0 calc(var(--ch) * 3) calc(var(--ch) * 3) ${(0, he.asCssProp)(r.colors.rarity.mythic)};
  }

  .cardWrapper__frontFace__scarcity {
    padding-left: calc(var(--cw) * 1);
    position: absolute;
    width: 100%;
    left: 0;
    top: calc(100% + (var(--ch) * 1.5));
  }

  .cardWrapper__frontFace__card {
    position: relative;
  }

  .cardWrapper__rearFace {
    display: none;
  }

  .cardWrapper__rearFace__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }
`, ms = S => ro.PW[S];
    customElements.define("gu-temple-pack-card-listing", (0, Ae.x1)({
        renderer: function Ts({}) {
            const V = (0, Ae.I0)(ct), [u, A] = (0, U.eJ)([]), {
                currentOpenPack: Q,
                firstPackCardsVisible: fe,
                raffleTicketsDisplayVisible: st,
                flippedCards: it
            } = (0, Ae.v9)({
                store: ct,
                selector: Pe => ({
                    flippedCards: Pe.flippedCards,
                    raffleTicketsDisplayVisible: Pe.raffleTicketsDisplayVisible,
                    firstPackCardsVisible: Pe.firstPackCardsVisible,
                    currentOpenPack: Pe.currentOpenPack
                })
            });
            (0, U.d4)(() => {
                fe ? this.classList.add("visible") : this.classList.remove("visible"), St.p8.to(this.shadowRoot.children, {
                    duration: fe ? .3 : 0,
                    opacity: fe ? 1 : 0,
                    stagger: fe ? .15 : 0,
                    onComplete: () => {
                        fe || _t()
                    }
                })
            }, [fe]), (0, U.d4)(() => {
                !Q.cards || A([...Q.cards.map(Pe => {
                    const {quality: ze, rarity: m} = Pe, D = hs[`${ms(ze - 1)}__${m}`];
                    return D ? new Os.Howl({src: [`${D}.ogg`, `${D}.mp3`]}) : {
                        play: () => {
                        }, id: `${ms(ze)}__${m}`
                    }
                })])
            }, [Q]), (0, U.d4)(() => () => _t(), []);
            const _t = () => {
                St.p8.set([this.shadowRoot.querySelectorAll(".cardWrapper"), this.shadowRoot.children], {clearProps: "all"})
            }, ut = Pe => {
                V({type: Fe, payload: Pe});
                const ze = this.shadowRoot.querySelectorAll(".perspectiveWrapper")[Pe].querySelector(".cardWrapper"),
                    m = ze.querySelector(".cardWrapper__frontFace__bloom"), D = !!it[Pe];
                D || u[Pe].play(), St.p8.killTweensOf([m, ze]), St.p8.set([m], {clearProps: "all"});
                const a = St.p8.timeline({paused: !0}),
                    M = St.p8.timeline({repeat: -1, repeatDelay: 1, delay: 1, yoyo: !0, paused: !0});
                M.to(m, {duration: 1.2, filter: "brightness(1.5)"}).to(m, {
                    duration: 1.2,
                    filter: "brightness(1)"
                }), a.to(ze, {duration: .4, rotateY: D ? 0 : 180, ease: "power2.inOut"}).to(m, {
                    duration: .7,
                    opacity: 1,
                    scale: 1.04,
                    ease: "power2.inOut"
                }, "-=0.2").to(m, {
                    duration: .4,
                    opacity: .78,
                    scale: .88,
                    ease: "power2.inOut"
                }).add(M.play(), "loopingBloom"), a.play()
            };
            return te.dy`
    ${Q.raffleTickets ? te.dy`
          <div
            class=${(0, ie.$)({raffleTicketsArea: !0, "raffleTicketsArea--opened": st})}
          >
            <div
              class=${(0, ie.$)({raffleTicketsArea__dropdown: !0})}
            >
              <div class="raffleTicketsArea__dropdown__inner">
                <gu-paragraph-text
                  kind="tag"
                  align="center"
                  class="raffleTicketsArea__dropdown__inner__label"
                  fillGradient=${r.gradients.gold.simple()}
                >
                  Draw Tickets
                </gu-paragraph-text>

                <gu-paragraph-text
                  kind="tag"
                  align="center"
                  class="raffleTicketsArea__dropdown__inner__label"
                  fillGradient=${r.gradients.gold.simple()}
                >
                  Received
                </gu-paragraph-text>

                <h3 class="raffleTicketsArea__dropdown__inner__value">${Q.raffleTickets}</h3>
              </div>
            </div>
            <picture class="raffleTicketsArea__ticketImage" @click=${() => V({type: ht})}>
              <source
                srcset="
                  /assets/images/collectables-art/collectables-art--raffle-ticket@3x.webp 687w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@2x.webp 458w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@1x.webp 229w
                "
                type="image/webp"
              />
              <source
                srcset="
                  /assets/images/collectables-art/collectables-art--raffle-ticket@3x.png 687w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@2x.png 458w,
                  /assets/images/collectables-art/collectables-art--raffle-ticket@1x.png 229w
                "
                type="image/png"
              />
              <img
                src="/assets/images/collectables-art/collectables-art--raffle-ticket@1x.png"
                alt=""
                class="raffleTicketsArea__ticketImage__img"
              />
            </picture>
          </div>
        ` : null}
    ${Q.cards ? Q.cards.map((Pe, ze) => te.dy`
            <div class="perspectiveWrapper">
              <div class=${(0, ie.$)({cardWrapper: !0})} @click=${() => ut(ze)}>
                <div class="cardWrapper__frontFace">
                  <i class="cardWrapper__frontFace__bloom cardWrapper__frontFace__bloom--${Pe.rarity}"></i>
                  <gu-card-picture
                    protoId=${Pe.proto}
                    quality=${Pe.quality}
                    class="cardWrapper__frontFace__card"
                  ></gu-card-picture>

                  ${null}
                </div>
                <picture class="cardWrapper__rearFace">
                  <source
                    type="image/webp"
                    srcset="
                      //images.godsunchained.com/rear-card-face-images/1024/regular-gu-rear-card-face.webp 1024w,
                      //images.godsunchained.com/rear-card-face-images/720/regular-gu-rear-card-face.webp   720w,
                      //images.godsunchained.com/rear-card-face-images/512/regular-gu-rear-card-face.webp   512w,
                      //images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.webp   256w
                    "
                  />
                  <source
                    type="image/png"
                    srcset="
                      //images.godsunchained.com/rear-card-face-images/1024/regular-gu-rear-card-face.png 1024w,
                      //images.godsunchained.com/rear-card-face-images/720/regular-gu-rear-card-face.png   720w,
                      //images.godsunchained.com/rear-card-face-images/512/regular-gu-rear-card-face.png   512w,
                      //images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.png   256w
                    "
                  />
                  <img
                    src="//images.godsunchained.com/rear-card-face-images/256/regular-gu-rear-card-face.png"
                    alt="GodsUnchained rear card face image"
                    class="cardWrapper__rearFace__img"
                  />
                </picture>
              </div>
            </div>
          `) : null}
  `
        }, props: {properties: {volume: {type: Number}}, styles: $s}
    }));
    var qt = o(92436), Lo = o(71459), As = o.n(Lo), Is = o(63082), Ds = o.n(Is), _s = o(65171);
    const fs = te.iv`
  ${(0, he.asCssProp)((0, he.setBoxSizing)())}

  :host {
    height: calc(100vh - var(--headerAreaHeight));
    display: flex;
    flex-flow: column nowrap;
    overflow: hidden;
  }

  .videoAspectRatio {
    margin: auto;
    position: relative;
    padding-bottom: 56.25%;
    width: 100%;
  }
  
  .open-pack-header {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    text-align: center;
    text-transform: uppercase;
  }

  .videoAspectRatio__img {
    display: none;
  }

  @media screen and (min-aspect-ratio: 1282/800) {
    .videoAspectRatio {
      height: 100%;
      width: auto;
      padding-bottom: 0;
    }
    .videoAspectRatio__img {
      display: block;
      width: auto;
      height: 100%;
    }
  }

  gu-controllable-vimeo-embed {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    ${(0, he.asCssProp)(r.uifx.userSelect("none"))};
  }

  .packOpenVideo {
    ${(0, he.asCssProp)(r.animation.standardTransition("opacity"))};
  }

  .packOpenVideo--hidden {
    opacity: 0;
  }

  /*

    @NOTE: position the drag target area roughly above the podium center

  */
  .targetDropArea {
    position: absolute;
    top: calc(var(--ch) * 32.8);
    left: calc(var(--cw) * 48.5);
    width: calc(var(--ch) * 24.5);
    height: calc(var(--ch) * 31);
  }

  /*

    @NOTE: position the draggable pack, roughly above the left podium stand

  */

  .draggablePackHitzone {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .draggablePack {
    position: absolute;
    bottom: calc(var(--ch) * 10);
    left: calc(var(--cw) * 8.7);
    width: calc(var(--ch) * 34);
    transform: rotate(-4deg);
    opacity: 0;
    cursor: pointer;
    ${(0, he.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .draggablePack--touchable {
    ${(0, he.asCssProp)((0, It.userSelect)("auto"))};
  }

  .draggablePack--visible {
    opacity: 1;
  }

  .draggablePack--disabled {
    opacity: 0;
  }

  .draggablePack__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
    filter: drop-shadow(0 0 calc(var(--ch) * 5) rgba(${(0, he.asCssProp)((0, _s.hexToCssRgbString)(r.colors.black))}, 0.6));
  }

  .helpText {
    position: absolute;
    top: calc(var(--ch) * 67.5);
    left: calc(var(--cw) * 41);
    width: calc(var(--cw) * 30);
    text-align: center;
  }

  .unlockedPackItems {
    position: absolute;
    width: 100%;
    /* Add some padding so that scrollbars dont flick on while things are being
    rotate transformed... */
    padding: calc(var(--ch) * 5) calc(var(--cw) * 5) calc(var(--ch) * 15);
    top: calc(var(--ch) * 5);
    left: 0;
    overflow-x: auto;
    display: flex;
    justify-content: space-evenly;
    align-items: center;
    opacity: 0;
  }

  .unlockedPackItems--visible {
    opacity: 1;
    z-index: 1;
  }

  .unlockedPackItems__raffleTicketsArea {
    min-width: 155px;
    min-height: 88px;
    width: calc(var(--cw) * 18);
    height: calc(var(--ch) * 15);
    margin-right: calc(var(--cw) * 2);
    opacity: 0;
    display: flex;
    position: relative;
    ${(0, he.asCssProp)((0, It.userSelect)("none"))};
    ${(0, he.asCssProp)(r.animation.slowTransition("height"))};
    transition-property: height, transform;
  }

  .unlockedPackItems__raffleTicketsArea--opened {
    height: calc(var(--ch) * (15 + 17.3));
  }

  .unlockedPackItems__raffleTicketsArea__dropdown {
    position: absolute;
    background: ${(0, he.asCssProp)(r.gradients.gold.simple("bottom"))};
    padding: 3px;
    width: 68%;
    height: calc(var(--ch) * 17.3);
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    opacity: 0;
    ${(0, he.asCssProp)((0, he.drawBottomHexShapePolygonMask)("calc(var(--ch) * 4)"))};
    ${(0, he.asCssProp)(r.animation.slowTransition("opacity"))};
  }

  .unlockedPackItems__raffleTicketsArea--opened .unlockedPackItems__raffleTicketsArea__dropdown {
    opacity: 1;
  }

  .unlockedPackItems__raffleTicketsArea__dropdown__inner {
    width: 100%;
    height: 100%;
    background: ${(0, he.asCssProp)(r.colors.gunmetal[900])};
    ${(0, he.asCssProp)((0, he.drawBottomHexShapePolygonMask)("calc(var(--ch) * 3.9)"))};
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    padding: calc(var(--ch) * 4) 0 calc(var(--ch) * 6);
  }

  .unlockedPackItems__raffleTicketsArea__dropdown__inner__label {
    font-size: calc(var(--cw) * 1);
  }

  /* @TODO: Due to the use of !important inside of our gu-heading-text control...
  this one little piece of text cannot use the standard control.
  Once we have done away with all global styles, this can be once again made into a
  standard heading text control */
  .unlockedPackItems__raffleTicketsArea__dropdown__inner__value {
    font-family: ${(0, he.asCssProp)(r.typography.headingFont)};
    font-size: calc(var(--cw) * 2.2);
    line-height: 1;
    margin: calc(var(--ch) * 0.5) 0 0 0;
  }

  .unlockedPackItems__raffleTicketsArea__ticketImage {
    position: relative;
    display: block;
    width: 100%;
    cursor: pointer;
  }

  .unlockedPackItems__raffleTicketsArea__ticketImage__img {
    display: block;
    width: 100%;
  }

  .unlockedPackItems__3dPerspectiveWrapper {
    position: relative;
    width: calc(var(--cw) * 16);
    perspective: calc(var(--cw) * 50);
  }

  .unlockedPackItems__3dPerspectiveWrapper:last-child {
    margin: 0;
  }

  .unlockedPackItems__cardWrapper {
    ${(0, he.asCssProp)((0, It.userSelect)("none"))};
    ${(0, he.asCssProp)(r.animation.slowTransition("transform"))};
    transition-timing-function: ease-out;
    height: 100%;
    opacity: 0;
    position: relative;
    transform-style: preserve-3d;
    transition-property: transform, opacity;
  }

  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(1) .unlockedPackItems__cardWrapper {
    transition-delay: ${0}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(2) .unlockedPackItems__cardWrapper {
    transition-delay: ${150}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(3) .unlockedPackItems__cardWrapper {
    transition-delay: ${300}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(4) .unlockedPackItems__cardWrapper {
    transition-delay: ${450}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(5) .unlockedPackItems__cardWrapper {
    transition-delay: ${600}ms;
  }
  .unlockedPackItems--visible .unlockedPackItems__3dPerspectiveWrapper:nth-of-type(6) .unlockedPackItems__cardWrapper {
    transition-delay: ${750}ms;
  }

  .unlockedPackItems__cardWrapper--flipped {
    transform: rotateY(180deg);
    transition-delay: 0ms !important;
  }

  .unlockedPackItems--visible .unlockedPackItems__cardWrapper,
  .unlockedPackItems--visible .unlockedPackItems__raffleTicketsArea {
    opacity: 1;
    cursor: pointer;
    ${(0, he.asCssProp)((0, It.userSelect)("auto"))};
  }

  .unlockedPackItems__cardWrapper__frontFace,
  .unlockedPackItems__cardWrapper__rearFace {
    transform: rotateX(0deg);
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }

  /*
  @TEMP CODE DEBUG:
  (used to quickly style the cards and tickets GUI)
  ---------------------------------------- *
  .unlockedPackItems {
    opacity: 1;
  }
  .unlockedPackItems__raffleTicketsArea,
  .unlockedPackItems__cardWrapper {
    opacity: 1;
    ${(0, he.asCssProp)((0, It.userSelect)("auto"))};
  }
  .unlockedPackItems__cardWrapper__frontFace,
  .unlockedPackItems__cardWrapper__rearFace {
    backface-visibility: visible;
  }
  .unlockedPackItems__cardWrapper__rearFace {
    opacity: 0.5;
  }
  /* -------------------------------------------- */

  .unlockedPackItems__cardWrapper__frontFace {
    width: 100%;
    transform: rotateY(180deg);
    position: relative;
  }

  .unlockedPackItems__cardWrapper__frontFace__scarcity {
    padding-left: calc(var(--cw) * 1);
    position: absolute;
    width: 100%;
    left: 0;
    top: calc(100% + (var(--ch) * 1.5));
  }

  .unlockedPackItems__cardWrapper__rearFace {
    position: absolute;
    top: 6%;
    height: 93%;
    width: 100%;
    right: 4.5%;
  }

  .unlockedPackItems__cardWrapper__rearFace__img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  .ctasArea {
    position: absolute;
    z-index: 1;
    bottom: 13%;
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    flex-direction: column;
  }

  .ctasArea__cta {
    min-width: 200px;
  }

`;
    customElements.define("gu-temple-view-layer", (0, Ae.x1)({
        renderer: function Mt({
                                  unOpenedPacks: S = [],
                                  unOpenedChests: V = [],
                                  volume: u = .9,
                                  headerAreaHeight: A = r.measurements.standardHeaderHeight
                              }) {
            const Q = (0, U.sO)(null), fe = (0, U.sO)(null), st = (0, U.sO)(null), it = (0, U.sO)(null),
                _t = (0, U.sO)(null), ut = (0, U.sO)(null), Pe = (0, Ae.I0)(ct), {
                    openPackVideoId: ze,
                    openPackVideoVisible: m,
                    firstPackCardsVisible: D,
                    flippedCards: a,
                    packImageVisible: M,
                    currentOpenPack: F,
                    openPackVideoLoading: ge,
                    openPackVideoPlaying: De
                } = (0, Ae.v9)({
                    store: ct,
                    selector: Ze => ({
                        openPackVideoId: Ze.openPackVideoId,
                        openPackVideoVisible: Ze.openPackVideoVisible,
                        firstPackCardsVisible: Ze.firstPackCardsVisible,
                        flippedCards: Ze.flippedCards,
                        packImageVisible: Ze.packImageVisible,
                        currentOpenPack: Ze.currentOpenPack,
                        openPackVideoLoading: Ze.openPackVideoLoading,
                        openPackVideoPlaying: Ze.openPackVideoPlaying
                    })
                });
            (0, U.d4)(() => {
                this.style.setProperty("--headerAreaHeight", `${A}px`)
            }, [A]), (0, U.d4)(() => {
                this.openPackVideoLoading = ge
            }, [ge]), (0, U.d4)(() => ($t.observe(_t.current), () => {
                $t.unobserve(_t.current), Ke(), gs()
            }), []);
            const He = () => {
                Ke(), this.gestureControl = new (As())(fe.current, {
                    sensitivity: 0,
                    passive: !1,
                    capture: !0,
                    startDirectionLoopCount: 1
                }), this.gestureControl.on("pan.prestart", yt), this.gestureControl.on("pan.start", gt), this.gestureControl.on("pan.all", Jt), this.gestureControl.on("pan.end", ve)
            }, Ke = () => {
                this.gestureControl && (this.gestureControl.removeListener("pan.prestart", yt), this.gestureControl.removeListener("pan.start", gt), this.gestureControl.removeListener("pan.all", Jt), this.gestureControl.removeListener("pan.end", ve), this.gestureControl.destroy(), this.gestureControl = null)
            };
            (0, U.d4)(() => {
                if (!F.set) return void Ke();
                He();
                let Ze = Zt[`pack-open-videos-720p ${F.set}--${F.god}--${F.rarity}`];
                Ze || (Ze = Zt["pack-open-videos-720p core--neutral--rare"]), Pe((S => ({type: Tt, payload: S}))(Ze))
            }, [F]), (0, U.d4)(() => {
                !F.set && S.length && Pe(we(S))
            }, [S]);
            const yt = Ze => {
                Ze.sourceEvent.preventDefault()
            }, gt = Ze => {
                this.terminatedPan = !1, St.p8.set(Q.current, {x: 0, y: 0})
            }, Jt = ({deltaX: Ze, deltaY: to, sourceEvent: Eo}) => {
                if (be(), We.dz.checkOutOfBounds({
                    x: Eo.pageX,
                    y: Eo.pageY,
                    width: this.dimensions.width,
                    height: this.dimensions.height,
                    top: this.dimensions.top,
                    left: this.dimensions.left,
                    tolerance: 20
                })) return this.terminatedPan = !0, ve({});
                this.terminatedPan || St.p8.set(Q.current, {
                    x: this.openPackVideoLoading ? .2 * Ze : Ze,
                    y: this.openPackVideoLoading ? .2 * to : to
                })
            }, ve = Ze => {
                St.p8.to(Q.current, this.draggablePackIsIntersecting && !this.openPackVideoLoading ? {
                    rotation: -1,
                    x: 37.2 * this.dimensions.cw + "px",
                    y: -25 * this.dimensions.ch + "px",
                    onComplete: () => Ht(),
                    duration: .3
                } : {duration: .3, x: 0, y: 0})
            }, be = Ds()(() => {
                this.draggablePackIsIntersecting = function vs(S, V) {
                    let u = !1;
                    return S && V && (u = !(S.right < V.left || S.left > V.right || S.bottom < V.top || S.top > V.bottom)), u
                }(Q.current.getBoundingClientRect(), this.dragTargetRectangle)
            }, 50), $t = new qt.do(Ze => {
                Ze.forEach(to => Dt())
            }), Dt = Ds()(() => {
                const Ze = _t.current.getBoundingClientRect();
                this.dimensions = {
                    ch: .01 * _t.current.offsetHeight,
                    cw: .01 * _t.current.offsetWidth,
                    width: Ze.width,
                    height: Ze.height,
                    top: Ze.top,
                    left: Ze.left
                }, this.style.setProperty("--cw", `${this.dimensions.cw}px`), this.style.setProperty("--ch", `${this.dimensions.ch}px`), this.dragTargetRectangle = ut.current.getBoundingClientRect()
            }, 500), Ht = () => {
                Pe({
                    type: bt,
                    payload: !0
                }), this.dispatchEvent(new CustomEvent("onPackOpened", {detail: {pack: F}})), st.current.playVideo(), Pe(tt(!0))
            }, gs = () => {
                console.log("RESET TEMPLE CODE"), Pe({type: Qe}), St.p8.set(Q.current, {clearProps: "all"})
            }, es = M, ws = !F.set || Object.keys(a).length === F.cards.length, ds = ws && !S.length;
            const fillColorMap = {common: '#bcbcbc', rare: '#26b1fb', epic: '#971ded', legendary: '#f9c123'};
            return te.dy`
    <div class="videoAspectRatio" ?domRef=${(0, ke.Q)(_t)}>
      <img class="videoAspectRatio__img" alt="ratio image" src="/assets/images/ratio-images/16-x-9-ratio.png" />
      
      ${F && F.rarity ? te.dy`
        <gu-heading-text class="open-pack-header" fillcolor="${fillColorMap[F.rarity] ?? fillColorMap.common}" size="large">${F.rarity} pack</gu-heading-text>
      ` : null}

      <gu-temple-pack-card-listing></gu-temple-pack-card-listing>

      <div
        class=${(0, ie.$)({ctasArea: !0})}
      >
        ${ds ? te.dy`
              <gu-primary-hex-button
                size="large"
                href=${`/#/${Z.gv.routeContent({}).home.path}`}
                class="ctasArea__cta ctasArea__cta--buyPacksCta"
              >
                Play to unlock
              </gu-primary-hex-button>
            ` : null}
        ${S.length ? te.dy`
              <gu-primary-hex-button size="large" @click=${() => {
                St.p8.set(Q.current, {clearProps: "all"});
                Pe({type: At});
                Ht();
                Pe(tt(!1));
                Pe({type: ze, payload: !0});
            }} class="ctasArea__cta">
                Open Pack
              </gu-primary-hex-button>
              <gu-vertical-space top="large">
                <gu-heading-text size="2x-small" align="center"> ${S.length - 1} packs left </gu-heading-text>
              </gu-vertical-space>
            ` : null}
      </div>

      ${M ? te.dy` <gu-temple-chest-layer .unOpenedChests=${V} .volume=${u}></gu-temple-chest-layer> ` : null}
      ${F.set ? te.dy`
            <gu-card-pack-picture
              type="temple"
              set=${F.set}
              god=${F.god}
              rarity=${F.rarity}
              class=${(0, ie.$)({
                draggablePack: !0,
                "draggablePack--visible": M && !m,
                "draggablePack--disabled": es,
                "draggablePack--touchable": this.isIos
            })}
              ?domRef=${(0, ke.Q)(Q)}
              @click=${() => !!this.isIos && Ht()}
            ></gu-card-pack-picture>
            ${D ? null : te.dy`<i class="draggablePackHitzone" ?domRef=${(0, ke.Q)(fe)}></i>`}
          ` : null}
    </div>
  `
        },
        props: {
            properties: {
                unOpenedPacks: {type: Array},
                unOpenedChests: {type: Array},
                volume: {type: Number},
                headerAreaHeight: {type: Number}
            }, styles: fs
        }
    }));
    var Us = o(4390), us = o(8929), jt = o(7625), ao = o(61709), rs = o(24850), Vt = o(11735), Kt = o(28510);
    let bs = (() => {
        class S {
            constructor(u, A, Q) {
                this.environment = u, this.router = A, this.modalService = Q
            }

            ngOnInit() {
            }

            onBuyPacks() {
                this.closeModal(), "website" === this.environment.clientType ? this.router.navigate([Z.CF.J.buyPacks.path]) : window.open(Z.gv.routeContent(this.environment).buyPacks.url)
            }

            closeModal() {
                this.modalService.dismissAll()
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Se.Ho), e.Y36(Vt.F0), e.Y36(Kt.Qz))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-temple-chest-opened-modal"]],
            inputs: {transactionUrl: "transactionUrl"},
            decls: 16,
            vars: 1,
            consts: [["bottom", "2x-large"], ["size", "small", "fillGradient", "gradients.gold.simple"], ["fillColor", "colors.light.100", "align", "center"], ["both", "2x-large"], ["kind", "tag", "target", "_blank", "fillColor", "colors.apocyan.300", 3, "href"], ["top", "2x-large"], ["size", "large", 3, "click"], ["iconLigature", "close_x", "fillColor", "colors.apocyan.300", 1, "xButton", 3, "click"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "gu-vertical-space", 0)(1, "gu-heading-text", 1), e._uU(2, " Chest opened! "), e.qZA()(), e.TgZ(3, "gu-paragraph-text", 2), e._uU(4, " Opening a chest grants you 5 packs of the corresponding quality. Once you open a chest, the packs have to be created on the blockchain, and sent to you. "), e.TgZ(5, "strong"), e._uU(6, "This can take a few minutes to complete."), e.qZA()(), e.TgZ(7, "gu-vertical-space", 3)(8, "gu-simple-text-button", 4), e._uU(9, " you can check the status of your transaction here "), e.qZA()(), e.TgZ(10, "gu-paragraph-text", 2), e._uU(11, " When the transaction is complete, your new packs will show up in the temple.\n"), e.qZA(), e.TgZ(12, "gu-vertical-space", 5)(13, "gu-primary-hex-button", 6), e.NdJ("click", function () {
                    return A.onBuyPacks()
                }), e._uU(14, " BUY "), e.qZA()(), e.TgZ(15, "gu-icon", 7), e.NdJ("click", function () {
                    return A.closeModal()
                }), e.qZA()), 2 & u && (e.xp6(8), e.s9C("href", A.transactionUrl))
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;align-items:center;justify-content:center;background:#0F1B27;width:100%;min-width:60vh;max-width:75vw;min-height:40vh;padding:40px;text-align:center;position:relative;box-shadow:inset 0 0 0 2px #3d5a7480}.xButton[_ngcontent-%COMP%]{position:absolute;top:12px;right:12px;font-size:28px;cursor:pointer}.xButton[_ngcontent-%COMP%]:hover{color:#f6f6f6}"]
        }), S
    })();
    var Cs = o(51395), mt = o(74449);
    const is = ["viewLayer"];
    let lo = (() => {
        class S {
            constructor(u, A, Q, fe, st, it, _t, ut, Pe) {
                this.environment = u, this.packService = A, this.chestService = Q, this.router = fe, this.ngZone = st, this.ethService = it, this.modalService = _t, this.audioService = ut, this.navigationStateService = Pe, this.unopenedChests = [], this.unopenedPacks = [], this.unsubscribe = new us.xQ, this.volumeSetting = 1, this.currentWalletAddress = ""
            }

            ngOnInit() {
                this.initPacks(), this.initAudio(), "website" === this.environment.clientType && this.initChests()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initAudio() {
                this.audioService.currentVolume$.pipe((0, jt.R)(this.unsubscribe)).subscribe(u => {
                    this.volumeSetting = u
                })
            }

            initPacks() {
                this.packService.fetchUnopenedPacks(), this.packService.unopenedPacks$.pipe((0, jt.R)(this.unsubscribe), (0, ao.VS)(u => this.packService.updateScarcityAndRarity$(u))).subscribe(u => {
                    console.log("TempleRoute->initPacks() packs", u), this.unopenedPacks = u
                })
            }

            initChests() {
                this.chestService.fetchChests(), this.chestService.chests$.pipe((0, jt.R)(this.unsubscribe), (0, rs.U)(u => this.formatChests(u))).subscribe(u => {
                    this.unopenedChests = u, console.log("TempleRoute->initChests() chests", u)
                })
            }

            formatChests(u) {
                console.log("TempleRoute->formatChests() tps", u);
                let A = [];
                return u.forEach(Q => {
                    A = [...A, ...Array.from(Array(Q.amount)).map(fe => ({rarity: Q.rarity, set: Q.set, type: Q.type}))]
                }), A
            }

            onPackOpened(u) {
                console.log("TempleRoute->onOpenPack() opening pack", u.detail.pack), this.packService.openPack$(u.detail.pack).pipe((0, ue.q)(1)).subscribe(A => {
                    console.log("TempleRoute->onOpenPack() pack opened!!!", u.detail.pack)
                })
            }

            onChestOpened(u) {
                this.chestService.open(u.detail.type, 1).pipe((0, ue.q)(1)).subscribe(Q => {
                    console.log("TempleRoute->onChestOpened() Chest Opened!!!!!!! p ", Q), this.showChestOpenedModal(this.etherscanUrl(Q.hash))
                })
            }

            etherscanUrl(u) {
                return `https://${this.environment.production ? "" : "ropsten."}etherscan.io/tx/${u}`
            }

            onBuyPacks() {
                "website" === this.environment.clientType ? this.router.navigate([Z.CF.J.buyPacks.path]) : (0, Us.rb)({url: Z.gv.routeContent(this.environment).buyPacks.url})
            }

            showChestOpenedModal(u) {
                this.modalService.open(bs, {
                    defaultStylings: !1,
                    centered: !0,
                    scrollable: !1
                }).componentInstance.transactionUrl = u
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Se.Ho), e.Y36(Cs.F), e.Y36(Cs.W), e.Y36(Vt.F0), e.Y36(e.R0b), e.Y36(Se.ux), e.Y36(Kt.Qz), e.Y36(Se.pk), e.Y36(mt.fY))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-temple"]],
            viewQuery: function (u, A) {
                if (1 & u && e.Gf(is, 7), 2 & u) {
                    let Q;
                    e.iGM(Q = e.CRH()) && (A.viewLayerDom = Q.first)
                }
            },
            decls: 4,
            vars: 4,
            consts: [[3, "headerAreaHeight", "unOpenedPacks", "unOpenedChests", "volume", "onPackOpened", "onChestOpened", "onBuyPacks"], ["viewLayer", ""]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "gu-temple-view-layer", 0, 1), e.NdJ("onPackOpened", function (fe) {
                    return A.onPackOpened(fe)
                })("onChestOpened", function (fe) {
                    return A.onChestOpened(fe)
                })("onBuyPacks", function () {
                    return A.onBuyPacks()
                }), e.qZA(), e.TgZ(2, "gu-temple-overlay-layer"), e._uU(3, " Your screen is too puny for such a mighty prize. Please expand your browser window or use a larger device such as a laptop or PC.\n"), e.qZA()), 2 & u && e.Q6J("headerAreaHeight", A.navigationStateService.dataStore.headerAreaHeight)("unOpenedPacks", A.unopenedPacks)("unOpenedChests", A.unopenedChests)("volume", A.volumeSetting)
            },
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column}"]
        }), S
    })();
    var Rs = o(61715), Bs = o(98723);

    function co(S, V) {
        if (1 & S && (e.TgZ(0, "gu-paragraph-text", 10), e._uU(1, " Buy "), e.TgZ(2, "strong"), e._uU(3), e.qZA(), e._uU(4, " for "), e.TgZ(5, "span", 11), e._uU(6), e.qZA(), e._UZ(7, "gu-icon", 12), e._uU(8, "? "), e.qZA()), 2 & S) {
            const u = e.oxw();
            e.xp6(3), e.Oqu(u.storeItem.item_name), e.xp6(3), e.hij("", u.storeItem.value, " ")
        }
    }

    function Ot(S, V) {
        if (1 & S && e._UZ(0, "gu-paragraph-text", 13), 2 & S) {
            const u = e.oxw();
            e.Q6J("innerHTML", u.descriptionText, e.oJD)
        }
    }

    function uo(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "gu-paragraph-text", 10), e._uU(1, " Great choice! "), e.TgZ(2, "strong"), e._uU(3), e.qZA(), e._uU(4, " has been added to your "), e.TgZ(5, "span")(6, "gu-simple-text-button", 14), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().goToCollections()
            }), e._uU(7, " Collections "), e.qZA()(), e._uU(8, ". "), e.qZA()
        }
        if (2 & S) {
            const u = e.oxw();
            e.xp6(3), e.Oqu(u.storeItem.item_name)
        }
    }

    function Gs(S, V) {
        if (1 & S && (e.TgZ(0, "gu-vertical-space", 15)(1, "picture", 16), e._UZ(2, "source", 17)(3, "img", 18), e.qZA()()), 2 & S) {
            const u = e.oxw();
            e.xp6(2), e.Q6J("srcset", u.storeItem.image_url, e.LSH), e.xp6(1), e.Q6J("src", u.storeItem.image_url, e.LSH)
        }
    }

    function Fs(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.ynx(0), e.TgZ(1, "gu-primary-hex-button", 19), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().exit()
            }), e.qZA(), e.BQk()
        }
    }

    function Ns(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "gu-secondary-hex-button", 20), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().back()
            }), e.qZA(), e.TgZ(1, "gu-primary-hex-button", 21), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().buyNow()
            }), e.qZA()
        }
        if (2 & S) {
            const u = e.oxw();
            e.xp6(1), e.Q6J("disabled", u.awaitingPurchaseRes)
        }
    }

    let zs = (() => {
        class S {
            constructor(u, A, Q, fe, st) {
                this.activeModal = u, this.router = A, this.environment = Q, this.akuma = fe, this.starsService = st, this.stage = "confirm", this.awaitingPurchaseRes = !1, this.buyNowEvent$ = new e.vpe
            }

            ngOnInit() {
                this.setStage(this.stage)
            }

            setStage(u) {
                switch (this.stage = u, u) {
                    case"confirm":
                        return this.akuma.postEvent("Screen", "starstoreConfirmPurchase_opened"), void (this.headingText = "CONFIRM PURCHASE");
                    case"failure":
                        return this.logFailure(), this.headingText = "NOT ENOUGH STARS!", void (this.descriptionText = `Sorry you don\u2019t have enough Stars to purchase${this.startsWithThe(this.storeItem.item_name) ? "" : " the"} <strong>${this.storeItem.item_name}</strong>. Play some ranked games to earn more!`);
                    case"success":
                        return this.logSuccess(), void (this.headingText = "PURCHASE SUCCESS");
                    default:
                        return
                }
            }

            logFailure() {
                const u = this.starsService.getScreenOrder(this.storeItem);
                this.akuma.postEvent("Screen", "starstoreInsufficientFunds_opened", u), "function" == typeof gtag && gtag("event", "_purchaseStarstore_failed", u), this.akuma.postEvent("Flow", "_purchaseStarstore_failed", u)
            }

            logSuccess() {
                const u = this.starsService.getScreenOrder(this.storeItem);
                this.akuma.postEvent("Screen", "starstoreSuccessPurchase_opened", u), this.akuma.postEvent("Flow", "_purchaseStarstore_succeeded", u), "function" == typeof gtag && gtag("event", "_purchaseStarstore_succeeded", u)
            }

            goToCollections() {
                this.akuma.postEvent("Control", "starstoreSuccessPurchaseCollectionsLnk_pressed"), "website" === this.environment.clientType ? this.router.navigate(["/collections"]) : "desktop" === this.environment.clientType && this.router.navigate(["/game/gu/inventory"]), this.exit()
            }

            startsWithThe(u) {
                return "the" === u.slice(0, 3).toLowerCase()
            }

            exit() {
                this.activeModal.close()
            }

            back() {
                this.akuma.postEvent("Control", "starstoreConfirmPurchaseBackBtn_pressed"), this.exit()
            }

            buyNow() {
                this.akuma.postEvent("Control", "starstoreConfirmPurchaseBuyBtn_pressed", this.starsService.getScreenOrder(this.storeItem)), this.buyNowEvent$.emit(this.storeItem)
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Kt.mX), e.Y36(Vt.F0), e.Y36(Se.Ho), e.Y36(mt.jt), e.Y36(mt.cM))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-star-store-buy-modal"]],
            inputs: {stage: "stage", storeItem: "storeItem", awaitingPurchaseRes: "awaitingPurchaseRes"},
            outputs: {buyNowEvent$: "buyNowEvent$"},
            decls: 13,
            vars: 7,
            consts: [["goldBorder", "top"], ["top", "2x-large", 1, "headerSection"], ["size", "small", "fillGradient", "gradients.gold.simple", "align", "center"], ["top", "small", "bottom", "large", 1, "descriptionSection"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 4, "ngIf"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 3, "innerHTML", 4, "ngIf"], ["class", "imageSection", 4, "ngIf"], ["top", "large", "bottom", "2x-large", 1, "ctaSection"], [4, "ngIf", "ngIfElse"], ["confirmSection", ""], ["kind", "small", "align", "center", "fillColor", "colors.light.100"], [1, "descriptionSection__price"], ["iconLigature", "collectable_stars", "fillGradientTarget", "top", "fillGradient", "gradients.apocyan.simple", 1, "descriptionSection__icon"], ["kind", "small", "align", "center", "fillColor", "colors.light.100", 3, "innerHTML"], ["fillColor", "colors.gunmetal.300", 3, "click"], [1, "imageSection"], [1, "imageSection__picture"], ["type", "image/jpg", 3, "srcset"], [1, "imageSection__picture__img", 3, "src"], ["size", "large", "text", "OKAY", 1, "ctaSection__primary", 3, "click"], ["size", "large", "text", "BACK", 1, "ctaSection__secondary", 3, "click"], ["size", "large", "text", "BUY NOW", 1, "ctaSection__primary", 3, "disabled", "click"]],
            template: function (u, A) {
                if (1 & u && (e._UZ(0, "gu-modal-background", 0), e.TgZ(1, "gu-vertical-space", 1)(2, "gu-heading-text", 2), e._uU(3), e.qZA()(), e.TgZ(4, "gu-vertical-space", 3), e.YNc(5, co, 9, 2, "gu-paragraph-text", 4), e.YNc(6, Ot, 1, 1, "gu-paragraph-text", 5), e.YNc(7, uo, 9, 1, "gu-paragraph-text", 4), e.qZA(), e.YNc(8, Gs, 4, 2, "gu-vertical-space", 6), e.TgZ(9, "gu-vertical-space", 7), e.YNc(10, Fs, 2, 0, "ng-container", 8), e.YNc(11, Ns, 2, 1, "ng-template", null, 9, e.W1O), e.qZA()), 2 & u) {
                    const Q = e.MAs(12);
                    e.xp6(3), e.hij(" ", A.headingText, " "), e.xp6(2), e.Q6J("ngIf", "confirm" === A.stage), e.xp6(1), e.Q6J("ngIf", "failure" === A.stage), e.xp6(1), e.Q6J("ngIf", "success" === A.stage), e.xp6(1), e.Q6J("ngIf", "confirm" === A.stage), e.xp6(2), e.Q6J("ngIf", "confirm" !== A.stage)("ngIfElse", Q)
                }
            },
            directives: [c.O5],
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:520px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.descriptionSection__price[_ngcontent-%COMP%]{color:var(--gu-blue)}.descriptionSection__icon[_ngcontent-%COMP%]{display:inline-flex}.imageSection[_ngcontent-%COMP%]{display:flex;justify-content:center}.imageSection__picture__img[_ngcontent-%COMP%]{width:280px;max-width:70vw}.ctaSection[_ngcontent-%COMP%]{display:flex;justify-content:center;width:100%}.ctaSection[_ngcontent-%COMP%]   gu-primary-hex-button[_ngcontent-%COMP%]:nth-child(2){margin-left:20px}"]
        }), S
    })(), Ws = (() => {
        class S {
            constructor(u, A) {
                this.activeModal = u, this.akuma = A
            }

            ngOnInit() {
                this.akuma.postEvent("Screen", "starstoreInfo_opened")
            }

            exit() {
                this.activeModal.close()
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Kt.mX), e.Y36(mt.jt))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-star-store-more-info-modal"]],
            inputs: {imageUrl: "imageUrl", name: "name", description: "description"},
            decls: 12,
            vars: 4,
            consts: [["iconLigature", "close_x", "fillColor", "colors.apocyan.300", 1, "closeIcon", 3, "click"], ["top", "x-large", 1, "imageSection"], [1, "imageSection__picture"], ["type", "image/jpg", 3, "srcset"], [1, "imageSection__picture__img", 3, "src"], ["both", "large"], ["size", "x-small", "fillColor", "colors.light.100", "align", "center"], ["bottom", "x-large"], ["kind", "small", "align", "center", "fillColor", "colors.light.100"]],
            template: function (u, A) {
                1 & u && (e._UZ(0, "gu-modal-background"), e.TgZ(1, "gu-icon", 0), e.NdJ("click", function () {
                    return A.exit()
                }), e.qZA(), e.TgZ(2, "gu-vertical-space", 1)(3, "picture", 2), e._UZ(4, "source", 3)(5, "img", 4), e.qZA()(), e.TgZ(6, "gu-vertical-space", 5)(7, "gu-heading-text", 6), e._uU(8), e.qZA()(), e.TgZ(9, "gu-vertical-space", 7)(10, "gu-paragraph-text", 8), e._uU(11), e.qZA()()), 2 & u && (e.xp6(4), e.Q6J("srcset", A.imageUrl, e.LSH), e.xp6(1), e.Q6J("src", A.imageUrl, e.LSH), e.xp6(3), e.hij(" ", A.name, " "), e.xp6(3), e.hij(" ", A.description, " "))
            },
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:520px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.imageSection[_ngcontent-%COMP%]{display:flex;justify-content:center}.imageSection__picture__img[_ngcontent-%COMP%]{max-width:100%}.closeIcon[_ngcontent-%COMP%]{position:absolute!important;top:0;right:0;margin:14px 16px;font-size:20px;cursor:pointer}"]
        }), S
    })();

    function Hs(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "gu-star-store-sale-item", 14), e.NdJ("onBuyItem", function () {
                e.CHM(u);
                const Q = e.oxw().$implicit;
                return e.oxw(2).showBuyItem(Q)
            })("onMoreInfo", function () {
                e.CHM(u);
                const Q = e.oxw().$implicit;
                return e.oxw(2).showMoreInfo(Q)
            }), e.qZA()
        }
        if (2 & S) {
            const u = e.oxw().$implicit;
            e.Q6J("price", u.value)("imageUrl", u.image_url)("name", u.item_name)("durationType", u.label)("endTimestamp", u.end_timestamp)("title", u.title)
        }
    }

    function Zs(S, V) {
        if (1 & S && (e.ynx(0), e.YNc(1, Hs, 1, 6, "gu-star-store-sale-item", 13), e.BQk()), 2 & S) {
            const u = V.$implicit, A = e.oxw(2);
            e.xp6(1), e.Q6J("ngIf", A.isCurrentItem(u))
        }
    }

    function po(S, V) {
        if (1 & S && (e.ynx(0), e.TgZ(1, "div", 7)(2, "gu-vertical-space", 8)(3, "gu-heading-text", 9), e._uU(4, " Welcome to the Star Store "), e.qZA(), e.TgZ(5, "gu-paragraph-text", 10), e._uU(6, " Exchange your Stars for some awesome items. "), e._UZ(7, "br"), e._uU(8, " Availability and prices are subject to change. "), e.qZA()(), e.TgZ(9, "gu-vertical-space", 11), e.YNc(10, Zs, 2, 1, "ng-container", 12), e.qZA()(), e.BQk()), 2 & S) {
            const u = e.oxw();
            e.xp6(10), e.Q6J("ngForOf", u.storeItems)
        }
    }

    function ys(S, V) {
        1 & S && (e.TgZ(0, "div", 15)(1, "gu-heading-text", 9), e._uU(2, " the Star Store is Restocking "), e.qZA(), e.TgZ(3, "gu-paragraph-text", 10), e._uU(4, " We are currently out of stock! Please check back at a later time. "), e.qZA()())
    }

    let go = (() => {
        class S {
            constructor(u, A, Q) {
                this.modalService = u, this.starsService = A, this.akuma = Q, this.storeItems = [], this.currentEpochTime = this.timeNowEpoch(), this.currentItemsToDisplay = !0, this.unsubscribe = new us.xQ
            }

            ngOnInit() {
                this.initStoreItems(), this.initTimestampCheck()
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            initTimestampCheck() {
                (0, Rs.F)(1e3).pipe((0, jt.R)(this.unsubscribe)).subscribe(u => {
                    this.currentEpochTime = this.timeNowEpoch(), this.checkForCurrentItems()
                })
            }

            checkForCurrentItems() {
                this.currentItemsToDisplay = this.storeItems.some(u => this.isCurrentItem(u))
            }

            timeNowEpoch() {
                return (new Date).getTime()
            }

            isCurrentItem(u) {
                return u.end_timestamp_epoch > this.currentEpochTime && u.start_timestamp_epoch < this.currentEpochTime
            }

            initStoreItems() {
                this.starsService.fetchStarStoreItems$().pipe((0, ue.q)(1)).subscribe(u => {
                    this.storeItems = u, this.scheduleRefresh(u), this.checkForCurrentItems(), (!u || 0 === u.length || !this.currentItemsToDisplay) && this.akuma.postEvent("Screen", "starstoreEmpty_opened"), this.logStarStoreOpened(), console.log("StarStoreRoute->initStoreItems()", this.storeItems)
                })
            }

            scheduleRefresh(u) {
                const A = Date.now(),
                    Q = u.reduce((st, it) => st.end_timestamp_epoch < it.end_timestamp_epoch ? st : it);
                if (!Q) return;
                const fe = Q.end_timestamp_epoch + 1e3 - A;
                fe < 0 || (0, Bs.H)(fe).pipe((0, jt.R)(this.unsubscribe), (0, ue.q)(1)).subscribe(st => {
                    this.initStoreItems()
                })
            }

            logStarStoreOpened() {
                const u = {};
                this.storeItems.forEach((A, Q) => {
                    u[`item_${Q + 1}`] = A
                }), this.akuma.postEvent("Screen", "starstoreHome_opened", u)
            }

            logBuyButton(u) {
                this.akuma.postEvent("Control", "starstoreHomeBuyBtn_pressed", this.starsService.getScreenOrder(u)), this.akuma.postEvent("Flow", "_purchaseStarstore_started", this.starsService.getScreenOrder(u)), "function" == typeof gtag && gtag("event", "_purchaseStarstore_started", this.starsService.getScreenOrder(u))
            }

            showBuyItem(u) {
                this.logBuyButton(u), this.modalService.hasOpenModals() && this.modalService.dismissAll(), this.openedModal$ && this.openedModal$.unsubscribe();
                const Q = this.modalService.open(zs, {defaultStylings: !1, centered: !0}).componentInstance;
                Q.storeItem = u, this.openedModal$ = Q.buyNowEvent$.pipe((0, ue.q)(1), (0, ao.VS)(fe => (Q.awaitingPurchaseRes = !0, this.handleBuyNow$(fe)))).subscribe(fe => {
                    Q.awaitingPurchaseRes = !1, Q.setStage(fe ? "success" : "failure")
                })
            }

            showMoreInfo(u) {
                this.akuma.postEvent("Control", "starstoreHomeTipBtn_pressed", this.starsService.getScreenOrder(u)), this.modalService.hasOpenModals() && this.modalService.dismissAll();
                const Q = this.modalService.open(Ws, {defaultStylings: !1, centered: !0}).componentInstance;
                Q.name = u.item_name, Q.description = u.item_description, Q.imageUrl = u.image_url
            }

            handleBuyNow$(u) {
                return this.starsService.purchaseItem$(u.asset_group, u.value).pipe((0, ue.q)(1), (0, rs.U)(A => (console.log("StarStoreRoute->handleBuyNow$", A), !(A && A.error))))
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Kt.Qz), e.Y36(mt.cM), e.Y36(mt.jt))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-star-store-route"]],
            decls: 8,
            vars: 2,
            consts: [[1, "background"], [1, "background__picture"], ["srcset", "\n        /assets/images/misc-art/misc-art--star-store@1x.webp 2284w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp 1714w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp 1142w,\n        /assets/images/misc-art/misc-art--star-store@1x.webp  572w\n      ", "type", "image/webp"], ["srcset", "\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 2284w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 1714w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg 1142w,\n        /assets/images/misc-art/misc-art--star-store@1x.jpg  572w\n      ", "type", "image/jpg"], ["src", "/assets/images/misc-art/misc-art--star-store@1x.jpg", "alt", "", 1, "background__picture__img"], [4, "ngIf", "ngIfElse"], ["emptyStateSection", ""], [1, "storeSection"], ["top", "x-large", 1, "storeSection__header"], ["size", "x-large", "fillGradient", "gradients.gold.simple", "align", "center"], ["kind", "large", "align", "center", "fillColor", "colors.light.100"], ["top", "x-large", 1, "storeSection__specials"], [4, "ngFor", "ngForOf"], ["class", "storeSection__specials__item", 3, "price", "imageUrl", "name", "durationType", "endTimestamp", "title", "onBuyItem", "onMoreInfo", 4, "ngIf"], [1, "storeSection__specials__item", 3, "price", "imageUrl", "name", "durationType", "endTimestamp", "title", "onBuyItem", "onMoreInfo"], [1, "emptyStateSection"]],
            template: function (u, A) {
                if (1 & u && (e.TgZ(0, "div", 0)(1, "picture", 1), e._UZ(2, "source", 2)(3, "source", 3)(4, "img", 4), e.qZA()(), e.YNc(5, po, 11, 1, "ng-container", 5), e.YNc(6, ys, 5, 0, "ng-template", null, 6, e.W1O)), 2 & u) {
                    const Q = e.MAs(7);
                    e.xp6(5), e.Q6J("ngIf", A.currentItemsToDisplay)("ngIfElse", Q)
                }
            },
            directives: [c.O5, c.sg],
            styles: ["[_nghost-%COMP%]{display: flex;flex-flow: column nowrap;align-items: center}.background[_ngcontent-%COMP%], .background__picture[_ngcontent-%COMP%]{display: none;}.storeSection[_ngcontent-%COMP%]{position: relative;overflow-y: auto;width: 100%}.storeSection__header[_ngcontent-%COMP%]{padding: 0 8px}.storeSection__header[_ngcontent-%COMP%] gu-paragraph-text[_ngcontent-%COMP%]{max-width: 630px;margin: auto}.storeSection__specials[_ngcontent-%COMP%]{display: flex;flex-wrap: wrap;justify-content: center}.emptyStateSection[_ngcontent-%COMP%]{position: relative;margin: auto}"]
        }), S
    })();

    function fo(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "gu-secondary-hex-button", 7), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().secondaryCtaClick()
            }), e.qZA()
        }
        if (2 & S) {
            const u = e.oxw();
            e.Q6J("text", u.secondaryCtaText)
        }
    }

    function vo(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "gu-primary-hex-button", 7), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().primaryCtaClick()
            }), e.qZA()
        }
        if (2 & S) {
            const u = e.oxw();
            e.Q6J("text", u.primaryCtaText)
        }
    }

    o(52886), o(98590);
    let bo = (() => {
        class S {
            constructor(u) {
                this.activeModal = u, this.onPrimaryCtaClick = () => {
                }, this.onSecondaryCtaClick = () => {
                }
            }

            secondaryCtaClick() {
                this.onSecondaryCtaClick(), this.activeModal.close()
            }

            primaryCtaClick() {
                this.onPrimaryCtaClick(), this.activeModal.close()
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Kt.mX))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-confirm-modal"]],
            inputs: {
                title: "title",
                text: "text",
                primaryCtaText: "primaryCtaText",
                onPrimaryCtaClick: "onPrimaryCtaClick",
                secondaryCtaText: "secondaryCtaText",
                onSecondaryCtaClick: "onSecondaryCtaClick"
            },
            decls: 10,
            vars: 4,
            consts: [["goldBorder", "top"], ["top", "4x-large"], ["align", "center", "fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", "size", "small"], ["top", "large"], ["align", "center", "kind", "small", "fillColor", "colors.light.100", 1, "text"], ["top", "2x-large", "bottom", "4x-large", 1, "ctaSection"], ["class", "ctaSection__button", "size", "large", 3, "text", "click", 4, "ngIf"], ["size", "large", 1, "ctaSection__button", 3, "text", "click"]],
            template: function (u, A) {
                1 & u && (e._UZ(0, "gu-modal-background", 0), e.TgZ(1, "gu-vertical-space", 1)(2, "gu-heading-text", 2), e._uU(3), e.qZA()(), e.TgZ(4, "gu-vertical-space", 3)(5, "gu-paragraph-text", 4), e._uU(6), e.qZA()(), e.TgZ(7, "gu-vertical-space", 5), e.YNc(8, fo, 1, 1, "gu-secondary-hex-button", 6), e.YNc(9, vo, 1, 1, "gu-primary-hex-button", 6), e.qZA()), 2 & u && (e.xp6(3), e.hij(" ", A.title, " "), e.xp6(3), e.hij(" ", A.text, " "), e.xp6(2), e.Q6J("ngIf", A.secondaryCtaText), e.xp6(1), e.Q6J("ngIf", A.primaryCtaText))
            },
            directives: [c.O5],
            styles: ["[_nghost-%COMP%]{position:relative;display:flex;flex-direction:column;padding:0 60px;align-items:center;max-width:100vw;width:640px}[_nghost-%COMP%] > *[_ngcontent-%COMP%]{position:relative}.alertIcon[_ngcontent-%COMP%]{font-size:80px}.heading[_ngcontent-%COMP%]{text-transform:uppercase}.ctaSection[_ngcontent-%COMP%]{display:flex;flex-flow:row nowrap}.ctaSection__button[_ngcontent-%COMP%]{min-width:200px}.ctaSection__button[_ngcontent-%COMP%]:nth-child(2){margin-left:16px}"]
        }), S
    })();
    var js = o(92198);

    function Ye(S, V) {
        1 & S && e._UZ(0, "gu-icon", 3)
    }

    const Co = function (S, V) {
        return {check__complete: S, check__unfinished: V}
    };
    let yo = (() => {
        class S {
            constructor() {
            }

            ngOnInit() {
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["tick-box"]],
            inputs: {finished: "finished"},
            decls: 3,
            vars: 5,
            consts: [[1, "check", 3, "ngClass"], [1, "check__box"], ["class", "checkmark", "iconLigature", "checkbox_tick", 4, "ngIf"], ["iconLigature", "checkbox_tick", 1, "checkmark"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "div", 0)(1, "div", 1), e.YNc(2, Ye, 1, 0, "gu-icon", 2), e.qZA()()), 2 & u && (e.Q6J("ngClass", e.WLB(2, Co, A.finished, !A.finished)), e.xp6(2), e.Q6J("ngIf", A.finished))
            },
            directives: [c.mk, c.O5],
            styles: [".check__text[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.check[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center}.check__text[_ngcontent-%COMP%]{font-weight:700;line-height:28px;padding-left:10px}.check__complete[_ngcontent-%COMP%]{color:#50bcff;border-color:#50bcff}.check__unfinished[_ngcontent-%COMP%]{color:#7192b0;border-color:#7192b0}.check__box[_ngcontent-%COMP%]{height:20px;width:20px;background:#0F1B27;border:2px solid #8BE1E0;box-sizing:border-box}.checkmark[_ngcontent-%COMP%]{color:#50bcff;display:flex;font-weight:700}"]
        }), S
    })();

    function xo(S, V) {
        if (1 & S && (e.TgZ(0, "tr")(1, "td"), e._uU(2), e.qZA(), e.TgZ(3, "td"), e._UZ(4, "tick-box", 21), e.qZA(), e.TgZ(5, "td"), e._UZ(6, "tick-box", 21), e.qZA(), e.TgZ(7, "td"), e._UZ(8, "tick-box", 21), e.qZA(), e.TgZ(9, "td"), e._uU(10), e.qZA()()), 2 & S) {
            const u = V.$implicit;
            e.xp6(2), e.Oqu(u.username), e.xp6(2), e.Q6J("finished", u.gu_account), e.xp6(2), e.Q6J("finished", u.coinbase_confirmed), e.xp6(2), e.Q6J("finished", u.game_played), e.xp6(2), e.Oqu(u.payment_status)
        }
    }

    const Vs = function () {
        return {breakpoint: "small", size: "large"}
    }, Ks = function (S) {
        return [S]
    };
    let So = (() => {
        class S {
            constructor(u, A, Q, fe) {
                this.activeModal = u, this.analyticsService = A, this.referralService = Q, this.authService = fe, this.unsubscribe = new us.xQ
            }

            openLink(u, A) {
                window.location.href = u
            }

            ngOnInit() {
                this.isUserSignedIn = !!this.authService.getUserId(), this.authService.account$.pipe((0, jt.R)(this.unsubscribe)).subscribe(u => {
                    this.isUserSignedIn = !!u, this.userId = this.isUserSignedIn ? this.authService.getUserId() : 0, this.referralService.getUserReferralsStatus(this.userId).pipe((0, jt.R)(this.unsubscribe)).subscribe(A => {
                        console.log(A), this.userReferrals = A, this.totalAmount = this.userReferrals.reduce((Q, fe) => Q + fe.total_amt, 0)
                    })
                })
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            onClose() {
                this.activeModal.close("Referrals CTA closed")
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Kt.mX), e.Y36(mt.jt), e.Y36(mt.C_), e.Y36(Se.mI))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["referrals-status"]],
            inputs: {userId: "userId"},
            decls: 47,
            vars: 10,
            consts: [["iconLigature", "close_x", 1, "modal__closeButton", 3, "click"], [1, "referrals__modal__content"], ["top", "3x-large", "bottom", "medium"], ["align", "center", "size", "small", 3, "responsiveSize"], ["top", "large", "bottom", "large"], [1, "referrals_status_container"], [2, "width", "100%"], [4, "ngFor", "ngForOf"], [1, "divider__line"], ["top", "medium", "bottom", "medium"], [1, "earnings"], [1, "earnings__shine"], [1, "earnings__container"], [1, "earnings__text"], [1, "earnings__value"], [1, "earnings__subtext"], [1, "earnings__info"], ["fillColor", "colors.light.500", "kind", "x-small", "align", "center", 2, "max-width", "450px"], ["top", "2x-large", "bottom", "3x-large"], [1, "signInToBegin"], ["size", "large", 2, "padding", "0 20px", 3, "click"], [3, "finished"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "gu-icon", 0), e.NdJ("click", function () {
                    return A.onClose()
                }), e.qZA(), e.TgZ(1, "div", 1)(2, "gu-vertical-space", 2)(3, "gu-heading-text", 3), e._uU(4, " Referral Status"), e.qZA()(), e.TgZ(5, "gu-vertical-space", 4)(6, "div", 5)(7, "table", 6)(8, "tr")(9, "th"), e._uU(10, "User"), e.qZA(), e.TgZ(11, "th"), e._uU(12, "GU account"), e.qZA(), e.TgZ(13, "th"), e._uU(14, "Coinbase account"), e.qZA(), e.TgZ(15, "th"), e._uU(16, "Game played"), e.qZA(), e.TgZ(17, "th"), e._uU(18, "Reward Status"), e.qZA()(), e.YNc(19, xo, 11, 5, "tr", 7), e.qZA()()(), e._UZ(20, "div", 8), e.TgZ(21, "gu-vertical-space", 9)(22, "gu-heading-text", 3), e._uU(23, " Earnings"), e.qZA()(), e.TgZ(24, "gu-vertical-space", 9)(25, "div", 10), e._UZ(26, "div", 11), e.TgZ(27, "div", 12)(28, "div", 13)(29, "div", 14), e._uU(30), e.qZA(), e.TgZ(31, "div", 15), e._uU(32, " Worth of Eth "), e.qZA(), e.TgZ(33, "div", 16), e._uU(34, " Earned from Referrals "), e.qZA()()()()(), e.TgZ(35, "gu-vertical-space", 9)(36, "gu-paragraph-text", 17), e._uU(37, " Once a friend has completed the required steps, it will take a few days to verify everything. Your referral earnings will be payed out every 7 days "), e.qZA()(), e.TgZ(38, "gu-vertical-space", 9)(39, "gu-paragraph-text", 17)(40, "strong"), e._uU(41, "Need some help?"), e.qZA(), e._uU(42, " Reach out to us on social media! "), e.qZA()(), e.TgZ(43, "gu-vertical-space", 18)(44, "div", 19)(45, "gu-primary-hex-button", 20), e.NdJ("click", function () {
                    return A.onClose()
                }), e._uU(46, " Close Window "), e.qZA()()()()), 2 & u && (e.xp6(3), e.Q6J("responsiveSize", e.VKq(5, Ks, e.DdM(4, Vs))), e.xp6(16), e.Q6J("ngForOf", A.userReferrals), e.xp6(3), e.Q6J("responsiveSize", e.VKq(8, Ks, e.DdM(7, Vs))), e.xp6(8), e.hij(" $", A.totalAmount, " "))
            },
            directives: [c.sg, yo],
            styles: ["[_nghost-%COMP%]{display:flex;flex-direction:column;max-width:840px;text-align:center}.modal__closeButton[_ngcontent-%COMP%]{position:absolute;top:20px;right:20px;z-index:1;font-size:calc(var(--vh) * 2);color:#8be1e0;cursor:pointer}.modal__closeButton[_ngcontent-%COMP%]:hover{color:#f6f6f6}.referrals__modal__content[_ngcontent-%COMP%]{background:#0F1B27;box-sizing:border-box;border:2px solid #3D5A74;display:flex;flex-direction:column;padding:0 50px;align-items:center}@media only screen and (max-width: 768px){.referrals__modal__content[_ngcontent-%COMP%]{padding:0 20px;overflow-y:auto}}table[_ngcontent-%COMP%], th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{border-left:2px solid #0A0A0A;border-right:2px solid #0A0A0A;border-collapse:collapse}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{text-align:center}th[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:24px;background:#1D2F41;color:#f6f6f6;padding:20px}td[_ngcontent-%COMP%]{font-size:16px;font-weight:400;line-height:24px;padding:10px 5px;color:#464646}tr[_ngcontent-%COMP%]{background:#F6F6F6}tr[_ngcontent-%COMP%]:nth-child(odd){background-color:#d7d7d7}.divider__line[_ngcontent-%COMP%]{border:1px solid #1D2F41;margin:20px;width:100%}.earnings[_ngcontent-%COMP%]{display:flex;flex-direction:row}.earnings__container[_ngcontent-%COMP%]{background:linear-gradient(90deg,rgba(242,242,242,.1) .67%,rgba(255,255,255,.1) 51.76%,rgba(242,242,242,.1) 100%);border:1px solid #7f7f7f;box-sizing:border-box;font-family:Unchained;font-style:normal}.earnings__shine[_ngcontent-%COMP%]{background:linear-gradient(180deg,#fff2d8 0%,#ebc98b 50.34%,#c6a052 100%);width:8px;height:60px;box-sizing:border-box}.earnings__text[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;align-items:center;margin:10px}.earnings__value[_ngcontent-%COMP%]{font-weight:700;font-size:32px;line-height:38px;text-transform:uppercase;color:#f6f6f6;padding-right:5px}.earnings__subtext[_ngcontent-%COMP%]{font-weight:700;font-size:12px;line-height:20px;text-transform:uppercase;color:#b6b6b6;padding-right:2vw}.earnings__info[_ngcontent-%COMP%]{font-weight:400;font-size:16px;line-height:24px;color:#f6f6f6}.socialButton[_ngcontent-%COMP%]{cursor:pointer;font-size:35px;margin:0 5px}.referrals_status_container[_ngcontent-%COMP%]{width:100%}@media only screen and (max-width: 768px){.referrals_status_container[_ngcontent-%COMP%]{width:90vw;overflow-x:scroll}}"]
        }), S
    })(), Po = (() => {
        class S {
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["referrals-task"]],
            inputs: {
                taskId: "taskId",
                taskTitle: "taskTitle",
                taskImage: "taskImage",
                taskDescription: "taskDescription"
            },
            decls: 13,
            vars: 4,
            consts: [[1, "taskId"], ["align", "center", "size", "x-small", "fillGradient", "gradients.gold.simple", 1, "taskId__number"], [1, "taskPicture"], ["srcset", "/assets/images/referrals/task_diamond.webp", "type", "image/webp"], ["src", "/assets/images/referrals/task_diamond.png", "alt", "GU_Task"], [1, "outerBox"], [1, "innerBox"], ["align", "center", "size", "x-small", 1, "taskTitle"], ["alt", "GU_Task", 1, "taskPicture__img", 3, "src"], ["align", "center", "fillColor", "colors.light.300", 1, "taskDescription", 3, "innerHTML"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "div", 0)(1, "gu-heading-text", 1), e._uU(2), e.qZA(), e.TgZ(3, "picture", 2), e._UZ(4, "source", 3)(5, "img", 4), e.qZA()(), e.TgZ(6, "div", 5)(7, "div", 6)(8, "gu-heading-text", 7), e._uU(9), e.qZA(), e.TgZ(10, "picture", 2), e._UZ(11, "img", 8), e.qZA(), e._UZ(12, "gu-paragraph-text", 9), e.qZA()()), 2 & u && (e.xp6(2), e.hij(" ", A.taskId, " "), e.xp6(7), e.hij(" ", A.taskTitle, " "), e.xp6(2), e.Q6J("src", A.taskImage, e.LSH), e.xp6(1), e.Q6J("innerHTML", A.taskDescription, e.oJD))
            },
            styles: ["[_nghost-%COMP%]{background-color:#0f1b27;display:block;min-height:300px;position:relative;width:300px;border:2px solid #0F1B27;box-sizing:border-box;margin:20px}.outerBox[_ngcontent-%COMP%]{background:linear-gradient(90deg,#c6a052 2.93%,#ebc98b 25.01%,#fff2d8 50.44%,#ebc98b 74.21%,#c6a052 96.95%);box-shadow:0 2px 5px #0000004d;height:100%;width:100%;padding:2px}.innerBox[_ngcontent-%COMP%]{width:100%;height:100%;background:#0F1B27;display:flex;flex-direction:column}.taskId[_ngcontent-%COMP%]{position:absolute;left:50%;top:-32px;transform:translate(-50%)}.taskId__number[_ngcontent-%COMP%]{position:absolute;left:50%;transform:translate(-50%);top:25%}.taskTitle[_ngcontent-%COMP%]{padding:10px;margin-top:30px}.taskPicture__img[_ngcontent-%COMP%]{border-top:1px solid #979797;border-bottom:1px solid #979797;width:100%}.taskDescription[_ngcontent-%COMP%]{padding:8px 10px;font-size:15px}"]
        }), S
    })(), Ss = (() => {
        class S {
            constructor(u, A) {
                this.analyticsService = u, this.copyService = A
            }

            ngOnInit() {
                switch (this.socialMedia) {
                    case"facebook":
                        this.iconLigature = "social_facebook", this.title = "Facebook";
                        break;
                    case"twitter":
                        this.iconLigature = "social_twitter", this.title = "Twitter";
                        break;
                    default:
                        this.iconLigature = "action_duplicate", this.title = "Copy Message"
                }
            }

            shareLink() {
                switch (this.socialMedia) {
                    case"facebook":
                        window.open(`https://www.facebook.com/sharer/sharer.php?u=${this.referralLink}&quote=${this.referralCopy}`, "_blank");
                        break;
                    case"twitter":
                        window.open(`https://twitter.com/intent/tweet?text=${this.referralCopy}&url=${this.referralLink}`, "_blank");
                        break;
                    default:
                        this.copyLink()
                }
            }

            copyLink() {
                this.copyService.copyText(this.referralCopy + this.referralLink), this.title = "Link Copied", setTimeout(() => {
                    this.title = "Copy Message"
                }, 2e3)
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(mt.jt), e.Y36(mt.tX))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["share-button"]],
            inputs: {socialMedia: "socialMedia", referralLink: "referralLink", referralCopy: "referralCopy"},
            decls: 4,
            vars: 2,
            consts: [[1, "shareButton", 3, "click"], [1, "shareButton__icon", 3, "iconLigature"], ["size", "2x-small", 1, "shareButton__shareText"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "button", 0), e.NdJ("click", function () {
                    return A.shareLink()
                }), e._UZ(1, "gu-icon", 1), e.TgZ(2, "gu-heading-text", 2), e._uU(3), e.qZA()()), 2 & u && (e.xp6(1), e.Q6J("iconLigature", A.iconLigature), e.xp6(2), e.hij(" ", A.title, " "))
            },
            styles: ["[_nghost-%COMP%]{margin:10px 10px 10px 0}.shareButton[_ngcontent-%COMP%]{white-space:nowrap;padding:10px 15px;background:transparent;border:2px solid #8be1e0;display:flex;align-items:center;outline:none}.shareButton[_ngcontent-%COMP%]:hover{padding:12px 17px;color:#182531;border:none;background:linear-gradient(to bottom,#AFFAED 0%,#54BBCD 100%)}.shareButton[_ngcontent-%COMP%]:hover   .shareButton__shareText[_ngcontent-%COMP%]{-webkit-text-fill-color:#182531}.shareButton[_ngcontent-%COMP%]:hover   .shareButton__icon[_ngcontent-%COMP%]{-webkit-text-fill-color:black}@media only screen and (max-width: 768px){.shareButton[_ngcontent-%COMP%]{padding:10px}}.shareButton__icon[_ngcontent-%COMP%]{-webkit-text-fill-color:#8be1e0;font-size:calc(var(--vh) * 2.5);margin-right:calc(var(--vw) * .5);display:inline-flex;align-items:flex-start}.shareButton__icon[_ngcontent-%COMP%]:hover{-webkit-text-fill-color:black}@media only screen and (max-width: 768px){.shareButton__icon[_ngcontent-%COMP%]{margin-right:0}}.shareButton__shareText[_ngcontent-%COMP%]{background:linear-gradient(to bottom,#affaed 0%,#8be1e0 50%,#54bbcd 100%);-webkit-background-clip:text;background-clip:text;-webkit-text-fill-color:transparent}@media only screen and (max-width: 768px){.shareButton__shareText[_ngcontent-%COMP%]{display:none}}"]
        }), S
    })();

    function Wo(S, V) {
        if (1 & S && (e.TgZ(0, "option", 3), e._uU(1), e.qZA()), 2 & S) {
            const u = V.$implicit;
            e.Q6J("ngValue", u), e.xp6(1), e.Oqu(u)
        }
    }

    function Qs(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "form", 1)(1, "select", 2), e.NdJ("ngModelChange", function (Q) {
                return e.CHM(u), e.oxw().updateWallet(Q)
            })("ngModelChange", function (Q) {
                return e.CHM(u), e.oxw().selectedWallet = Q
            }), e.TgZ(2, "option", 3), e._uU(3, "Please select a wallet"), e.qZA(), e.YNc(4, Wo, 2, 2, "option", 4), e.qZA()()
        }
        if (2 & S) {
            const u = e.oxw();
            e.xp6(1), e.Q6J("ngModel", u.selectedWallet), e.xp6(1), e.Q6J("ngValue", null), e.xp6(2), e.Q6J("ngForOf", u.playerWallets)
        }
    }

    function ko(S, V) {
        1 & S && (e.TgZ(0, "div", 1)(1, "div", 5), e._uU(2, " You don't have a wallet linked. "), e.qZA(), e.TgZ(3, "a", 6), e._uU(4, "Link my wallet"), e.qZA()())
    }

    let Ys = (() => {
        class S {
            constructor() {
                this.walletSelected = new e.vpe
            }

            updateWallet(u) {
                this.selectedWallet = u, this.walletSelected.emit(this.selectedWallet)
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["wallet-settings"]],
            inputs: {playerWallets: "playerWallets", selectedWallet: "selectedWallet"},
            outputs: {walletSelected: "walletSelected"},
            decls: 2,
            vars: 2,
            consts: [["class", "settings", 4, "ngIf"], [1, "settings"], ["name", "selectedWallet", "id", "sel1", 1, "settings__select", 3, "ngModel", "ngModelChange"], [3, "ngValue"], [3, "ngValue", 4, "ngFor", "ngForOf"], [1, "settings__label"], ["href", "https://www.godsunchained.com/?linkwallet=true", 1, "settings__cta"]],
            template: function (u, A) {
                1 & u && (e.YNc(0, Qs, 5, 3, "form", 0), e.YNc(1, ko, 5, 0, "div", 0)), 2 & u && (e.Q6J("ngIf", A.playerWallets && A.playerWallets.length > 0), e.xp6(1), e.Q6J("ngIf", !A.playerWallets || 0 === A.playerWallets.length))
            },
            directives: [c.O5, i._Y, i.JL, i.F, i.EJ, i.JJ, i.On, i.YN, i.Kr, c.sg],
            styles: [".settings__label[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.9)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{line-height:1.5}.settings__select[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}[_nghost-%COMP%]{display:block}.settings[_ngcontent-%COMP%]{display:flex;flex-flow:column nowrap;width:100%;margin:auto}.settings__label[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 3)}.settings__select[_ngcontent-%COMP%]{color:#fff;font-size:16px;line-height:24px;width:100%;display:flex;align-items:center;background:#0F1B27;border:1px solid #3D5A74;box-sizing:border-box;border-radius:2px;padding:7px;margin-top:calc(var(--vh) * .65)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * 1.48);padding-left:calc(var(--vw) * .83);padding-right:calc(var(--vw) * .83);padding-top:calc(var(--vh) * 1.29);padding-bottom:calc(var(--vh) * 1.29);margin-bottom:0;background:#182531;color:#f6f6f6;border:calc(var(--vh) * .15) solid #0f1b27;border-radius:calc(var(--vh) * .4)}.settings__select[_ngcontent-%COMP%] > option[_ngcontent-%COMP%]::-webkit-input-placeholder{color:#fff}.settings__cta[_ngcontent-%COMP%]{margin-top:calc(var(--vh) * .65);color:#affaed}"]
        }), S
    })(), Yo = (() => {
        class S {
            constructor() {
            }

            ngOnInit() {
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["referrals-card-back"]],
            decls: 16,
            vars: 0,
            consts: [[1, "earnTogether__sideFigure"], [1, "earnTogether__figure"], ["srcset", "/assets/images/referrals/card_bg.webp", "type", "image/webp"], ["src", "/assets/images/referrals/card_bg.png", "alt", "", 1, "stackedCard__top"], [1, "stackedCard__lower", "stackedCard__lower__first"], [1, "stackedCard__lower", "stackedCard__lower__second"], [1, "earnTogether__cardContent"], ["top", "medium", "bottom", "large"], ["iconLigature", "friends_helmet", "fillGradient", "gradients.gold.simple", "fillGradientTarget", "bottom", 1, "earnTogether__icon"], [1, "rewardsBlock__text", "rewardsBlock__totalValue"], ["top", "large", "bottom", "medium"], ["src", "/assets/images/referrals/gu-divder-small.svg", 1, "tasks__divider"], ["fillColor", "colors.light.100", 2, "padding", "0 40px"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "div", 0)(1, "figure", 1)(2, "picture"), e._UZ(3, "source", 2)(4, "img", 3), e.qZA(), e._UZ(5, "div", 4)(6, "div", 5), e.qZA(), e.TgZ(7, "div", 6)(8, "gu-vertical-space", 7), e._UZ(9, "gu-icon", 8), e.qZA(), e.TgZ(10, "div", 9), e._uU(11, " 10% "), e.qZA(), e.TgZ(12, "gu-vertical-space", 10), e._UZ(13, "img", 11), e.qZA(), e.TgZ(14, "gu-paragraph-text", 12), e._uU(15, " of referrals money spent added to your wallet "), e.qZA()()())
            },
            styles: ["[_nghost-%COMP%]{height:400px}.earnTogether__sideFigure[_ngcontent-%COMP%]{position:relative}.earnTogether__figure[_ngcontent-%COMP%]{min-width:300px}.earnTogether__cardContent[_ngcontent-%COMP%]{position:absolute;z-index:10;width:245px;height:360px;text-align:center;display:flex;flex-direction:column;justify-content:center;align-items:center;left:10%}.stackedCard__top[_ngcontent-%COMP%]{box-shadow:4px 4px 8px #0a0a0a;border:1px solid #464646;position:absolute;z-index:3}.stackedCard__lower[_ngcontent-%COMP%]{background:linear-gradient(360deg,#0f1b27 0%,#0f1b27 11.53%,#1d2f41 50.05%,#0f1b27 88.69%,#0f1b27 100%);box-shadow:4px 4px 8px #0a0a0a;border:1px solid #464646;box-sizing:border-box;position:absolute;height:360px;width:240px}.stackedCard__lower__first[_ngcontent-%COMP%]{left:30px;top:15px;z-index:2}.stackedCard__lower__second[_ngcontent-%COMP%]{left:25px;top:25px;z-index:1}.earnTogether__icon[_ngcontent-%COMP%]{font-size:90px}.rewardsBlock__text[_ngcontent-%COMP%]{font-family:Unchained;font-style:normal;font-weight:700;text-transform:uppercase}.rewardsBlock__totalValue[_ngcontent-%COMP%]{font-size:43px;line-height:30px;color:#f6f6f6}.rewardsBlock__totalValue__currency[_ngcontent-%COMP%]{font-size:24px;line-height:29px;text-align:center;color:#d7d7d7}.tasks__divider[_ngcontent-%COMP%]{width:100%}"]
        }), S
    })();

    function Js(S, V) {
        if (1 & S && (e.ynx(0), e._UZ(1, "referrals-task", 30), e.BQk()), 2 & S) {
            const u = V.$implicit;
            e.xp6(1), e.Q6J("taskId", u.taskId)("taskTitle", u.taskTitle)("taskDescription", u.taskDescription)("taskImage", u.taskImage)
        }
    }

    function Xs(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "section", 31)(1, "figure", 32)(2, "picture"), e._UZ(3, "source", 33)(4, "img", 34), e.qZA()(), e.TgZ(5, "div", 35)(6, "gu-vertical-space", 36)(7, "div", 37), e._uU(8, " Share the below link with your friends "), e.qZA()(), e.TgZ(9, "div", 38), e._uU(10), e.TgZ(11, "strong"), e._uU(12), e.qZA(), e._uU(13, " on the website here "), e.TgZ(14, "span", 39), e._uU(15), e.qZA()(), e.TgZ(16, "div", 40), e._UZ(17, "share-button", 41)(18, "share-button", 42)(19, "share-button", 42), e.qZA(), e.TgZ(20, "gu-vertical-space", 43), e._UZ(21, "div", 44), e.qZA(), e.TgZ(22, "gu-vertical-space", 45)(23, "gu-paragraph-text", 46), e._uU(24, " Select the wallet you want your rewards to go to "), e.qZA()(), e.TgZ(25, "wallet-settings", 47), e.NdJ("walletSelected", function (Q) {
                return e.CHM(u), e.oxw().updateWallet(Q)
            }), e.qZA()()()
        }
        if (2 & S) {
            const u = e.oxw();
            e.xp6(10), e.hij(" ", u.referralCopy, " "), e.xp6(2), e.Oqu(u.referralCode), e.xp6(3), e.Oqu(u.referralLink), e.xp6(2), e.Q6J("referralLink", u.referralLink)("referralCopy", u.shareCopy), e.xp6(1), e.Q6J("referralLink", u.referralLink)("referralCopy", u.shareCopy)("socialMedia", "facebook"), e.xp6(1), e.Q6J("referralLink", u.referralLink)("referralCopy", u.shareCopy)("socialMedia", "twitter"), e.xp6(6), e.Q6J("playerWallets", u.playerWallets)("selectedWallet", u.selectedWallet)
        }
    }

    function wo(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "div", 48)(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().signIn()
            }), e._uU(2, " Sign in to begin "), e.qZA()()
        }
    }

    function Yt(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "div", 48)(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().signIn()
            }), e._uU(2, " Sign in to begin "), e.qZA()()
        }
    }

    function qs(S, V) {
        if (1 & S) {
            const u = e.EpF();
            e.TgZ(0, "div", 48)(1, "gu-primary-hex-button", 49), e.NdJ("click", function () {
                return e.CHM(u), e.oxw().copyShareCode()
            }), e._uU(2, " Copy share Code "), e.qZA()()
        }
    }

    const zt = function () {
        return {breakpoint: "small", size: "large"}
    }, kt = function (S) {
        return [S]
    }, ps = function () {
        return {breakpoint: "small", size: "medium"}
    };
    let Ps = (() => {
        class S {
            constructor(u, A, Q, fe, st, it) {
                this.authService = u, this.cerberusModalService = A, this.router = Q, this.analyticsService = fe, this.copyService = st, this.referralService = it, this.selectedWallet = null, this.unsubscribe = new us.xQ, this.referralCopy = "If you're looking for the next game to play, Gods Unchained is a great game that you should check out. Sign up using with my referral code: "
            }

            ngOnDestroy() {
                this.unsubscribe.next(), this.unsubscribe.complete()
            }

            createReferralCode(u) {
                this.referralService.createReferralCode(u).subscribe(A => {
                    this.referralCode = A.code, this.selectedWallet = A.referral_payout_address, this.referralLink = A.result, this.shareCopy = `${this.referralCopy}${this.referralCode} on the website here `
                })
            }

            ngOnInit() {
                this.getWallets(), this.referralTasks = this.getTasks(), this.userId = this.authService.getUserId(), this.isUserSignedIn = !!this.authService.getUserId(), this.authService.account$.pipe((0, jt.R)(this.unsubscribe), (0, js.h)(u => !!u), (0, ue.q)(1)).subscribe(u => {
                    this.isUserSignedIn = !!u, this.userId = this.isUserSignedIn ? this.authService.getUserId() : 0, this.createReferralCode(this.userId)
                })
            }

            copyShareCode() {
                this.copyService.copyText(`${this.referralCopy}${this.referralCode} on the website here ${this.referralLink}`)
            }

            signIn() {
                this.router.navigate(["/account/login"], {queryParams: {return: Z.CF.J.learn.children.referrals.path}})
            }

            checkReferralsStatus() {
                this.cerberusModalService.open(So, {
                    centered: !0,
                    scrollable: !0
                }).componentInstance.userId = this.userId
            }

            getWallets() {
                this.authService.account$.pipe((0, js.h)(u => !!u), (0, rs.U)(u => u.addresses)).subscribe(u => {
                    this.playerWallets = u.filter(A => A.imx_linked).map(A => A.address)
                })
            }

            updateWallet(u) {
                this.selectedWallet = u, this.referralService.updatePayoutAddress(this.userId, u).subscribe(A => console.log(A))
            }

            getTasks() {
                return [{
                    taskId: 1,
                    taskTitle: "INVITE friends",
                    taskDescription: "Send the link below to a friend or post it to your social channels",
                    taskImage: "/assets/images/referrals/invite_friends.png"
                }, {
                    taskId: 2,
                    taskTitle: "Track Progress",
                    taskDescription: "The person referred buys any Divine Order card packs",
                    taskImage: "/assets/images/referrals/track_progress.png"
                }, {
                    taskId: 3,
                    taskTitle: "Earn Rewards",
                    taskDescription: "Receive 10% of the money they spend!",
                    taskImage: "/assets/images/referrals/earn_rewards.png"
                }]
            }
        }

        return S.\u0275fac = function (u) {
            return new (u || S)(e.Y36(Se.mI), e.Y36(Kt.Qz), e.Y36(Vt.F0), e.Y36(mt.jt), e.Y36(mt.tX), e.Y36(mt.C_))
        }, S.\u0275cmp = e.Xpm({
            type: S,
            selectors: [["cerberus-referrals-route"]],
            decls: 62,
            vars: 13,
            consts: [[1, "intro"], ["top", "5x-large"], ["align", "center", "fillColor", "colors.dark.900", "size", "small", 3, "responsiveSize"], ["top", "large"], ["align", "center", "fillColor", "colors.gunmetal.500", "size", "medium", 1, "subTitle"], ["top", "small"], ["align", "center", "fillColor", "colors.dark.700"], [1, "theMoreYouPurchase"], [1, "steps"], ["top", "2x-large"], [1, "referralSteps"], [4, "ngFor", "ngForOf"], ["class", "share", 4, "ngIf"], ["top", "medium", "bottom", "large"], ["class", "signInToBegin", 4, "ngIf"], [1, "rewards"], ["top", "large", "both", "medium"], ["src", "/assets/images/referrals/tasks_divider.svg", 1, "tasks__divider"], [1, "rewards__container"], [1, "cardBack__container"], ["align", "left", "fillColor", "colors.dark.900", "size", "x-small", 3, "responsiveSize"], ["top", "small", "bottom", "large"], ["align", "left", "fillColor", "colors.gunmetal.500", "fontWeight", "bold", "size", "5x-small"], ["fillColor", "colors.gunmetal.900", "kind", "4x-small"], ["fillColor", "colors.gunmetal.900"], ["top", "small", "bottom", "medium"], ["srcset", "/assets/images/misc-art/misc-art--wizard-with-key.webp", "type", "image/webp"], ["srcset", "/assets/images/misc-art/misc-art--wizard-with-key.jpg", "type", "image/jpg"], ["src", "/assets/images/misc-art/misc-art--wizard-with-key.jpg"], [1, "innerFooter"], [3, "taskId", "taskTitle", "taskDescription", "taskImage"], [1, "share"], [1, "share__figure"], ["srcset", "/assets/images/misc-art/x2_brand_visual.webp", "type", "image/webp"], ["src", "/assets/images/misc-art/x2_brand_visual.png", 1, "share__img"], [1, "share__content"], ["bottom", "medium"], [1, "share__socialMedia__title"], [1, "share__socialMedia__text"], [1, "share__socialMedia__text__Link"], [1, "share__socialMedia__buttons"], [3, "referralLink", "referralCopy"], [3, "referralLink", "referralCopy", "socialMedia"], ["top", "large", "bottom", "large", 2, "width", "100%"], [1, "share__socialMedia__divider__line"], ["top", "large", "bottom", "medium"], ["fillColor", "colors.light.100"], [3, "playerWallets", "selectedWallet", "walletSelected"], [1, "signInToBegin"], ["size", "large", 2, "padding", "0 25px", 3, "click"]],
            template: function (u, A) {
                1 & u && (e.TgZ(0, "div")(1, "section", 0)(2, "gu-vertical-space", 1)(3, "gu-heading-text", 2), e._uU(4, " Money Spent Is Money Earned "), e.qZA()(), e.TgZ(5, "gu-vertical-space", 3)(6, "gu-paragraph-text", 4), e._uU(7, " Mortals. Together. Strong. "), e.qZA()(), e.TgZ(8, "gu-vertical-space", 5)(9, "gu-paragraph-text", 6)(10, "div", 7), e._uU(11, " Put down your axe and extend a helping hand to your fellow mortal. By inviting friends who make purchases, you\u2019ll receive great rewards! "), e.qZA()()()(), e.TgZ(12, "section", 8)(13, "gu-vertical-space", 9)(14, "div", 10), e.YNc(15, Js, 2, 4, "ng-container", 11), e.qZA()()(), e.YNc(16, Xs, 26, 13, "section", 12), e.TgZ(17, "section")(18, "gu-vertical-space", 13), e.YNc(19, wo, 3, 0, "div", 14), e.qZA()(), e.TgZ(20, "section", 15)(21, "gu-vertical-space", 16), e._UZ(22, "img", 17), e.qZA(), e.TgZ(23, "div", 18)(24, "div", 19), e._UZ(25, "referrals-card-back"), e.qZA(), e.TgZ(26, "div")(27, "gu-heading-text", 20), e._uU(28, " Earn Together "), e.qZA(), e.TgZ(29, "gu-vertical-space", 21)(30, "gu-paragraph-text", 22), e._uU(31, " Receive 10% of the money spent by the people you refer! "), e.qZA()(), e.TgZ(32, "gu-paragraph-text", 23)(33, "strong"), e._uU(34, "People you refer need to:"), e.qZA(), e.TgZ(35, "ol")(36, "li"), e._uU(37, "Create a Gods Unchained account"), e.qZA(), e.TgZ(38, "li"), e._uU(39, "Purchase any Divine Order Packs and/or Chests"), e.qZA(), e.TgZ(40, "li"), e._uU(41, "Have a valid wallet linked to Immutable X"), e.qZA()()(), e.TgZ(42, "gu-paragraph-text", 24), e._uU(43, " There is "), e.TgZ(44, "strong"), e._uU(45, "no limit to how many friends you can invite"), e.qZA(), e._uU(46, ", so send your unique codes far and wide. "), e.qZA(), e.TgZ(47, "gu-paragraph-text", 24), e._uU(48, " The processing of referral payments will take place every 14 days. At these intervals any referral payouts due will be calculated and payed out for all purchases made in the previous cycle. "), e.TgZ(49, "strong"), e._uU(50, "Payment will be made in ETH"), e.qZA(), e._uU(51, " directly to your selected Immutable X linked wallet. "), e.qZA(), e._UZ(52, "gu-vertical-space", 13), e.qZA()()(), e.TgZ(53, "gu-vertical-space", 25)(54, "div"), e.YNc(55, Yt, 3, 0, "div", 14), e.YNc(56, qs, 3, 0, "div", 14), e.qZA()()(), e.TgZ(57, "picture"), e._UZ(58, "source", 26)(59, "source", 27)(60, "img", 28), e.qZA(), e._UZ(61, "section", 29)), 2 & u && (e.xp6(3), e.Q6J("responsiveSize", e.VKq(8, kt, e.DdM(7, zt))), e.xp6(12), e.Q6J("ngForOf", A.referralTasks), e.xp6(1), e.Q6J("ngIf", A.isUserSignedIn), e.xp6(3), e.Q6J("ngIf", !A.isUserSignedIn), e.xp6(8), e.Q6J("responsiveSize", e.VKq(11, kt, e.DdM(10, ps))), e.xp6(28), e.Q6J("ngIf", !A.isUserSignedIn), e.xp6(1), e.Q6J("ngIf", A.isUserSignedIn))
            },
            directives: [c.sg, Po, c.O5, Ss, Ys, Yo],
            styles: [".share__socialMedia__title[_ngcontent-%COMP%], .subTitle[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 2.22)}.share__socialMedia__text[_ngcontent-%COMP%]{font-size:calc(var(--vh) * 1.48)}[_nghost-%COMP%]{overflow-y:auto;background-color:#f6f6f6}a[_ngcontent-%COMP%]{color:#000}.subTitle[_ngcontent-%COMP%]{font-weight:700;line-height:28px}.earnTogether[_ngcontent-%COMP%]{display:flex;flex-direction:row;position:relative;max-width:960px;padding:20px}@media only screen and (max-width: 768px){.earnTogether[_ngcontent-%COMP%]{flex-wrap:wrap;flex-direction:column-reverse;justify-content:center;align-items:center}}.tasks__divider[_ngcontent-%COMP%]{width:100%}.referralSteps[_ngcontent-%COMP%]{display:flex;flex-direction:row;justify-content:center;flex-wrap:wrap;margin:10px}.signInToBegin[_ngcontent-%COMP%]{align-items:center;display:flex;flex-direction:column}.theMoreYouPurchase[_ngcontent-%COMP%]{margin:0 auto;max-width:566px;padding:10px}[_nghost-%COMP%]{display:flex;flex-direction:column;position:relative}[_nghost-%COMP%] > div[_ngcontent-%COMP%]{width:100%;z-index:1;display:flex;flex-direction:column;justify-content:center;align-items:center}[_nghost-%COMP%] > picture[_ngcontent-%COMP%]{align-items:center;bottom:0;display:flex;justify-content:center;left:0;overflow:hidden;position:absolute;right:0;top:0}[_nghost-%COMP%] > picture[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{width:100%;height:100%;object-fit:cover;object-position:center top}.earnTogether__text[_ngcontent-%COMP%]{display:flex;flex-direction:column}.innerFooter[_ngcontent-%COMP%]{background:#0A0A0A;height:40px;z-index:1;margin-top:-24px;position:relative;clip-path:polygon(0% 0%,calc(50% - 140px) 0%,calc(50% - 124px) 22px,calc(50% + 124px) 22px,calc(50% + 140px) 0%,100% 0%,100% 100%,0% 100%)}.share[_ngcontent-%COMP%]{width:100%;display:flex;flex-direction:row;border-top:1px solid #0A0A0A;border-bottom:1px solid #0A0A0A;flex-wrap:wrap;justify-content:center;align-items:center;background:#0F1B27}@media only screen and (max-width: 768px){.share[_ngcontent-%COMP%]{display:block}}.share__content[_ngcontent-%COMP%]{flex:1;background:#0F1B27;display:flex;flex-direction:column;padding:40px}@media only screen and (max-width: 768px){.share__content[_ngcontent-%COMP%]{align-items:center;text-align:center}}.share__figure[_ngcontent-%COMP%]{flex:1;margin:0;line-height:.5}.share__img[_ngcontent-%COMP%]{width:100%;object-fit:cover;object-position:center center;height:470px}@media only screen and (max-width: 768px){.share__img[_ngcontent-%COMP%]{height:148px}}.share__socialMedia__title[_ngcontent-%COMP%]{font-weight:700;color:#f6f6f6}.share__socialMedia__text[_ngcontent-%COMP%]{font-size:16px;text-align:left;color:#b6b6b6;border:2px solid #3D5A74;box-sizing:border-box;padding:15px;background:#1D2F41}.share__socialMedia__text__Link[_ngcontent-%COMP%]{color:#f6f6f6}.share__socialMedia__buttons[_ngcontent-%COMP%]{display:flex;flex-direction:row;padding:10px 10px 10px 0}.share__socialMedia__divider__line[_ngcontent-%COMP%]{border:1px solid #1D2F41;width:100%}.referral_status_btn[_ngcontent-%COMP%]{width:200px;margin:10px 0;padding:20px}.rewards[_ngcontent-%COMP%]   ol[_ngcontent-%COMP%]{list-style:inside decimal;padding-left:0;margin-block:0}.rewards[_ngcontent-%COMP%]   gu-paragraph-text[_ngcontent-%COMP%]{margin-bottom:32px}.rewards__container[_ngcontent-%COMP%]{display:flex;flex-direction:column-reverse;max-width:960px;margin:0 20px}.cardBack__container[_ngcontent-%COMP%]{display:flex;justify-content:center;margin-bottom:20px}.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:-80px}@media screen and (min-width: 768px){.rewards__container[_ngcontent-%COMP%]{flex-direction:row}.cardBack__container[_ngcontent-%COMP%]{margin-bottom:0}.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:-40px}}@media screen and (min-width: 960px){.cardBack__container[_ngcontent-%COMP%] > referrals-card-back[_ngcontent-%COMP%]{margin-right:0}}"]
        }), S
    })();
    var ks = o(37371);
    o(39765)
}, 46313
:
se => {
    function B(o) {
        var c = new Error("Cannot find module '" + o + "'");
        throw c.code = "MODULE_NOT_FOUND", c
    }

    B.keys = () => [], B.resolve = B, B.id = 46313, se.exports = B
}, 88677
:
() => {
}, 52005
:
() => {
}, 9327
:
() => {
}, 62808
:
() => {
}, 82169
:
() => {
}, 61860
:
() => {
}, 81393
:
() => {
}, 50868
:
() => {
}, 42803
:
() => {
}, 67778
:
() => {
}, 61633
:
() => {
}, 16572
:
() => {
}, 46601
:
() => {
}, 71922
:
() => {
}, 2363
:
() => {
}, 96419
:
() => {
}, 56353
:
() => {
}, 85568
:
() => {
}, 53396
:
() => {
}, 68587
:
() => {
}, 37957
:
() => {
}, 29120
:
() => {
}, 46586
:
() => {
}, 6567
:
() => {
}, 47165
:
() => {
}, 69862
:
() => {
}, 40964
:
() => {
}, 1189
:
() => {
}, 2243
:
() => {
}, 52293
:
() => {
}, 58678
:
() => {
}, 92916
:
se => {
    "use strict";
    se.exports = JSON.parse('{"contractName":"CappedVault","abi":[{"constant":true,"inputs":[],"name":"getBalance","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"total","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"name":"amount","type":"uint256"}],"name":"withdraw","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[],"name":"withdrawAll","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"limit","outputs":[{"name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"payable":true,"stateMutability":"payable","type":"fallback"}],"compiler":{"name":"solc","version":"0.5.8+commit.23d335f2.Emscripten.clang"},"networks":{"1":"0x91b9d2835ad914bc1dcfe09bd1816febd04fd689"},"schemaVersion":"3.0.16","updatedAt":"2019-09-18T05:50:16.377Z"}')
}, 45861
:
se => {
    "use strict";
    se.exports = JSON.parse('{"contractName":"Chest","abi":[{"constant":true,"inputs":[],"name":"sold","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address payable","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"packType","outputs":[{"internalType":"enum Pack.Type","name":"","type":"uint8"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"cap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"getOwner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"price","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":true,"inputs":[],"name":"processor","outputs":[{"internalType":"contract IProcessor","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"pack","outputs":[{"internalType":"contract IPack","name":"","type":"address"}],"payable":false,"stateMutability":"view","type":"function"},{"constant":true,"inputs":[],"name":"tradeable","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"contract IPack","name":"_pack","type":"address"},{"internalType":"enum Pack.Type","name":"_pt","type":"uint8"},{"internalType":"uint256","name":"_price","type":"uint256"},{"internalType":"contract IProcessor","name":"_processor","type":"address"},{"internalType":"uint256","name":"_cap","type":"uint256"},{"internalType":"string","name":"name","type":"string"},{"internalType":"string","name":"sym","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"count","type":"uint256"},{"indexed":false,"internalType":"address","name":"referrer","type":"address"},{"indexed":false,"internalType":"uint256","name":"paymentID","type":"uint256"}],"name":"ChestsPurchased","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"constant":false,"inputs":[{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"purchase","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"count","type":"uint256"},{"internalType":"address","name":"referrer","type":"address"}],"name":"purchaseFor","outputs":[],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"uint256","name":"value","type":"uint256"}],"name":"open","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"openFor","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"payable":true,"stateMutability":"payable","type":"function"},{"constant":false,"inputs":[],"name":"makeTradeable","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"payable":false,"stateMutability":"nonpayable","type":"function"}],"compiler":{"name":"solc","version":"0.5.11+commit.c082d0b4.Emscripten.clang","optimizer":false,"runs":200},"networks":{},"schemaVersion":"2.2.3","updatedAt":"2019-10-15T03:24:19.434Z"}')
}
},
se => {
    se.O(0, [736], () => se(se.s = 84740)), se.O()
}
])
;